{
  "version": 3,
  "sources": ["../../fast-xml-parser/src/util.js", "../../fast-xml-parser/src/validator.js", "../../fast-xml-parser/src/xmlparser/OptionsBuilder.js", "../../fast-xml-parser/src/xmlparser/xmlNode.js", "../../fast-xml-parser/src/xmlparser/DocTypeReader.js", "../../strnum/strnum.js", "../../fast-xml-parser/src/xmlparser/OrderedObjParser.js", "../../fast-xml-parser/src/xmlparser/node2json.js", "../../fast-xml-parser/src/xmlparser/XMLParser.js", "../../fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js", "../../fast-xml-parser/src/xmlbuilder/json2xml.js", "../../fast-xml-parser/src/fxp.js", "../../long/dist/long.js", "../../ieee754/index.js", "../../pbf/index.js", "../../@loaders.gl/xml/src/sax-ts/sax.ts", "../../@loaders.gl/xml/src/lib/parsers/parse-xml.ts", "../../@loaders.gl/xml/src/lib/xml-utils/uncapitalize.ts", "../../@loaders.gl/xml/src/xml-loader.ts", "../../@loaders.gl/xml/src/html-loader.ts", "../../@loaders.gl/xml/src/lib/xml-utils/xml-utils.ts", "../../@loaders.gl/wms/src/lib/parsers/csw/parse-exception-report.ts", "../../@loaders.gl/wms/src/lib/parsers/csw/parse-csw-capabilities.ts", "../../@loaders.gl/wms/src/csw-capabilities-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/csw/parse-csw-domain.ts", "../../@loaders.gl/wms/src/csw-domain-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/csw/parse-csw-records.ts", "../../@loaders.gl/wms/src/csw-records-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/wms/parse-wms-error.ts", "../../@loaders.gl/wms/src/wms-error-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/xml/parse-xml-helpers.ts", "../../@loaders.gl/wms/src/lib/parsers/wms/parse-wms-capabilities.ts", "../../@loaders.gl/wms/src/wms-capabilities-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/wms/parse-wms-features.ts", "../../@loaders.gl/wms/src/wip/wms-feature-info-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/wms/parse-wms-layer-description.ts", "../../@loaders.gl/wms/src/wip/wms-layer-description-loader.ts", "../../@loaders.gl/wms/src/lib/parsers/gml/deep-strict-equal.ts", "../../@turf/helpers/main.es.js", "../../@loaders.gl/wms/src/lib/sources/data-source.ts", "../../@loaders.gl/wms/src/lib/sources/image-source.ts", "../../@loaders.gl/wms/src/lib/services/generic/image-service.ts", "../../@loaders.gl/wms/src/lib/services/ogc/wms-service.ts", "../../@loaders.gl/wms/src/lib/services/arcgis/arcgis-image-service.ts", "../../@loaders.gl/wms/src/lib/create-image-source.ts", "../../@loaders.gl/wms/src/lib/services/ogc/csw-service.ts", "../../@deck.gl/geo-layers/src/wms-layer/utils.ts", "../../@deck.gl/geo-layers/src/wms-layer/wms-layer.ts", "../../@deck.gl/geo-layers/src/great-circle-layer/great-circle-layer.ts", "../../@deck.gl/geo-layers/src/geo-cell-layer/GeoCellLayer.ts", "../../@deck.gl/geo-layers/src/s2-layer/s2-geometry.ts", "../../@deck.gl/geo-layers/src/s2-layer/s2-utils.ts", "../../@deck.gl/geo-layers/src/s2-layer/s2-layer.ts", "../../@deck.gl/geo-layers/src/quadkey-layer/quadkey-utils.ts", "../../@deck.gl/geo-layers/src/quadkey-layer/quadkey-layer.ts", "../../@deck.gl/geo-layers/src/tileset-2d/tile-2d-header.ts", "../../@math.gl/culling/src/constants.ts", "../../@math.gl/culling/src/lib/bounding-volumes/axis-aligned-bounding-box.ts", "../../@math.gl/culling/src/lib/bounding-volumes/bounding-sphere.ts", "../../@math.gl/culling/src/lib/bounding-volumes/oriented-bounding-box.ts", "../../@math.gl/culling/src/lib/plane.ts", "../../@math.gl/culling/src/lib/culling-volume.ts", "../../@math.gl/culling/src/lib/perspective-off-center-frustum.ts", "../../@math.gl/culling/src/lib/algorithms/bounding-sphere-from-points.ts", "../../@math.gl/culling/src/lib/algorithms/compute-eigen-decomposition.ts", "../../@math.gl/culling/src/lib/algorithms/bounding-box-from-points.ts", "../../@deck.gl/geo-layers/src/tileset-2d/tile-2d-traversal.ts", "../../@deck.gl/geo-layers/src/tileset-2d/utils.ts", "../../@deck.gl/geo-layers/src/tileset-2d/memoize.ts", "../../@deck.gl/geo-layers/src/tileset-2d/tileset-2d.ts", "../../@deck.gl/geo-layers/src/tile-layer/tile-layer.ts", "../../@deck.gl/geo-layers/src/trips-layer/trips-layer.ts", "../../h3-js/dist/libh3-browser.js", "../../h3-js/lib/bindings.js", "../../h3-js/lib/h3core.js", "../../@deck.gl/geo-layers/src/h3-layers/h3-hexagon-layer.ts", "../../@deck.gl/geo-layers/src/h3-layers/h3-cluster-layer.ts", "../../@deck.gl/mesh-layers/src/utils/matrix.ts", "../../@deck.gl/mesh-layers/src/simple-mesh-layer/simple-mesh-layer-vertex.glsl.ts", "../../@deck.gl/mesh-layers/src/simple-mesh-layer/simple-mesh-layer-fragment.glsl.ts", "../../@loaders.gl/schema/src/lib/batches/base-table-batch-aggregator.ts", "../../@loaders.gl/schema/src/lib/utils/row-utils.ts", "../../@loaders.gl/schema/src/lib/batches/row-table-batch-aggregator.ts", "../../@loaders.gl/schema/src/lib/batches/columnar-table-batch-aggregator.ts", "../../@loaders.gl/schema/src/lib/batches/table-batch-builder.ts", "../../@loaders.gl/schema/src/category/mesh/mesh-utils.ts", "../../@loaders.gl/schema/src/lib/utils/assert.ts", "../../@loaders.gl/schema/src/lib/schema/impl/schema.ts", "../../@loaders.gl/schema/src/lib/schema/impl/field.ts", "../../@loaders.gl/schema/src/lib/schema/impl/enum.ts", "../../@loaders.gl/schema/src/lib/schema/impl/type.ts", "../../@loaders.gl/schema/src/lib/arrow/arrow-like-type-utils.ts", "../../@loaders.gl/schema/src/category/mesh/deduce-mesh-schema.ts", "../../@loaders.gl/schema/src/lib/utils/async-queue.ts", "../../@deck.gl/mesh-layers/src/simple-mesh-layer/simple-mesh-layer.ts", "../../@luma.gl/experimental/src/scenegraph/scenegraph-node.js", "../../@luma.gl/experimental/src/scenegraph/group-node.js", "../../@luma.gl/experimental/src/gltf/gltf-animator.js", "../../@luma.gl/experimental/src/scenegraph/model-node.js", "../../@luma.gl/experimental/src/gltf/gltf-material-parser.js", "../../@luma.gl/experimental/src/gltf/create-gltf-model.js", "../../@luma.gl/experimental/src/gltf/gltf-instantiator.js", "../../@luma.gl/experimental/src/gltf/create-gltf-objects.js", "../../@luma.gl/experimental/src/gpgpu/point-in-polygon/polygon.js", "../../@loaders.gl/gltf/src/lib/utils/version.ts", "../../@loaders.gl/textures/src/lib/utils/version.ts", "../../@loaders.gl/textures/src/lib/parsers/basis-module-loader.ts", "../../@loaders.gl/textures/src/lib/gl-extensions.ts", "../../@loaders.gl/textures/src/lib/utils/texture-formats.ts", "../../ktx-parse/src/constants.ts", "../../ktx-parse/src/container.ts", "../../ktx-parse/src/buffer-reader.ts", "../../ktx-parse/src/util.ts", "../../ktx-parse/src/read.ts", "../../ktx-parse/src/write.ts", "../../@loaders.gl/textures/src/lib/utils/extract-mipmap-images.ts", "../../@loaders.gl/textures/src/lib/utils/ktx-format-helper.ts", "../../@loaders.gl/textures/src/lib/parsers/parse-ktx.ts", "../../@loaders.gl/textures/src/lib/parsers/parse-basis.ts", "../../@loaders.gl/textures/src/basis-loader.ts", "../../@loaders.gl/textures/src/lib/parsers/parse-dds.ts", "../../@loaders.gl/textures/src/lib/parsers/parse-pvr.ts", "../../@loaders.gl/textures/src/lib/parsers/parse-compressed-texture.ts", "../../@loaders.gl/textures/src/compressed-texture-loader.ts", "../../@loaders.gl/textures/src/lib/parsers/parse-npy.ts", "../../@loaders.gl/textures/src/npy-loader.ts", "../../@loaders.gl/gltf/src/lib/utils/assert.ts", "../../@loaders.gl/gltf/src/lib/gltf-utils/resolve-url.ts", "../../@loaders.gl/gltf/src/lib/gltf-utils/get-typed-array.ts", "../../@loaders.gl/gltf/src/lib/extensions/EXT_meshopt_compression.ts", "../../@loaders.gl/gltf/src/lib/gltf-utils/gltf-utils.ts", "../../@loaders.gl/gltf/src/lib/api/gltf-scenegraph.ts", "../../@loaders.gl/gltf/src/meshopt/meshopt-decoder.ts", "../../@loaders.gl/gltf/src/lib/extensions/EXT_texture_webp.ts", "../../@loaders.gl/gltf/src/lib/extensions/KHR_texture_basisu.ts", "../../@loaders.gl/gltf/src/lib/extensions/KHR_draco_mesh_compression.ts", "../../@loaders.gl/draco/src/lib/utils/version.ts", "../../@loaders.gl/draco/src/draco-loader.ts", "../../@loaders.gl/draco/src/lib/utils/get-draco-schema.ts", "../../@loaders.gl/draco/src/lib/draco-parser.ts", "../../@loaders.gl/draco/src/lib/draco-module-loader.ts", "../../@loaders.gl/draco/src/index.ts", "../../@loaders.gl/gltf/src/lib/gltf-utils/gltf-attribute-utils.ts", "../../@loaders.gl/gltf/src/lib/extensions/KHR_texture_transform.ts", "../../@loaders.gl/gltf/src/lib/gltf-utils/gltf-constants.ts", "../../@loaders.gl/gltf/src/lib/extensions/deprecated/KHR_lights_punctual.ts", "../../@loaders.gl/gltf/src/lib/extensions/deprecated/KHR_materials_unlit.ts", "../../@loaders.gl/gltf/src/lib/extensions/deprecated/KHR_techniques_webgl.ts", "../../@loaders.gl/gltf/src/lib/extensions/deprecated/EXT_feature_metadata.ts", "../../@loaders.gl/gltf/src/lib/api/gltf-extensions.ts", "../../@loaders.gl/gltf/src/lib/extensions/KHR_binary_gltf.ts", "../../@loaders.gl/gltf/src/lib/api/normalize-gltf-v1.ts", "../../@loaders.gl/gltf/src/lib/api/post-process-gltf.ts", "../../@loaders.gl/gltf/src/lib/parsers/parse-glb.ts", "../../@loaders.gl/gltf/src/lib/parsers/parse-gltf.ts", "../../@loaders.gl/gltf/src/gltf-loader.ts", "../../@deck.gl/mesh-layers/src/scenegraph-layer/gltf-utils.ts", "../../@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer-vertex.glsl.ts", "../../@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer-fragment.glsl.ts", "../../@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer.ts", "../../@deck.gl/geo-layers/src/mesh-layer/mesh-layer-vertex.glsl.ts", "../../@deck.gl/geo-layers/src/mesh-layer/mesh-layer-fragment.glsl.ts", "../../@deck.gl/geo-layers/src/mesh-layer/mesh-layer.ts", "../../@math.gl/geospatial/src/constants.ts", "../../@math.gl/geospatial/src/type-utils.ts", "../../@math.gl/geospatial/src/ellipsoid/helpers/scale-to-geodetic-surface.ts", "../../@math.gl/geospatial/src/ellipsoid/helpers/ellipsoid-transform.ts", "../../@math.gl/geospatial/src/ellipsoid/ellipsoid.ts", "../../@loaders.gl/tiles/node_modules/@probe.gl/stats/src/utils/hi-res-timestamp.ts", "../../@loaders.gl/tiles/node_modules/@probe.gl/stats/src/lib/stat.ts", "../../@loaders.gl/tiles/node_modules/@probe.gl/stats/src/lib/stats.ts", "../../@loaders.gl/tiles/src/utils/doubly-linked-list-node.ts", "../../@loaders.gl/tiles/src/utils/doubly-linked-list.ts", "../../@loaders.gl/tiles/src/tileset/tileset-cache.ts", "../../@loaders.gl/tiles/src/tileset/helpers/transform-utils.ts", "../../@loaders.gl/tiles/src/tileset/helpers/frame-state.ts", "../../@loaders.gl/tiles/src/tileset/helpers/zoom.ts", "../../@loaders.gl/tiles/src/constants.ts", "../../@loaders.gl/tiles/src/tileset/helpers/bounding-volume.ts", "../../@loaders.gl/tiles/src/tileset/helpers/tiles-3d-lod.ts", "../../@loaders.gl/tiles/src/tileset/helpers/i3s-lod.ts", "../../@loaders.gl/tiles/src/tileset/helpers/3d-tiles-options.ts", "../../@loaders.gl/tiles/src/utils/managed-array.ts", "../../@loaders.gl/tiles/src/tileset/tileset-traverser.ts", "../../@loaders.gl/tiles/src/tileset/tile-3d.ts", "../../@loaders.gl/tiles/src/tileset/format-3d-tiles/tileset-3d-traverser.ts", "../../@loaders.gl/tiles/src/tileset/format-i3s/i3s-pending-tiles-register.ts", "../../@loaders.gl/tiles/src/tileset/format-i3s/i3s-tile-manager.ts", "../../@loaders.gl/tiles/src/tileset/format-i3s/i3s-tileset-traverser.ts", "../../@loaders.gl/tiles/src/tileset/tileset-3d.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/version.ts", "../../@loaders.gl/3d-tiles/src/lib/constants.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-utils.ts", "../../@loaders.gl/math/src/geometry/constants.ts", "../../@loaders.gl/math/src/geometry/gl/gl-type.ts", "../../@loaders.gl/math/src/geometry/utils/assert.ts", "../../@loaders.gl/math/src/geometry/colors/rgb565.ts", "../../@loaders.gl/math/src/geometry/compression/attribute-compression.ts", "../../@loaders.gl/3d-tiles/src/lib/classes/tile-3d-feature-table.ts", "../../@loaders.gl/3d-tiles/src/lib/classes/helpers/tile-3d-accessor-utils.ts", "../../@loaders.gl/3d-tiles/src/lib/classes/tile-3d-batch-table-hierarchy.ts", "../../@loaders.gl/3d-tiles/src/lib/classes/tile-3d-batch-table.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-3d-tile-header.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-3d-tile-tables.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/normalize-3d-tile-colors.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/normalize-3d-tile-normals.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/normalize-3d-tile-positions.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-point-cloud.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-3d-tile-gltf-view.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-batched-model.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-instanced-model.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-composite.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-gltf.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-3d-tile-subtree.ts", "../../@loaders.gl/3d-tiles/src/tile-3d-subtree-loader.ts", "../../@loaders.gl/3d-tiles/node_modules/long/index.js", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/s2-token-functions.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/s2geometry/s2-geometry.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/converters/s2-to-boundary.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/s2geometry/s2-cell-utils.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/s2-geometry-functions.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/converters/s2-to-region.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/s2/converters/s2-to-obb-points.ts", "../../@loaders.gl/3d-tiles/src/lib/utils/obb/s2-corners-to-obb.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/helpers/parse-3d-implicit-tiles.ts", "../../@loaders.gl/3d-tiles/src/lib/parsers/parse-3d-tile-header.ts", "../../@loaders.gl/3d-tiles/src/tiles-3d-loader.ts", "../../@loaders.gl/3d-tiles/src/lib/ion/ion.ts", "../../@loaders.gl/3d-tiles/src/cesium-ion-loader.ts", "../../@deck.gl/geo-layers/src/tile-3d-layer/tile-3d-layer.ts", "../../@loaders.gl/terrain/src/lib/decode-quantized-mesh.ts", "../../@loaders.gl/terrain/src/lib/helpers/skirt.ts", "../../@loaders.gl/terrain/src/lib/parse-quantized-mesh.ts", "../../@mapbox/martini/index.js", "../../@loaders.gl/terrain/src/lib/delatin/index.ts", "../../@loaders.gl/terrain/src/lib/parse-terrain.ts", "../../@loaders.gl/terrain/src/lib/utils/version.ts", "../../@loaders.gl/terrain/src/terrain-loader.ts", "../../@loaders.gl/terrain/src/quantized-mesh-loader.ts", "../../@loaders.gl/terrain/src/index.ts", "../../@deck.gl/geo-layers/src/terrain-layer/terrain-layer.ts", "../../@deck.gl/extensions/src/brushing/shader-module.ts", "../../@deck.gl/extensions/src/brushing/brushing-extension.ts", "../../@deck.gl/extensions/src/data-filter/shader-module.ts", "../../@deck.gl/extensions/src/data-filter/aggregator.ts", "../../@deck.gl/extensions/src/data-filter/data-filter-extension.ts", "../../@deck.gl/extensions/src/fp64/project64.glsl.ts", "../../@deck.gl/extensions/src/fp64/project64.ts", "../../@deck.gl/extensions/src/fp64/fp64-extension.ts", "../../@deck.gl/extensions/src/path-style/shaders.glsl.ts", "../../@deck.gl/extensions/src/path-style/path-style-extension.ts", "../../@deck.gl/extensions/src/fill-style/shaders.glsl.ts", "../../@deck.gl/extensions/src/fill-style/fill-style-extension.ts", "../../@deck.gl/extensions/src/clip/clip-extension.ts", "../../@deck.gl/extensions/src/collision-filter/shader-module.ts", "../../@deck.gl/extensions/src/collision-filter/collision-filter-pass.ts", "../../@deck.gl/extensions/src/mask/mask-pass.ts", "../../@deck.gl/extensions/src/utils/projection-utils.ts", "../../@deck.gl/extensions/src/mask/mask-effect.ts", "../../@deck.gl/extensions/src/collision-filter/collision-filter-effect.ts", "../../@deck.gl/extensions/src/collision-filter/collision-filter-extension.ts", "../../@deck.gl/extensions/src/mask/shader-module.ts", "../../@deck.gl/extensions/src/mask/mask-extension.ts", "../../@deck.gl/extensions/src/terrain/shader-module.ts", "../../@deck.gl/extensions/src/terrain/utils.ts", "../../@deck.gl/extensions/src/terrain/terrain-cover.ts", "../../@deck.gl/extensions/src/terrain/terrain-pass.ts", "../../@deck.gl/extensions/src/terrain/terrain-picking-pass.ts", "../../@deck.gl/extensions/src/terrain/height-map-builder.ts", "../../@deck.gl/extensions/src/terrain/terrain-effect.ts", "../../@deck.gl/extensions/src/terrain/terrain-extension.ts", "../../@loaders.gl/gis/src/lib/flat-geojson-to-binary.ts", "../../@loaders.gl/gis/src/lib/binary-to-geojson.ts", "../../@loaders.gl/mvt/src/lib/parse-mvt.ts", "../../@loaders.gl/mvt/src/helpers/mapbox-util-functions.ts", "../../@loaders.gl/mvt/src/lib/mapbox-vector-tile/vector-tile-feature.ts", "../../@loaders.gl/mvt/src/lib/mapbox-vector-tile/vector-tile-layer.ts", "../../@loaders.gl/mvt/src/lib/mapbox-vector-tile/vector-tile.ts", "../../@loaders.gl/mvt/src/helpers/binary-util-functions.ts", "../../@loaders.gl/mvt/src/lib/binary-vector-tile/vector-tile-feature.ts", "../../@loaders.gl/mvt/src/lib/binary-vector-tile/vector-tile-layer.ts", "../../@loaders.gl/mvt/src/lib/binary-vector-tile/vector-tile.ts", "../../@loaders.gl/mvt/src/mvt-loader.ts", "../../@deck.gl/geo-layers/src/mvt-layer/coordinate-transform.ts", "../../@deck.gl/geo-layers/src/mvt-layer/find-index-binary.ts", "../../@deck.gl/geo-layers/src/mvt-layer/mvt-layer.ts", "../../@deck.gl/geo-layers/src/geohash-layer/geohash-utils.ts", "../../@deck.gl/geo-layers/src/geohash-layer/geohash-layer.ts"],
  "sourcesContent": ["'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n", "'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n", "\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;", "'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;", "const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n", "const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n", "'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n", "'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n", "const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;", "const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n", "'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n", "'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}", "/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n", "// loaders.gl, MIT license\n\n// This file is forked from https://github.com/Maxim-Mazurok/sax-ts under ISC license,\n// which in turn is forked from https://github.com/isaacs/sax-js under ISC license\n\n// Copyright (c) Isaac Z. Schlueter and Contributors\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n/* eslint-disable */\n\nexport type SAXEventName =\n  | 'text'\n  | 'processinginstruction'\n  | 'sgmldeclaration'\n  | 'doctype'\n  | 'comment'\n  | 'opentagstart'\n  | 'attribute'\n  | 'opentag'\n  | 'closetag'\n  | 'opencdata'\n  | 'cdata'\n  | 'closecdata'\n  | 'error'\n  | 'end'\n  | 'ready'\n  | 'script'\n  | 'opennamespace'\n  | 'closenamespace';\n\nexport type SAXEventCallback = (data: any, eventName: SAXEventName, SAXParser) => void;\n\nexport type SAXEvents = {\n  ontext?: SAXEventCallback;\n  onprocessinginstruction?: SAXEventCallback;\n  onsgmldeclaration?: SAXEventCallback;\n  ondoctype?: SAXEventCallback;\n  oncomment?: SAXEventCallback;\n  onopentagstart?: SAXEventCallback;\n  onattribute?: SAXEventCallback;\n  onopentag?: SAXEventCallback;\n  onclosetag?: SAXEventCallback;\n  onopencdata?: SAXEventCallback;\n  oncdata?: SAXEventCallback;\n  onclosecdata?: SAXEventCallback;\n  onerror?: SAXEventCallback;\n  onend?: SAXEventCallback;\n  onready?: SAXEventCallback;\n  onscript?: SAXEventCallback;\n  onopennamespace?: SAXEventCallback;\n  onclosenamespace?: SAXEventCallback;\n};\n\nexport type SAXParserOptions = SAXEvents & {\n  strict?: boolean;\n  MAX_BUFFER_LENGTH?: number;\n  lowercase?: boolean;\n  lowercasetags?: boolean;\n  noscript?: boolean;\n  strictEntities?: boolean;\n  xmlns?: any;\n  position?: any;\n  trim?: any;\n  normalize?: any;\n};\n\nconst DEFAULT_SAX_EVENTS: Required<SAXEvents> = {\n  ontext: () => {},\n  onprocessinginstruction: () => {},\n  onsgmldeclaration: () => {},\n  ondoctype: () => {},\n  oncomment: () => {},\n  onopentagstart: () => {},\n  onattribute: () => {},\n  onopentag: () => {},\n  onclosetag: () => {},\n  onopencdata: () => {},\n  oncdata: () => {},\n  onclosecdata: () => {},\n  onerror: () => {},\n  onend: () => {},\n  onready: () => {},\n  onscript: () => {},\n  onopennamespace: () => {},\n  onclosenamespace: () => {}\n};\n\nconst DEFAULT_SAX_PARSER_OPTIONS: Required<SAXParserOptions> = {\n  ...DEFAULT_SAX_EVENTS,\n  strict: false,\n  MAX_BUFFER_LENGTH: 64 * 1024,\n  lowercase: false,\n  lowercasetags: false,\n  noscript: false,\n  strictEntities: false,\n  xmlns: undefined,\n  position: undefined,\n  trim: undefined,\n  normalize: undefined\n};\n\nconst EVENTS = [\n  'text',\n  'processinginstruction',\n  'sgmldeclaration',\n  'doctype',\n  'comment',\n  'opentagstart',\n  'attribute',\n  'opentag',\n  'closetag',\n  'opencdata',\n  'cdata',\n  'closecdata',\n  'error',\n  'end',\n  'ready',\n  'script',\n  'opennamespace',\n  'closenamespace'\n];\n\nconst BUFFERS = [\n  'comment',\n  'sgmlDecl',\n  'textNode',\n  'tagName',\n  'doctype',\n  'procInstName',\n  'procInstBody',\n  'entity',\n  'attribName',\n  'attribValue',\n  'cdata',\n  'script'\n];\n\nconst nameStart =\n  /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\nconst nameBody =\n  /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\nconst entityStart =\n  /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\nconst entityBody =\n  /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n\nexport const ENTITIES: {[key: string]: number | string} = {\n  amp: '&',\n  gt: '>',\n  lt: '<',\n  quot: '\"',\n  apos: \"'\",\n  AElig: 198,\n  Aacute: 193,\n  Acirc: 194,\n  Agrave: 192,\n  Aring: 197,\n  Atilde: 195,\n  Auml: 196,\n  Ccedil: 199,\n  ETH: 208,\n  Eacute: 201,\n  Ecirc: 202,\n  Egrave: 200,\n  Euml: 203,\n  Iacute: 205,\n  Icirc: 206,\n  Igrave: 204,\n  Iuml: 207,\n  Ntilde: 209,\n  Oacute: 211,\n  Ocirc: 212,\n  Ograve: 210,\n  Oslash: 216,\n  Otilde: 213,\n  Ouml: 214,\n  THORN: 222,\n  Uacute: 218,\n  Ucirc: 219,\n  Ugrave: 217,\n  Uuml: 220,\n  Yacute: 221,\n  aacute: 225,\n  acirc: 226,\n  aelig: 230,\n  agrave: 224,\n  aring: 229,\n  atilde: 227,\n  auml: 228,\n  ccedil: 231,\n  eacute: 233,\n  ecirc: 234,\n  egrave: 232,\n  eth: 240,\n  euml: 235,\n  iacute: 237,\n  icirc: 238,\n  igrave: 236,\n  iuml: 239,\n  ntilde: 241,\n  oacute: 243,\n  ocirc: 244,\n  ograve: 242,\n  oslash: 248,\n  otilde: 245,\n  ouml: 246,\n  szlig: 223,\n  thorn: 254,\n  uacute: 250,\n  ucirc: 251,\n  ugrave: 249,\n  uuml: 252,\n  yacute: 253,\n  yuml: 255,\n  copy: 169,\n  reg: 174,\n  nbsp: 160,\n  iexcl: 161,\n  cent: 162,\n  pound: 163,\n  curren: 164,\n  yen: 165,\n  brvbar: 166,\n  sect: 167,\n  uml: 168,\n  ordf: 170,\n  laquo: 171,\n  not: 172,\n  shy: 173,\n  macr: 175,\n  deg: 176,\n  plusmn: 177,\n  sup1: 185,\n  sup2: 178,\n  sup3: 179,\n  acute: 180,\n  micro: 181,\n  para: 182,\n  middot: 183,\n  cedil: 184,\n  ordm: 186,\n  raquo: 187,\n  frac14: 188,\n  frac12: 189,\n  frac34: 190,\n  iquest: 191,\n  times: 215,\n  divide: 247,\n  OElig: 338,\n  oelig: 339,\n  Scaron: 352,\n  scaron: 353,\n  Yuml: 376,\n  fnof: 402,\n  circ: 710,\n  tilde: 732,\n  Alpha: 913,\n  Beta: 914,\n  Gamma: 915,\n  Delta: 916,\n  Epsilon: 917,\n  Zeta: 918,\n  Eta: 919,\n  Theta: 920,\n  Iota: 921,\n  Kappa: 922,\n  Lambda: 923,\n  Mu: 924,\n  Nu: 925,\n  Xi: 926,\n  Omicron: 927,\n  Pi: 928,\n  Rho: 929,\n  Sigma: 931,\n  Tau: 932,\n  Upsilon: 933,\n  Phi: 934,\n  Chi: 935,\n  Psi: 936,\n  Omega: 937,\n  alpha: 945,\n  beta: 946,\n  gamma: 947,\n  delta: 948,\n  epsilon: 949,\n  zeta: 950,\n  eta: 951,\n  theta: 952,\n  iota: 953,\n  kappa: 954,\n  lambda: 955,\n  mu: 956,\n  nu: 957,\n  xi: 958,\n  omicron: 959,\n  pi: 960,\n  rho: 961,\n  sigmaf: 962,\n  sigma: 963,\n  tau: 964,\n  upsilon: 965,\n  phi: 966,\n  chi: 967,\n  psi: 968,\n  omega: 969,\n  thetasym: 977,\n  upsih: 978,\n  piv: 982,\n  ensp: 8194,\n  emsp: 8195,\n  thinsp: 8201,\n  zwnj: 8204,\n  zwj: 8205,\n  lrm: 8206,\n  rlm: 8207,\n  ndash: 8211,\n  mdash: 8212,\n  lsquo: 8216,\n  rsquo: 8217,\n  sbquo: 8218,\n  ldquo: 8220,\n  rdquo: 8221,\n  bdquo: 8222,\n  dagger: 8224,\n  Dagger: 8225,\n  bull: 8226,\n  hellip: 8230,\n  permil: 8240,\n  prime: 8242,\n  Prime: 8243,\n  lsaquo: 8249,\n  rsaquo: 8250,\n  oline: 8254,\n  frasl: 8260,\n  euro: 8364,\n  image: 8465,\n  weierp: 8472,\n  real: 8476,\n  trade: 8482,\n  alefsym: 8501,\n  larr: 8592,\n  uarr: 8593,\n  rarr: 8594,\n  darr: 8595,\n  harr: 8596,\n  crarr: 8629,\n  lArr: 8656,\n  uArr: 8657,\n  rArr: 8658,\n  dArr: 8659,\n  hArr: 8660,\n  forall: 8704,\n  part: 8706,\n  exist: 8707,\n  empty: 8709,\n  nabla: 8711,\n  isin: 8712,\n  notin: 8713,\n  ni: 8715,\n  prod: 8719,\n  sum: 8721,\n  minus: 8722,\n  lowast: 8727,\n  radic: 8730,\n  prop: 8733,\n  infin: 8734,\n  ang: 8736,\n  and: 8743,\n  or: 8744,\n  cap: 8745,\n  cup: 8746,\n  int: 8747,\n  there4: 8756,\n  sim: 8764,\n  cong: 8773,\n  asymp: 8776,\n  ne: 8800,\n  equiv: 8801,\n  le: 8804,\n  ge: 8805,\n  sub: 8834,\n  sup: 8835,\n  nsub: 8836,\n  sube: 8838,\n  supe: 8839,\n  oplus: 8853,\n  otimes: 8855,\n  perp: 8869,\n  sdot: 8901,\n  lceil: 8968,\n  rceil: 8969,\n  lfloor: 8970,\n  rfloor: 8971,\n  lang: 9001,\n  rang: 9002,\n  loz: 9674,\n  spades: 9824,\n  clubs: 9827,\n  hearts: 9829,\n  diams: 9830\n};\n\nObject.keys(ENTITIES).forEach((key) => {\n  const e = ENTITIES[key];\n  ENTITIES[key] = typeof e === 'number' ? String.fromCharCode(e) : e;\n});\n\n/**\n * Internal helper class\n */\nabstract class SAX {\n  EVENTS: string[] = EVENTS;\n  ENTITIES: {[key: string]: number | string} = {\n    // TODO: make it readonly, needed for entity-mega test\n    // amp, gt, lt, quot and apos are resolved to strings instead of numerical\n    // codes, IDK why\n    ...ENTITIES\n  };\n\n  protected abstract events: SAXEvents;\n\n  protected XML_ENTITIES: {[key: string]: string} = {\n    amp: '&',\n    gt: '>',\n    lt: '<',\n    quot: '\"',\n    apos: \"'\"\n  };\n  protected S: any = 0;\n  protected opt: any;\n  protected trackPosition = false;\n  protected column = 0;\n  protected line = 0;\n  protected c = '';\n  protected error: any;\n  protected q = '';\n  protected bufferCheckPosition: any;\n  protected closed = false;\n  protected tags: any[] = [];\n  protected looseCase = '';\n  protected closedRoot = false;\n  protected sawRoot = false;\n  protected strict = false;\n  protected tag: any;\n  protected strictEntities: any;\n  protected state: any;\n  protected noscript = false;\n  protected attribList: any[] = [];\n  protected ns: any;\n  protected position = 0;\n\n  private STATE: {[index: string]: any} = {\n    BEGIN: this.S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: this.S++, // leading whitespace\n    TEXT: this.S++, // general stuff\n    TEXT_ENTITY: this.S++, // &amp and such.\n    OPEN_WAKA: this.S++, // <\n    SGML_DECL: this.S++, // <!BLARG\n    SGML_DECL_QUOTED: this.S++, // <!BLARG foo \"bar\n    DOCTYPE: this.S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: this.S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: this.S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: this.S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: this.S++, // <!-\n    COMMENT: this.S++, // <!--\n    COMMENT_ENDING: this.S++, // <!-- blah -\n    COMMENT_ENDED: this.S++, // <!-- blah --\n    CDATA: this.S++, // <![CDATA[ something\n    CDATA_ENDING: this.S++, // ]\n    CDATA_ENDING_2: this.S++, // ]]\n    PROC_INST: this.S++, // <?hi\n    PROC_INST_BODY: this.S++, // <?hi there\n    PROC_INST_ENDING: this.S++, // <?hi \"there\" ?\n    OPEN_TAG: this.S++, // <strong\n    OPEN_TAG_SLASH: this.S++, // <strong /\n    ATTRIB: this.S++, // <a\n    ATTRIB_NAME: this.S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: this.S++, // <a foo _\n    ATTRIB_VALUE: this.S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: this.S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: this.S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: this.S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: this.S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: this.S++, // <foo bar=&quot\n    CLOSE_TAG: this.S++, // </a\n    CLOSE_TAG_SAW_WHITE: this.S++, // </a   >\n    SCRIPT: this.S++, // <script> ...\n    SCRIPT_ENDING: this.S++ // <script> ... <\n  };\n\n  private readonly BUFFERS: string[] = BUFFERS;\n  // private parser: (strict: boolean, opt: any) => SAXParser;\n  private CDATA = '[CDATA[';\n  private DOCTYPE = 'DOCTYPE';\n  private XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\n  private XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/';\n  protected rootNS: {} = {\n    xml: this.XML_NAMESPACE,\n    xmlns: this.XMLNS_NAMESPACE\n  };\n  private comment: any;\n  private sgmlDecl: any;\n  private textNode = '';\n  private tagName: any;\n  private doctype: any;\n  private procInstName: any;\n  private procInstBody: any;\n  private entity = '';\n  private attribName: any;\n  private attribValue: any;\n  private cdata = '';\n  private script = '';\n  private startTagPosition = 0;\n\n  constructor() {\n    this.S = 0;\n\n    for (const s in this.STATE) {\n      if (this.STATE.hasOwnProperty(s)) {\n        this.STATE[this.STATE[s]] = s;\n      }\n    }\n\n    // shorthand\n    this.S = this.STATE;\n  }\n\n  private static charAt(chunk: string, i: number): string {\n    let result = '';\n    if (i < chunk.length) {\n      result = chunk.charAt(i);\n    }\n    return result;\n  }\n\n  private static isWhitespace(c: string): boolean {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t';\n  }\n\n  private static isQuote(c: string): boolean {\n    return c === '\"' || c === \"'\";\n  }\n\n  private static isAttribEnd(c: string): boolean {\n    return c === '>' || SAX.isWhitespace(c);\n  }\n\n  private static isMatch(regex: RegExp, c: string): boolean {\n    return regex.test(c);\n  }\n\n  private static notMatch(regex: RegExp, c: string): boolean {\n    return !SAX.isMatch(regex, c);\n  }\n\n  private static qname(\n    name: string,\n    attribute?: string | boolean\n  ): {prefix: string; local: string} {\n    const i = name.indexOf(':');\n    const qualName = i < 0 ? ['', name] : name.split(':');\n    let prefix = qualName[0];\n    let local = qualName[1];\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns';\n      local = '';\n    }\n\n    return {prefix, local};\n  }\n\n  write(chunk: null | object | string): this | SAXParser {\n    if (this.error) {\n      throw this.error;\n    }\n    if (this.closed) {\n      return this.errorFunction('Cannot write after close. Assign an onready handler.');\n    }\n    if (chunk === null) {\n      return this.end();\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString();\n    }\n    let i = 0;\n    let c: string;\n    while (true) {\n      c = SAX.charAt(chunk, i++);\n      this.c = c;\n\n      if (!c) {\n        break;\n      }\n\n      if (this.trackPosition) {\n        this.position++;\n        if (c === '\\n') {\n          this.line++;\n          this.column = 0;\n        } else {\n          this.column++;\n        }\n      }\n\n      switch (this.state) {\n        case this.S.BEGIN:\n          this.state = this.S.BEGIN_WHITESPACE;\n          if (c === '\\uFEFF') {\n            continue;\n          }\n          this.beginWhiteSpace(c);\n          continue;\n\n        case this.S.BEGIN_WHITESPACE:\n          this.beginWhiteSpace(c);\n          continue;\n\n        case this.S.TEXT:\n          if (this.sawRoot && !this.closedRoot) {\n            const starti = i - 1;\n            while (c && c !== '<' && c !== '&') {\n              c = SAX.charAt(chunk, i++);\n              if (c && this.trackPosition) {\n                this.position++;\n                if (c === '\\n') {\n                  this.line++;\n                  this.column = 0;\n                } else {\n                  this.column++;\n                }\n              }\n            }\n            this.textNode += chunk.substring(starti, i - 1);\n          }\n          if (c === '<' && !(this.sawRoot && this.closedRoot && !this.strict)) {\n            this.state = this.S.OPEN_WAKA;\n            this.startTagPosition = this.position;\n          } else {\n            if (!SAX.isWhitespace(c) && (!this.sawRoot || this.closedRoot)) {\n              this.strictFail('Text data outside of root node.');\n            }\n            if (c === '&') {\n              this.state = this.S.TEXT_ENTITY;\n            } else {\n              this.textNode += c;\n            }\n          }\n          continue;\n\n        case this.S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            this.state = this.S.SCRIPT_ENDING;\n          } else {\n            this.script += c;\n          }\n          continue;\n\n        case this.S.SCRIPT_ENDING:\n          if (c === '/') {\n            this.state = this.S.CLOSE_TAG;\n          } else {\n            this.script += `<${c}`;\n            this.state = this.S.SCRIPT;\n          }\n          continue;\n\n        case this.S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            this.state = this.S.SGML_DECL;\n            this.sgmlDecl = '';\n          } else if (SAX.isWhitespace(c)) {\n            // wait for it...\n          } else if (SAX.isMatch(nameStart, c)) {\n            this.state = this.S.OPEN_TAG;\n            this.tagName = c;\n          } else if (c === '/') {\n            this.state = this.S.CLOSE_TAG;\n            this.tagName = '';\n          } else if (c === '?') {\n            this.state = this.S.PROC_INST;\n            this.procInstName = this.procInstBody = '';\n          } else {\n            this.strictFail('Unencoded <');\n            // if there was some whitespace, then add that in.\n            if (this.startTagPosition + 1 < this.position) {\n              const pad = this.position - this.startTagPosition;\n              c = new Array(pad).join(' ') + c;\n            }\n            this.textNode += `<${c}`;\n            this.state = this.S.TEXT;\n          }\n          continue;\n\n        case this.S.SGML_DECL:\n          if ((this.sgmlDecl + c).toUpperCase() === this.CDATA) {\n            this.emitNode('onopencdata');\n            this.state = this.S.CDATA;\n            this.sgmlDecl = '';\n            this.cdata = '';\n          } else if (this.sgmlDecl + c === '--') {\n            this.state = this.S.COMMENT;\n            this.comment = '';\n            this.sgmlDecl = '';\n          } else if ((this.sgmlDecl + c).toUpperCase() === this.DOCTYPE) {\n            this.state = this.S.DOCTYPE;\n            if (this.doctype || this.sawRoot) {\n              this.strictFail('Inappropriately located doctype declaration');\n            }\n            this.doctype = '';\n            this.sgmlDecl = '';\n          } else if (c === '>') {\n            this.emitNode('onsgmldeclaration', this.sgmlDecl);\n            this.sgmlDecl = '';\n            this.state = this.S.TEXT;\n          } else if (SAX.isQuote(c)) {\n            this.state = this.S.SGML_DECL_QUOTED;\n            this.sgmlDecl += c;\n          } else {\n            this.sgmlDecl += c;\n          }\n          continue;\n\n        case this.S.SGML_DECL_QUOTED:\n          if (c === this.q) {\n            this.state = this.S.SGML_DECL;\n            this.q = '';\n          }\n          this.sgmlDecl += c;\n          continue;\n\n        case this.S.DOCTYPE:\n          if (c === '>') {\n            this.state = this.S.TEXT;\n            this.emitNode('ondoctype', this.doctype);\n            this.doctype = true; // just remember that we saw it.\n          } else {\n            this.doctype += c;\n            if (c === '[') {\n              this.state = this.S.DOCTYPE_DTD;\n            } else if (SAX.isQuote(c)) {\n              this.state = this.S.DOCTYPE_QUOTED;\n              this.q = c;\n            }\n          }\n          continue;\n\n        case this.S.DOCTYPE_QUOTED:\n          this.doctype += c;\n          if (c === this.q) {\n            this.q = '';\n            this.state = this.S.DOCTYPE;\n          }\n          continue;\n\n        case this.S.DOCTYPE_DTD:\n          this.doctype += c;\n          if (c === ']') {\n            this.state = this.S.DOCTYPE;\n          } else if (SAX.isQuote(c)) {\n            this.state = this.S.DOCTYPE_DTD_QUOTED;\n            this.q = c;\n          }\n          continue;\n\n        case this.S.DOCTYPE_DTD_QUOTED:\n          this.doctype += c;\n          if (c === this.q) {\n            this.state = this.S.DOCTYPE_DTD;\n            this.q = '';\n          }\n          continue;\n\n        case this.S.COMMENT:\n          if (c === '-') {\n            this.state = this.S.COMMENT_ENDING;\n          } else {\n            this.comment += c;\n          }\n          continue;\n\n        case this.S.COMMENT_ENDING:\n          if (c === '-') {\n            this.state = this.S.COMMENT_ENDED;\n            this.comment = this.textApplyOptions(this.comment);\n            if (this.comment) {\n              this.emitNode('oncomment', this.comment);\n            }\n            this.comment = '';\n          } else {\n            this.comment += `-${c}`;\n            this.state = this.S.COMMENT;\n          }\n          continue;\n\n        case this.S.COMMENT_ENDED:\n          if (c !== '>') {\n            this.strictFail('Malformed comment');\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            this.comment += `--${c}`;\n            this.state = this.S.COMMENT;\n          } else {\n            this.state = this.S.TEXT;\n          }\n          continue;\n\n        case this.S.CDATA:\n          if (c === ']') {\n            this.state = this.S.CDATA_ENDING;\n          } else {\n            this.cdata += c;\n          }\n          continue;\n\n        case this.S.CDATA_ENDING:\n          if (c === ']') {\n            this.state = this.S.CDATA_ENDING_2;\n          } else {\n            this.cdata += `]${c}`;\n            this.state = this.S.CDATA;\n          }\n          continue;\n\n        case this.S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (this.cdata) {\n              this.emitNode('oncdata', this.cdata);\n            }\n            this.emitNode('onclosecdata');\n            this.cdata = '';\n            this.state = this.S.TEXT;\n          } else if (c === ']') {\n            this.cdata += ']';\n          } else {\n            this.cdata += `]]${c}`;\n            this.state = this.S.CDATA;\n          }\n          continue;\n\n        case this.S.PROC_INST:\n          if (c === '?') {\n            this.state = this.S.PROC_INST_ENDING;\n          } else if (SAX.isWhitespace(c)) {\n            this.state = this.S.PROC_INST_BODY;\n          } else {\n            this.procInstName += c;\n          }\n          continue;\n\n        case this.S.PROC_INST_BODY:\n          if (!this.procInstBody && SAX.isWhitespace(c)) {\n            continue;\n          } else if (c === '?') {\n            this.state = this.S.PROC_INST_ENDING;\n          } else {\n            this.procInstBody += c;\n          }\n          continue;\n\n        case this.S.PROC_INST_ENDING:\n          if (c === '>') {\n            this.emitNode('onprocessinginstruction', {\n              name: this.procInstName,\n              body: this.procInstBody\n            });\n            this.procInstName = this.procInstBody = '';\n            this.state = this.S.TEXT;\n          } else {\n            this.procInstBody += `?${c}`;\n            this.state = this.S.PROC_INST_BODY;\n          }\n          continue;\n\n        case this.S.OPEN_TAG:\n          if (SAX.isMatch(nameBody, c)) {\n            this.tagName += c;\n          } else {\n            this.newTag();\n            if (c === '>') {\n              this.openTag();\n            } else if (c === '/') {\n              this.state = this.S.OPEN_TAG_SLASH;\n            } else {\n              if (!SAX.isWhitespace(c)) {\n                this.strictFail('Invalid character in tag name');\n              }\n              this.state = this.S.ATTRIB;\n            }\n          }\n          continue;\n\n        case this.S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            this.openTag(true);\n            this.closeTag();\n          } else {\n            this.strictFail('Forward-slash in opening tag not followed by >');\n            this.state = this.S.ATTRIB;\n          }\n          continue;\n\n        case this.S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (SAX.isWhitespace(c)) {\n            continue;\n          } else if (c === '>') {\n            this.openTag();\n          } else if (c === '/') {\n            this.state = this.S.OPEN_TAG_SLASH;\n          } else if (SAX.isMatch(nameStart, c)) {\n            this.attribName = c;\n            this.attribValue = '';\n            this.state = this.S.ATTRIB_NAME;\n          } else {\n            this.strictFail('Invalid attribute name');\n          }\n          continue;\n\n        case this.S.ATTRIB_NAME:\n          if (c === '=') {\n            this.state = this.S.ATTRIB_VALUE;\n          } else if (c === '>') {\n            this.strictFail('Attribute without value');\n            this.attribValue = this.attribName;\n            this.attrib();\n            this.openTag();\n          } else if (SAX.isWhitespace(c)) {\n            this.state = this.S.ATTRIB_NAME_SAW_WHITE;\n          } else if (SAX.isMatch(nameBody, c)) {\n            this.attribName += c;\n          } else {\n            this.strictFail('Invalid attribute name');\n          }\n          continue;\n\n        case this.S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            this.state = this.S.ATTRIB_VALUE;\n          } else if (SAX.isWhitespace(c)) {\n            continue;\n          } else {\n            this.strictFail('Attribute without value');\n            this.tag.attributes[this.attribName] = '';\n            this.attribValue = '';\n            this.emitNode('onattribute', {\n              name: this.attribName,\n              value: ''\n            });\n            this.attribName = '';\n            if (c === '>') {\n              this.openTag();\n            } else if (SAX.isMatch(nameStart, c)) {\n              this.attribName = c;\n              this.state = this.S.ATTRIB_NAME;\n            } else {\n              this.strictFail('Invalid attribute name');\n              this.state = this.S.ATTRIB;\n            }\n          }\n          continue;\n\n        case this.S.ATTRIB_VALUE:\n          if (SAX.isWhitespace(c)) {\n            continue;\n          } else if (SAX.isQuote(c)) {\n            this.q = c;\n            this.state = this.S.ATTRIB_VALUE_QUOTED;\n          } else {\n            this.strictFail('Unquoted attribute value');\n            this.state = this.S.ATTRIB_VALUE_UNQUOTED;\n            this.attribValue = c;\n          }\n          continue;\n\n        case this.S.ATTRIB_VALUE_QUOTED:\n          if (c !== this.q) {\n            if (c === '&') {\n              this.state = this.S.ATTRIB_VALUE_ENTITY_Q;\n            } else {\n              this.attribValue += c;\n            }\n            continue;\n          }\n          this.attrib();\n          this.q = '';\n          this.state = this.S.ATTRIB_VALUE_CLOSED;\n          continue;\n\n        case this.S.ATTRIB_VALUE_CLOSED:\n          if (SAX.isWhitespace(c)) {\n            this.state = this.S.ATTRIB;\n          } else if (c === '>') {\n            this.openTag();\n          } else if (c === '/') {\n            this.state = this.S.OPEN_TAG_SLASH;\n          } else if (SAX.isMatch(nameStart, c)) {\n            this.strictFail('No whitespace between attributes');\n            this.attribName = c;\n            this.attribValue = '';\n            this.state = this.S.ATTRIB_NAME;\n          } else {\n            this.strictFail('Invalid attribute name');\n          }\n          continue;\n\n        case this.S.ATTRIB_VALUE_UNQUOTED:\n          if (!SAX.isAttribEnd(c)) {\n            if (c === '&') {\n              this.state = this.S.ATTRIB_VALUE_ENTITY_U;\n            } else {\n              this.attribValue += c;\n            }\n            continue;\n          }\n          this.attrib();\n          if (c === '>') {\n            this.openTag();\n          } else {\n            this.state = this.S.ATTRIB;\n          }\n          continue;\n\n        case this.S.CLOSE_TAG:\n          if (!this.tagName) {\n            if (SAX.isWhitespace(c)) {\n              continue;\n            } else if (SAX.notMatch(nameStart, c)) {\n              if (this.script) {\n                this.script += `</${c}`;\n                this.state = this.S.SCRIPT;\n              } else {\n                this.strictFail('Invalid tagname in closing tag.');\n              }\n            } else {\n              this.tagName = c;\n            }\n          } else if (c === '>') {\n            this.closeTag();\n          } else if (SAX.isMatch(nameBody, c)) {\n            this.tagName += c;\n          } else if (this.script) {\n            this.script += `</${this.tagName}`;\n            this.tagName = '';\n            this.state = this.S.SCRIPT;\n          } else {\n            if (!SAX.isWhitespace(c)) {\n              this.strictFail('Invalid tagname in closing tag');\n            }\n            this.state = this.S.CLOSE_TAG_SAW_WHITE;\n          }\n          continue;\n\n        case this.S.CLOSE_TAG_SAW_WHITE:\n          if (SAX.isWhitespace(c)) {\n            continue;\n          }\n          if (c === '>') {\n            this.closeTag();\n          } else {\n            this.strictFail('Invalid characters in closing tag');\n          }\n          continue;\n\n        case this.S.TEXT_ENTITY:\n        case this.S.ATTRIB_VALUE_ENTITY_Q:\n        case this.S.ATTRIB_VALUE_ENTITY_U:\n          let returnState;\n          let buffer;\n          switch (this.state) {\n            case this.S.TEXT_ENTITY:\n              returnState = this.S.TEXT;\n              buffer = 'textNode';\n              break;\n\n            case this.S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = this.S.ATTRIB_VALUE_QUOTED;\n              buffer = 'attribValue';\n              break;\n\n            case this.S.ATTRIB_VALUE_ENTITY_U:\n              returnState = this.S.ATTRIB_VALUE_UNQUOTED;\n              buffer = 'attribValue';\n              break;\n\n            default:\n              throw new Error(`Unknown state: ${this.state}`);\n          }\n\n          if (c === ';') {\n            this[buffer] += this.parseEntity();\n            this.entity = '';\n            this.state = returnState;\n          } else if (SAX.isMatch(this.entity.length ? entityBody : entityStart, c)) {\n            this.entity += c;\n          } else {\n            this.strictFail('Invalid character in entity name');\n            this[buffer] += `&${this.entity}${c}`;\n            this.entity = '';\n            this.state = returnState;\n          }\n\n          continue;\n\n        default:\n          throw new Error(`Unknown state: ${this.state}`);\n      }\n    } // while\n\n    if (this.position >= this.bufferCheckPosition) {\n      this.checkBufferLength();\n    }\n    return this;\n  }\n\n  protected emit(event: string, data?: Error | {}): void {\n    if (this.events.hasOwnProperty(event)) {\n      const eventName = event.replace(/^on/, '');\n      this.events[event](data, eventName, this);\n    }\n  }\n\n  protected clearBuffers(): void {\n    for (let i = 0, l = this.BUFFERS.length; i < l; i++) {\n      this[this[i]] = '';\n    }\n  }\n\n  protected flushBuffers(): void {\n    this.closeText();\n    if (this.cdata !== '') {\n      this.emitNode('oncdata', this.cdata);\n      this.cdata = '';\n    }\n    if (this.script !== '') {\n      this.emitNode('onscript', this.script);\n      this.script = '';\n    }\n  }\n\n  protected end(): SAXParser {\n    if (this.sawRoot && !this.closedRoot) this.strictFail('Unclosed root tag');\n    if (\n      this.state !== this.S.BEGIN &&\n      this.state !== this.S.BEGIN_WHITESPACE &&\n      this.state !== this.S.TEXT\n    ) {\n      this.errorFunction('Unexpected end');\n    }\n    this.closeText();\n    this.c = '';\n    this.closed = true;\n    this.emit('onend');\n    return new SAXParser(this.opt);\n  }\n\n  protected errorFunction(er: string): this {\n    this.closeText();\n    if (this.trackPosition) {\n      er += `\\nLine: ${this.line}\\nColumn: ${this.column}\\nChar: ${this.c}`;\n    }\n    const error = new Error(er);\n    this.error = error;\n    this.emit('onerror', error);\n    return this;\n  }\n\n  private attrib(): void {\n    if (!this.strict) {\n      this.attribName = this.attribName[this.looseCase]();\n    }\n\n    if (\n      this.attribList.indexOf(this.attribName) !== -1 ||\n      this.tag.attributes.hasOwnProperty(this.attribName)\n    ) {\n      this.attribName = this.attribValue = '';\n      return;\n    }\n\n    if (this.opt.xmlns) {\n      const qn = SAX.qname(this.attribName, true);\n      const prefix = qn.prefix;\n      const local = qn.local;\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && this.attribValue !== this.XML_NAMESPACE) {\n          this.strictFail(\n            `xml: prefix must be bound to ${this.XML_NAMESPACE}\\n` + `Actual: ${this.attribValue}`\n          );\n        } else if (local === 'xmlns' && this.attribValue !== this.XMLNS_NAMESPACE) {\n          this.strictFail(\n            `xmlns: prefix must be bound to ${this.XMLNS_NAMESPACE}\\n` +\n              `Actual: ${this.attribValue}`\n          );\n        } else {\n          const tag = this.tag;\n          const parent = this.tags[this.tags.length - 1] || this;\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns);\n          }\n          tag.ns[local] = this.attribValue;\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      this.attribList.push([this.attribName, this.attribValue]);\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      this.tag.attributes[this.attribName] = this.attribValue;\n      this.emitNode('onattribute', {\n        name: this.attribName,\n        value: this.attribValue\n      });\n    }\n\n    this.attribName = this.attribValue = '';\n  }\n\n  private newTag(): void {\n    if (!this.strict) this.tagName = this.tagName[this.looseCase]();\n    const parent = this.tags[this.tags.length - 1] || this;\n    const tag: any = (this.tag = {name: this.tagName, attributes: {}});\n\n    // will be overridden if tag contains an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (this.opt.xmlns) {\n      tag.ns = parent.ns;\n    }\n    this.attribList.length = 0;\n    this.emitNode('onopentagstart', tag);\n  }\n\n  private parseEntity(): string | number {\n    let entity = this.entity;\n    const entityLC = entity.toLowerCase();\n    let num = NaN;\n    let numStr = '';\n\n    if (this.ENTITIES[entity]) {\n      return this.ENTITIES[entity];\n    }\n    if (this.ENTITIES[entityLC]) {\n      return this.ENTITIES[entityLC];\n    }\n    entity = entityLC;\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2);\n        // TODO: remove tslint:disable\n        // tslint:disable-next-line\n        num = parseInt(entity, 16);\n        numStr = num.toString(16);\n      } else {\n        entity = entity.slice(1);\n        // TODO: remove tslint:disable\n        // tslint:disable-next-line\n        num = parseInt(entity, 10);\n        numStr = num.toString(10);\n      }\n    }\n\n    entity = entity.replace(/^0+/, '');\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      this.strictFail('Invalid character entity');\n      return `&${this.entity};`;\n    }\n\n    return String.fromCodePoint(num);\n  }\n\n  private beginWhiteSpace(c: string): void {\n    if (c === '<') {\n      this.state = this.S.OPEN_WAKA;\n      this.startTagPosition = this.position;\n    } else if (!SAX.isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      this.strictFail('Non-whitespace before first tag.');\n      this.textNode = c;\n      this.state = this.S.TEXT;\n    } else {\n    }\n  }\n\n  private strictFail(message: string): void {\n    if (typeof this !== 'object' || !(this instanceof SAXParser)) {\n      throw new Error('bad call to strictFail');\n    }\n    if (this.strict) {\n      this.errorFunction(message);\n    }\n  }\n\n  private textApplyOptions(text: string): string {\n    if (this.opt.trim) text = text.trim();\n    if (this.opt.normalize) text = text.replace(/\\s+/g, ' ');\n    return text;\n  }\n\n  private emitNode(nodeType: string, data?: {}): void {\n    if (this.textNode) this.closeText();\n    this.emit(nodeType, data);\n  }\n\n  private closeText(): void {\n    this.textNode = this.textApplyOptions(this.textNode);\n    // TODO: figure out why this.textNode can be \"\" and \"undefined\"\n    if (this.textNode !== undefined && this.textNode !== '' && this.textNode !== 'undefined') {\n      this.emit('ontext', this.textNode);\n    }\n    this.textNode = '';\n  }\n\n  private checkBufferLength(): void {\n    const maxAllowed = Math.max(this.opt.MAX_BUFFER_LENGTH, 10);\n    let maxActual = 0;\n    for (let i = 0, l = this.BUFFERS.length; i < l; i++) {\n      const len = this[this.BUFFERS[i]]?.length || 0;\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (this.BUFFERS[i]) {\n          case 'textNode':\n            this.closeText();\n            break;\n          case 'cdata':\n            this.emitNode('oncdata', this.cdata);\n            this.cdata = '';\n            break;\n          case 'script':\n            this.emitNode('onscript', this.script);\n            this.script = '';\n            break;\n          default:\n            this.errorFunction(`Max buffer length exceeded: ${this.BUFFERS[i]}`);\n        }\n      }\n      maxActual = Math.max(maxActual, len);\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    const m = this.opt.MAX_BUFFER_LENGTH - maxActual;\n    this.bufferCheckPosition = m + this.position;\n  }\n\n  private openTag(selfClosing?: boolean): void {\n    if (this.opt.xmlns) {\n      // emit namespace binding events\n      const tag = this.tag;\n\n      // add namespace info to tag\n      const qn = SAX.qname(this.tagName);\n      tag.prefix = qn.prefix;\n      tag.local = qn.local;\n      tag.uri = tag.ns[qn.prefix] || '';\n\n      if (tag.prefix && !tag.uri) {\n        this.strictFail(`Unbound namespace prefix: ${JSON.stringify(this.tagName)}`);\n        tag.uri = qn.prefix;\n      }\n\n      const parent = this.tags[this.tags.length - 1] || this;\n      if (tag.ns && parent.ns !== tag.ns) {\n        const that = this;\n        Object.keys(tag.ns).forEach((p) => {\n          that.emitNode('onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          });\n        });\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (let i = 0, l = this.attribList.length; i < l; i++) {\n        const nv = this.attribList[i];\n        const name = nv[0];\n        const value = nv[1];\n        const qualName = SAX.qname(name, true);\n        const prefix = qualName.prefix;\n        const local = qualName.local;\n        const uri = prefix === '' ? '' : tag.ns[prefix] || '';\n        const a = {\n          name,\n          value,\n          prefix,\n          local,\n          uri\n        };\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          this.strictFail(`Unbound namespace prefix: ${JSON.stringify(prefix)}`);\n          a.uri = prefix;\n        }\n        this.tag.attributes[name] = a;\n        this.emitNode('onattribute', a);\n      }\n      this.attribList.length = 0;\n    }\n\n    this.tag.isSelfClosing = Boolean(selfClosing);\n\n    // process the tag\n    this.sawRoot = true;\n    this.tags.push(this.tag);\n    this.emitNode('onopentag', this.tag);\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!this.noscript && this.tagName.toLowerCase() === 'script') {\n        this.state = this.S.SCRIPT;\n      } else {\n        this.state = this.S.TEXT;\n      }\n      this.tag = null;\n      this.tagName = '';\n    }\n    this.attribName = this.attribValue = '';\n    this.attribList.length = 0;\n  }\n\n  private closeTag(): void {\n    if (!this.tagName) {\n      this.strictFail('Weird empty close tag.');\n      this.textNode += '</>';\n      this.state = this.S.TEXT;\n      return;\n    }\n\n    if (this.script) {\n      if (this.tagName !== 'script') {\n        this.script += `</${this.tagName}>`;\n        this.tagName = '';\n        this.state = this.S.SCRIPT;\n        return;\n      }\n      this.emitNode('onscript', this.script);\n      this.script = '';\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    let t = this.tags.length;\n    let tagName = this.tagName;\n    if (!this.strict) {\n      tagName = tagName[this.looseCase]();\n    }\n    while (t--) {\n      const close = this.tags[t];\n      if (close.name !== tagName) {\n        // fail the first time in strict mode\n        this.strictFail('Unexpected close tag');\n      } else {\n        break;\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      this.strictFail(`Unmatched closing tag: ${this.tagName}`);\n      this.textNode += `</${this.tagName}>`;\n      this.state = this.S.TEXT;\n      return;\n    }\n    this.tagName = tagName;\n    let s = this.tags.length;\n    while (s-- > t) {\n      const tag = (this.tag = this.tags.pop());\n      this.tagName = this.tag.name;\n      this.emitNode('onclosetag', this.tagName);\n\n      const x: {[index: string]: any} = {};\n      for (const i in tag.ns) {\n        if (tag.ns.hasOwnProperty(i)) {\n          x[i] = tag.ns[i];\n        }\n      }\n\n      const parent = this.tags[this.tags.length - 1] || this;\n      if (this.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        const that = this;\n        Object.keys(tag.ns).forEach((p) => {\n          const n = tag.ns[p];\n          that.emitNode('onclosenamespace', {prefix: p, uri: n});\n        });\n      }\n    }\n    if (t === 0) this.closedRoot = true;\n    this.tagName = this.attribValue = this.attribName = '';\n    this.attribList.length = 0;\n    this.state = this.S.TEXT;\n  }\n}\n\n/**\n *\n * @todo Weird inheritance, with some variables initialized in subclass\n */\nexport class SAXParser extends SAX {\n  static ENTITIES = ENTITIES;\n\n  opt: Required<SAXParserOptions> = DEFAULT_SAX_PARSER_OPTIONS;\n\n  events: Required<SAXEvents> = DEFAULT_SAX_EVENTS;\n\n  constructor(opt?: SAXParserOptions) {\n    super();\n\n    this.clearBuffers();\n\n    this.opt = opt = {...this.opt, ...opt};\n\n    this.events = {...this.events, ...opt};\n\n    this.q = this.c = '';\n    this.opt.lowercase = this.opt.lowercase || this.opt.lowercasetags;\n    this.bufferCheckPosition = this.opt.MAX_BUFFER_LENGTH;\n    this.looseCase = this.opt.lowercase ? 'toLowerCase' : 'toUpperCase';\n    this.tags = [];\n    this.closed = this.closedRoot = this.sawRoot = false;\n    this.tag = this.error = null;\n    this.strict = Boolean(this.opt.strict);\n    this.noscript = Boolean(this.opt.strict || this.opt.noscript);\n    this.state = this.S.BEGIN;\n    this.strictEntities = this.opt.strictEntities;\n    this.ENTITIES = this.strictEntities\n      ? Object.create(this.XML_ENTITIES)\n      : Object.create(this.ENTITIES);\n    this.attribList = [];\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (this.opt.xmlns) {\n      this.ns = Object.create(this.rootNS);\n    }\n\n    // mostly just for error reporting\n    this.trackPosition = this.opt.position !== false;\n    if (this.trackPosition) {\n      this.position = this.line = this.column = 0;\n    }\n    this.emit('onready');\n  }\n\n  resume(): this {\n    this.error = null;\n    return this;\n  }\n\n  close(): this | SAXParser {\n    return this.write(null);\n  }\n\n  flush(): void {\n    this.flushBuffers();\n  }\n}\n", "// loaders.gl, MIT license\n\nimport {StreamingXMLParser} from './streaming-xml-parser';\nimport {XMLParser as FastXMLParser} from 'fast-xml-parser';\nimport type {X2jOptions} from 'fast-xml-parser';\n\n/** Type for passing through fast-xml-parser options */\nexport type FastXMLParserOptions = Partial<X2jOptions>;\n\nexport function fastParseXML(text: string, options: FastXMLParserOptions): any {\n  const parser = new FastXMLParser({\n    ignoreAttributes: false,\n    attributeNamePrefix: '',\n    ...options\n  });\n\n  const parsedXML = parser.parse(text);\n\n  return parsedXML;\n}\n\n/**\n * @todo Build a streaming XML parser based on sax-js\n * @param text\n * @param options\n * @returns\n */\nexport function parseXMLInBatches(text: string, options = {}): any {\n  const parser = new StreamingXMLParser({\n    ...options,\n    strict: true\n  });\n\n  parser.write(text);\n  parser.close();\n\n  return parser.result;\n}\n", "// loaders.gl, MIT license\n\n/**\n * Uncapitalize first letter of a string\n * @param str\n * @returns\n */\nexport function uncapitalize(str: string): string {\n  return typeof str === 'string' ? str.charAt(0).toLowerCase() + str.slice(1) : str;\n}\n\n/**\n * Recursively uncapitalize all keys in a nested object\n * @param object\n * @returns\n */\nexport function uncapitalizeKeys(object: any): any {\n  if (Array.isArray(object)) {\n    return object.map((element) => uncapitalizeKeys(element));\n  }\n\n  if (object && typeof object === 'object') {\n    const newObject = {};\n    for (const [key, value] of Object.entries(object)) {\n      newObject[uncapitalize(key)] = uncapitalizeKeys(value);\n    }\n    return newObject;\n  }\n\n  return object;\n}\n", "import type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {SAXParserOptions} from './sax-ts/sax';\nimport {fastParseXML, FastXMLParserOptions} from './lib/parsers/parse-xml';\nimport {uncapitalizeKeys} from './lib/xml-utils/uncapitalize';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type XMLLoaderOptions = LoaderOptions & {\n  xml?: {\n    // TODO - type this harder\n    parser?: 'fast-xml-parser' | string;\n    /** XML is typically PascalCase, JavaScript prefects camelCase */\n    uncapitalizeKeys?: boolean;\n    removeNSPrefix?: boolean;\n    textNodeName?: string;\n    arrayPaths?: string[];\n  };\n  /** @deprecated Experimental, passes options to fast-xml-parser, IF it is being used */\n  _fastXML?: FastXMLParserOptions;\n  /** @deprecated Experimental, passes options to the SAX XML parser, IF it is being used. */\n  _sax?: SAXParserOptions;\n};\n\n/**\n * Loader for XML files\n */\nexport const XMLLoader = {\n  name: 'XML',\n  id: 'xml',\n  module: 'xml',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    xml: {\n      parser: 'fast-xml-parser',\n      uncapitalizeKeys: false,\n      removeNSPrefix: false,\n      textNodeName: 'value',\n      arrayPaths: []\n    }\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) =>\n    parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: XMLLoaderOptions) => parseTextSync(text, options)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n\nfunction parseTextSync(text: string, options?: XMLLoaderOptions): any {\n  const xmlOptions: Required<XMLLoaderOptions['xml']> = {...XMLLoader.options.xml, ...options?.xml};\n  switch (xmlOptions.parser) {\n    case 'fast-xml-parser':\n      const fastXMLOptions: FastXMLParserOptions = {\n        // Default FastXML options\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#allowbooleanattributes\n        allowBooleanAttributes: true,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#ignoredeclaration\n        ignoreDeclaration: true,\n\n        // XMLLoader Options: Map to FastXMLOptions\n\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#removensprefix\n        removeNSPrefix: xmlOptions.removeNSPrefix,\n\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#textnodename\n        textNodeName: xmlOptions.textNodeName,\n\n        isArray: (name: string, jpath: string, isLeafNode: boolean, isAttribute: boolean) => {\n          const array = Boolean(xmlOptions?.arrayPaths?.some((path) => jpath === path));\n          return array;\n        },\n\n        // Application overrides\n        ...options?._fastXML\n      };\n\n      const xml = fastParseXML(text, fastXMLOptions);\n\n      // Note - could be done with FastXML tag processing\n      return xmlOptions.uncapitalizeKeys ? uncapitalizeKeys(xml) : xml;\n\n    default:\n      throw new Error(options?.xml?.parser);\n  }\n}\n\nexport const _typecheckXMLLoader: LoaderWithParser = XMLLoader;\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {mergeLoaderOptions} from '@loaders.gl/loader-utils';\nimport {XMLLoader, XMLLoaderOptions} from './xml-loader';\n\nexport type HTMLLoaderOptions = XMLLoaderOptions;\n\n/**\n * Loader for HTML files\n * Essentially a copy of the XMLLoader with different mime types, file extensions and content tests.\n * This split enables applications can control whether they want HTML responses to be parsed by the XML loader or not.\n * This loader does not have any additional understanding of the structure of HTML or the document.\n */\nexport const HTMLLoader: LoaderWithParser = {\n  ...XMLLoader,\n  name: 'HTML',\n  id: 'html',\n  extensions: ['html', 'htm'],\n  mimeTypes: ['text/html'],\n  testText: testHTMLFile,\n  parse: async (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) =>\n    parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: XMLLoaderOptions) => parseTextSync(text, options)\n};\n\nfunction testHTMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<html');\n}\n\nfunction parseTextSync(text: string, options?: XMLLoaderOptions): any {\n  // fast-xml-parser can recognize HTML entities\n  // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#htmlentities\n  // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/5.Entities.md\n  options = mergeLoaderOptions(options, {\n    xml: {\n      parser: 'fast-xml-parser'\n    },\n    _fastXML: {\n      htmlEntities: true\n    }\n  });\n\n  return XMLLoader.parseTextSync(text, options);\n}\n", "// TODO - these utilities could be moved to the XML parser.\n// uncapitalizeKeys could be an XMLLoader option\n\n/**\n * Extracts a value or array and always return an array\n * Useful since XML parses to object instead of array when only a single value is provided\n */\nexport function convertXMLValueToArray(xmlValue: unknown): unknown[] {\n  if (Array.isArray(xmlValue)) {\n    return xmlValue;\n  }\n  if (xmlValue && typeof xmlValue === 'object' && xmlValue['0']) {\n    // Error this is an objectified array\n  }\n  if (xmlValue) {\n    return [xmlValue];\n  }\n  return [];\n}\n\n/**\n * Mutates a field in place, converting it to array\n * Useful since XML parses to object instead of array when only a single value is provided\n */\nexport function convertXMLFieldToArrayInPlace(xml: any, key: string): void {\n  xml[key] = convertXMLValueToArray(xml[key]);\n}\n", "// loaders.gl, MIT license\n\n// import type {XMLLoaderOptions} from '@loaders.gl/xml';\n// import {XMLLoader} from '@loaders.gl/xml';\n\n/**\n * Parses a typed data structure from raw XML for `GetDomain` response\n * @note Error handlings is fairly weak\n */\nexport function parseExceptionReport(parsedXML: any): void {\n  // const parsedXML = XMLLoader.parseTextSync(text, {\n  //   ...options,\n  //   xml: {\n  //     ...options?.xml,\n  //     removeNSPrefix: true,\n  //     uncapitalizeKeys: true\n  //   }\n  // });\n\n  const exceptionReport: any = parsedXML.exceptionReport;\n  if (!exceptionReport) {\n    return;\n  }\n  const errorMessage =\n    exceptionReport.exception?.exceptionText ||\n    exceptionReport.exception?.exceptionCode ||\n    exceptionReport.exception?.locator ||\n    'server error';\n\n  throw new Error(`Catalog Server: ${errorMessage}`);\n}\n", "// loaders.gl, MIT license\n\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {parseExceptionReport} from './parse-exception-report';\n\n// CSW:GetCapabilitiesResponse\n\n/** All capabilities of a CSW service - response to a CSW `GetCapabilities` data structure extracted from XML */\nexport type CSWCapabilities = {\n  serviceIdentification: {\n    title: string;\n    serviceTypeVersion: string;\n    serviceType: string;\n  };\n\n  serviceProvider: {\n    providerName: string;\n    providerSite: string;\n    serviceContact: {\n      individualName: string;\n      positionName: string;\n      contactInfo: {\n        address: {\n          administrativeArea: string;\n          city: string;\n          country: string;\n          deliveryPoint: string;\n          electronicMailAddress: string;\n          postalCode: string;\n        };\n        phone: {\n          voice: string;\n        };\n      };\n    };\n  };\n\n  operationsMetadata: {\n    GetCapabilities: any;\n    GetFeatureInfo: any;\n    GetTile: any;\n  };\n\n  contents: {\n    layers: {\n      abstract: string;\n      identifier: string;\n      title: string;\n      formats: string[];\n      styles: {\n        identifier: string;\n        isDefault: string;\n        title: string;\n        abstract?: string;\n      }[];\n      bounds: {\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n      };\n      tileMatrixSetLinks: {\n        tileMatrixSet: string;\n      }[];\n      tileMatrixSets: {\n        identifier: string;\n        matrixIds: {\n          identifier: string;\n          matrixHeight: number;\n          matrixWidth: number;\n          scaleDenominator: number;\n          tileWidth: number;\n          tileHeight: number;\n          topLeftCorner: {\n            lon: number;\n            lat: number;\n          };\n        }[];\n      };\n    }[];\n  };\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseCSWCapabilities(text: string, options?: XMLLoaderOptions): CSWCapabilities {\n  const parsedXML = XMLLoader.parseTextSync(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true\n    }\n  });\n\n  parseExceptionReport(parsedXML);\n\n  const xmlCapabilities: any = parsedXML.capabilities || parsedXML;\n  return xmlCapabilities;\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport type {CSWCapabilities} from './lib/parsers/csw/parse-csw-capabilities';\nimport {parseCSWCapabilities} from './lib/parsers/csw/parse-csw-capabilities';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n// parsed data type\nexport type {CSWCapabilities};\n\n/** CSW loader options */\nexport type CSWLoaderOptions = XMLLoaderOptions & {\n  csw?: {};\n};\n\n/**\n * Loader for the response to the CSW GetCapability request\n */\nexport const CSWCapabilitiesLoader = {\n  id: 'csw-capabilities',\n  name: 'CSW Capabilities',\n\n  module: 'wms',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/vnd.ogc.csw_xml', 'application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    csw: {}\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: CSWLoaderOptions) =>\n    parseCSWCapabilities(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: CSWLoaderOptions) => parseCSWCapabilities(text, options)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n\nexport const _typecheckCSWCapabilitiesLoader: LoaderWithParser = CSWCapabilitiesLoader;\n", "// loaders.gl, MIT license\n\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {parseExceptionReport} from './parse-exception-report';\n\n/** Describes the values of resource */\nexport type CSWDomain = {\n  domainValues: {\n    type: string;\n    propertyName: string;\n    values: {\n      [key: string]: unknown;\n    }[];\n  }[];\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetDomain` response\n * @note Error handlings is fairly weak\n */\nexport function parseCSWDomain(text: string, options?: XMLLoaderOptions): CSWDomain {\n  const parsedXML = XMLLoader.parseTextSync(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true,\n      arrayPaths: [\n        'GetDomainResponse.DomainValues',\n        'GetDomainResponse.DomainValues.ListOfValues.value'\n      ]\n    }\n  });\n\n  parseExceptionReport(parsedXML);\n\n  const xmlDomain: any = parsedXML.getDomainResponse;\n  for (const domainValue of xmlDomain.domainValues) {\n    // Drop the nested <listOfValues><value><value><listOfValues>  => values[]\n    domainValue.values = domainValue.listOfValues?.value;\n    delete domainValue.listOfValues;\n  }\n  return xmlDomain as CSWDomain;\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport type {CSWDomain} from './lib/parsers/csw/parse-csw-domain';\nimport {parseCSWDomain} from './lib/parsers/csw/parse-csw-domain';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type {CSWDomain};\n\nexport type CSWLoaderOptions = XMLLoaderOptions & {\n  csw?: {};\n};\n\n/**\n * Loader for the response to the CSW GetCapability request\n */\nexport const CSWDomainLoader = {\n  id: 'csw-domain',\n  name: 'CSW Domain',\n\n  module: 'wms',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/vnd.ogc.csw_xml', 'application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    csw: {}\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: CSWLoaderOptions) =>\n    parseCSWDomain(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: CSWLoaderOptions) => parseCSWDomain(text, options)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n\nexport const _typecheckCSWDomainLoader: LoaderWithParser = CSWDomainLoader;\n", "// loaders.gl, MIT license\n\nimport {XMLLoaderOptions, convertXMLFieldToArrayInPlace} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {parseExceptionReport} from './parse-exception-report';\n\nexport type CSWRecords = {\n  searchStatus: {\n    timestamp?: string;\n  };\n  searchResults: {\n    numberOfRecordsMatched: number;\n    numberOfRecordsReturned: number;\n    elementSet: string;\n    nextRecord: number;\n  };\n  records: {\n    type: string;\n    title: string;\n    abstract: string;\n    subject: string[];\n    boundingBoxes: {\n      crs: string;\n      value: [number, number, number, number];\n    }[];\n    references: {\n      value: string;\n      scheme: string;\n    }[];\n  }[];\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetRecords` response\n * @note Error handlings is fairly weak\n */\nexport function parseCSWRecords(text: string, options?: XMLLoaderOptions): CSWRecords {\n  const parsedXML = XMLLoader.parseTextSync(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true,\n      arrayPaths: []\n    },\n    _fastXML: {\n      ...options?._fastXML,\n      parseAttributeValue: true\n    }\n  });\n\n  parseExceptionReport(parsedXML);\n\n  const xmlRecords: any = parsedXML.getRecordsResponse;\n\n  // Move results to top\n  const elementSet = xmlRecords.searchResults.elementSet;\n  const recordsFieldName = `${elementSet}Record`;\n  xmlRecords.records = xmlRecords.searchResults[recordsFieldName];\n  delete xmlRecords.searchResults[recordsFieldName];\n\n  convertXMLFieldToArrayInPlace(xmlRecords, 'records');\n\n  for (const record of xmlRecords.records) {\n    record.boundingBoxes = record.boundingBox;\n    delete record.boundingBox;\n\n    convertXMLFieldToArrayInPlace(record, 'boundingBoxes');\n\n    for (const boundingBox of record.boundingBoxes) {\n      boundingBox.value = [\n        boundingBox.upperCorner[0],\n        boundingBox.upperCorner[1],\n        boundingBox.lowerCorner[0],\n        boundingBox.lowerCorner[1]\n      ];\n      delete boundingBox.upperCorner;\n      delete boundingBox.lowerCorner;\n    }\n  }\n\n  return xmlRecords as CSWRecords;\n}\n\nexport function renameXMLTags(xml: any, renameKeys: Record<string, string>): void {\n  for (const [oldKey, newKey] of Object.entries(renameKeys)) {\n    xml[newKey] = xml[oldKey];\n    delete xml[oldKey];\n  }\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport type {CSWRecords} from './lib/parsers/csw/parse-csw-records';\nimport {parseCSWRecords} from './lib/parsers/csw/parse-csw-records';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport {CSWRecords};\n\nexport type CSWLoaderOptions = XMLLoaderOptions & {\n  csw?: {};\n};\n\n/**\n * Loader for the response to the CSW GetCapability request\n */\nexport const CSWRecordsLoader: LoaderWithParser = {\n  id: 'csw-records',\n  name: 'CSW Domain',\n\n  module: 'wms',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/vnd.ogc.csw_xml', 'application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    csw: {}\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: CSWLoaderOptions) =>\n    parseCSWRecords(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: CSWLoaderOptions) => parseCSWRecords(text, options)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n", "// loaders.gl, MIT license\n\nimport {XMLLoader} from '@loaders.gl/xml';\n\n/**\n * Extract an error message from WMS error response XML\n * @param text\n * @param options\n * @returns a string with a human readable message\n */\nexport function parseWMSError(text: string, options): string {\n  const parsedXML = XMLLoader.parseTextSync?.(text, options);\n  const serviceExceptionXML =\n    parsedXML?.ServiceExceptionReport?.ServiceException ||\n    parsedXML?.['ogc:ServiceExceptionReport']?.['ogc:ServiceException'];\n  // Sigh, can be either a string or an object\n  const message =\n    typeof serviceExceptionXML === 'string'\n      ? serviceExceptionXML\n      : serviceExceptionXML.value || serviceExceptionXML.code || 'Unknown error';\n  return message;\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {parseWMSError} from './lib/parsers/wms/parse-wms-error';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type WMSLoaderOptions = LoaderOptions & {\n  wms?: {\n    /** By default the error loader will throw an error with the parsed error message */\n    throwOnError?: boolean;\n    /** Do not add any text to errors */\n    minimalErrors?: boolean;\n  };\n};\n\n/**\n * Loader for the response to the WMS GetCapability request\n */\nexport const WMSErrorLoader = {\n  id: 'wms-error',\n  name: 'WMS Error',\n\n  module: 'wms',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/vnd.ogc.se_xml', 'application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    wms: {\n      throwOnError: false\n    }\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: WMSLoaderOptions): Promise<string> =>\n    parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseSync: (arrayBuffer: ArrayBuffer, options?: WMSLoaderOptions): string =>\n    parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: WMSLoaderOptions): string => parseTextSync(text, options)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n\nfunction parseTextSync(text: string, options?: WMSLoaderOptions): string {\n  const wmsOptions: WMSLoaderOptions['wms'] = {...WMSErrorLoader.options.wms, ...options?.wms};\n  const error = parseWMSError(text, wmsOptions);\n  const message = wmsOptions.minimalErrors ? error : `WMS Service error: ${error}`;\n  if (wmsOptions.throwOnError) {\n    throw new Error(message);\n  }\n  return message;\n}\n\nexport const _typecheckWMSErrorLoader: LoaderWithParser = WMSErrorLoader;\n", "// loaders.gl, MIT license\n\n/** A single element of an array is not represented as an array in XML */\nexport function getXMLArray(xmlValue: any): any[] {\n  // Already an array, return as is\n  if (Array.isArray(xmlValue)) {\n    return xmlValue;\n  }\n  // Single value, wrap in array\n  if (xmlValue) {\n    return [xmlValue];\n  }\n  // nullish, return empty array\n  return [];\n}\n\n/** Get a list of strings from XML */\nexport function getXMLStringArray(xmlValue: any): string[] {\n  const xmlArray = getXMLArray(xmlValue);\n  if (xmlArray.length > 0 && xmlArray.every((_) => typeof _ === 'string')) {\n    return xmlArray as string[];\n  }\n  // TODO - error handling?\n  return [];\n}\n\n/** Get XML float */\nexport function getXMLFloat(xmlValue: any, defaultValue = undefined): number | undefined {\n  switch (typeof xmlValue) {\n    case 'number':\n      return xmlValue;\n    case 'string':\n      return parseFloat(xmlValue);\n    default:\n      return undefined;\n  }\n}\n\n/** Get XML integer */\nexport function getXMLInteger(xmlValue: any, defaultValue = undefined): number | undefined {\n  switch (typeof xmlValue) {\n    case 'number':\n      return xmlValue;\n    case 'string':\n      return parseInt(xmlValue, 10);\n    default:\n      return undefined;\n  }\n}\n\n/** Somewhat arbitrary boolean parsing */\nexport function getXMLBoolean(xmlValue: any): boolean {\n  switch (xmlValue) {\n    case 'true':\n      return true;\n    case 'false':\n      return false;\n    case '1':\n      return true;\n    case '0':\n      return false;\n    default:\n      return false;\n  }\n}\n", "// loaders.gl, MIT license\n\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {\n  getXMLArray,\n  getXMLStringArray,\n  getXMLInteger,\n  getXMLFloat,\n  getXMLBoolean\n} from '../xml/parse-xml-helpers';\n\n/** All capabilities of a WMS service - response to a WMS `GetCapabilities` data structure extracted from XML */\nexport type WMSCapabilities = {\n  /** Version of the WMS service */\n  version?: string; // '1.3.0' | '1.1.1' | '1.1.0' | '1.0.0'\n  /** A short name for the service */\n  name: string;\n  /** A human readable name for the service */\n  title?: string;\n  /** A more extensive description of the service */\n  abstract?: string;\n  /** A set of keywords e.g. for searching services */\n  keywords: string[];\n  /** A field of unspecified format, if present describes any access constraints required to use the service. */\n  accessConstraints?: string;\n  /** A field of unspecified format, if present describes any fees associated with the use of the service */\n  fees?: string;\n  /** If present, the max number of layers that can be rendered by the service */\n  layerLimit?: number;\n  /** If present, the widest image that can be rendered by the service */\n  maxWidth?: number;\n  /** If present, the tallest image that can be rendered by the service */\n  maxHeight?: number;\n  /** Hierarchical list of layers. */\n  layers: WMSLayer[];\n  /** A map with information about supported WMS requests. If a record is present, the request is supported by the service */\n  requests: Record<string, WMSRequest>;\n  /** Information about any exceptions that the service will report (HTTP status != 2xx) */\n  exceptions?: WMSExceptions;\n  /** Only if `options.raw`: raw untyped JSON parsed from XML. Can include information not extracted in the typed response. */\n  raw?: Record<string, unknown>;\n  /** Only if `options.xml`, the unparsed XML string can be requested */\n  xml?: string;\n};\n\n/**\n * Metadata about a layer\n * Layers inherit many properties from their parent layers, see description of individual props for details.\n * @see https://www.ogc.org/standard/wms/ 7.2.4.6\n */\nexport type WMSLayer = {\n  /** The title is a human readable name. It is mandatory on each layer. Not inherited.  */\n  title: string;\n  /** A layer is renderable if it has a name. A named parent layer will render all its sublayers. Not inherited. */\n  name?: string;\n  /** A narrative description of the map layer. */\n  abstract?: string;\n  /** A set of keywords e.g. for searching layers */\n  keywords: string[];\n  /** layer limits in unspecified CRS:84-like lng/lat, for quick access w/o CRS calculations.  Defined or inherited. */\n  geographicBoundingBox?: [min: [x: number, y: number], max: [x: number, y: number]];\n  /** Supported CRS. Either defined or inherited. */\n  crs?: string[];\n  /** Bounding boxes in specific CRS:es */\n  boundingBoxes?: WMSBoundingBox[];\n\n  // minScale: number;\n  // maxScale: number;\n  // dimensions: ?? 7.2.4.6.10\n  // MetadataURL\n  // Attribution\n  // Identifier and AuthorityURL\n  // FeatureListURL\n  // DataURL\n\n  /** any extra dimension such as time */\n  dimensions?: WMSDimension[];\n\n  /** Whether queries can be performed on the layer */\n  queryable?: boolean;\n  /** `false` if layer has significant no-data areas that the client can display as transparent. */\n  opaque?: boolean;\n  /** WMS cascading allows server to expose layers coming from other WMS servers as if they were local layers */\n  cascaded?: boolean;\n  // noSubsets: boolean\n  // fixedWith: number\n  // fixedHeight: number\n\n  /** A list of styles. @note not yet supported by WMSCapabilitiesLoader */\n  styles?: unknown[];\n\n  /** Sublayers - these inherit crs and boundingBox) if not overridden) */\n  layers?: WMSLayer[];\n};\n\n/**\n * A bounding box specifies the coordinate range for data in the layer.\n * No data is available outside the bounding box.\n */\nexport type WMSBoundingBox = {\n  /** CRS indicates the Layer CRS that applies to this bounding box. */\n  crs: string;\n  /** `[[w, s], [e, n]]`, indicates the limits of the bounding box using the axis units and order of the specified CRS. */\n  boundingBox: [min: [x: number, y: number], max: [x: number, y: number]];\n  /** Spatial horizontal resolution of data in same units as bounding box */\n  xResolution?: number;\n  /** Spatial vertical resolution of data in same units as bounding box */\n  yResolution?: number;\n};\n\n/**\n * An optional dimension that can be queried using the `name=...` parameter\n * Note that layers that have at least one dimension without `default` value\n * become unrenderable unless the dimension value is supplied to GetMap requests.\n */\nexport type WMSDimension = {\n  /** name of dimension, becomes a valid parameter key for this layer */\n  name: string;\n  /** Textual units for this dimensional axis */\n  units: string;\n  /** Unit symbol for this dimensional axis */\n  unitSymbol?: string;\n  /** Default value if no value is supplied. If dimension lacks defaultValue, requests fail if no value is supplied */\n  defaultValue?: string;\n  /** Can multiple values of the dimension be requested? */\n  multipleValues?: boolean;\n  /* Will nearest values will be substituted when out of range, if false exact values are required */\n  nearestValue?: boolean;\n  /** A special value \"current\" is supported, typically for time dimension */\n  current?: boolean;\n  /** Text content indicating available values for dimension */\n  extent: string;\n};\n\n/** Metadata about a supported WMS request  */\nexport type WMSRequest = {\n  /** MIMEtypes that can be returned by this request. */\n  mimeTypes: string[];\n};\n\nexport type WMSExceptions = {\n  /** MIME types for exception response payloads. */\n  mimeTypes: string[];\n};\n\nexport type ParseWMSCapabilitiesOptions = {\n  /** Add inherited layer information to sub layers */\n  inheritedLayerProps?: boolean;\n  /** Include the \"raw\" JSON (parsed but untyped, unprocessed XML). May contain additional fields */\n  includeRawData?: boolean;\n  /** Include the original XML document text. May contain additional information. */\n  includeXMLText?: boolean;\n  /** @deprecated Use includeRawData` */\n  raw?: boolean;\n  // xml options are passed through to xml loader\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSCapabilities(\n  xmlText: string,\n  options?: ParseWMSCapabilitiesOptions\n): WMSCapabilities {\n  const parsedXML = XMLLoader.parseTextSync(xmlText, options);\n  const xmlCapabilities: any =\n    parsedXML.WMT_MS_Capabilities || parsedXML.WMS_Capabilities || parsedXML;\n  const capabilities = extractCapabilities(xmlCapabilities);\n  // In case the processed, normalized capabilities do not contain everything,\n  // the user can get the parsed XML structure.\n  if (options?.inheritedLayerProps) {\n    // Traverse layers and inject missing props from parents\n    for (const layer of capabilities.layers) {\n      addInheritedLayerProps(layer, null);\n    }\n    // Not yet implemented\n  }\n\n  if (options?.includeRawData || options?.raw) {\n    capabilities.raw = xmlCapabilities;\n  }\n\n  if (options?.includeXMLText) {\n    capabilities.xml = xmlText;\n  }\n\n  return capabilities;\n}\n\n/** Extract typed capability data from XML */\nfunction extractCapabilities(xml: any): WMSCapabilities {\n  const capabilities: WMSCapabilities = {\n    version: String(xml.version || ''),\n    name: String(xml.Service?.Name || 'unnamed'),\n    title: xml.Service?.Title ? String(xml.Service?.Title) : undefined,\n    abstract: xml.Service?.Abstract ? String(xml.Service?.Abstract) : undefined,\n    keywords: getXMLStringArray(xml.Service?.KeywordList?.Keyword),\n    fees: xml.Service?.Fees ? JSON.stringify(xml.Service?.Fees) : undefined,\n    accessConstraints: xml.Service?.AccessConstraints\n      ? JSON.stringify(xml.Service?.AccessConstraints)\n      : undefined,\n    layerLimit: getXMLInteger(xml.Service?.LayerLimit),\n    maxWidth: getXMLInteger(xml.Service?.maxWidth),\n    maxHeight: getXMLInteger(xml.Service?.maxHeight),\n    layers: [],\n    requests: extractRequests(xml.Capability?.Request),\n    exceptions: extractExceptions(xml.Exception)\n    // contact field is a mess of largely irrelevant information, put it last\n    // contact: xml.Service?.Contact ? JSON.stringify(xml.Service?.Contact) : undefined,\n  };\n\n  // LAYERS\n  const xmlLayers = getXMLArray(xml.Capability?.Layer);\n  for (const xmlSubLayer of xmlLayers) {\n    capabilities.layers.push(extractLayer(xmlSubLayer));\n  }\n\n  // Clean up object\n  for (const [key, value] of Object.entries(capabilities)) {\n    if (value === undefined) {\n      delete capabilities[key];\n    }\n  }\n\n  return capabilities;\n}\n\n/** Extract typed request metadata from XML requests field */\nfunction extractRequests(xmlRequests: any): Record<string, WMSRequest> {\n  const requests: Record<string, WMSRequest> = {};\n  for (const [name, xmlRequest] of Object.entries(xmlRequests || {}) as any) {\n    const mimeTypes = getXMLStringArray(xmlRequest?.Format);\n    requests[name] = {mimeTypes};\n  }\n  return requests;\n}\n\nfunction extractExceptions(xmlException: any): WMSExceptions | undefined {\n  const xmlExceptionFormats = getXMLArray(xmlException?.Format);\n  if (xmlExceptionFormats.length > 0) {\n    return {\n      mimeTypes: getXMLStringArray(xmlException)\n    };\n  }\n  return undefined;\n}\n\n/** Extract request data */\n// eslint-disable-next-line complexity, max-statements\nfunction extractLayer(xmlLayer: any): WMSLayer {\n  const layer: WMSLayer = {\n    // All layers must have a title\n    title: String(xmlLayer?.Title || ''),\n    // Name is required only if renderable\n    name: xmlLayer?.Name && String(xmlLayer?.Name),\n    abstract: xmlLayer?.Name && String(xmlLayer?.Abstract),\n    keywords: getXMLStringArray(xmlLayer.KeywordList?.Keyword)\n  };\n\n  // WMS 1.3.0 changes SRS to CRS\n  const crs = xmlLayer?.CRS || xmlLayer?.SRS;\n  if (crs && Array.isArray(crs) && crs.every((_) => typeof _ === 'string')) {\n    layer.crs = crs;\n  }\n\n  // v1.3.0 extract simple geographic bounding box\n  let geographicBoundingBox =\n    xmlLayer?.EX_GeographicBoundingBox && extractEXBoundingBox(xmlLayer?.EX_GeographicBoundingBox);\n  if (geographicBoundingBox) {\n    layer.geographicBoundingBox = geographicBoundingBox;\n  }\n\n  // v1.1.1 extract simple geographic bounding box\n  geographicBoundingBox =\n    xmlLayer?.LatLonBoundingBox && extractLatLonBoundingBox(xmlLayer?.LatLonBoundingBox);\n  if (geographicBoundingBox) {\n    layer.geographicBoundingBox = geographicBoundingBox;\n  }\n\n  // Extract per-CRS bounding boxes\n  const boundingBoxes = xmlLayer?.BoundingBox && extractWMSBoundingBoxes(xmlLayer?.BoundingBox);\n  if (boundingBoxes && boundingBoxes.length > 0) {\n    layer.boundingBoxes = boundingBoxes;\n  }\n\n  // Extract dimensions\n  const xmlDimensions = getXMLArray(xmlLayer?.Dimension);\n  const dimensions = xmlDimensions.map((xml) => extractDimension(xml));\n  if (dimensions.length) {\n    layer.dimensions = dimensions;\n  }\n\n  if (xmlLayer?.opaque) {\n    layer.opaque = getXMLBoolean(xmlLayer?.opaque);\n  }\n  if (xmlLayer?.cascaded) {\n    layer.cascaded = getXMLBoolean(xmlLayer?.cascaded);\n  }\n  if (xmlLayer?.queryable) {\n    layer.queryable = getXMLBoolean(xmlLayer?.queryable);\n  }\n\n  // Single layer is not represented as array in XML\n  const xmlLayers = getXMLArray(xmlLayer?.Layer);\n  const layers: WMSLayer[] = [];\n\n  for (const xmlSubLayer of xmlLayers) {\n    layers.push(extractLayer(xmlSubLayer));\n  }\n\n  if (layers.length > 0) {\n    layer.layers = layers;\n  }\n\n  // Clean up object\n  for (const [key, value] of Object.entries(layer)) {\n    if (value === undefined) {\n      delete layer[key];\n    }\n  }\n\n  return layer;\n}\n\n/** WMS 1.3.0 Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractEXBoundingBox(xmlBoundingBox: any): [[number, number], [number, number]] {\n  const {\n    westBoundLongitude: w,\n    northBoundLatitude: n,\n    eastBoundLongitude: e,\n    southBoundLatitude: s\n  } = xmlBoundingBox;\n  return [\n    [w, s],\n    [e, n]\n  ];\n}\n\n/** WMS 1.1.1 Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractLatLonBoundingBox(xmlBoundingBox: any): [[number, number], [number, number]] {\n  const {minx, miny, maxx, maxy} = xmlBoundingBox;\n  return [\n    [minx, miny],\n    [maxx, maxy]\n  ];\n}\n\n/** Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractWMSBoundingBoxes(xmlBoundingBoxes: any): WMSBoundingBox[] {\n  const xmlBoxes = getXMLArray(xmlBoundingBoxes);\n  return xmlBoxes.map((xmlBox) => extractWMSBoundingBox(xmlBox));\n}\n\n/** Loosely defined geospatial bounding box in unspecified CRS for quick content searches */\nfunction extractWMSBoundingBox(xmlBoundingBox: any): WMSBoundingBox {\n  const {CRS, SRS, minx, miny, maxx, maxy, resx, resy} = xmlBoundingBox;\n  const boundingBox: WMSBoundingBox = {\n    // CRS in 1.3.0, SRS in 1.1.1\n    crs: CRS || SRS,\n    boundingBox: [\n      [getXMLFloat(minx) as number, getXMLFloat(miny) as number],\n      [getXMLFloat(maxx) as number, getXMLFloat(maxy) as number]\n    ]\n  };\n  if (resx) {\n    boundingBox.xResolution = resx;\n  }\n  if (resy) {\n    boundingBox.yResolution = resy;\n  }\n  return boundingBox;\n}\n\n/**\n * Extracts optional WMS Dimension layer field\n * @param xmlDimension\n * @example <Dimension name=\"time\" units=\"ISO8601\" default=\"2018-01-01\" nearestValue=\"0\">2001-01-01/2018-01-01/P1Y</Dimension>\n * @see https://mapserver.org/ogc/wms_dimension.html\n */\nfunction extractDimension(xmlDimension: any): WMSDimension {\n  const {name, units, value: extent} = xmlDimension;\n\n  const dimension: WMSDimension = {name, units, extent};\n\n  if (xmlDimension.unitSymbol) {\n    dimension.unitSymbol = xmlDimension.unitSymbol;\n  }\n  if (xmlDimension.default) {\n    dimension.defaultValue = xmlDimension.default;\n  }\n  if (xmlDimension.multipleValues) {\n    dimension.multipleValues = getXMLBoolean(xmlDimension.multipleValues);\n  }\n  if (xmlDimension.nearestValue) {\n    dimension.nearestValue = getXMLBoolean(xmlDimension.nearestValue);\n  }\n  if (xmlDimension.current) {\n    dimension.current = getXMLBoolean(xmlDimension.current);\n  }\n\n  return dimension;\n}\n\n/** Traverse layers and inject missing props from parents */\n// eslint-disable-next-line complexity\nfunction addInheritedLayerProps(layer: WMSLayer, parent: WMSLayer | null): void {\n  if (parent?.geographicBoundingBox && !layer.geographicBoundingBox) {\n    layer.geographicBoundingBox = [...parent.geographicBoundingBox];\n  }\n\n  if (parent?.crs && !layer.crs) {\n    layer.crs = [...parent.crs];\n  }\n\n  if (parent?.boundingBoxes && !layer.boundingBoxes) {\n    layer.boundingBoxes = [...parent.boundingBoxes];\n  }\n\n  if (parent?.dimensions && !layer.dimensions) {\n    layer.dimensions = [...parent.dimensions];\n  }\n\n  for (const subLayer of layer.layers || []) {\n    addInheritedLayerProps(subLayer, layer);\n  }\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {parseWMSCapabilities} from './lib/parsers/wms/parse-wms-capabilities';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n// Parsed data types\nexport type {\n  WMSCapabilities,\n  WMSLayer,\n  WMSBoundingBox,\n  WMSDimension,\n  WMSRequest,\n  WMSExceptions\n} from './lib/parsers/wms/parse-wms-capabilities';\n\nexport type WMSCapabilitiesLoaderOptions = XMLLoaderOptions & {\n  wms?: {\n    /** Add inherited layer information to sub layers */\n    inheritedLayerProps?: boolean;\n    /** Include the \"raw\" JSON (parsed but untyped, unprocessed XML). May contain additional fields */\n    includeRawData?: boolean;\n    /** Include the original XML document text. May contain additional information. */\n    includeXMLText?: boolean;\n    /** @deprecated Use options.includeRawData` */\n    raw?: boolean;\n  };\n};\n\n/**\n * Loader for the response to the WMS GetCapability request\n */\nexport const WMSCapabilitiesLoader = {\n  id: 'wms-capabilities',\n  name: 'WMS Capabilities',\n\n  module: 'wms',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/vnd.ogc.wms_xml', 'application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    wms: {}\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: WMSCapabilitiesLoaderOptions) =>\n    // TODO pass in XML options\n    parseWMSCapabilities(new TextDecoder().decode(arrayBuffer), options?.wms),\n  parseTextSync: (text: string, options?: WMSCapabilitiesLoaderOptions) =>\n    // TODO pass in XML options\n    parseWMSCapabilities(text, options?.wms)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n\nexport const _typecheckWMSCapabilitiesLoader: LoaderWithParser = WMSCapabilitiesLoader;\n", "// loaders.gl, MIT license\n\nimport {XMLLoader} from '@loaders.gl/xml';\n\n/** WMS Feature info - response to a WMS `GetFeatureInfo` request */\nexport type WMSFeatureInfo = {\n  features: WMSFeature[];\n};\n\nexport type WMSFeature = {\n  attributes: Record<string, number | string>;\n  type: string;\n  bounds: {top: number; bottom: number; left: number; right: number};\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSFeatureInfo(text: string, options): WMSFeatureInfo {\n  const parsedXML = XMLLoader.parseTextSync(text, options);\n  const xmlFeatureInfo: any = parsedXML.FeatureInfoResponse?.FIELDS || [];\n\n  const xmlFeatures = Array.isArray(xmlFeatureInfo) ? xmlFeatureInfo : [xmlFeatureInfo];\n\n  return {\n    features: xmlFeatures.map((xmlFeature) => extractFeature(xmlFeature))\n  };\n}\n\nfunction extractFeature(xmlFeature: any) {\n  const xmlFields = xmlFeature || {};\n  // TODO - not correct\n  return {\n    attributes: xmlFields,\n    type: '',\n    bounds: {bottom: 0, top: 0, left: 0, right: 0}\n  };\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {WMSCapabilitiesLoader} from '../wms-capabilities-loader';\n\nimport type {WMSFeatureInfo} from '../lib/parsers/wms/parse-wms-features';\nimport {parseWMSFeatureInfo} from '../lib/parsers/wms/parse-wms-features';\n\nexport {WMSFeatureInfo};\n\n/**\n * Loader for the response to the WMS GetFeatureInfo request\n */\nexport const WMSFeatureInfoLoader = {\n  ...WMSCapabilitiesLoader,\n\n  id: 'wms-feature-info',\n  name: 'WMS FeatureInfo',\n\n  parse: async (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) =>\n    parseWMSFeatureInfo(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: XMLLoaderOptions) => parseWMSFeatureInfo(text, options)\n};\n\nexport const _typecheckWMSFeatureInfoLoader: LoaderWithParser = WMSFeatureInfoLoader;\n", "// loaders.gl, MIT license\n\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\n\n/** Layer description - response to a WMS `DescribeLayer` request  */\nexport type WMSLayerDescription = {\n  layers: {}[];\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetFeatureInfo` response\n * @note Error handlings is fairly weak\n */\nexport function parseWMSLayerDescription(\n  text: string,\n  options?: XMLLoaderOptions\n): WMSLayerDescription {\n  const parsedXML = XMLLoader.parseTextSync?.(text, options);\n  // TODO - implement parser\n  return parsedXML as unknown as WMSLayerDescription;\n}\n", "// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {WMSCapabilitiesLoader} from '../wms-capabilities-loader';\n\nimport type {WMSLayerDescription} from '../lib/parsers/wms/parse-wms-layer-description';\nimport {parseWMSLayerDescription} from '../lib/parsers/wms/parse-wms-layer-description';\n\nexport {WMSLayerDescription};\n\n/**\n * Loader for the response to the WMS DescribeLayer request\n */\nexport const WMSLayerDescriptionLoader = {\n  ...WMSCapabilitiesLoader,\n\n  id: 'wms-layer-description',\n  name: 'WMS DescribeLayer',\n\n  parse: async (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) =>\n    parseWMSLayerDescription(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: XMLLoaderOptions) => parseWMSLayerDescription(text, options)\n};\n\nexport const _typecheckWMSFeatureInfoLoader: LoaderWithParser = WMSLayerDescriptionLoader;\n", "// https://github.com/nodejs/node/commit/c1d82ac2ff15594840e2a1b9531b506ae067ed27;\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** @todo replace this ridiculous choice of deepStrictEqual */\n// eslint-disable-next-line complexity\nexport function deepStrictEqual(actual: unknown, expected: unknown, strict?: boolean) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n    // } else if (actual instanceof Buffer && expected instanceof Buffer) {\n    //   return compare(actual, expected) === 0;\n\n    // // 7.2. If the expected value is a Date object, the actual value is\n    // // equivalent if it is also a Date object that refers to the same time.\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n    // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (actual instanceof RegExp && expected instanceof RegExp) {\n    return (\n      actual.source === expected.source &&\n      actual.global === expected.global &&\n      actual.multiline === expected.multiline &&\n      actual.lastIndex === expected.lastIndex &&\n      actual.ignoreCase === expected.ignoreCase\n    );\n\n    // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if (\n    (actual === null || typeof actual !== 'object') &&\n    (expected === null || typeof expected !== 'object')\n  ) {\n    // eslint-disable-next-line eqeqeq\n    return strict ? actual === expected : actual == expected;\n\n    // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  }\n  return objEquiv(actual, expected, strict);\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst pSlice = Array.prototype.slice;\n\nfunction isPrimitive(arg) {\n  return arg === null || (typeof arg !== 'object' && typeof arg !== 'function');\n}\n\nfunction isArguments(object) {\n  // eslint-disable-next-line eqeqeq\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\n// eslint-disable-next-line complexity\nfunction objEquiv(a: unknown, b: unknown, strict) {\n  if (a === null || a === undefined || b === null || b === undefined) return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  const aIsArgs = isArguments(a);\n  const bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs)) return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepStrictEqual(a, b, strict);\n  }\n  const ka = Object.keys(a);\n  const kb = Object.keys(b);\n  let key;\n  let i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length) return false;\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  }\n  // equivalent values for every corresponding key, and\n  // ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepStrictEqual(a[key], b[key], strict)) return false;\n  }\n  return true;\n}\n", "/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n", "// loaders.gl, MIT license\n\nimport type {LoaderOptions} from '@loaders.gl/loader-utils';\n\nexport type DataSourceProps = {\n  /** LoaderOptions provide an option to override `fetch`. Will also be passed to any sub loaders */\n  loadOptions?: LoaderOptions;\n};\n\n/** base class of all data sources */\nexport abstract class DataSource<PropsT extends DataSourceProps> {\n  /** A resolved fetch function extracted from loadOptions prop */\n  fetch: (url: string, options?: RequestInit) => Promise<Response>;\n  /** The actual load options, if calling a loaders.gl loader */\n  loadOptions: LoaderOptions;\n  _needsRefresh: boolean = true;\n\n  props: PropsT;\n\n  constructor(props: PropsT) {\n    this.props = {...props};\n    this.loadOptions = {...props.loadOptions};\n    this.fetch = getFetchFunction(this.loadOptions);\n  }\n\n  setProps(props: PropsT) {\n    this.props = Object.assign(this.props, props);\n    // TODO - add a shallow compare to avoid setting refresh if no change?\n    this.setNeedsRefresh();\n  }\n\n  /** Mark this data source as needing a refresh (redraw) */\n  setNeedsRefresh(): void {\n    this._needsRefresh = true;\n  }\n\n  /**\n   * Does this data source need refreshing?\n   * @note The specifics of the refresh mechanism depends on type of data source\n   */\n  getNeedsRefresh(clear: boolean = true) {\n    const needsRefresh = this._needsRefresh;\n    if (clear) {\n      this._needsRefresh = false;\n    }\n    return needsRefresh;\n  }\n}\n\n/**\n * Gets the current fetch function from options\n * @todo - move to loader-utils module\n * @todo - use in core module counterpart\n * @param options\n * @param context\n */\nexport function getFetchFunction(options?: LoaderOptions) {\n  const fetchFunction = options?.fetch;\n\n  // options.fetch can be a function\n  if (fetchFunction && typeof fetchFunction === 'function') {\n    return (url: string, fetchOptions?: RequestInit) => fetchFunction(url, fetchOptions);\n  }\n\n  // options.fetch can be an options object, use global fetch with those options\n  const fetchOptions = options?.fetch;\n  if (fetchOptions && typeof fetchOptions !== 'function') {\n    return (url) => fetch(url, fetchOptions);\n  }\n\n  // else return the global fetch function\n  return (url) => fetch(url);\n}\n", "// loaders.gl, MIT license\n\nimport type {ImageType} from '@loaders.gl/images';\nimport type {DataSourceProps} from './data-source';\nimport {DataSource} from './data-source';\n\n/**\n * Normalized capabilities of an Image service\n * @example\n *  The WMSService will normalize the response to the WMS `GetCapabilities`\n *  data structure extracted from WMS XML response into an ImageSourceMetadata.\n */\nexport type ImageSourceMetadata = {\n  name: string;\n  title?: string;\n  abstract?: string;\n  keywords: string[];\n  layers: ImageSourceLayer[];\n};\n\n/** Description of one data layer in the image source */\nexport type ImageSourceLayer = {\n  /** Name of this layer */\n  name?: string;\n  /** Human readable title of this layer */\n  title?: string;\n  /** Coordinate systems supported by this layer */\n  crs?: string[];\n  /** layer limits in unspecified CRS:84-like lng/lat, for quick access w/o CRS calculations. */\n  geographicBoundingBox?: [min: [x: number, y: number], max: [x: number, y: number]];\n  /** Sub layers of this layer */\n  layers?: ImageSourceLayer[];\n\n  /** @deprecated from v3.4: non-vis.gl style bounding box. Use `.geographicBoundingBox` instead */\n  boundingBox?: [number, number, number, number];\n};\n\n/** Generic parameters for requesting an image from an image source */\nexport type GetImageParameters = {\n  /** Layers to render */\n  layers: string | string[];\n  /** Styling */\n  styles?: unknown;\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** crs for the image (not the bounding box) */\n  crs?: string;\n  /** requested format for the return image */\n  format?: 'image/png';\n};\n\n// Attempt to break down GetImageParameters\nexport type ImageFilters = {\n  /** Layers to render */\n  layers: string | string[];\n  /** Styling */\n  styles?: unknown;\n};\n\nexport type ImageRegion = {\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n};\n\nexport type ImageFormat = {\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** crs for the image (not the bounding box) */\n  crs?: string;\n  /** requested format for the return image */\n  format?: 'image/png';\n};\n\nexport type ImageSourceProps = DataSourceProps;\n\n/**\n * MapImageSource - data sources that allow data to be queried by (geospatial) extents\n * @note\n * - If geospatial, bounding box is expected to be in web mercator coordinates\n */\nexport abstract class ImageSource<\n  PropsT extends ImageSourceProps = ImageSourceProps\n> extends DataSource<PropsT> {\n  abstract getMetadata(): Promise<ImageSourceMetadata>;\n  abstract getImage(parameters: GetImageParameters): Promise<ImageType>;\n}\n", "// loaders.gl, MIT license\n\nimport {LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {ImageType} from '@loaders.gl/images';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport type {ImageSourceMetadata, GetImageParameters} from '../../sources/image-source';\nimport {ImageSource} from '../../sources/image-source';\n\n/** Template URL string should contain `${width}` etc which will be substituted. */\nexport type ImageServiceProps = {\n  /** Base URL to the service */\n  url: string;\n  /** Any load options to the loaders.gl Loaders used by the WMSService methods */\n  loadOptions?: LoaderOptions;\n};\n\n/**\n * Quickly connect to \"ad hoc\" image sources without subclassing ImageSource.\n * ImageSource allows template url strings to be used to ad hoc connect to arbitrary image data sources\n * Accepts a template url string and builds requests URLs\n */\nexport class ImageService<PropsT extends ImageServiceProps> extends ImageSource<PropsT> {\n  static type: 'template' = 'template';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('{');\n\n  constructor(props: PropsT) {\n    super(props);\n  }\n\n  // IMAGE SOURCE API\n\n  async getMetadata(): Promise<ImageSourceMetadata> {\n    throw new Error('ImageSource.getMetadata not implemented');\n  }\n\n  async getImage(parameters: GetImageParameters): Promise<ImageType> {\n    const granularParameters = this.getGranularParameters(parameters);\n    const url = this.getURLFromTemplate(granularParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    return await ImageLoader.parse(arrayBuffer);\n  }\n\n  // HELPERS\n\n  /** Break up bounding box in east, north, south, west */\n  protected getGranularParameters(parameters: GetImageParameters): Record<string, unknown> {\n    const [east, north, west, south] = parameters.bbox;\n    return {...parameters, east, north, south, west};\n  }\n\n  /** Supports both ${} and {} notations */\n  protected getURLFromTemplate(parameters: Record<string, unknown>): string {\n    let url = this.props.url;\n    for (const [key, value] of Object.entries(parameters)) {\n      // TODO - parameter could be repeated\n      // const regex = new RegExp(`\\${${key}}`, 'g');\n      url = url.replace(`\\${${key}}`, String(value));\n      url = url.replace(`{${key}}`, String(value));\n    }\n    return url;\n  }\n}\n", "// loaders.gl, MIT license\n\n/* eslint-disable camelcase */\nimport type {ImageType} from '@loaders.gl/images';\nimport {ImageLoader} from '@loaders.gl/images';\nimport {mergeLoaderOptions} from '@loaders.gl/loader-utils';\n\nimport type {ImageSourceMetadata, GetImageParameters} from '../../sources/image-source';\nimport type {ImageSourceProps} from '../../sources/image-source';\nimport {ImageSource} from '../../sources/image-source';\n\nimport type {WMSCapabilities} from '../../../wms-capabilities-loader';\nimport type {WMSFeatureInfo} from '../../../wip/wms-feature-info-loader';\nimport type {WMSLayerDescription} from '../../../wip/wms-layer-description-loader';\n\nimport {WMSCapabilitiesLoader} from '../../../wms-capabilities-loader';\nimport {WMSFeatureInfoLoader} from '../../../wip/wms-feature-info-loader';\nimport {WMSLayerDescriptionLoader} from '../../../wip/wms-layer-description-loader';\n\nimport type {WMSLoaderOptions} from '../../../wms-error-loader';\nimport {WMSErrorLoader} from '../../../wms-error-loader';\n\n/**\n * \"Static\" WMS parameters (not viewport or selected pixel dependent)\n * These can be provided as defaults in the WMSService constructor\n */\nexport type WMSParameters = {\n  /** WMS version (all requests) */\n  version?: '1.3.0' | '1.1.1';\n  /** Layers to render (GetMap, GetFeatureInfo) */\n  layers?: string[];\n  /** list of layers to query.. (GetFeatureInfo) */\n  query_layers?: string[];\n\n  /** Coordinate Reference System (CRS) for the image (not the bounding box) */\n  crs?: string;\n  /** Requested format for the return image (GetMap, GetLegendGraphic) */\n  format?: 'image/png';\n  /** Requested MIME type of returned feature info (GetFeatureInfo) */\n  info_format?: 'text/plain' | 'application/geojson' | 'application/vnd.ogc.gml';\n  /** Styling - Not yet supported */\n  styles?: unknown;\n  /** Any additional parameters specific to this WMSService (GetMap) */\n  transparent?: boolean;\n  /** If layer supports time dimension */\n  time?: string;\n  /** If layer supports elevation dimension */\n  elevation?: string;\n};\n\n/** Parameters for GetCapabilities */\nexport type WMSGetCapabilitiesParameters = {\n  /** In case the endpoint supports multiple WMS versions */\n  version?: '1.3.0' | '1.1.1';\n};\n\n/** Parameters for GetMap */\nexport type WMSGetMapParameters = {\n  /** In case the endpoint supports multiple WMS versions */\n  version?: '1.3.0' | '1.1.1';\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** requested format for the return image. can be provided in service constructor */\n  format?: 'image/png';\n  /** Layers to render - can be provided in service constructor */\n  layers?: string | string[];\n  /** Coordinate Reference System for the image (not bounding box). can be provided in service constructor. */\n  crs?: string;\n  /** Styling. can be provided in service constructor */\n  styles?: unknown;\n  /** Don't render background when no data. can be provided in service constructor */\n  transparent?: boolean;\n  /** If layer supports time dimension */\n  time?: string;\n  /** If layer supports elevation dimension */\n  elevation?: string;\n};\n\n/** GetMap parameters that are specific to the current view */\nexport type WMSGetMapViewParameters = {\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** Coordinate Reference System for the image (not bounding box). can be provided in service constructor. */\n  crs?: string;\n};\n\n/**\n * Parameters for GetFeatureInfo\n * @see https://imagery.pasda.psu.edu/arcgis/services/pasda/UrbanTreeCanopy_Landcover/MapServer/WmsServer?SERVICE=WMS&\n */\nexport type WMSGetFeatureInfoParameters = {\n  /** In case the endpoint supports multiple WMS versions */\n  version?: '1.3.0' | '1.1.1';\n  /** x coordinate for the feature info request */\n  x: number;\n  /** y coordinate for the feature info request */\n  y: number;\n  /** MIME type of returned feature info. Can be specified in service constructor */\n  info_format?: 'text/plain' | 'application/geojson' | 'application/vnd.ogc.gml';\n  /** list of layers to query. Required but can be specified in service constructor. */\n  query_layers?: string[];\n  /** Layers to render. Required, but can be specified in service constructor */\n  layers?: string[];\n  /** Styling */\n  styles?: unknown;\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** srs for the image (not the bounding box) */\n  crs?: string;\n};\n\n/** GetMap parameters that are specific to the current view */\nexport type WMSGetFeatureInfoViewParameters = {\n  /** x coordinate for the feature info request */\n  x: number;\n  /** y coordinate for the feature info request */\n  y: number;\n  /** pixel width of returned image */\n  width: number;\n  /** pixels */\n  height: number;\n  /** bounding box of the requested map image */\n  bbox: [number, number, number, number];\n  /** srs for the image (not the bounding box) */\n  crs?: string;\n};\n\n/** Parameters for DescribeLayer */\nexport type WMSDescribeLayerParameters = {\n  /** In case the endpoint supports multiple WMS versions */\n  version?: '1.3.0' | '1.1.1';\n};\n\n/** Parameters for GetLegendGraphic */\nexport type WMSGetLegendGraphicParameters = {\n  /** In case the endpoint supports multiple WMS versions */\n  version?: '1.3.0' | '1.1.1';\n};\n\n//\n\n/** Properties for creating a enw WMS service */\nexport type WMSServiceProps = ImageSourceProps & {\n  /** Base URL to the service */\n  url: string;\n  /** In 1.3.0, replaces references to EPSG:4326 with CRS:84 */\n  substituteCRS84?: boolean;\n\n  /** Default WMS parameters. If not provided here, must be provided in the various request */\n  wmsParameters?: WMSParameters;\n  /** Any additional service specific parameters */\n  vendorParameters?: Record<string, unknown>;\n};\n\n/**\n * The WMSService class provides\n * - provides type safe methods to form URLs to a WMS service\n * - provides type safe methods to query and parse results (and errors) from a WMS service\n * - implements the ImageService interface\n * @note Only the URL parameter conversion is supported. XML posts are not supported.\n */\nexport class WMSService extends ImageSource<WMSServiceProps> {\n  static type: 'wms' = 'wms';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('wms');\n\n  /** Base URL to the service */\n  readonly url: string;\n\n  /** In WMS 1.3.0, replaces references to EPSG:4326 with CRS:84. But not always supported. Default: false */\n  substituteCRS84: boolean;\n  /** In WMS 1.3.0, flips x,y (lng, lat) coordinates for the supplied coordinate systems. Default: ['ESPG:4326'] */\n  flipCRS: string[];\n\n  /** Default static WMS parameters */\n  wmsParameters: Required<WMSParameters>;\n  /** Default static vendor parameters */\n  vendorParameters?: Record<string, unknown>;\n\n  capabilities: WMSCapabilities | null = null;\n\n  /** A list of loaders used by the WMSService methods */\n  readonly loaders = [\n    ImageLoader,\n    WMSErrorLoader,\n    WMSCapabilitiesLoader,\n    WMSFeatureInfoLoader,\n    WMSLayerDescriptionLoader\n  ];\n\n  /** Create a WMSService */\n  constructor(props: WMSServiceProps) {\n    super(props);\n\n    // TODO - defaults such as version, layers etc could be extracted from a base URL with parameters\n    // This would make pasting in any WMS URL more likely to make this class just work.\n    // const {baseUrl, parameters} = this._parseWMSUrl(props.url);\n\n    this.url = props.url;\n\n    this.substituteCRS84 = props.substituteCRS84 ?? false;\n    this.flipCRS = ['EPSG:4326'];\n\n    this.wmsParameters = {\n      layers: undefined!,\n      query_layers: undefined!,\n      styles: undefined,\n      version: '1.3.0',\n      crs: 'EPSG:4326',\n      format: 'image/png',\n      info_format: 'text/plain',\n      transparent: undefined!,\n      time: undefined!,\n      elevation: undefined!,\n      ...props.wmsParameters\n    };\n\n    this.vendorParameters = props.vendorParameters || {};\n  }\n\n  // ImageSource implementation\n  async getMetadata(): Promise<ImageSourceMetadata> {\n    const capabilities = await this.getCapabilities();\n    return this.normalizeMetadata(capabilities);\n  }\n\n  async getImage(parameters: GetImageParameters): Promise<ImageType> {\n    return await this.getMap(parameters);\n  }\n\n  normalizeMetadata(capabilities: WMSCapabilities): ImageSourceMetadata {\n    return capabilities;\n  }\n\n  // WMS Service API Stubs\n\n  /** Get Capabilities */\n  async getCapabilities(\n    wmsParameters?: WMSGetCapabilitiesParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<WMSCapabilities> {\n    const url = this.getCapabilitiesURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    const capabilities = await WMSCapabilitiesLoader.parse(arrayBuffer, this.loadOptions);\n    this.capabilities = capabilities;\n    return capabilities;\n  }\n\n  /** Get a map image */\n  async getMap(\n    wmsParameters: WMSGetMapParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<ImageType> {\n    const url = this.getMapURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    try {\n      return await ImageLoader.parse(arrayBuffer, this.loadOptions);\n    } catch {\n      throw this._parseError(arrayBuffer);\n    }\n  }\n\n  /** Get Feature Info for a coordinate */\n  async getFeatureInfo(\n    wmsParameters: WMSGetFeatureInfoParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<WMSFeatureInfo> {\n    const url = this.getFeatureInfoURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return await WMSFeatureInfoLoader.parse(arrayBuffer, this.loadOptions);\n  }\n\n  /** Get Feature Info for a coordinate */\n  async getFeatureInfoText(\n    wmsParameters: WMSGetFeatureInfoParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<string> {\n    const url = this.getFeatureInfoURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return new TextDecoder().decode(arrayBuffer);\n  }\n\n  /** Get more information about a layer */\n  async describeLayer(\n    wmsParameters: WMSDescribeLayerParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<WMSLayerDescription> {\n    const url = this.describeLayerURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return await WMSLayerDescriptionLoader.parse(arrayBuffer, this.loadOptions);\n  }\n\n  /** Get an image with a semantic legend */\n  async getLegendGraphic(\n    wmsParameters: WMSGetLegendGraphicParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<ImageType> {\n    const url = this.getLegendGraphicURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    try {\n      return await ImageLoader.parse(arrayBuffer, this.loadOptions);\n    } catch {\n      throw this._parseError(arrayBuffer);\n    }\n  }\n\n  // Typed URL creators\n  // For applications that want full control of fetching and parsing\n\n  /** Generate a URL for the GetCapabilities request */\n  getCapabilitiesURL(\n    wmsParameters?: WMSGetCapabilitiesParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetCapabilitiesParameters> = {\n      version: this.wmsParameters.version,\n      ...wmsParameters\n    };\n    return this._getWMSUrl('GetCapabilities', options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetMap request */\n  getMapURL(\n    wmsParameters: WMSGetMapParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    wmsParameters = this._getWMS130Parameters(wmsParameters);\n    const options: Required<WMSGetMapParameters> = {\n      version: this.wmsParameters.version,\n      format: this.wmsParameters.format,\n      transparent: this.wmsParameters.transparent,\n      time: this.wmsParameters.time,\n      elevation: this.wmsParameters.elevation,\n      layers: this.wmsParameters.layers,\n      styles: this.wmsParameters.styles,\n      crs: this.wmsParameters.crs,\n      // bbox: [-77.87304, 40.78975, -77.85828, 40.80228],\n      // width: 1200,\n      // height: 900,\n      ...wmsParameters\n    };\n    return this._getWMSUrl('GetMap', options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetFeatureInfo request */\n  getFeatureInfoURL(\n    wmsParameters: WMSGetFeatureInfoParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetFeatureInfoParameters> = {\n      version: this.wmsParameters.version,\n      // query_layers: [],\n      // format: this.wmsParameters.format,\n      info_format: this.wmsParameters.info_format,\n      layers: this.wmsParameters.layers,\n      query_layers: this.wmsParameters.query_layers,\n      styles: this.wmsParameters.styles,\n      crs: this.wmsParameters.crs,\n      // bbox: [-77.87304, 40.78975, -77.85828, 40.80228],\n      // width: 1200,\n      // height: 900,\n      // x: undefined!,\n      // y: undefined!,\n      ...wmsParameters\n    };\n    return this._getWMSUrl('GetFeatureInfo', options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetFeatureInfo request */\n  describeLayerURL(\n    wmsParameters: WMSDescribeLayerParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSDescribeLayerParameters> = {\n      version: this.wmsParameters.version,\n      ...wmsParameters\n    };\n    return this._getWMSUrl('DescribeLayer', options, vendorParameters);\n  }\n\n  getLegendGraphicURL(\n    wmsParameters: WMSGetLegendGraphicParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<WMSGetLegendGraphicParameters> = {\n      version: this.wmsParameters.version,\n      // format?\n      ...wmsParameters\n    };\n    return this._getWMSUrl('GetLegendGraphic', options, vendorParameters);\n  }\n\n  // INTERNAL METHODS\n\n  _parseWMSUrl(url: string): {url: string; parameters: Record<string, unknown>} {\n    const [baseUrl, search] = url.split('?');\n    const searchParams = search.split('&');\n\n    const parameters: Record<string, unknown> = {};\n    for (const parameter of searchParams) {\n      const [key, value] = parameter.split('=');\n      parameters[key] = value;\n    }\n\n    return {url: baseUrl, parameters};\n  }\n\n  /**\n   * Generate a URL with parameters\n   * @note case _getWMSUrl may need to be overridden to handle certain backends?\n   * @note at the moment, only URLs with parameters are supported (no XML payloads)\n   * */\n  protected _getWMSUrl(\n    request: string,\n    wmsParameters: {version?: '1.3.0' | '1.1.1'; [key: string]: unknown},\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    let url = this.url;\n    let first = true;\n\n    // Add any vendor searchParams\n    const allParameters = {\n      service: 'WMS',\n      version: wmsParameters.version,\n      request,\n      ...wmsParameters,\n      ...this.vendorParameters,\n      ...vendorParameters\n    };\n\n    // Encode the keys\n    const IGNORE_EMPTY_KEYS = ['transparent', 'time', 'elevation'];\n    for (const [key, value] of Object.entries(allParameters)) {\n      // hack to preserve test cases. Not super clear if keys should be included when values are undefined\n      if (!IGNORE_EMPTY_KEYS.includes(key) || value) {\n        url += first ? '?' : '&';\n        first = false;\n        url += this._getURLParameter(key, value, wmsParameters);\n      }\n    }\n\n    return encodeURI(url);\n  }\n\n  _getWMS130Parameters<ParametersT extends {crs?: string; srs?: string}>(\n    wmsParameters: ParametersT\n  ): ParametersT {\n    const newParameters = {...wmsParameters};\n    if (newParameters.srs) {\n      newParameters.crs = newParameters.crs || newParameters.srs;\n      delete newParameters.srs;\n    }\n    return newParameters;\n  }\n\n  // eslint-disable-complexity\n  _getURLParameter(key: string, value: unknown, wmsParameters: WMSParameters): string {\n    // Substitute by key\n    switch (key) {\n      case 'crs':\n        // CRS was called SRS before WMS 1.3.0\n        if (wmsParameters.version !== '1.3.0') {\n          key = 'srs';\n        } else if (this.substituteCRS84 && value === 'EPSG:4326') {\n          /** In 1.3.0, replaces references to 'EPSG:4326' with the new backwards compatible CRS:84 */\n          // Substitute by value\n          value = 'CRS:84';\n        }\n        break;\n\n      case 'srs':\n        // CRS was called SRS before WMS 1.3.0\n        if (wmsParameters.version === '1.3.0') {\n          key = 'crs';\n        }\n        break;\n\n      case 'bbox':\n        // Coordinate order is flipped for certain CRS in WMS 1.3.0\n        const bbox = this._flipBoundingBox(value, wmsParameters);\n        if (bbox) {\n          value = bbox;\n        }\n        break;\n\n      default:\n      // do nothing\n    }\n\n    key = key.toUpperCase();\n\n    return Array.isArray(value)\n      ? `${key}=${value.join(',')}`\n      : `${key}=${value ? String(value) : ''}`;\n  }\n\n  /** Coordinate order is flipped for certain CRS in WMS 1.3.0 */\n  _flipBoundingBox(\n    bboxValue: unknown,\n    wmsParameters: WMSParameters\n  ): [number, number, number, number] | null {\n    // Sanity checks\n    if (!Array.isArray(bboxValue) || bboxValue.length !== 4) {\n      return null;\n    }\n\n    const flipCoordinates =\n      // Only affects WMS 1.3.0\n      wmsParameters.version === '1.3.0' &&\n      // Flip if we are dealing with a CRS that was flipped in 1.3.0\n      this.flipCRS.includes(wmsParameters.crs || '') &&\n      // Don't flip if we are subsituting EPSG:4326 with CRS:84\n      !(this.substituteCRS84 && wmsParameters.crs === 'EPSG:4326');\n\n    const bbox = bboxValue as [number, number, number, number];\n    return flipCoordinates ? [bbox[1], bbox[0], bbox[3], bbox[2]] : bbox;\n  }\n\n  /** Fetches an array buffer and checks the response (boilerplate reduction) */\n  protected async _fetchArrayBuffer(url: string): Promise<ArrayBuffer> {\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return arrayBuffer;\n  }\n\n  /** Checks for and parses a WMS XML formatted ServiceError and throws an exception */\n  protected _checkResponse(response: Response, arrayBuffer: ArrayBuffer): void {\n    const contentType = response.headers['content-type'];\n    if (!response.ok || WMSErrorLoader.mimeTypes.includes(contentType)) {\n      // We want error responses to throw exceptions, the WMSErrorLoader can do this\n      const loadOptions = mergeLoaderOptions<WMSLoaderOptions>(this.loadOptions, {\n        wms: {throwOnError: true}\n      });\n      const error = WMSErrorLoader.parseSync(arrayBuffer, loadOptions);\n      throw new Error(error);\n    }\n  }\n\n  /** Error situation detected */\n  protected _parseError(arrayBuffer: ArrayBuffer): Error {\n    const error = WMSErrorLoader.parseSync(arrayBuffer, this.loadOptions);\n    return new Error(error);\n  }\n}\n", "// loaders.gl, MIT license\n\nimport {ImageType} from '@loaders.gl/images';\nimport type {ImageSourceMetadata, GetImageParameters} from '../../sources/image-source';\nimport type {ImageSourceProps} from '../../sources/image-source';\nimport {ImageSource} from '../../sources/image-source';\n\nexport type ArcGISImageServerProps = ImageSourceProps & {\n  url: string;\n};\n\n/**\n * ArcGIS ImageServer\n * Note - exports a big API, that could be exposed here if there is a use case\n * @see https://developers.arcgis.com/rest/services-reference/enterprise/image-service.htm\n */\nexport class ArcGISImageServer extends ImageSource<ArcGISImageServerProps> {\n  static type: 'arcgis-image-server' = 'arcgis-image-server';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('ImageServer');\n\n  constructor(props: ArcGISImageServerProps) {\n    super(props);\n  }\n\n  // ImageSource (normalized endpoints)\n\n  async getMetadata(): Promise<ImageSourceMetadata> {\n    return (await this.metadata()) as ImageSourceMetadata;\n    // TODO - normalize metadata\n  }\n\n  async getImage(parameters: GetImageParameters): Promise<ImageType> {\n    throw new Error('not implemented');\n    // TODO - Map generic parameters to ArcGIS specific parameters\n    // return await this.exportImage(parameters);\n  }\n\n  // ImageServer endpoints\n\n  async metadata(): Promise<unknown> {\n    // We just need a JSON parsing...\n    // return this.getUrl({path: '', ...options});\n    throw new Error('not implemented');\n  }\n\n  /** \n   * Form a URL to an ESRI ImageServer\n   // https://sampleserver6.arcgisonline.com/arcgis/rest/services/NLCDLandCover2001/ImageServer/exportImage?bbox=${bounds[0]},${bounds[1]},${bounds[2]},${bounds[3]}&bboxSR=4326&size=${width},${height}&imageSR=102100&time=&format=jpgpng&pixelType=U8&noData=&noDataInterpretation=esriNoDataMatchAny&interpolation=+RSP_NearestNeighbor&compression=&compressionQuality=&bandIds=&mosaicRule=&renderingRule=&f=image`,\n   */\n  exportImage(options: {\n    boundingBox: [number, number, number, number];\n    boundingBoxSR?: string;\n    width: number;\n    height: number;\n    imageSR?: string;\n    time?: never;\n    format?: 'jpgpng';\n    pixelType?: 'U8';\n    noData?: never;\n    noDataInterpretation?: 'esriNoDataMatchAny';\n    interpolation?: '+RSP_NearestNeighbor';\n    compression?: never;\n    compressionQuality?: never;\n    bandIds?: never;\n    mosaicRule?: never;\n    renderingRule?: never;\n    f?: 'image';\n  }): Promise<ImageType> {\n    // See WMSService.getMap()\n    throw new Error('not implemented');\n  }\n\n  // URL creators\n\n  metadataURL(options: {parameters?: Record<string, unknown>}): string {\n    return `${this.props.url}?f=pjson`;\n  }\n\n  /** \n   * Form a URL to an ESRI ImageServer\n   // https://sampleserver6.arcgisonline.com/arcgis/rest/services/NLCDLandCover2001/ImageServer/exportImage?\n   //   bbox=${bounds[0]},${bounds[1]},${bounds[2]},${bounds[3]}&bboxSR=4326&\n   //   size=${width},${height}&imageSR=102100&time=&format=jpgpng&pixelType=U8&\n   //   noData=&noDataInterpretation=esriNoDataMatchAny&interpolation=+RSP_NearestNeighbor&compression=&\n   //   compressionQuality=&bandIds=&mosaicRule=&renderingRule=&\n   //   f=image\n   */\n  exportImageURL(options: {\n    bbox: [number, number, number, number];\n    boxSR?: string;\n    width: number;\n    height: number;\n    imageSR?: string;\n    time?: never;\n    format?: 'jpgpng';\n    pixelType?: 'U8';\n    noData?: never;\n    noDataInterpretation?: 'esriNoDataMatchAny';\n    interpolation?: '+RSP_NearestNeighbor';\n    compression?: never;\n    compressionQuality?: never;\n    bandIds?: never;\n    mosaicRule?: never;\n    renderingRule?: never;\n    f?: 'image';\n  }): string {\n    const bbox = `bbox=${options.bbox[0]},${options.bbox[1]},${options.bbox[2]},${options.bbox[3]}`;\n    const size = `size=${options.width},${options.height}`;\n    const arcgisOptions = {...options, bbox, size};\n    // @ts-expect-error\n    delete arcgisOptions.width;\n    // @ts-expect-error\n    delete arcgisOptions.height;\n    return this.getUrl('exportImage', arcgisOptions);\n  }\n\n  // INTERNAL METHODS\n\n  /**\n   * @note protected, since perhaps getWMSUrl may need to be overridden to handle certain backends?\n   * @note if override is common, maybe add a callback prop?\n   * */\n  protected getUrl(\n    path: string,\n    options: Record<string, unknown>,\n    extra?: Record<string, unknown>\n  ): string {\n    let url = `${this.props.url}/${path}`;\n    let first = true;\n    for (const [key, value] of Object.entries(options)) {\n      url += first ? '?' : '&';\n      first = false;\n      if (Array.isArray(value)) {\n        url += `${key.toUpperCase()}=${value.join(',')}`;\n      } else {\n        url += `${key.toUpperCase()}=${value ? String(value) : ''}`;\n      }\n    }\n    return url;\n  }\n\n  /** Checks for and parses a WMS XML formatted ServiceError and throws an exception */\n  protected async checkResponse(response: Response) {\n    if (!response.ok) {\n      // } || response.headers['content-type'] === WMSErrorLoader.mimeTypes[0]) {\n      // const arrayBuffer = await response.arrayBuffer();\n      // const error = await WMSErrorLoader.parse(arrayBuffer, this.loadOptions);\n      throw new Error('error');\n    }\n  }\n}\n", "// loaders.gl, MIT license\n\nimport {ImageSource} from './sources/image-source';\nimport {ImageService, ImageServiceProps} from './services/generic/image-service';\nimport type {WMSServiceProps} from './services/ogc/wms-service';\nimport {WMSService} from './services/ogc/wms-service';\nimport {ArcGISImageServer} from './services/arcgis/arcgis-image-service';\n\nexport type ImageServiceType = 'wms' | 'arcgis-image-server' | 'template';\n\nconst SERVICES = [WMSService, ArcGISImageServer, ImageService];\n\ntype ImageSourceProps = ImageServiceProps &\n  WMSServiceProps & {\n    type?: ImageServiceType | 'auto';\n  };\n\n/**\n * Creates an image source\n * If type is not supplied, will try to automatically detect the the\n * @param url URL to the image source\n * @param type type of source. if not known, set to 'auto'\n * @returns an ImageSource instance\n */\nexport function createImageSource(props: ImageSourceProps): ImageSource<ImageSourceProps> {\n  const {type = 'auto'} = props;\n  const serviceType = type === 'auto' ? guessServiceType(props.url) : type;\n  switch (serviceType) {\n    case 'template':\n      return new ImageService(props);\n    case 'wms':\n      return new WMSService(props);\n    default:\n      // currently only wms service supported\n      throw new Error('Not a valid image source type');\n  }\n}\n\n/** Guess service type from URL */\nfunction guessServiceType(url: string): ImageServiceType {\n  for (const Service of SERVICES) {\n    if (Service.testURL && Service.testURL(url)) {\n      return Service.type;\n    }\n  }\n  // If all else fails, guess that this is MS service\n  return 'wms';\n}\n", "// loaders.gl, MIT license\n\n/* eslint-disable camelcase */\n\nimport type {DataSourceProps} from '../../sources/data-source';\nimport {DataSource} from '../../sources/data-source';\n\nimport type {CSWCapabilities} from '../../../csw-capabilities-loader';\nimport {CSWCapabilitiesLoader} from '../../../csw-capabilities-loader';\n\nimport type {CSWRecords} from '../../../csw-records-loader';\nimport {CSWRecordsLoader} from '../../../csw-records-loader';\n\nimport type {CSWDomain} from '../../../csw-domain-loader';\nimport {CSWDomainLoader} from '../../../csw-domain-loader';\n\nimport {WMSErrorLoader as CSWErrorLoader} from '../../../wms-error-loader';\n\ntype CSWCommonParameters = {\n  /** In case the endpoint supports multiple services */\n  service?: 'CSW';\n  /** In case the endpoint supports multiple CSW versions */\n  version?: '1.1.1' | '2.0.0' | '2.0.1' | '3.0.0';\n};\n\nexport type CSWGetCapabilitiesParameters = CSWCommonParameters & {\n  /** Request type */\n  request?: 'GetCapabilities';\n};\n\nexport type CSWGetRecordsParameters = CSWCommonParameters & {\n  /** Request type */\n  request?: 'GetRecords';\n  /** type of records */\n  typenames: 'csw:Record';\n};\n\nexport type CSWGetDomainParameters = CSWCommonParameters & {\n  /** Request type */\n  request?: 'GetDomain';\n  // TBA\n};\n\n/** Describes a service or resource exposed by the catalog */\nexport type Service = {\n  /** name of service or resource */\n  name: string;\n  /** type of service or resource */\n  type: string;\n  url: string;\n  params?: string;\n  scheme?: string;\n};\n\nexport type CSWServiceProps = DataSourceProps & {\n  url: string;\n};\n\n/**\n * The CSWService class\n * - provides type safe methods to form URLs to a CSW service\n * - provides type safe methods to query and parse results (and errors) from a CSW service\n * @note Only the URL parameter conversion is supported. XML posts are not supported.\n */\nexport class CSWService extends DataSource<CSWServiceProps> {\n  static type: 'csw' = 'csw';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('csw');\n\n  capabilities: CSWCapabilities | null = null;\n\n  /** A list of loaders used by the CSWService methods */\n  readonly loaders = [CSWErrorLoader, CSWCapabilitiesLoader];\n\n  /** Create a CSWService */\n  constructor(props: CSWServiceProps) {\n    super(props);\n  }\n\n  async getMetadata(): Promise<CSWCapabilities> {\n    const capabilities = await this.getCapabilities();\n    return this.normalizeMetadata(capabilities);\n  }\n\n  normalizeMetadata(capabilities: CSWCapabilities): CSWCapabilities {\n    return capabilities;\n  }\n\n  async getServiceDirectory(options?: {includeUnknown?: boolean}): Promise<Service[]> {\n    const services: Service[] = [];\n    const unknownServices: Service[] = [];\n\n    const records = await this.getRecords();\n    for (const record of records.records) {\n      for (const reference of record.references) {\n        const url = reference.value;\n        switch (reference.scheme) {\n          case 'OGC:WMS':\n            services.push({name: record.title, type: 'ogc-wms-service', ...this._parseOGCUrl(url)});\n            break;\n          case 'OGC:WMTS':\n            services.push({\n              name: record.title,\n              type: 'ogc-wmts-service',\n              ...this._parseOGCUrl(url)\n            });\n            break;\n          case 'OGC:WFS':\n            services.push({name: record.title, type: 'ogc-wfs-service', ...this._parseOGCUrl(url)});\n            break;\n          default:\n            unknownServices.push({\n              name: record.title,\n              type: 'unknown',\n              url: reference.value,\n              scheme: reference.scheme\n            });\n        }\n      }\n    }\n\n    return options?.includeUnknown ? services.concat(unknownServices) : services;\n  }\n\n  _parseOGCUrl(url: string): {url: string; params: string} {\n    const parts = url.split('?');\n    return {\n      url: parts[0],\n      params: parts[1] || ''\n    };\n  }\n\n  // CSW Service API Stubs\n\n  /** Get Capabilities */\n  async getCapabilities(\n    wmsParameters?: CSWGetCapabilitiesParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<CSWCapabilities> {\n    const url = this.getCapabilitiesURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    const capabilities = await CSWCapabilitiesLoader.parse(arrayBuffer, this.props.loadOptions);\n    return capabilities;\n  }\n\n  /** Get Records */\n  async getRecords(\n    wmsParameters?: CSWGetRecordsParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<CSWRecords> {\n    const url = this.getRecordsURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return await CSWRecordsLoader.parse(arrayBuffer, this.props.loadOptions);\n  }\n\n  /** Get Domain */\n  async getDomain(\n    wmsParameters?: CSWGetDomainParameters,\n    vendorParameters?: Record<string, unknown>\n  ): Promise<CSWDomain> {\n    const url = this.getDomainURL(wmsParameters, vendorParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    this._checkResponse(response, arrayBuffer);\n    return await CSWDomainLoader.parse(arrayBuffer, this.props.loadOptions);\n  }\n\n  // Typed URL creators\n  // For applications that want full control of fetching and parsing\n\n  /** Generate a URL for the GetCapabilities request */\n  getCapabilitiesURL(\n    wmsParameters?: CSWGetCapabilitiesParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<CSWGetCapabilitiesParameters> = {\n      version: '3.0.0',\n      ...wmsParameters,\n      ...vendorParameters,\n      service: 'CSW',\n      request: 'GetCapabilities'\n    };\n    return this._getCSWUrl(options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetCapabilities request */\n  getRecordsURL(\n    wmsParameters?: CSWGetRecordsParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<CSWGetRecordsParameters> = {\n      version: '3.0.0',\n      typenames: 'csw:Record',\n      ...wmsParameters,\n      ...vendorParameters,\n      service: 'CSW',\n      request: 'GetRecords'\n    };\n    return this._getCSWUrl(options, vendorParameters);\n  }\n\n  /** Generate a URL for the GetCapabilities request */\n  getDomainURL(\n    wmsParameters?: CSWGetDomainParameters,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    const options: Required<CSWGetDomainParameters> = {\n      version: '3.0.0',\n      ...wmsParameters,\n      ...vendorParameters,\n      service: 'CSW',\n      request: 'GetDomain'\n    };\n    return this._getCSWUrl(options, vendorParameters);\n  }\n\n  // INTERNAL METHODS\n\n  /**\n   * @note case _getCSWUrl may need to be overridden to handle certain backends?\n   * */\n  protected _getCSWUrl(\n    options: Record<string, unknown>,\n    vendorParameters?: Record<string, unknown>\n  ): string {\n    let url = this.props.url;\n    let first = true;\n    for (const [key, value] of Object.entries(options)) {\n      url += first ? '?' : '&';\n      first = false;\n      if (Array.isArray(value)) {\n        url += `${key.toUpperCase()}=${value.join(',')}`;\n      } else {\n        url += `${key.toUpperCase()}=${value ? String(value) : ''}`;\n      }\n    }\n    return encodeURI(url);\n  }\n\n  /** Checks for and parses a CSW XML formatted ServiceError and throws an exception */\n  protected _checkResponse(response: Response, arrayBuffer: ArrayBuffer): void {\n    const contentType = response.headers['content-type'];\n    if (!response.ok || CSWErrorLoader.mimeTypes.includes(contentType)) {\n      const error = CSWErrorLoader.parseSync(arrayBuffer, this.props.loadOptions);\n      throw new Error(error);\n    }\n  }\n\n  /** Error situation detected */\n  protected _parseError(arrayBuffer: ArrayBuffer): Error {\n    const error = CSWErrorLoader.parseSync(arrayBuffer, this.props.loadOptions);\n    return new Error(error);\n  }\n}\n", "import {lngLatToWorld} from '@math.gl/web-mercator';\n\n// https://epsg.io/3857\n// +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs\nconst HALF_EARTH_CIRCUMFERENCE = 6378137 * Math.PI;\n\n/** Projects EPSG:4326 to EPSG:3857\n * This is a lightweight replacement of proj4. Use tests to ensure conformance.\n */\nexport function WGS84ToPseudoMercator(coord: [number, number]): [number, number] {\n  const mercator = lngLatToWorld(coord);\n  mercator[0] = (mercator[0] / 256 - 1) * HALF_EARTH_CIRCUMFERENCE;\n  mercator[1] = (mercator[1] / 256 - 1) * HALF_EARTH_CIRCUMFERENCE;\n  return mercator;\n}\n", "// deck.gl, MIT license\n// Attributions:\n// Copyright 2022 Foursquare Labs, Inc.\n\n/* eslint-disable camelcase */ // Some WMS parameters are not in camel case\n/* global setTimeout, clearTimeout */\n\nimport {\n  Layer,\n  CompositeLayer,\n  CompositeLayerProps,\n  UpdateParameters,\n  DefaultProps,\n  Viewport,\n  COORDINATE_SYSTEM,\n  _deepEqual as deepEqual\n} from '@deck.gl/core';\nimport {BitmapLayer} from '@deck.gl/layers';\nimport type {ImageSourceMetadata, ImageType, ImageServiceType} from '@loaders.gl/wms';\nimport {ImageSource, createImageSource} from '@loaders.gl/wms';\nimport {WGS84ToPseudoMercator} from './utils';\n\n/** All props supported by the TileLayer */\nexport type WMSLayerProps = CompositeLayerProps & _WMSLayerProps;\n\n/** Props added by the TileLayer */\ntype _WMSLayerProps = {\n  data: string | ImageSource;\n  serviceType?: ImageServiceType | 'auto';\n  layers?: string[];\n  srs?: 'EPSG:4326' | 'EPSG:3857' | 'auto';\n  onMetadataLoad?: (metadata: ImageSourceMetadata) => void;\n  onMetadataLoadError?: (error: Error) => void;\n  onImageLoadStart?: (requestId: unknown) => void;\n  onImageLoad?: (requestId: unknown) => void;\n  onImageLoadError?: (requestId: unknown, error: Error) => void;\n};\n\nconst defaultProps: DefaultProps<WMSLayerProps> = {\n  id: 'imagery-layer',\n  data: '',\n  serviceType: 'auto',\n  srs: 'auto',\n  layers: {type: 'array', compare: true, value: []},\n  onMetadataLoad: {type: 'function', value: () => {}},\n  // eslint-disable-next-line\n  onMetadataLoadError: {type: 'function', value: console.error},\n  onImageLoadStart: {type: 'function', value: () => {}},\n  onImageLoad: {type: 'function', value: () => {}},\n  onImageLoadError: {\n    type: 'function',\n    compare: false,\n    // eslint-disable-next-line\n    value: (requestId: unknown, error: Error) => console.error(error, requestId)\n  }\n};\n\n/**\n * The layer is used in Hex Tile layer in order to properly discard invisible elements during animation\n */\nexport class WMSLayer<ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_WMSLayerProps>\n> {\n  static layerName = 'WMSLayer';\n  static defaultProps: DefaultProps = defaultProps;\n\n  state!: {\n    imageSource: ImageSource;\n    image: ImageType;\n    bounds: [number, number, number, number];\n    lastRequestParameters: {\n      bbox: [number, number, number, number];\n      layers: string[];\n      srs: 'EPSG:4326' | 'EPSG:3857';\n      width: number;\n      height: number;\n    };\n    lastRequestId: number;\n    _nextRequestId: number;\n    /** TODO: Change any => setTimeout return type. Different between Node and browser... */\n    _timeoutId: any;\n    loadCounter: number;\n  };\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    // Track the explicit loading done by this layer\n    return Boolean(this.state) && this.state.loadCounter === 0 && super.isLoaded;\n  }\n\n  /** Lets deck.gl know that we want viewport change events */\n  override shouldUpdateState(): boolean {\n    return true;\n  }\n\n  override initializeState(): void {\n    // intentionally empty, initialization is done in updateState\n    this.state._nextRequestId = 0;\n    this.state.lastRequestId = -1;\n    this.state.loadCounter = 0;\n  }\n\n  override updateState({changeFlags, props, oldProps}: UpdateParameters<this>): void {\n    const {viewport} = this.context;\n\n    // Check if data source has changed\n    if (changeFlags.dataChanged || props.serviceType !== oldProps.serviceType) {\n      this.state.imageSource = this._createImageSource(props);\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._loadMetadata();\n      this.debounce(() => this.loadImage(viewport, 'image source changed'), 0);\n    } else if (!deepEqual(props.layers, oldProps.layers, 1)) {\n      this.debounce(() => this.loadImage(viewport, 'layers changed'), 0);\n    } else if (changeFlags.viewportChanged) {\n      this.debounce(() => this.loadImage(viewport, 'viewport changed'));\n    }\n  }\n\n  override finalizeState(): void {\n    // TODO - we could cancel outstanding requests\n  }\n\n  override renderLayers(): Layer {\n    // TODO - which bitmap layer is rendered should depend on the current viewport\n    // Currently Studio only uses one viewport\n    const {bounds, image, lastRequestParameters} = this.state;\n\n    return (\n      image &&\n      new BitmapLayer({\n        ...this.getSubLayerProps({id: 'bitmap'}),\n        _imageCoordinateSystem:\n          lastRequestParameters.srs === 'EPSG:4326'\n            ? COORDINATE_SYSTEM.LNGLAT\n            : COORDINATE_SYSTEM.CARTESIAN,\n        bounds,\n        image\n      })\n    );\n  }\n\n  async getFeatureInfoText(x: number, y: number): Promise<string | null> {\n    const {lastRequestParameters} = this.state;\n    if (lastRequestParameters) {\n      // @ts-expect-error Undocumented method\n      const featureInfo = await this.state.imageSource.getFeatureInfoText?.({\n        ...lastRequestParameters,\n        query_layers: lastRequestParameters.layers,\n        x,\n        y,\n        info_format: 'application/vnd.ogc.gml'\n      });\n      return featureInfo;\n    }\n    return '';\n  }\n\n  _createImageSource(props: WMSLayerProps): ImageSource {\n    if (props.data instanceof ImageSource) {\n      return props.data;\n    }\n\n    if (typeof props.data === 'string') {\n      return createImageSource({\n        url: props.data,\n        loadOptions: props.loadOptions,\n        type: props.serviceType\n      });\n    }\n\n    throw new Error('invalid image source in props.data');\n  }\n\n  /** Run a getMetadata on the image service */\n  async _loadMetadata(): Promise<void> {\n    const {imageSource} = this.state;\n    try {\n      this.state.loadCounter++;\n      const metadata = await imageSource.getMetadata();\n\n      // If a request takes a long time, it may no longer be expected\n      if (this.state.imageSource === imageSource) {\n        this.getCurrentLayer()?.props.onMetadataLoad(metadata);\n      }\n    } catch (error) {\n      this.getCurrentLayer()?.props.onMetadataLoadError(error as Error);\n    } finally {\n      this.state.loadCounter--;\n    }\n  }\n\n  /** Load an image */\n  async loadImage(viewport: Viewport, reason: string): Promise<void> {\n    const {layers, serviceType} = this.props;\n\n    // TODO - move to ImageSource?\n    if (serviceType === 'wms' && layers.length === 0) {\n      return;\n    }\n\n    const bounds = viewport.getBounds();\n    const {width, height} = viewport;\n    const requestId = this.getRequestId();\n    let {srs} = this.props;\n    if (srs === 'auto') {\n      // BitmapLayer only supports LNGLAT or CARTESIAN (Web-Mercator)\n      srs = viewport.resolution ? 'EPSG:4326' : 'EPSG:3857';\n    }\n    const requestParams = {\n      width,\n      height,\n      bbox: bounds,\n      layers,\n      srs\n    };\n    if (srs === 'EPSG:3857') {\n      const [minX, minY] = WGS84ToPseudoMercator([bounds[0], bounds[1]]);\n      const [maxX, maxY] = WGS84ToPseudoMercator([bounds[2], bounds[3]]);\n      requestParams.bbox = [minX, minY, maxX, maxY];\n    }\n\n    try {\n      this.state.loadCounter++;\n      this.props.onImageLoadStart(requestId);\n\n      const image = await this.state.imageSource.getImage(requestParams);\n\n      // If a request takes a long time, later requests may have already loaded.\n      if (this.state.lastRequestId < requestId) {\n        this.getCurrentLayer()?.props.onImageLoad(requestId);\n        // Not type safe...\n        this.setState({\n          image,\n          bounds,\n          lastRequestParameters: requestParams,\n          lastRequestId: requestId\n        });\n      }\n    } catch (error) {\n      this.raiseError(error as Error, 'Load image');\n      this.getCurrentLayer()?.props.onImageLoadError(requestId, error as Error);\n    } finally {\n      this.state.loadCounter--;\n    }\n  }\n\n  // HELPERS\n\n  /** Global counter for issuing unique request ids */\n  private getRequestId(): number {\n    return this.state._nextRequestId++;\n  }\n\n  /** Runs an action in the future, cancels it if the new action is issued before it executes */\n  private debounce(fn: Function, ms = 500): void {\n    clearTimeout(this.state._timeoutId);\n    this.state._timeoutId = setTimeout(() => fn(), ms);\n  }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {DefaultProps} from '@deck.gl/core';\nimport {ArcLayer, ArcLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<ArcLayerProps> = {\n  getHeight: {type: 'accessor', value: 0},\n  greatCircle: true\n};\n\n/** All properties supported by GreatCircleLayer. */\nexport type GreatCircleLayerProps<DataT = any> = ArcLayerProps<DataT>;\n\n// This layer has been merged into the core ArcLayer\n// Keeping for backward-compatibility\n/** @deprecated Use ArcLayer with `greatCircle: true` instead */\nexport default class GreatCircleLayer<DataT = any, ExtraProps extends {} = {}> extends ArcLayer<\n  DataT,\n  ExtraProps\n> {\n  static layerName = 'GreatCircleLayer';\n  static defaultProps = defaultProps;\n}\n", "import {CompositeLayer, Layer, LayersList, DefaultProps} from '@deck.gl/core';\nimport {PolygonLayer, PolygonLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<GeoCellLayerProps> = {\n  ...PolygonLayer.defaultProps\n};\n\n/** All properties supported by GeoCellLayer. */\nexport type GeoCellLayerProps<DataT = any> = PolygonLayerProps<DataT>;\n\nexport default class GeoCellLayer<DataT = any, ExtraProps extends {} = {}> extends CompositeLayer<\n  Required<GeoCellLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'GeoCellLayer';\n  static defaultProps: DefaultProps = defaultProps;\n\n  /** Implement to generate props to create geometry. */\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    return null;\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    // Rendering props underlying layer\n    const {\n      elevationScale,\n      extruded,\n      wireframe,\n      filled,\n      stroked,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified,\n      getElevation,\n      getFillColor,\n      getLineColor,\n      getLineWidth\n    } = this.props;\n\n    // Accessor props for underlying layers\n    const {updateTriggers, material, transitions} = this.props;\n\n    // Filled Polygon Layer\n    const CellLayer = this.getSubLayerClass('cell', PolygonLayer);\n    const {updateTriggers: boundsUpdateTriggers, ...boundsProps} = this.indexToBounds() || {};\n    return new CellLayer(\n      {\n        filled,\n        wireframe,\n\n        extruded,\n        elevationScale,\n\n        stroked,\n        lineWidthUnits,\n        lineWidthScale,\n        lineWidthMinPixels,\n        lineWidthMaxPixels,\n        lineJointRounded,\n        lineMiterLimit,\n        lineDashJustified,\n\n        material,\n        transitions,\n\n        getElevation,\n        getFillColor,\n        getLineColor,\n        getLineWidth\n      },\n      this.getSubLayerProps({\n        id: 'cell',\n        updateTriggers: updateTriggers && {\n          ...boundsUpdateTriggers,\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth\n        }\n      }),\n      boundsProps\n    );\n  }\n}\n", "/*\nAdapted from s2-geometry\n\nISC License (ISC)\n\nCopyright (c) 2012-2016, Jon Atkins <github@jonatkins.com>\nCopyright (c) 2016, AJ ONeal <aj@daplie.com>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport Long from 'long';\n\n//\n// Functional Style\n//\nconst FACE_BITS = 3;\nconst MAX_LEVEL = 30;\nconst POS_BITS = 2 * MAX_LEVEL + 1; // 61 (60 bits of data, 1 bit lsb marker)\nconst RADIAN_TO_DEGREE = 180 / Math.PI;\n\nexport function IJToST(\n  ij: [number, number],\n  order: number,\n  offsets: [number, number]\n): [number, number] {\n  const maxSize = 1 << order;\n\n  return [(ij[0] + offsets[0]) / maxSize, (ij[1] + offsets[1]) / maxSize];\n}\n\nfunction singleSTtoUV(st: number): number {\n  if (st >= 0.5) {\n    return (1 / 3.0) * (4 * st * st - 1);\n  }\n  return (1 / 3.0) * (1 - 4 * (1 - st) * (1 - st));\n}\n\nexport function STToUV(st: [number, number]): [number, number] {\n  return [singleSTtoUV(st[0]), singleSTtoUV(st[1])];\n}\n\nexport function FaceUVToXYZ(face: number, [u, v]: [number, number]): [number, number, number] {\n  switch (face) {\n    case 0:\n      return [1, u, v];\n    case 1:\n      return [-u, 1, v];\n    case 2:\n      return [-u, -v, 1];\n    case 3:\n      return [-1, -v, -u];\n    case 4:\n      return [v, -1, -u];\n    case 5:\n      return [v, u, -1];\n    default:\n      throw new Error('Invalid face');\n  }\n}\n\nexport function XYZToLngLat([x, y, z]: [number, number, number]): [number, number] {\n  const lat = Math.atan2(z, Math.sqrt(x * x + y * y));\n  const lng = Math.atan2(y, x);\n\n  return [lng * RADIAN_TO_DEGREE, lat * RADIAN_TO_DEGREE];\n}\n\nexport function toHilbertQuadkey(idS: string): string {\n  let bin = Long.fromString(idS, true, 10).toString(2);\n\n  while (bin.length < FACE_BITS + POS_BITS) {\n    // eslint-disable-next-line prefer-template\n    bin = '0' + bin;\n  }\n\n  // MUST come AFTER binstr has been left-padded with '0's\n  const lsbIndex = bin.lastIndexOf('1');\n  // substr(start, len)\n  // substring(start, end) // includes start, does not include end\n  const faceB = bin.substring(0, 3);\n  // posB will always be a multiple of 2 (or it's invalid)\n  const posB = bin.substring(3, lsbIndex);\n  const levelN = posB.length / 2;\n\n  const faceS = Long.fromString(faceB, true, 2).toString(10);\n  let posS = Long.fromString(posB, true, 2).toString(4);\n\n  while (posS.length < levelN) {\n    // eslint-disable-next-line prefer-template\n    posS = '0' + posS;\n  }\n\n  return `${faceS}/${posS}`;\n}\n\nfunction rotateAndFlipQuadrant(n: number, point: [number, number], rx: number, ry: number): void {\n  if (ry === 0) {\n    if (rx === 1) {\n      point[0] = n - 1 - point[0];\n      point[1] = n - 1 - point[1];\n    }\n\n    const x = point[0];\n    point[0] = point[1];\n    point[1] = x;\n  }\n}\n\nexport function FromHilbertQuadKey(hilbertQuadkey: string): {\n  face: number;\n  ij: [number, number];\n  level: number;\n} {\n  const parts = hilbertQuadkey.split('/');\n  const face = parseInt(parts[0], 10);\n  const position = parts[1];\n  const maxLevel = position.length;\n  const point = [0, 0] as [number, number];\n  let level;\n\n  for (let i = maxLevel - 1; i >= 0; i--) {\n    level = maxLevel - i;\n    const bit = position[i];\n    let rx = 0;\n    let ry = 0;\n    if (bit === '1') {\n      ry = 1;\n    } else if (bit === '2') {\n      rx = 1;\n      ry = 1;\n    } else if (bit === '3') {\n      rx = 1;\n    }\n\n    const val = Math.pow(2, level - 1);\n    rotateAndFlipQuadrant(val, point, rx, ry);\n\n    point[0] += val * rx;\n    point[1] += val * ry;\n  }\n\n  if (face % 2 === 1) {\n    const t = point[0];\n    point[0] = point[1];\n    point[1] = t;\n  }\n\n  return {face, ij: point, level};\n}\n", "// s2-geometry is a pure JavaScript port of Google/Niantic's S2 Geometry library\n// which is perfect since it works in the browser.\nimport {\n  toHilbertQuadkey,\n  FromHilbertQuadKey,\n  IJToST,\n  STToUV,\n  FaceUVToXYZ,\n  XYZToLngLat\n} from './s2-geometry';\nimport Long from 'long';\n\n/**\n * Given an S2 token this function convert the token to 64 bit id\n   https://github.com/google/s2-geometry-library-java/blob/c04b68bf3197a9c34082327eeb3aec7ab7c85da1/src/com/google/common/geometry/S2CellId.java#L439\n * */\nfunction getIdFromToken(token: string): number {\n  // pad token with zeros to make the length 16\n  const paddedToken = token.padEnd(16, '0');\n  return Long.fromString(paddedToken, 16);\n}\n\nconst MAX_RESOLUTION = 100;\n\n/* Adapted from s2-geometry's S2Cell.getCornerLatLngs */\n/* eslint-disable max-statements */\nfunction getGeoBounds({\n  face,\n  ij,\n  level\n}: {\n  face: number;\n  ij: [number, number];\n  level: number;\n}): Float64Array {\n  const offsets = [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [0, 0]\n  ];\n\n  // The S2 cell edge is curved: http://s2geometry.io/\n  // This is more prominent at lower levels\n  // resolution is the number of segments to generate per edge.\n  // We exponentially reduce resolution as level increases so it doesn't affect perf\n  // when there are a large number of cells\n  const resolution = Math.max(1, Math.ceil(MAX_RESOLUTION * Math.pow(2, -level)));\n  const result = new Float64Array(4 * resolution * 2 + 2);\n  let ptIndex = 0;\n  let prevLng = 0;\n\n  for (let i = 0; i < 4; i++) {\n    const offset = offsets[i].slice(0) as [number, number];\n    const nextOffset = offsets[i + 1];\n    const stepI = (nextOffset[0] - offset[0]) / resolution;\n    const stepJ = (nextOffset[1] - offset[1]) / resolution;\n\n    for (let j = 0; j < resolution; j++) {\n      offset[0] += stepI;\n      offset[1] += stepJ;\n      // Cell can be represented by coordinates IJ, ST, UV, XYZ\n      // http://s2geometry.io/devguide/s2cell_hierarchy#coordinate-systems\n      const st = IJToST(ij, level, offset);\n      const uv = STToUV(st);\n      const xyz = FaceUVToXYZ(face, uv);\n      const lngLat = XYZToLngLat(xyz);\n\n      // Adjust longitude for Web Mercator projection\n      if (Math.abs(lngLat[1]) > 89.999) {\n        lngLat[0] = prevLng;\n      }\n      const deltaLng = lngLat[0] - prevLng;\n      lngLat[0] += deltaLng > 180 ? -360 : deltaLng < -180 ? 360 : 0;\n\n      result[ptIndex++] = lngLat[0];\n      result[ptIndex++] = lngLat[1];\n      prevLng = lngLat[0];\n    }\n  }\n  // close the loop\n  result[ptIndex++] = result[0];\n  result[ptIndex++] = result[1];\n  return result;\n}\n/* eslint-enable max-statements */\n\nexport function getS2QuadKey(token: string | number): string {\n  if (typeof token === 'string') {\n    if (token.indexOf('/') > 0) {\n      // is Hilbert quad key\n      return token;\n    }\n    // is S2 token\n    token = getIdFromToken(token);\n  }\n  // is Long id\n  return toHilbertQuadkey(token.toString());\n}\n\n/**\n * Get a polygon with corner coordinates for an s2 cell\n * @param {*} cell - This can be an S2 key or token\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\nexport function getS2Polygon(token: string | number): Float64Array {\n  const key = getS2QuadKey(token);\n  const s2cell = FromHilbertQuadKey(key);\n\n  return getGeoBounds(s2cell);\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\nimport {getS2Polygon} from './s2-utils';\n\nconst defaultProps: DefaultProps<S2LayerProps> = {\n  getS2Token: {type: 'accessor', value: d => d.token}\n};\n\n/** All properties supported by S2Layer. */\nexport type S2LayerProps<DataT = any> = _S2LayerProps<DataT> & GeoCellLayerProps<DataT>;\n\n/** Properties added by S2Layer. */\ntype _S2LayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `token` property of data object.\n   */\n  getS2Token?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [S2](http://s2geometry.io/) geospatial indexing system. */\nexport default class S2Layer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_S2LayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'S2Layer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getS2Token} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getS2Polygon(getS2Token(x, objectInfo))\n    };\n  }\n}\n", "import {worldToLngLat} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n\nexport function quadkeyToWorldBounds(quadkey: string, coverage: number): [number[], number[]] {\n  let x = 0;\n  let y = 0;\n  let mask = 1 << quadkey.length;\n  const scale = mask / TILE_SIZE;\n\n  for (let i = 0; i < quadkey.length; i++) {\n    mask >>= 1;\n    const q = parseInt(quadkey[i]);\n    if (q % 2) x |= mask;\n    if (q > 1) y |= mask;\n  }\n  return [\n    [x / scale, TILE_SIZE - y / scale],\n    [(x + coverage) / scale, TILE_SIZE - (y + coverage) / scale]\n  ];\n}\n\nexport function getQuadkeyPolygon(quadkey: string, coverage = 1): number[] {\n  const [topLeft, bottomRight] = quadkeyToWorldBounds(quadkey, coverage);\n  const [w, n] = worldToLngLat(topLeft);\n  const [e, s] = worldToLngLat(bottomRight);\n  return [e, n, e, s, w, s, w, n, e, n];\n}\n", "import {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\nimport {getQuadkeyPolygon} from './quadkey-utils';\n\nconst defaultProps: DefaultProps<QuadkeyLayerProps> = {\n  getQuadkey: {type: 'accessor', value: d => d.quadkey}\n};\n\n/** All properties supported by QuadkeyLayer. */\nexport type QuadkeyLayerProps<DataT = any> = _QuadkeyLayerProps<DataT> & GeoCellLayerProps<DataT>;\n\n/** Properties added by QuadkeyLayer. */\ntype _QuadkeyLayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `quadkey` property of data object.\n   */\n  getQuadkey?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Quadkey](https://towardsdatascience.com/geospatial-indexing-with-quadkeys-d933dff01496) geospatial indexing system. */\nexport default class QuadkeyLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_QuadkeyLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'QuadkeyLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, extruded, getQuadkey} = this.props;\n    // To avoid z-fighting reduce polygon footprint when extruding\n    const coverage = extruded ? 0.99 : 1;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n\n      getPolygon: (x: DataT, objectInfo) => getQuadkeyPolygon(getQuadkey(x, objectInfo), coverage),\n      updateTriggers: {getPolygon: coverage}\n    };\n  }\n}\n", "/* eslint-env browser */\nimport {RequestScheduler} from '@loaders.gl/loader-utils';\nimport {TileBoundingBox, TileIndex, TileLoadProps} from './types';\n\nexport type TileLoadDataProps<DataT = any> = {\n  requestScheduler: RequestScheduler;\n  getData: (props: TileLoadProps) => Promise<DataT>;\n  onLoad: (tile: Tile2DHeader<DataT>) => void;\n  onError: (error: any, tile: Tile2DHeader<DataT>) => void;\n};\n\nexport class Tile2DHeader<DataT = any> {\n  index: TileIndex;\n  isVisible: boolean;\n  isSelected: boolean;\n  parent: Tile2DHeader | null;\n  children: Tile2DHeader[] | null;\n  content: DataT | null;\n  state?: number;\n  layers?: any[] | null; // Layer[] | null\n\n  id!: string; // assigned _always_ with result of `getTileId`\n  zoom!: number; // assigned _always_ with result of `getTileZoom`\n  userData?: Record<string, any>; // _may be_ assigned with result of `getTileMetadata`\n  boundingBox!: [min: number[], max: number[]]; // assigned _always_ with bbox from `getTileMetadata`\n\n  private _abortController: AbortController | null;\n  private _loader: Promise<void> | undefined;\n  private _loaderId: number;\n  private _isLoaded: boolean;\n  private _isCancelled: boolean;\n  private _needsReload: boolean;\n  private _bbox!: TileBoundingBox;\n\n  constructor(index: TileIndex) {\n    this.index = index;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n\n    this._loader = undefined;\n    this._abortController = null;\n    this._loaderId = 0;\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n  }\n\n  /** @deprecated use `boundingBox` instead */\n  get bbox(): TileBoundingBox {\n    return this._bbox;\n  }\n\n  // TODO - remove in v9\n  set bbox(value: TileBoundingBox) {\n    // Only set once from `Tileset2D.getTileMetadata`\n    if (this._bbox) return;\n\n    this._bbox = value;\n    if ('west' in value) {\n      this.boundingBox = [\n        [value.west, value.south],\n        [value.east, value.north]\n      ];\n    } else {\n      this.boundingBox = [\n        [value.left, value.top],\n        [value.right, value.bottom]\n      ];\n    }\n  }\n\n  get data(): Promise<DataT | null> | DataT | null {\n    return this.isLoading && this._loader ? this._loader.then(() => this.data) : this.content;\n  }\n\n  get isLoaded(): boolean {\n    return this._isLoaded && !this._needsReload;\n  }\n\n  get isLoading(): boolean {\n    return Boolean(this._loader) && !this._isCancelled;\n  }\n\n  get needsReload(): boolean {\n    return this._needsReload || this._isCancelled;\n  }\n\n  get byteLength(): number {\n    const result = this.content ? (this.content as any).byteLength : 0;\n    if (!Number.isFinite(result)) {\n      // eslint-disable-next-line no-console\n      console.error('byteLength not defined in tile data');\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  private async _loadData({\n    getData,\n    requestScheduler,\n    onLoad,\n    onError\n  }: TileLoadDataProps<DataT>): Promise<void> {\n    const {index, id, bbox, userData, zoom} = this;\n    const loaderId = this._loaderId;\n\n    this._abortController = new AbortController();\n    const {signal} = this._abortController;\n\n    // @ts-expect-error (2345) Argument of type '(tile: any) => 1 | -1' is not assignable ...\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData: DataT | null = null;\n    let error;\n    try {\n      tileData = await getData({index, id, bbox, userData, zoom, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n    }\n\n    // If loadData has been called with a newer version, discard the result from this operation\n    if (loaderId !== this._loaderId) {\n      return;\n    }\n    // Clear the `isLoading` flag\n    this._loader = undefined;\n    // Rewrite tile content with the result of getTileData if successful, or `null` in case of\n    // error or cancellation\n    this.content = tileData;\n    // If cancelled, do not invoke the callbacks\n    // Consider it loaded if we tried to cancel but `getTileData` still returned data\n    if (this._isCancelled && !tileData) {\n      this._isLoaded = false;\n      return;\n    }\n    this._isLoaded = true;\n    this._isCancelled = false;\n\n    if (error) {\n      onError(error, this);\n    } else {\n      onLoad(this);\n    }\n  }\n\n  loadData(opts: TileLoadDataProps): Promise<void> {\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n    this._loaderId++;\n    this._loader = this._loadData(opts);\n    return this._loader;\n  }\n\n  setNeedsReload(): void {\n    if (this.isLoading) {\n      this.abort();\n      this._loader = undefined;\n    }\n    this._needsReload = true;\n  }\n\n  abort(): void {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController?.abort();\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport const INTERSECTION = {\n  OUTSIDE: -1, // Represents that an object is not contained within the frustum.\n  INTERSECTING: 0, // Represents that an object intersects one of the frustum's planes.\n  INSIDE: 1 // Represents that an object is fully within the frustum.\n} as const;\n", "import {BoundingVolume} from './bounding-volume';\nimport {Vector3} from '@math.gl/core';\nimport Plane from '../plane';\nimport {INTERSECTION} from '../../constants';\n\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\n\n/**\n * An axis aligned bounding box - aligned with coordinate axes\n * @see BoundingVolume\n * @see BoundingRectangle\n * @see OrientedBoundingBox\n */\nexport default class AxisAlignedBoundingBox implements BoundingVolume {\n  /** The center point of the bounding box. */\n  readonly center: Vector3;\n  /** The positive half diagonal of the bounding box. */\n  readonly halfDiagonal: Vector3;\n  /** The minimum point defining the bounding box. [0, 0, 0] for empty box */\n  readonly minimum: Vector3;\n  /** The maximum point defining the bounding box. [0, 0, 0] for empty box */\n  readonly maximum: Vector3;\n\n  /**\n   * Creates an instance of an AxisAlignedBoundingBox from the minimum and maximum points along the x, y, and z axes.\n   * @param minimum=[0, 0, 0] The minimum point along the x, y, and z axes.\n   * @param maximum=[0, 0, 0] The maximum point along the x, y, and z axes.\n   * @param center The center of the box; automatically computed if not supplied.\n   */\n  constructor(\n    minimum: readonly number[] = [0, 0, 0],\n    maximum: readonly number[] = [0, 0, 0],\n    center?: readonly number[]\n  ) {\n    // If center was not defined, compute it.\n    center = center || scratchVector.copy(minimum).add(maximum).scale(0.5);\n    this.center = new Vector3(center);\n    this.halfDiagonal = new Vector3(maximum).subtract(this.center);\n\n    /**\n     * The minimum point defining the bounding box.\n     * @type {Vector3}\n     * @default {@link 0, 0, 0}\n     */\n    this.minimum = new Vector3(minimum);\n\n    /**\n     * The maximum point defining the bounding box.\n     * @type {Vector3}\n     * @default {@link 0, 0, 0}\n     */\n    this.maximum = new Vector3(maximum);\n  }\n\n  /**\n   * Duplicates a AxisAlignedBoundingBox instance.\n   *\n   * @returns {AxisAlignedBoundingBox} A new AxisAlignedBoundingBox instance.\n   */\n  clone(): AxisAlignedBoundingBox {\n    return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n  }\n\n  /**\n   * Compares the provided AxisAlignedBoundingBox componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @param {AxisAlignedBoundingBox} [right] The second AxisAlignedBoundingBox to compare with.\n   * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n   */\n  equals(right: AxisAlignedBoundingBox): boolean {\n    return (\n      this === right ||\n      (Boolean(right) && this.minimum.equals(right.minimum) && this.maximum.equals(right.maximum))\n    );\n  }\n\n  /**\n   * Applies a 4x4 affine transformation matrix to a bounding sphere.\n   * @param transform The transformation matrix to apply to the bounding sphere.\n   * @returns itself, i.e. the modified BoundingVolume.\n   */\n  transform(transform: readonly number[]): this {\n    this.center.transformAsPoint(transform);\n    // TODO - this.halfDiagonal.transformAsVector(transform);\n    this.halfDiagonal.transform(transform);\n    this.minimum.transform(transform);\n    this.maximum.transform(transform);\n    return this;\n  }\n\n  /**\n   * Determines which side of a plane a box is located.\n   */\n  intersectPlane(plane: Plane): number {\n    const {halfDiagonal} = this;\n    const normal = scratchNormal.from(plane.normal);\n    const e =\n      halfDiagonal.x * Math.abs(normal.x) +\n      halfDiagonal.y * Math.abs(normal.y) +\n      halfDiagonal.z * Math.abs(normal.z);\n    const s = this.center.dot(normal) + plane.distance; // signed distance from center\n\n    if (s - e > 0) {\n      return INTERSECTION.INSIDE;\n    }\n\n    if (s + e < 0) {\n      // Not in front because normals point inward\n      return INTERSECTION.OUTSIDE;\n    }\n\n    return INTERSECTION.INTERSECTING;\n  }\n\n  /** Computes the estimated distance from the closest point on a bounding box to a point. */\n  distanceTo(point: readonly number[]): number {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  /** Computes the estimated distance squared from the closest point on a bounding box to a point. */\n  distanceSquaredTo(point: readonly number[]): number {\n    const offset = scratchVector.from(point).subtract(this.center);\n    const {halfDiagonal} = this;\n\n    let distanceSquared = 0.0;\n    let d;\n\n    d = Math.abs(offset.x) - halfDiagonal.x;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.y) - halfDiagonal.y;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.z) - halfDiagonal.z;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {NumericArray, Vector3} from '@math.gl/core';\nimport * as mat4 from 'gl-matrix/mat4';\nimport {INTERSECTION} from '../../constants';\nimport {BoundingVolume} from './bounding-volume';\nimport Plane from '../plane';\n\nconst scratchVector = new Vector3();\nconst scratchVector2 = new Vector3();\n\n/** A BoundingSphere */\nexport default class BoundingSphere implements BoundingVolume {\n  center: Vector3;\n  radius: number;\n\n  /** Creates a bounding sphere */\n  constructor(center: readonly number[] = [0, 0, 0], radius: number = 0.0) {\n    this.radius = -0;\n    this.center = new Vector3();\n    this.fromCenterRadius(center, radius);\n  }\n\n  /** Sets the bounding sphere from `center` and `radius`. */\n  fromCenterRadius(center: readonly number[], radius: number): this {\n    this.center.from(center);\n    this.radius = radius;\n    return this;\n  }\n\n  /**\n   * Computes a bounding sphere from the corner points of an axis-aligned bounding box.  The sphere\n   * tightly and fully encompasses the box.\n   */\n  fromCornerPoints(corner: readonly number[], oppositeCorner: readonly number[]): this {\n    oppositeCorner = scratchVector.from(oppositeCorner);\n    this.center = new Vector3().from(corner).add(oppositeCorner).scale(0.5);\n    this.radius = this.center.distance(oppositeCorner);\n    return this;\n  }\n\n  /** Compares the provided BoundingSphere component wise */\n  equals(right: BoundingSphere): boolean {\n    return (\n      this === right ||\n      (Boolean(right) && this.center.equals(right.center) && this.radius === right.radius)\n    );\n  }\n\n  /** Duplicates a BoundingSphere instance. */\n  clone(): BoundingSphere {\n    return new BoundingSphere(this.center, this.radius);\n  }\n\n  /** Computes a bounding sphere that contains both the left and right bounding spheres. */\n  union(boundingSphere: BoundingSphere): BoundingSphere {\n    const leftCenter = this.center;\n    const leftRadius = this.radius;\n    const rightCenter = boundingSphere.center;\n    const rightRadius = boundingSphere.radius;\n\n    const toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n    const centerSeparation = toRightCenter.magnitude();\n\n    if (leftRadius >= centerSeparation + rightRadius) {\n      // Left sphere wins.\n      return this.clone();\n    }\n\n    if (rightRadius >= centerSeparation + leftRadius) {\n      // Right sphere wins.\n      return boundingSphere.clone();\n    }\n\n    // There are two tangent points, one on far side of each sphere.\n    const halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n\n    // Compute the center point halfway between the two tangent points.\n    scratchVector2\n      .copy(toRightCenter)\n      .scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation)\n      .add(leftCenter);\n\n    this.center.copy(scratchVector2);\n    this.radius = halfDistanceBetweenTangentPoints;\n\n    return this;\n  }\n\n  /** Computes a bounding sphere by enlarging the provided sphere to contain the provided point. */\n  expand(point: readonly number[]): this {\n    const scratchPoint = scratchVector.from(point);\n    const radius = scratchPoint.subtract(this.center).magnitude();\n    if (radius > this.radius) {\n      this.radius = radius;\n    }\n    return this;\n  }\n\n  // BoundingVolume interface\n\n  /**\n   * Applies a 4x4 affine transformation matrix to a bounding sphere.\n   * @param sphere The bounding sphere to apply the transformation to.\n   * @param transform The transformation matrix to apply to the bounding sphere.\n   * @returns self.\n   */\n  transform(transform: readonly number[]): this {\n    this.center.transform(transform);\n    const scale = mat4.getScaling(scratchVector, transform);\n    this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n    return this;\n  }\n\n  /** Computes the estimated distance squared from the closest point on a bounding sphere to a point. */\n  distanceSquaredTo(point: Readonly<NumericArray>): number {\n    const d = this.distanceTo(point);\n    return d * d;\n  }\n\n  /** Computes the estimated distance from the closest point on a bounding sphere to a point. */\n  distanceTo(point: Readonly<NumericArray>): number {\n    const scratchPoint = scratchVector.from(point);\n    const delta = scratchPoint.subtract(this.center);\n    return Math.max(0, delta.len() - this.radius);\n  }\n\n  /** Determines which side of a plane a sphere is located. */\n  intersectPlane(plane: Plane): number {\n    const center = this.center;\n    const radius = this.radius;\n    const normal = plane.normal;\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    // The center point is negative side of the plane normal\n    if (distanceToPlane < -radius) {\n      return INTERSECTION.OUTSIDE;\n    }\n    // The center point is positive side of the plane, but radius extends beyond it; partial overlap\n    if (distanceToPlane < radius) {\n      return INTERSECTION.INTERSECTING;\n    }\n    // The center point and radius is positive side of the plane\n    return INTERSECTION.INSIDE;\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3, Matrix4, Quaternion, NumericArray} from '@math.gl/core';\nimport type {BoundingVolume} from './bounding-volume';\nimport BoundingSphere from './bounding-sphere';\nimport type Plane from '../plane';\nimport {INTERSECTION} from '../../constants';\n\nconst scratchVector3 = new Vector3();\nconst scratchOffset = new Vector3();\nconst scratchVectorU = new Vector3();\nconst scratchVectorV = new Vector3();\nconst scratchVectorW = new Vector3();\nconst scratchCorner = new Vector3();\nconst scratchToCenter = new Vector3();\n\nconst MATRIX3 = {\n  COLUMN0ROW0: 0,\n  COLUMN0ROW1: 1,\n  COLUMN0ROW2: 2,\n  COLUMN1ROW0: 3,\n  COLUMN1ROW1: 4,\n  COLUMN1ROW2: 5,\n  COLUMN2ROW0: 6,\n  COLUMN2ROW1: 7,\n  COLUMN2ROW2: 8\n};\n\n/**\n * An OrientedBoundingBox of some object is a closed and convex cuboid.\n * It can provide a tighter bounding volume than `BoundingSphere` or\n * `AxisAlignedBoundingBox` in many cases.\n */\nexport default class OrientedBoundingBox implements BoundingVolume {\n  center: Vector3;\n  halfAxes: Matrix3;\n\n  /**\n   * An OrientedBoundingBox of some object is a closed and convex cuboid.\n   * It can provide a tighter bounding volume than\n   * `BoundingSphere` or `AxisAlignedBoundingBox` in many cases.\n   */\n  constructor(center?: readonly number[], halfAxes?: readonly number[]);\n  constructor(center: Readonly<NumericArray> = [0, 0, 0], halfAxes = [0, 0, 0, 0, 0, 0, 0, 0, 0]) {\n    this.center = new Vector3().from(center);\n    this.halfAxes = new Matrix3(halfAxes);\n  }\n\n  /** Returns an array with three halfSizes for the bounding box */\n  get halfSize(): number[] {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    return [new Vector3(xAxis).len(), new Vector3(yAxis).len(), new Vector3(zAxis).len()];\n  }\n\n  /** Returns a quaternion describing the orientation of the bounding box */\n  get quaternion(): Quaternion {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    const normXAxis = new Vector3(xAxis).normalize();\n    const normYAxis = new Vector3(yAxis).normalize();\n    const normZAxis = new Vector3(zAxis).normalize();\n    return new Quaternion().fromMatrix3(new Matrix3([...normXAxis, ...normYAxis, ...normZAxis]));\n  }\n\n  /**\n   * Create OrientedBoundingBox from quaternion based OBB,\n   */\n  fromCenterHalfSizeQuaternion(\n    center: number[],\n    halfSize: number[],\n    quaternion: number[]\n  ): OrientedBoundingBox {\n    const quaternionObject = new Quaternion(quaternion);\n    const directionsMatrix = new Matrix3().fromQuaternion(quaternionObject);\n    directionsMatrix[0] = directionsMatrix[0] * halfSize[0];\n    directionsMatrix[1] = directionsMatrix[1] * halfSize[0];\n    directionsMatrix[2] = directionsMatrix[2] * halfSize[0];\n    directionsMatrix[3] = directionsMatrix[3] * halfSize[1];\n    directionsMatrix[4] = directionsMatrix[4] * halfSize[1];\n    directionsMatrix[5] = directionsMatrix[5] * halfSize[1];\n    directionsMatrix[6] = directionsMatrix[6] * halfSize[2];\n    directionsMatrix[7] = directionsMatrix[7] * halfSize[2];\n    directionsMatrix[8] = directionsMatrix[8] * halfSize[2];\n    this.center = new Vector3().from(center);\n    this.halfAxes = directionsMatrix;\n    return this;\n  }\n\n  /** Duplicates a OrientedBoundingBox instance. */\n  clone(): OrientedBoundingBox {\n    return new OrientedBoundingBox(this.center, this.halfAxes);\n  }\n\n  /** Compares the provided OrientedBoundingBox component wise and returns */\n  equals(right: OrientedBoundingBox): boolean {\n    return (\n      this === right ||\n      (Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes))\n    );\n  }\n\n  /** Computes a tight-fitting bounding sphere enclosing the provided oriented bounding box. */\n  getBoundingSphere(result = new BoundingSphere()): BoundingSphere {\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    // Calculate \"corner\" vector\n    const cornerVector = scratchVector3.copy(u).add(v).add(w);\n\n    result.center.copy(this.center);\n    result.radius = cornerVector.magnitude();\n\n    return result;\n  }\n\n  /** Determines which side of a plane the oriented bounding box is located. */\n  intersectPlane(plane: Plane): number {\n    const center = this.center;\n    const normal = plane.normal;\n    const halfAxes = this.halfAxes;\n\n    const normalX = normal.x;\n    const normalY = normal.y;\n    const normalZ = normal.z;\n\n    // Plane is used as if it is its normal; the first three components are assumed to be normalized\n    const radEffective =\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN0ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN0ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN0ROW2]\n      ) +\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN1ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN1ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN1ROW2]\n      ) +\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN2ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN2ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN2ROW2]\n      );\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane <= -radEffective) {\n      // The entire box is on the negative side of the plane normal\n      return INTERSECTION.OUTSIDE;\n    } else if (distanceToPlane >= radEffective) {\n      // The entire box is on the positive side of the plane normal\n      return INTERSECTION.INSIDE;\n    }\n    return INTERSECTION.INTERSECTING;\n  }\n\n  /** Computes the estimated distance from the closest point on a bounding box to a point. */\n  distanceTo(point: readonly number[]): number {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  /**\n   * Computes the estimated distance squared from the closest point\n   * on a bounding box to a point.\n   * See Geometric Tools for Computer Graphics 10.4.2\n   */\n  distanceSquaredTo(point: readonly number[]): number {\n    // Computes the estimated distance squared from the\n    // closest point on a bounding box to a point.\n    // See Geometric Tools for Computer Graphics 10.4.2\n    const offset = scratchOffset.from(point).subtract(this.center);\n\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    const uHalf = u.magnitude();\n    const vHalf = v.magnitude();\n    const wHalf = w.magnitude();\n\n    u.normalize();\n    v.normalize();\n    w.normalize();\n\n    let distanceSquared = 0.0;\n    let d;\n\n    d = Math.abs(offset.dot(u)) - uHalf;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(v)) - vHalf;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(w)) - wHalf;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n  /**\n   * The distances calculated by the vector from the center of the bounding box\n   * to position projected onto direction.\n   *\n   * - If you imagine the infinite number of planes with normal direction,\n   *   this computes the smallest distance to the closest and farthest planes\n   *   from `position` that intersect the bounding box.\n   *\n   * @param position The position to calculate the distance from.\n   * @param direction The direction from position.\n   * @param result An Interval (array of length 2) to store the nearest and farthest distances.\n   * @returns Interval (array of length 2) with nearest and farthest distances\n   *   on the bounding box from position in direction.\n   */\n  // eslint-disable-next-line max-statements\n  computePlaneDistances(\n    position: readonly number[],\n    direction: Vector3,\n    result: number[] = [-0, -0]\n  ): number[] {\n    let minDist = Number.POSITIVE_INFINITY;\n    let maxDist = Number.NEGATIVE_INFINITY;\n\n    const center = this.center;\n    const halfAxes = this.halfAxes;\n\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    // project first corner\n    const corner = scratchCorner.copy(u).add(v).add(w).add(center);\n\n    const toCenter = scratchToCenter.copy(corner).subtract(position);\n    let mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project second corner\n    corner.copy(center).add(u).add(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project third corner\n    corner.copy(center).add(u).subtract(v).add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project fourth corner\n    corner.copy(center).add(u).subtract(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project fifth corner\n    center.copy(corner).subtract(u).add(v).add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project sixth corner\n    center.copy(corner).subtract(u).add(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project seventh corner\n    center.copy(corner).subtract(u).subtract(v).add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project eighth corner\n    center.copy(corner).subtract(u).subtract(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    result[0] = minDist;\n    result[1] = maxDist;\n    return result;\n  }\n\n  /**\n   * Applies a 4x4 affine transformation matrix to a bounding sphere.\n   * @param transform The transformation matrix to apply to the bounding sphere.\n   * @returns itself, i.e. the modified BoundingVolume.\n   */\n  transform(transformation: readonly number[]): this {\n    this.center.transformAsPoint(transformation);\n\n    const xAxis = this.halfAxes.getColumn(0, scratchVectorU);\n    xAxis.transformAsPoint(transformation);\n\n    const yAxis = this.halfAxes.getColumn(1, scratchVectorV);\n    yAxis.transformAsPoint(transformation);\n\n    const zAxis = this.halfAxes.getColumn(2, scratchVectorW);\n    zAxis.transformAsPoint(transformation);\n\n    this.halfAxes = new Matrix3([...xAxis, ...yAxis, ...zAxis]);\n    return this;\n  }\n\n  getTransform(): Matrix4 {\n    // const modelMatrix = Matrix4.fromRotationTranslation(this.boundingVolume.halfAxes, this.boundingVolume.center);\n    // return modelMatrix;\n    throw new Error('not implemented');\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, equals, assert, NumericArray} from '@math.gl/core';\n\nconst scratchPosition = new Vector3();\nconst scratchNormal = new Vector3();\n\n// A plane in Hessian Normal Form\nexport default class Plane {\n  readonly normal: Vector3;\n  distance: number;\n\n  constructor(normal: Readonly<NumericArray> = [0, 0, 1], distance: number = 0) {\n    this.normal = new Vector3();\n    this.distance = -0;\n    this.fromNormalDistance(normal, distance);\n  }\n\n  /** Creates a plane from a normal and a distance from the origin. */\n  fromNormalDistance(normal: Readonly<NumericArray>, distance: number): this {\n    assert(Number.isFinite(distance));\n    this.normal.from(normal).normalize();\n    this.distance = distance;\n    return this;\n  }\n\n  /** Creates a plane from a normal and a point on the plane. */\n  fromPointNormal(point: Readonly<NumericArray>, normal: Readonly<NumericArray>): this {\n    point = scratchPosition.from(point);\n    this.normal.from(normal).normalize();\n    const distance = -this.normal.dot(point);\n    this.distance = distance;\n    return this;\n  }\n\n  /** Creates a plane from the general equation */\n  fromCoefficients(a: number, b: number, c: number, d: number): this {\n    this.normal.set(a, b, c);\n    assert(equals(this.normal.len(), 1));\n    this.distance = d;\n    return this;\n  }\n\n  /** Duplicates a Plane instance. */\n  clone(): Plane {\n    return new Plane(this.normal, this.distance);\n  }\n\n  /** Compares the provided Planes by normal and distance */\n  equals(right: Plane): boolean {\n    return equals(this.distance, right.distance) && equals(this.normal, right.normal);\n  }\n\n  /** Computes the signed shortest distance of a point to a plane.\n   * The sign of the distance determines which side of the plane the point is on.\n   */\n  getPointDistance(point: Readonly<NumericArray>): number {\n    return this.normal.dot(point) + this.distance;\n  }\n\n  /** Transforms the plane by the given transformation matrix. */\n  transform(matrix4: Readonly<NumericArray>): this {\n    const normal = scratchNormal.copy(this.normal).transformAsVector(matrix4).normalize();\n    const point = this.normal.scale(-this.distance).transform(matrix4);\n    return this.fromPointNormal(point, normal);\n  }\n\n  /** Projects a point onto the plane. */\n  projectPointOntoPlane(point: Readonly<NumericArray>, result: Vector3): Vector3;\n  projectPointOntoPlane(\n    point: Readonly<NumericArray>,\n    result?: readonly number[]\n  ): readonly number[];\n\n  projectPointOntoPlane(point, result = [0, 0, 0]) {\n    point = scratchPosition.from(point);\n    // projectedPoint = point - (normal.point + scale) * normal\n    const pointDistance = this.getPointDistance(point);\n    const scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n\n    return point.subtract(scaledNormal).to(result);\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, assert} from '@math.gl/core';\nimport {INTERSECTION} from '../constants';\nimport Plane from './plane';\nimport type {BoundingVolume} from './bounding-volumes/bounding-volume';\nimport type BoundingSphere from './bounding-volumes/bounding-sphere';\n\n// X, Y, Z Unit vectors\nconst faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\n\nconst scratchPlaneCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nconst scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\n\n/** A culling volume defined by planes. */\nexport default class CullingVolume {\n  /**\n   * For plane masks (as used in {@link CullingVolume#computeVisibilityWithPlaneMask}), this special value\n   * represents the case where the object bounding volume is entirely outside the culling volume.\n   */\n  static MASK_OUTSIDE = 0xffffffff;\n\n  /**\n   * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n   * represents the case where the object bounding volume is entirely inside the culling volume.\n   */\n  static MASK_INSIDE = 0x00000000;\n\n  /**\n   * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n   * represents the case where the object bounding volume (may) intersect all planes of the culling volume.\n   */\n  static MASK_INDETERMINATE = 0x7fffffff;\n\n  /** Array of clipping planes. */\n  readonly planes: Plane[];\n\n  /**\n   * Create a new `CullingVolume` bounded by an array of clipping planed\n   * @param planes Array of clipping planes.\n   * */\n  constructor(planes: Plane[] = []) {\n    this.planes = planes;\n  }\n\n  /**\n   * Constructs a culling volume from a bounding sphere. Creates six planes that create a box containing the sphere.\n   * The planes are aligned to the x, y, and z axes in world coordinates.\n   */\n  fromBoundingSphere(boundingSphere: BoundingSphere): CullingVolume {\n    this.planes.length = 2 * faces.length;\n\n    const center = boundingSphere.center;\n    const radius = boundingSphere.radius;\n\n    let planeIndex = 0;\n\n    for (const faceNormal of faces) {\n      let plane0 = this.planes[planeIndex];\n      let plane1 = this.planes[planeIndex + 1];\n\n      if (!plane0) {\n        plane0 = this.planes[planeIndex] = new Plane();\n      }\n      if (!plane1) {\n        plane1 = this.planes[planeIndex + 1] = new Plane();\n      }\n\n      const plane0Center = scratchPlaneCenter.copy(faceNormal).scale(-radius).add(center);\n      const plane0Distance = -faceNormal.dot(plane0Center);\n\n      plane0.fromPointNormal(plane0Center, faceNormal);\n\n      const plane1Center = scratchPlaneCenter.copy(faceNormal).scale(radius).add(center);\n\n      const negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n\n      const plane1Distance = -negatedFaceNormal.dot(plane1Center);\n\n      plane1.fromPointNormal(plane1Center, negatedFaceNormal);\n\n      planeIndex += 2;\n    }\n\n    return this;\n  }\n\n  /** Determines whether a bounding volume intersects the culling volume. */\n  computeVisibility(boundingVolume: BoundingVolume): number {\n    // const planes = this.planes;\n    let intersect: number = INTERSECTION.INSIDE;\n    for (const plane of this.planes) {\n      const result = boundingVolume.intersectPlane(plane);\n      switch (result) {\n        case INTERSECTION.OUTSIDE:\n          // We are done\n          return INTERSECTION.OUTSIDE;\n\n        case INTERSECTION.INTERSECTING:\n          // If no other intersection is outside, return INTERSECTING\n          intersect = INTERSECTION.INTERSECTING;\n          break;\n\n        default:\n      }\n    }\n\n    return intersect;\n  }\n\n  /**\n   * Determines whether a bounding volume intersects the culling volume.\n   *\n   * @param parentPlaneMask A bit mask from the boundingVolume's parent's check against the same culling\n   *   volume, such that if (planeMask & (1 << planeIndex) === 0), for k < 31, then\n   *   the parent (and therefore this) volume is completely inside plane[planeIndex]\n   *   and that plane check can be skipped.\n   */\n  computeVisibilityWithPlaneMask(boundingVolume: BoundingVolume, parentPlaneMask: number): number {\n    assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n\n    if (\n      parentPlaneMask === CullingVolume.MASK_OUTSIDE ||\n      parentPlaneMask === CullingVolume.MASK_INSIDE\n    ) {\n      // parent is completely outside or completely inside, so this child is as well.\n      return parentPlaneMask;\n    }\n\n    // Start with MASK_INSIDE (all zeros) so that after the loop, the return value can be compared with MASK_INSIDE.\n    // (Because if there are fewer than 31 planes, the upper bits wont be changed.)\n    let mask = CullingVolume.MASK_INSIDE;\n\n    const planes = this.planes;\n    for (let k = 0; k < this.planes.length; ++k) {\n      // For k greater than 31 (since 31 is the maximum number of INSIDE/INTERSECTING bits we can store), skip the optimization.\n      const flag = k < 31 ? 1 << k : 0;\n      if (k < 31 && (parentPlaneMask & flag) === 0) {\n        // boundingVolume is known to be INSIDE this plane.\n        continue;\n      }\n\n      const plane = planes[k];\n      const result = boundingVolume.intersectPlane(plane);\n      if (result === INTERSECTION.OUTSIDE) {\n        return CullingVolume.MASK_OUTSIDE;\n      } else if (result === INTERSECTION.INTERSECTING) {\n        mask |= flag;\n      }\n    }\n\n    return mask;\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Note: This class is still an experimental export, mainly used by other test cases\n// - It has not been fully adapted to math.gl conventions\n// - Documentation has not been ported\n\nimport {Vector3, Vector2, Matrix4, assert, NumericArray} from '@math.gl/core';\nimport CullingVolume from './culling-volume';\nimport Plane from './plane';\n\nconst scratchPlaneUpVector = new Vector3();\nconst scratchPlaneRightVector = new Vector3();\nconst scratchPlaneNearCenter = new Vector3();\nconst scratchPlaneFarCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\n\ntype PerspectiveOffCenterFrustumOptions = {\n  left?: number;\n  right?: number;\n  top?: number;\n  bottom?: number;\n  near?: number;\n  far?: number;\n};\n\nexport default class PerspectiveOffCenterFrustum {\n  /**\n   * Defines the left clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  left?: number;\n  private _left?: number;\n  /**\n   * Defines the right clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  right?: number;\n  private _right?: number;\n  /**\n   * Defines the top clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  top?: number;\n  private _top?: number;\n  /**\n   * Defines the bottom clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  bottom?: number;\n  private _bottom?: number;\n  /**\n   * The distance of the near plane.\n   * @type {Number}\n   * @default 1.0\n   */\n  near: number;\n  private _near: number;\n  /**\n   * The distance of the far plane.\n   * @type {Number}\n   * @default 500000000.0\n   */\n  far: number;\n  private _far: number;\n\n  private _cullingVolume = new CullingVolume([\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane()\n  ]);\n  private _perspectiveMatrix = new Matrix4();\n  private _infinitePerspective = new Matrix4();\n\n  /**\n   * The viewing frustum is defined by 6 planes.\n   * Each plane is represented by a {@link Vector4} object, where the x, y, and z components\n   * define the unit vector normal to the plane, and the w component is the distance of the\n   * plane from the origin/camera position.\n   *\n   * @alias PerspectiveOffCenterFrustum\n   *\n   * @example\n   * const frustum = new PerspectiveOffCenterFrustum({\n   *     left : -1.0,\n   *     right : 1.0,\n   *     top : 1.0,\n   *     bottom : -1.0,\n   *     near : 1.0,\n   *     far : 100.0\n   * });\n   *\n   * @see PerspectiveFrustum\n   */\n  constructor(options: PerspectiveOffCenterFrustumOptions = {}) {\n    const {near = 1.0, far = 500000000.0} = options;\n\n    this.left = options.left;\n    this._left = undefined;\n\n    this.right = options.right;\n    this._right = undefined;\n\n    this.top = options.top;\n    this._top = undefined;\n\n    this.bottom = options.bottom;\n    this._bottom = undefined;\n\n    this.near = near;\n    this._near = near;\n\n    this.far = far;\n    this._far = far;\n  }\n\n  /**\n   * Returns a duplicate of a PerspectiveOffCenterFrustum instance.\n   * @returns {PerspectiveOffCenterFrustum} A new PerspectiveFrustum instance.\n   * */\n  clone(): PerspectiveOffCenterFrustum {\n    return new PerspectiveOffCenterFrustum({\n      right: this.right,\n      left: this.left,\n      top: this.top,\n      bottom: this.bottom,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  /**\n   * Compares the provided PerspectiveOffCenterFrustum componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n   */\n  equals(other: PerspectiveOffCenterFrustum): boolean {\n    return (\n      other &&\n      other instanceof PerspectiveOffCenterFrustum &&\n      this.right === other.right &&\n      this.left === other.left &&\n      this.top === other.top &&\n      this.bottom === other.bottom &&\n      this.near === other.near &&\n      this.far === other.far\n    );\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum.\n   * @memberof PerspectiveOffCenterFrustum.prototype\n   * @type {Matrix4}\n   *\n   * @see PerspectiveOffCenterFrustum#infiniteProjectionMatrix\n   */\n  get projectionMatrix(): Matrix4 {\n    this._update();\n    return this._perspectiveMatrix;\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum with an infinite far plane.\n   * @memberof PerspectiveOffCenterFrustum.prototype\n   * @type {Matrix4}\n   *\n   * @see PerspectiveOffCenterFrustum#projectionMatrix\n   */\n  get infiniteProjectionMatrix(): Matrix4 {\n    this._update();\n    return this._infinitePerspective;\n  }\n\n  /**\n   * Creates a culling volume for this frustum.\n   * @returns {CullingVolume} A culling volume at the given position and orientation.\n   *\n   * @example\n   * // Check if a bounding volume intersects the frustum.\n   * const cullingVolume = frustum.computeCullingVolume(cameraPosition, cameraDirection, cameraUp);\n   * const intersect = cullingVolume.computeVisibility(boundingVolume);\n   */\n  // eslint-disable-next-line complexity, max-statements\n  computeCullingVolume(\n    /** A Vector3 defines the eye position. */\n    position: Readonly<NumericArray>,\n    /** A Vector3 defines the view direction. */\n    direction: Readonly<NumericArray>,\n    /** A Vector3 defines the up direction. */\n    up: Readonly<NumericArray>\n  ): CullingVolume {\n    assert(position, 'position is required.');\n    assert(direction, 'direction is required.');\n    assert(up, 'up is required.');\n\n    const planes = this._cullingVolume.planes;\n\n    up = scratchPlaneUpVector.copy(up).normalize();\n    const right = scratchPlaneRightVector.copy(direction).cross(up).normalize();\n\n    const nearCenter = scratchPlaneNearCenter\n      .copy(direction)\n      .multiplyByScalar(this.near)\n      .add(position);\n\n    const farCenter = scratchPlaneFarCenter\n      .copy(direction)\n      .multiplyByScalar(this.far)\n      .add(position);\n\n    let normal = scratchPlaneNormal;\n\n    // Left plane computation\n    normal.copy(right).multiplyByScalar(this.left).add(nearCenter).subtract(position).cross(up);\n\n    planes[0].fromPointNormal(position, normal);\n\n    // Right plane computation\n    normal\n      .copy(right)\n      .multiplyByScalar(this.right)\n      .add(nearCenter)\n      .subtract(position)\n      .cross(up)\n      .negate();\n\n    planes[1].fromPointNormal(position, normal);\n\n    // Bottom plane computation\n    normal\n      .copy(up)\n      .multiplyByScalar(this.bottom)\n      .add(nearCenter)\n      .subtract(position)\n      .cross(right)\n      .negate();\n\n    planes[2].fromPointNormal(position, normal);\n\n    // Top plane computation\n    normal.copy(up).multiplyByScalar(this.top).add(nearCenter).subtract(position).cross(right);\n\n    planes[3].fromPointNormal(position, normal);\n\n    normal = new Vector3().copy(direction);\n\n    // Near plane computation\n    planes[4].fromPointNormal(nearCenter, normal);\n\n    // Far plane computation\n    normal.negate();\n\n    planes[5].fromPointNormal(farCenter, normal);\n\n    return this._cullingVolume;\n  }\n\n  /**\n   * Returns the pixel's width and height in meters.\n   *\n   * @returns {Vector2} The modified result parameter or a new instance of {@link Vector2} with the pixel's width and height in the x and y properties, respectively.\n   *\n   * @exception {DeveloperError} drawingBufferWidth must be greater than zero.\n   * @exception {DeveloperError} drawingBufferHeight must be greater than zero.\n   *\n   * @example\n   * // Example 1\n   * // Get the width and height of a pixel.\n   * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, 1.0, new Vector2());\n   *\n   * @example\n   * // Example 2\n   * // Get the width and height of a pixel if the near plane was set to 'distance'.\n   * // For example, get the size of a pixel of an image on a billboard.\n   * const position = camera.position;\n   * const direction = camera.direction;\n   * const toCenter = Vector3.subtract(primitive.boundingVolume.center, position, new Vector3());      // vector from camera to a primitive\n   * const toCenterProj = Vector3.multiplyByScalar(direction, Vector3.dot(direction, toCenter), new Vector3()); // project vector onto camera direction vector\n   * const distance = Vector3.magnitude(toCenterProj);\n   * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, distance, new Vector2());\n   */\n  getPixelDimensions(\n    /** The width of the drawing buffer. */\n    drawingBufferWidth: number,\n    /** The height of the drawing buffer. */\n    drawingBufferHeight: number,\n    /** The distance to the near plane in meters. */\n    distance: number,\n    /** The object onto which to store the result. */\n    result: Vector2\n  ): Vector2 {\n    this._update();\n\n    assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n    // 'Both drawingBufferWidth and drawingBufferHeight are required.'\n    assert(drawingBufferWidth > 0);\n    // 'drawingBufferWidth must be greater than zero.'\n    assert(drawingBufferHeight > 0);\n    // 'drawingBufferHeight must be greater than zero.'\n    assert(distance > 0);\n    // 'distance is required.');\n    assert(result);\n    // 'A result object is required.');\n\n    const inverseNear = 1.0 / this.near;\n    let tanTheta = this.top * inverseNear;\n    const pixelHeight = (2.0 * distance * tanTheta) / drawingBufferHeight;\n    tanTheta = this.right * inverseNear;\n    const pixelWidth = (2.0 * distance * tanTheta) / drawingBufferWidth;\n\n    result.x = pixelWidth;\n    result.y = pixelHeight;\n    return result;\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  private _update() {\n    assert(\n      Number.isFinite(this.right) &&\n        Number.isFinite(this.left) &&\n        Number.isFinite(this.top) &&\n        Number.isFinite(this.bottom) &&\n        Number.isFinite(this.near) &&\n        Number.isFinite(this.far)\n    );\n    // throw new DeveloperError('right, left, top, bottom, near, or far parameters are not set.');\n\n    const {top, bottom, right, left, near, far} = this;\n\n    if (\n      top !== this._top ||\n      bottom !== this._bottom ||\n      left !== this._left ||\n      right !== this._right ||\n      near !== this._near ||\n      far !== this._far\n    ) {\n      assert(\n        this.near > 0 && this.near < this.far,\n        'near must be greater than zero and less than far.'\n      );\n\n      this._left = left;\n      this._right = right;\n      this._top = top;\n      this._bottom = bottom;\n      this._near = near;\n      this._far = far;\n      this._perspectiveMatrix = new Matrix4().frustum({\n        left,\n        right,\n        bottom,\n        top,\n        near,\n        far\n      });\n      this._infinitePerspective = new Matrix4().frustum({\n        left,\n        right,\n        bottom,\n        top,\n        near,\n        far: Infinity\n      });\n    }\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3} from '@math.gl/core';\nimport BoundingSphere from '../bounding-volumes/bounding-sphere';\n\n/* eslint-disable */\nconst fromPointsXMin = new Vector3();\nconst fromPointsYMin = new Vector3();\nconst fromPointsZMin = new Vector3();\nconst fromPointsXMax = new Vector3();\nconst fromPointsYMax = new Vector3();\nconst fromPointsZMax = new Vector3();\nconst fromPointsCurrentPos = new Vector3();\nconst fromPointsScratch = new Vector3();\nconst fromPointsRitterCenter = new Vector3();\nconst fromPointsMinBoxPt = new Vector3();\nconst fromPointsMaxBoxPt = new Vector3();\nconst fromPointsNaiveCenterScratch = new Vector3();\nconst volumeConstant = (4.0 / 3.0) * Math.PI;\n\n/**\n * Computes a tight-fitting bounding sphere enclosing a list of 3D Cartesian points.\n *\n * The bounding sphere is computed by running two algorithms, a naive algorithm and\n * Ritter's algorithm. The smaller of the two spheres is used to ensure a tight fit.\n * Bounding sphere computation article http://blogs.agi.com/insight3d/index.php/2008/02/04/a-bounding\n *\n * @param positions An array of points that the bounding sphere will enclose.\n * @param result Optional object onto which to store the result.\n * @returns The modified result parameter or a new `BoundingSphere` instance if not provided.\n */\nexport default function makeBoundingSphereFromPoints(\n  positions: number[][],\n  result: BoundingSphere = new BoundingSphere()\n): BoundingSphere {\n  if (!positions || positions.length === 0) {\n    return result.fromCenterRadius([0, 0, 0], 0);\n  }\n\n  const currentPos = fromPointsCurrentPos.copy(positions[0]);\n\n  const xMin = fromPointsXMin.copy(currentPos);\n  const yMin = fromPointsYMin.copy(currentPos);\n  const zMin = fromPointsZMin.copy(currentPos);\n\n  const xMax = fromPointsXMax.copy(currentPos);\n  const yMax = fromPointsYMax.copy(currentPos);\n  const zMax = fromPointsZMax.copy(currentPos);\n\n  for (const position of positions) {\n    currentPos.copy(position);\n\n    const x = currentPos.x;\n    const y = currentPos.y;\n    const z = currentPos.z;\n\n    // Store points containing the the smallest and largest components\n    if (x < xMin.x) {\n      xMin.copy(currentPos);\n    }\n\n    if (x > xMax.x) {\n      xMax.copy(currentPos);\n    }\n\n    if (y < yMin.y) {\n      yMin.copy(currentPos);\n    }\n\n    if (y > yMax.y) {\n      yMax.copy(currentPos);\n    }\n\n    if (z < zMin.z) {\n      zMin.copy(currentPos);\n    }\n\n    if (z > zMax.z) {\n      zMax.copy(currentPos);\n    }\n  }\n\n  // Compute x-, y-, and z-spans (Squared distances b/n each component's min. and max.).\n  const xSpan = fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();\n  const ySpan = fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();\n  const zSpan = fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();\n\n  // Set the diameter endpoints to the largest span.\n  let diameter1 = xMin;\n  let diameter2 = xMax;\n  let maxSpan = xSpan;\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  // Calculate the center of the initial sphere found by Ritter's algorithm\n  const ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n\n  // Calculate the radius of the initial sphere found by Ritter's algorithm\n  let radiusSquared = fromPointsScratch.copy(diameter2).subtract(ritterCenter).magnitudeSquared();\n  let ritterRadius = Math.sqrt(radiusSquared);\n\n  // Find the center of the sphere found using the Naive method.\n  const minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n\n  const maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n\n  const naiveCenter = fromPointsNaiveCenterScratch\n    .copy(minBoxPt)\n    .add(maxBoxPt)\n    .multiplyByScalar(0.5);\n\n  // Begin 2nd pass to find naive radius and modify the ritter sphere.\n  let naiveRadius = 0;\n  for (const position of positions) {\n    currentPos.copy(position);\n\n    // Find the furthest point from the naive center to calculate the naive radius.\n    const r = fromPointsScratch.copy(currentPos).subtract(naiveCenter).magnitude();\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    // Make adjustments to the Ritter Sphere to include all points.\n    const oldCenterToPointSquared = fromPointsScratch\n      .copy(currentPos)\n      .subtract(ritterCenter)\n      .magnitudeSquared();\n\n    if (oldCenterToPointSquared > radiusSquared) {\n      const oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      // Calculate new radius to include the point that lies outside\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      // Calculate center of new Ritter sphere\n      const oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n      ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n      ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    ritterCenter.to(result.center);\n    result.radius = ritterRadius;\n  } else {\n    naiveCenter.to(result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Matrix3, _MathUtils} from '@math.gl/core';\n\nconst scratchMatrix = new Matrix3();\nconst scratchUnitary = new Matrix3();\nconst scratchDiagonal = new Matrix3();\n\nconst jMatrix = new Matrix3();\nconst jMatrixTranspose = new Matrix3();\n\nexport type EigenDecomposition = {\n  unitary: Matrix3;\n  diagonal: Matrix3;\n};\n\n/**\n * Computes the eigenvectors and eigenvalues of a symmetric matrix.\n *\n * - Returns a diagonal matrix and unitary matrix such that:\n * `matrix = unitary matrix * diagonal matrix * transpose(unitary matrix)`\n * - The values along the diagonal of the diagonal matrix are the eigenvalues. The columns\n * of the unitary matrix are the corresponding eigenvectors.\n * - This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n * section 8.4.3 The Classical Jacobi Algorithm\n *\n * @param matrix The 3x3 matrix to decompose into diagonal and unitary matrix. Expected to be symmetric.\n * @param result Optional object with unitary and diagonal properties which are matrices onto which to store the result.\n * @returns An object with unitary and diagonal properties which are the unitary and diagonal matrices, respectively.\n *\n * @example\n * const a = //... symmetric matrix\n * const result = {\n *   unitary : new Matrix3(),\n *   diagonal : new Matrix3()\n * };\n * computeEigenDecomposition(a, result);\n *\n * const unitaryTranspose = Matrix3.transpose(result.unitary, new Matrix3());\n * const b = Matrix3.multiply(result.unitary, result.diagonal, new Matrix3());\n * Matrix3.multiply(b, unitaryTranspose, b); // b is now equal to a\n *\n * const lambda = result.diagonal.getColumn(0, new Vector3()).x;  // first eigenvalue\n * const v = result.unitary.getColumn(0, new Vector3());          // first eigenvector\n * const c = v.multiplyByScalar(lambda);                          // equal to v.transformByMatrix3(a)\n */\nexport default function computeEigenDecomposition(\n  matrix: number[],\n  // @ts-expect-error accept empty object type\n  result: EigenDecomposition = {}\n): EigenDecomposition {\n  const EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n  const EIGEN_MAX_SWEEPS = 10;\n\n  let count = 0;\n  let sweep = 0;\n\n  const unitaryMatrix = scratchUnitary;\n  const diagonalMatrix = scratchDiagonal;\n\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n\n  const epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n\n    jMatrixTranspose.copy(jMatrix).transpose();\n\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix: Matrix3): number {\n  let norm = 0.0;\n  for (let i = 0; i < 9; ++i) {\n    const temp = matrix[i];\n    norm += temp * temp;\n  }\n  return Math.sqrt(norm);\n}\n\nconst rowVal = [1, 0, 0];\nconst colVal = [2, 2, 1];\n\n// Computes the \"off-diagonal\" Frobenius norm.\n// Assumes matrix is symmetric.\nfunction offDiagonalFrobeniusNorm(matrix: Matrix3): number {\n  let norm = 0.0;\n  for (let i = 0; i < 3; ++i) {\n    const temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n  return Math.sqrt(norm);\n}\n\n// The routine takes a matrix, which is assumed to be symmetric, and\n// finds the largest off-diagonal term, and then creates\n// a matrix (result) which can be used to help reduce it\n//\n// This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n// section 8.4.2 The 2by2 Symmetric Schur Decomposition.\n//\n// eslint-disable-next-line max-statements\nfunction shurDecomposition(matrix: Matrix3, result: Matrix3): Matrix3 {\n  const tolerance = _MathUtils.EPSILON15;\n\n  let maxDiagonal = 0.0;\n  let rotAxis = 1;\n\n  // find pivot (rotAxis) based on max diagonal of matrix\n  for (let i = 0; i < 3; ++i) {\n    const temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  const p = rowVal[rotAxis];\n  const q = colVal[rotAxis];\n\n  let c = 1.0;\n  let s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    const qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    const pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    const qp = matrix[scratchMatrix.getElementIndex(q, p)];\n\n    const tau = (qq - pp) / 2.0 / qp;\n    let t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  // Copy into result\n  Matrix3.IDENTITY.to(result);\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n\n  return result;\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\n\nconst scratchVector2 = new Vector3();\n\nconst scratchVector3 = new Vector3();\n\nconst scratchVector4 = new Vector3();\n\nconst scratchVector5 = new Vector3();\n\nconst scratchVector6 = new Vector3();\n\nconst scratchCovarianceResult = new Matrix3();\n\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\n\n/**\n * Computes an instance of an OrientedBoundingBox of the given positions.\n *\n * This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n * Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n */\n/* eslint-disable max-statements */\nexport function makeOrientedBoundingBoxFromPoints(\n  positions: number[][],\n  result: OrientedBoundingBox = new OrientedBoundingBox()\n): OrientedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  const {unitary} = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    scratchVector2.copy(position);\n\n    u1 = Math.max(scratchVector2.dot(v1), u1);\n    u2 = Math.max(scratchVector2.dot(v2), u2);\n    u3 = Math.max(scratchVector2.dot(v3), u3);\n\n    l1 = Math.min(scratchVector2.dot(v1), l1);\n    l2 = Math.min(scratchVector2.dot(v2), l2);\n    l3 = Math.min(scratchVector2.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n\n  result.center.copy(v1).add(v2).add(v3);\n\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n\n  return result;\n}\n\n/**\n * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\n * finding the points spaced the farthest apart on the x, y, and z axes.\n */\nexport function makeAxisAlignedBoundingBoxFromPoints(\n  positions: readonly number[][],\n  result: AxisAlignedBoundingBox = new AxisAlignedBoundingBox()\n): AxisAlignedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  let minimumX = positions[0][0];\n  let minimumY = positions[0][1];\n  let minimumZ = positions[0][2];\n\n  let maximumX = positions[0][0];\n  let maximumY = positions[0][1];\n  let maximumZ = positions[0][2];\n\n  for (const p of positions) {\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n    minimumZ = Math.min(z, minimumZ);\n    maximumZ = Math.max(z, maximumZ);\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n\n  return result;\n}\n", "import {Viewport, WebMercatorViewport, _GlobeViewport} from '@deck.gl/core';\n\nimport {\n  CullingVolume,\n  Plane,\n  AxisAlignedBoundingBox,\n  makeOrientedBoundingBoxFromPoints\n} from '@math.gl/culling';\nimport {lngLatToWorld} from '@math.gl/web-mercator';\nimport {Bounds, TileIndex, ZRange} from './types';\nimport {osmTile2lngLat} from './utils';\n\nconst TILE_SIZE = 512;\n// number of world copies to check\nconst MAX_MAPS = 3;\n// for calculating bounding volume of a tile in a non-web-mercator viewport\nconst REF_POINTS_5 = [\n  [0.5, 0.5],\n  [0, 0],\n  [0, 1],\n  [1, 0],\n  [1, 1]\n]; // 4 corners and center\nconst REF_POINTS_9 = REF_POINTS_5.concat([\n  [0, 0.5],\n  [0.5, 0],\n  [1, 0.5],\n  [0.5, 1]\n]); // 4 corners, center and 4 mid points\nconst REF_POINTS_11 = REF_POINTS_9.concat([\n  [0.25, 0.5],\n  [0.75, 0.5]\n]); // 2 additional points on equator for top tile\n\nclass OSMNode {\n  x: number;\n  y: number;\n  z: number;\n\n  private childVisible?: boolean;\n  private selected?: boolean;\n\n  private _children?: OSMNode[];\n\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  get children() {\n    if (!this._children) {\n      const x = this.x * 2;\n      const y = this.y * 2;\n      const z = this.z + 1;\n      this._children = [\n        new OSMNode(x, y, z),\n        new OSMNode(x, y + 1, z),\n        new OSMNode(x + 1, y, z),\n        new OSMNode(x + 1, y + 1, z)\n      ];\n    }\n    return this._children;\n  }\n\n  // eslint-disable-next-line complexity\n  update(params: {\n    viewport: Viewport;\n    project: ((xyz: number[]) => number[]) | null;\n    cullingVolume: CullingVolume;\n    elevationBounds: ZRange;\n    minZ: number;\n    maxZ: number;\n    bounds?: Bounds;\n    offset: number;\n  }) {\n    const {viewport, cullingVolume, elevationBounds, minZ, maxZ, bounds, offset, project} = params;\n    const boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n\n    // First, check if this tile is visible\n    if (bounds && !this.insideBounds(bounds)) {\n      return false;\n    }\n\n    const isInside = cullingVolume.computeVisibility(boundingVolume);\n    if (isInside < 0) {\n      return false;\n    }\n\n    // Avoid loading overlapping tiles - if a descendant is requested, do not request the ancester\n    if (!this.childVisible) {\n      let {z} = this;\n      if (z < maxZ && z >= minZ) {\n        // Adjust LOD\n        // If the tile is far enough from the camera, accept a lower zoom level\n        const distance =\n          (boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale) / viewport.height;\n        z += Math.floor(Math.log2(distance));\n      }\n      if (z >= maxZ) {\n        // LOD is acceptable\n        this.selected = true;\n        return true;\n      }\n    }\n\n    // LOD is not enough, recursively test child tiles\n    this.selected = false;\n    this.childVisible = true;\n    for (const child of this.children) {\n      child.update(params);\n    }\n    return true;\n  }\n\n  getSelected(result: OSMNode[] = []): OSMNode[] {\n    if (this.selected) {\n      result.push(this);\n    }\n    if (this._children) {\n      for (const node of this._children) {\n        node.getSelected(result);\n      }\n    }\n    return result;\n  }\n\n  insideBounds([minX, minY, maxX, maxY]: Bounds): boolean {\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n\n    return (\n      this.x * extent < maxX &&\n      this.y * extent < maxY &&\n      (this.x + 1) * extent > minX &&\n      (this.y + 1) * extent > minY\n    );\n  }\n\n  getBoundingVolume(\n    zRange: ZRange,\n    worldOffset: number,\n    project: ((xyz: number[]) => number[]) | null\n  ) {\n    if (project) {\n      // Custom projection\n      // Estimate bounding box from sample points\n      // At low zoom level we need more samples to calculate the bounding volume correctly\n      const refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n\n      // Convert from tile-relative coordinates to common space\n      const refPointPositions: number[][] = [];\n      for (const p of refPoints) {\n        const lngLat: number[] = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n        lngLat[2] = zRange[0];\n        refPointPositions.push(project(lngLat));\n\n        if (zRange[0] !== zRange[1]) {\n          // Account for the elevation volume\n          lngLat[2] = zRange[1];\n          refPointPositions.push(project(lngLat));\n        }\n      }\n\n      return makeOrientedBoundingBoxFromPoints(refPointPositions);\n    }\n\n    // Use WebMercator projection\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    const originX = this.x * extent + worldOffset * TILE_SIZE;\n    // deck's common space is y-flipped\n    const originY = TILE_SIZE - (this.y + 1) * extent;\n\n    return new AxisAlignedBoundingBox(\n      [originX, originY, zRange[0]],\n      [originX + extent, originY + extent, zRange[1]]\n    );\n  }\n}\n\n// eslint-disable-next-line complexity\nexport function getOSMTileIndices(\n  viewport: Viewport,\n  maxZ: number,\n  zRange: ZRange | undefined,\n  bounds?: Bounds\n): TileIndex[] {\n  const project: ((xyz: number[]) => number[]) | null =\n    viewport instanceof _GlobeViewport && viewport.resolution\n      ? // eslint-disable-next-line @typescript-eslint/unbound-method\n        viewport.projectPosition\n      : null;\n\n  // Get the culling volume of the current camera\n  const planes: Plane[] = Object.values(viewport.getFrustumPlanes()).map(\n    ({normal, distance}) => new Plane(normal.clone().negate(), distance)\n  );\n  const cullingVolume = new CullingVolume(planes);\n\n  // Project zRange from meters to common space\n  const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  const elevationMin = (zRange && zRange[0] * unitsPerMeter) || 0;\n  const elevationMax = (zRange && zRange[1] * unitsPerMeter) || 0;\n\n  // Always load at the current zoom level if pitch is small\n  const minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n\n  // Map extent to OSM position\n  if (bounds) {\n    const [minLng, minLat, maxLng, maxLat] = bounds;\n    const topLeft = lngLatToWorld([minLng, maxLat]);\n    const bottomRight = lngLatToWorld([maxLng, minLat]);\n    bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n  }\n\n  const root = new OSMNode(0, 0, 0);\n  const traversalParams = {\n    viewport,\n    project,\n    cullingVolume,\n    elevationBounds: [elevationMin, elevationMax] as ZRange,\n    minZ,\n    maxZ,\n    bounds,\n    // num. of worlds from the center. For repeated maps\n    offset: 0\n  };\n\n  root.update(traversalParams);\n\n  if (\n    viewport instanceof WebMercatorViewport &&\n    viewport.subViewports &&\n    viewport.subViewports.length > 1\n  ) {\n    // Check worlds in repeated maps\n    traversalParams.offset = -1;\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n    traversalParams.offset = 1;\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n\n  return root.getSelected();\n}\n", "import {Viewport} from '@deck.gl/core';\nimport {Matrix4} from '@math.gl/core';\nimport {getOSMTileIndices} from './tile-2d-traversal';\nimport {Bounds, GeoBoundingBox, TileBoundingBox, TileIndex, ZRange} from './types';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT: Bounds = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport type URLTemplate = string | string[] | null;\n\nexport const urlType = {\n  type: 'object' as const,\n  value: null as URLTemplate,\n  validate: (value, propType) =>\n    (propType.optional && value === null) ||\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equal: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nfunction transformBox(bbox: Bounds, modelMatrix: Matrix4): Bounds {\n  const transformedCoords = [\n    // top-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[1]]),\n    // top-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[1]]),\n    // bottom-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[3]]),\n    // bottom-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[3]])\n  ];\n  const transformedBox: Bounds = [\n    // Minimum x coord\n    Math.min(...transformedCoords.map(i => i[0])),\n    // Minimum y coord\n    Math.min(...transformedCoords.map(i => i[1])),\n    // Max x coord\n    Math.max(...transformedCoords.map(i => i[0])),\n    // Max y coord\n    Math.max(...transformedCoords.map(i => i[1]))\n  ];\n  return transformedBox;\n}\n\nfunction stringHash(s: string): number {\n  return Math.abs(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));\n}\n\nexport function getURLFromTemplate(\n  template: URLTemplate,\n  tile: {\n    index: TileIndex;\n    id: string;\n  }\n): string | null {\n  if (!template || !template.length) {\n    return null;\n  }\n  const {index, id} = tile;\n\n  if (Array.isArray(template)) {\n    const i = stringHash(id) % template.length;\n    template = template[i];\n  }\n\n  let url = template;\n  for (const key of Object.keys(index)) {\n    const regex = new RegExp(`{${key}}`, 'g');\n    url = url.replace(regex, String(index[key]));\n  }\n\n  // Back-compatible support for {-y}\n  if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n    url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n  }\n  return url;\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport: Viewport, zRange: number[] | null, extent: Bounds): Bounds {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [\n      // Top corner should not be more then bottom corner in either direction\n      Math.max(Math.min(bounds[0], extent[2]), extent[0]),\n      Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n      // Bottom corner should not be less then top corner in either direction\n      Math.min(Math.max(bounds[2], extent[0]), extent[2]),\n      Math.min(Math.max(bounds[3], extent[1]), extent[3])\n    ];\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\n/** Get culling bounds in world space */\nexport function getCullBounds({\n  viewport,\n  z = 0,\n  cullRect\n}: {\n  /** Current viewport */\n  viewport: Viewport;\n  /** Current z range */\n  z: ZRange | number | undefined;\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number};\n}): [number, number, number, number][] {\n  const subViewports = viewport.subViewports || [viewport];\n  return subViewports.map(v => getCullBoundsInViewport(v, z, cullRect));\n}\n\nfunction getCullBoundsInViewport(\n  /** Current viewport */\n  viewport: Viewport,\n  /** At altitude */\n  z: ZRange | number,\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number}\n): [number, number, number, number] {\n  if (!Array.isArray(z)) {\n    const x = cullRect.x - viewport.x;\n    const y = cullRect.y - viewport.y;\n    const {width, height} = cullRect;\n\n    const unprojectOption = {targetZ: z};\n\n    const topLeft = viewport.unproject([x, y], unprojectOption);\n    const topRight = viewport.unproject([x + width, y], unprojectOption);\n    const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n    const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n  const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n\n  return [\n    Math.min(bounds0[0], bounds1[0]),\n    Math.min(bounds0[1], bounds1[1]),\n    Math.max(bounds0[2], bounds1[2]),\n    Math.max(bounds0[3], bounds1[3])\n  ];\n}\n\nfunction getIndexingCoords(bbox: Bounds, scale: number, modelMatrixInverse?: Matrix4): Bounds {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(\n      i => (i * scale) / TILE_SIZE\n    );\n    return transformedTileIndex as Bounds;\n  }\n  return bbox.map(i => (i * scale) / TILE_SIZE) as Bounds;\n}\n\nfunction getScale(z: number, tileSize: number): number {\n  return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function osmTile2lngLat(x: number, y: number, z: number): [number, number] {\n  const scale = getScale(z, TILE_SIZE);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x: number, y: number, z: number, tileSize: number): [number, number] {\n  const scale = getScale(z, tileSize);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\nexport function tileToBoundingBox(\n  viewport: Viewport,\n  x: number,\n  y: number,\n  z: number,\n  tileSize: number = TILE_SIZE\n): TileBoundingBox {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(\n  viewport: Viewport,\n  z: number,\n  tileSize: number,\n  extent: Bounds,\n  modelMatrixInverse?: Matrix4\n) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z, tileSize);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices: TileIndex[] = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({\n  viewport,\n  maxZoom,\n  minZoom,\n  zRange,\n  extent,\n  tileSize = TILE_SIZE,\n  modelMatrix,\n  modelMatrixInverse,\n  zoomOffset = 0\n}: {\n  viewport: Viewport;\n  maxZoom?: number;\n  minZoom?: number;\n  zRange: ZRange | undefined;\n  extent?: Bounds;\n  tileSize?: number;\n  modelMatrix?: Matrix4;\n  modelMatrixInverse?: Matrix4;\n  zoomOffset?: number;\n}) {\n  let z = viewport.isGeospatial\n    ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset\n    : Math.ceil(viewport.zoom) + zoomOffset;\n  if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent)\n    : getIdentityTileIndices(\n        viewport,\n        z,\n        tileSize,\n        transformedExtent || DEFAULT_EXTENT,\n        modelMatrixInverse\n      );\n}\n\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s: string): boolean {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\n\nexport function isGeoBoundingBox(v: any): v is GeoBoundingBox {\n  return (\n    Number.isFinite(v.west) &&\n    Number.isFinite(v.north) &&\n    Number.isFinite(v.east) &&\n    Number.isFinite(v.south)\n  );\n}\n", "// deck.gl, MIT license\n// @note - this is a duplicate of the deck.gl core export (because Tileset2D should be deck.gl independent)\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param compute - the function to be memoized\n */\nexport function memoize<In, Out>(compute: (args: In) => Out): (args: In) => Out {\n  let cachedArgs: any = {};\n  let cachedResult: Out;\n\n  return (args: In) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n", "import {Viewport} from '@deck.gl/core';\n\nimport {RequestScheduler} from '@loaders.gl/loader-utils';\nimport {Matrix4, equals} from '@math.gl/core';\n\nimport {Tile2DHeader} from './tile-2d-header';\n\nimport {getTileIndices, tileToBoundingBox, getCullBounds} from './utils';\nimport {Bounds, TileIndex, ZRange} from './types';\nimport {TileLoadProps} from './types';\nimport {memoize} from './memoize';\n\n// bit masks\nconst TILE_STATE_VISITED = 1;\nconst TILE_STATE_VISIBLE = 2;\n/*\n   show cached parent tile if children are loading\n   +-----------+       +-----+            +-----+-----+\n   |           |       |     |            |     |     |\n   |           |       |     |            |     |     |\n   |           |  -->  +-----+-----+  ->  +-----+-----+\n   |           |             |     |      |     |     |\n   |           |             |     |      |     |     |\n   +-----------+             +-----+      +-----+-----+\n\n   show cached children tiles when parent is loading\n   +-------+----       +------------\n   |       |           |\n   |       |           |\n   |       |           |\n   +-------+----  -->  |\n   |       |           |\n */\n\nexport const STRATEGY_NEVER = 'never';\nexport const STRATEGY_REPLACE = 'no-overlap';\nexport const STRATEGY_DEFAULT = 'best-available';\n\nexport type RefinementStrategyFunction = (tiles: Tile2DHeader[]) => void;\nexport type RefinementStrategy =\n  | 'never'\n  | 'no-overlap'\n  | 'best-available'\n  | RefinementStrategyFunction;\n\nconst DEFAULT_CACHE_SCALE = 5;\n\nconst STRATEGIES = {\n  [STRATEGY_DEFAULT]: updateTileStateDefault,\n  [STRATEGY_REPLACE]: updateTileStateReplace,\n  [STRATEGY_NEVER]: () => {}\n};\n\nexport type Tileset2DProps<DataT = any> = {\n  /** `getTileData` is called to retrieve the data of each tile. */\n  getTileData: (props: TileLoadProps) => Promise<DataT> | DataT;\n\n  /** The bounding box of the layer's data. */\n  extent?: number[] | null;\n  /** The pixel dimension of the tiles, usually a power of 2. */\n  tileSize?: number;\n  /** The max zoom level of the layer's data. @default null */\n  maxZoom?: number | null;\n  /** The min zoom level of the layer's data. @default 0 */\n  minZoom?: number | null;\n  /** The maximum number of tiles that can be cached. */\n  maxCacheSize?: number | null;\n  /** The maximum memory used for caching tiles. @default null */\n  maxCacheByteSize?: number | null;\n  /** How the tile layer refines the visibility of tiles. @default 'best-available' */\n  refinementStrategy?: RefinementStrategy;\n  /** Range of minimum and maximum heights in the tile. */\n  zRange?: ZRange | null;\n  /** The maximum number of concurrent getTileData calls. @default 6 */\n  maxRequests?: number;\n  /** Changes the zoom level at which the tiles are fetched. Needs to be an integer. @default 0 */\n  zoomOffset?: number;\n\n  /** Called when a tile successfully loads. */\n  onTileLoad?: (tile: Tile2DHeader<DataT>) => void;\n  /** Called when a tile is cleared from cache. */\n  onTileUnload?: (tile: Tile2DHeader<DataT>) => void;\n  /** Called when a tile failed to load. */\n  onTileError?: (err: any, tile: Tile2DHeader<DataT>) => void;\n\n  // onTileLoad: (tile: Tile2DHeader) => void;\n  // onTileUnload: (tile: Tile2DHeader) => void;\n  // onTileError: (error: any, tile: Tile2DHeader) => void;\n  /** Called when all tiles in the current viewport are loaded. */\n  // sonViewportLoad?: ((tiles: Tile2DHeader<DataT>[]) => void) | null;\n};\n\nexport const DEFAULT_TILESET2D_PROPS: Omit<Required<Tileset2DProps>, 'getTileData'> = {\n  extent: null,\n  tileSize: 512,\n\n  maxZoom: null,\n  minZoom: null,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: 'best-available',\n  zRange: null,\n  maxRequests: 6,\n  zoomOffset: 0,\n\n  // onTileLoad: (tile: Tile2DHeader) => void,  // onTileUnload: (tile: Tile2DHeader) => void,  // onTileError: (error: any, tile: Tile2DHeader) => void,  /** Called when all tiles in the current viewport are loaded. */\n  // onViewportLoad: ((tiles: Tile2DHeader<DataT>[]) => void) | null,\n  onTileLoad: () => {},\n  onTileUnload: () => {},\n  onTileError: () => {}\n};\n\n/**\n * Manages loading and purging of tile data. This class caches recently visited tiles\n * and only creates new tiles if they are present.\n */\nexport class Tileset2D {\n  private opts: Required<Tileset2DProps>;\n  private _requestScheduler: RequestScheduler;\n  private _cache: Map<string, Tile2DHeader>;\n  private _dirty: boolean;\n  private _tiles: Tile2DHeader[];\n\n  private _cacheByteSize: number;\n  private _viewport: Viewport | null;\n  private _zRange?: ZRange;\n  private _selectedTiles: Tile2DHeader[] | null;\n  private _frameNumber: number;\n  private _modelMatrix: Matrix4;\n  private _modelMatrixInverse: Matrix4;\n\n  private _maxZoom?: number;\n  private _minZoom?: number;\n\n  private onTileLoad: (tile: Tile2DHeader) => void;\n\n  /**\n   * Takes in a function that returns tile data, a cache size, and a max and a min zoom level.\n   * Cache size defaults to 5 * number of tiles in the current viewport\n   */\n  constructor(opts: Tileset2DProps) {\n    this.opts = {...DEFAULT_TILESET2D_PROPS, ...opts};\n\n    this.onTileLoad = tile => {\n      this.opts.onTileLoad?.(tile);\n      if (this.opts.maxCacheByteSize) {\n        this._cacheByteSize += tile.byteLength;\n        this._resizeCache();\n      }\n    };\n\n    this._requestScheduler = new RequestScheduler({\n      maxRequests: opts.maxRequests,\n      throttleRequests: Boolean(opts.maxRequests && opts.maxRequests > 0)\n    });\n\n    // Maps tile id in string {z}-{x}-{y} to a Tile object\n    this._cache = new Map();\n    this._tiles = [];\n    this._dirty = false;\n    this._cacheByteSize = 0;\n\n    // Cache the last processed viewport\n    this._viewport = null;\n    this._selectedTiles = null;\n    this._frameNumber = 0;\n\n    this._modelMatrix = new Matrix4();\n    this._modelMatrixInverse = new Matrix4();\n\n    this.setOptions(opts);\n  }\n\n  /* Public API */\n  get tiles() {\n    return this._tiles;\n  }\n\n  get selectedTiles(): Tile2DHeader[] | null {\n    return this._selectedTiles;\n  }\n\n  get isLoaded(): boolean {\n    return this._selectedTiles !== null && this._selectedTiles.every(tile => tile.isLoaded);\n  }\n\n  get needsReload(): boolean {\n    return this._selectedTiles !== null && this._selectedTiles.some(tile => tile.needsReload);\n  }\n\n  setOptions(opts: Tileset2DProps): void {\n    Object.assign(this.opts, opts);\n    if (Number.isFinite(opts.maxZoom)) {\n      this._maxZoom = Math.floor(opts.maxZoom as number);\n    }\n    if (Number.isFinite(opts.minZoom)) {\n      this._minZoom = Math.ceil(opts.minZoom as number);\n    }\n  }\n\n  // Clean up any outstanding tile requests.\n  finalize(): void {\n    for (const tile of this._cache.values()) {\n      if (tile.isLoading) {\n        tile.abort();\n      }\n    }\n    this._cache.clear();\n    this._tiles = [];\n    this._selectedTiles = null;\n  }\n\n  reloadAll(): void {\n    for (const id of this._cache.keys()) {\n      const tile = this._cache.get(id) as Tile2DHeader;\n      if (!this._selectedTiles || !this._selectedTiles.includes(tile)) {\n        this._cache.delete(id);\n      } else {\n        tile.setNeedsReload();\n      }\n    }\n  }\n\n  /**\n   * Update the cache with the given viewport and model matrix and triggers callback onUpdate.\n   */\n  update(\n    viewport: Viewport,\n    {zRange, modelMatrix}: {zRange?: ZRange; modelMatrix?: Matrix4} = {}\n  ): number {\n    const modelMatrixAsMatrix4 = new Matrix4(modelMatrix);\n    const isModelMatrixNew = !modelMatrixAsMatrix4.equals(this._modelMatrix);\n    if (\n      !this._viewport ||\n      !viewport.equals(this._viewport) ||\n      !equals(this._zRange, zRange) ||\n      isModelMatrixNew\n    ) {\n      if (isModelMatrixNew) {\n        this._modelMatrixInverse = modelMatrixAsMatrix4.clone().invert();\n        this._modelMatrix = modelMatrixAsMatrix4;\n      }\n      this._viewport = viewport;\n      this._zRange = zRange;\n      const tileIndices = this.getTileIndices({\n        viewport,\n        maxZoom: this._maxZoom,\n        minZoom: this._minZoom,\n        zRange,\n        modelMatrix: this._modelMatrix,\n        modelMatrixInverse: this._modelMatrixInverse\n      });\n      this._selectedTiles = tileIndices.map(index => this._getTile(index, true));\n\n      if (this._dirty) {\n        // Some new tiles are added\n        this._rebuildTree();\n      }\n      // Check for needed reloads explicitly even if the view/matrix has not changed.\n    } else if (this.needsReload) {\n      this._selectedTiles = this._selectedTiles!.map(tile => this._getTile(tile.index, true));\n    }\n\n    // Update tile states\n    const changed = this.updateTileStates();\n    this._pruneRequests();\n\n    if (this._dirty) {\n      // cache size is either the user defined maxSize or 5 * number of current tiles in the viewport.\n      this._resizeCache();\n    }\n\n    if (changed) {\n      this._frameNumber++;\n    }\n\n    return this._frameNumber;\n  }\n\n  // eslint-disable-next-line complexity\n  isTileVisible(\n    tile: Tile2DHeader,\n    cullRect?: {x: number; y: number; width: number; height: number}\n  ): boolean {\n    if (!tile.isVisible) {\n      return false;\n    }\n\n    if (cullRect && this._viewport) {\n      const boundsArr = this._getCullBounds({\n        viewport: this._viewport,\n        z: this._zRange,\n        cullRect\n      });\n      const {bbox} = tile;\n      for (const [minX, minY, maxX, maxY] of boundsArr) {\n        let overlaps;\n        if ('west' in bbox) {\n          overlaps = bbox.west < maxX && bbox.east > minX && bbox.south < maxY && bbox.north > minY;\n        } else {\n          // top/bottom could be swapped depending on the indexing system\n          const y0 = Math.min(bbox.top, bbox.bottom);\n          const y1 = Math.max(bbox.top, bbox.bottom);\n          overlaps = bbox.left < maxX && bbox.right > minX && y0 < maxY && y1 > minY;\n        }\n        if (overlaps) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /* Public interface for subclassing */\n\n  /** Returns array of tile indices in the current viewport */\n  getTileIndices({\n    viewport,\n    maxZoom,\n    minZoom,\n    zRange,\n    modelMatrix,\n    modelMatrixInverse\n  }: {\n    viewport: Viewport;\n    maxZoom?: number;\n    minZoom?: number;\n    zRange: ZRange | undefined;\n    tileSize?: number;\n    modelMatrix?: Matrix4;\n    modelMatrixInverse?: Matrix4;\n    zoomOffset?: number;\n  }): TileIndex[] {\n    const {tileSize, extent, zoomOffset} = this.opts;\n    return getTileIndices({\n      viewport,\n      maxZoom,\n      minZoom,\n      zRange,\n      tileSize,\n      extent: extent as Bounds | undefined,\n      modelMatrix,\n      modelMatrixInverse,\n      zoomOffset\n    });\n  }\n\n  /** Returns unique string key for a tile index */\n  getTileId(index: TileIndex) {\n    return `${index.x}-${index.y}-${index.z}`;\n  }\n\n  /** Returns a zoom level for a tile index */\n  getTileZoom(index: TileIndex) {\n    return index.z;\n  }\n\n  /** Returns additional metadata to add to tile, bbox by default */\n  getTileMetadata(index: TileIndex): Record<string, any> {\n    const {tileSize} = this.opts;\n    // @ts-expect-error\n    return {bbox: tileToBoundingBox(this._viewport, index.x, index.y, index.z, tileSize)};\n  }\n\n  /** Returns index of the parent tile */\n  getParentIndex(index: TileIndex) {\n    const x = Math.floor(index.x / 2);\n    const y = Math.floor(index.y / 2);\n    const z = index.z - 1;\n    return {x, y, z};\n  }\n\n  // Returns true if any tile's visibility changed\n  private updateTileStates() {\n    const refinementStrategy = this.opts.refinementStrategy || STRATEGY_DEFAULT;\n\n    const visibilities = new Array(this._cache.size);\n    let i = 0;\n    // Reset state\n    for (const tile of this._cache.values()) {\n      // save previous state\n      visibilities[i++] = tile.isVisible;\n      tile.isSelected = false;\n      tile.isVisible = false;\n    }\n    // @ts-expect-error called only when _selectedTiles is already defined\n    for (const tile of this._selectedTiles) {\n      tile.isSelected = true;\n      tile.isVisible = true;\n    }\n\n    // Strategy-specific state logic\n    (typeof refinementStrategy === 'function'\n      ? refinementStrategy\n      : STRATEGIES[refinementStrategy])(Array.from(this._cache.values()));\n\n    i = 0;\n    // Check if any visibility has changed\n    for (const tile of this._cache.values()) {\n      if (visibilities[i++] !== tile.isVisible) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /* Private methods */\n\n  private _getCullBounds = memoize(getCullBounds);\n\n  private _pruneRequests(): void {\n    const {maxRequests = 0} = this.opts;\n\n    const abortCandidates: Tile2DHeader[] = [];\n    let ongoingRequestCount = 0;\n    for (const tile of this._cache.values()) {\n      // Keep track of all the ongoing requests\n      if (tile.isLoading) {\n        ongoingRequestCount++;\n        if (!tile.isSelected && !tile.isVisible) {\n          abortCandidates.push(tile);\n        }\n      }\n    }\n\n    while (maxRequests > 0 && ongoingRequestCount > maxRequests && abortCandidates.length > 0) {\n      // There are too many ongoing requests, so abort some that are unselected\n      const tile = abortCandidates.shift()!;\n      tile.abort();\n      ongoingRequestCount--;\n    }\n  }\n\n  // This needs to be called every time some tiles have been added/removed from cache\n  private _rebuildTree() {\n    const {_cache} = this;\n\n    // Reset states\n    for (const tile of _cache.values()) {\n      tile.parent = null;\n      if (tile.children) {\n        tile.children.length = 0;\n      }\n    }\n\n    // Rebuild tree\n    for (const tile of _cache.values()) {\n      const parent = this._getNearestAncestor(tile);\n      tile.parent = parent;\n      if (parent?.children) {\n        parent.children.push(tile);\n      }\n    }\n  }\n\n  /**\n   * Clear tiles that are not visible when the cache is full\n   */\n  /* eslint-disable complexity */\n  private _resizeCache() {\n    const {_cache, opts} = this;\n\n    const maxCacheSize =\n      opts.maxCacheSize ||\n      // @ts-expect-error called only when selectedTiles is initialized\n      (opts.maxCacheByteSize ? Infinity : DEFAULT_CACHE_SCALE * this.selectedTiles.length);\n    const maxCacheByteSize = opts.maxCacheByteSize || Infinity;\n\n    const overflown = _cache.size > maxCacheSize || this._cacheByteSize > maxCacheByteSize;\n\n    if (overflown) {\n      for (const [id, tile] of _cache) {\n        if (!tile.isVisible && !tile.isSelected) {\n          // delete tile\n          this._cacheByteSize -= opts.maxCacheByteSize ? tile.byteLength : 0;\n          _cache.delete(id);\n          this.opts.onTileUnload?.(tile);\n        }\n        if (_cache.size <= maxCacheSize && this._cacheByteSize <= maxCacheByteSize) {\n          break;\n        }\n      }\n      this._rebuildTree();\n      this._dirty = true;\n    }\n    if (this._dirty) {\n      // sort by zoom level so that smaller tiles are displayed on top\n      this._tiles = Array.from(this._cache.values()).sort((t1, t2) => t1.zoom - t2.zoom);\n\n      this._dirty = false;\n    }\n  }\n  /* eslint-enable complexity */\n\n  private _getTile(index: TileIndex, create: true): Tile2DHeader;\n  private _getTile(index: TileIndex, create?: false): Tile2DHeader | undefined;\n  private _getTile(index: TileIndex, create?: boolean): Tile2DHeader | undefined {\n    const id = this.getTileId(index);\n    let tile = this._cache.get(id);\n    let needsReload = false;\n\n    if (!tile && create) {\n      tile = new Tile2DHeader(index);\n      Object.assign(tile, this.getTileMetadata(tile.index));\n      Object.assign(tile, {id, zoom: this.getTileZoom(tile.index)});\n      needsReload = true;\n      this._cache.set(id, tile);\n      this._dirty = true;\n    } else if (tile && tile.needsReload) {\n      needsReload = true;\n    }\n    if (tile && needsReload) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      tile.loadData({\n        getData: this.opts.getTileData,\n        requestScheduler: this._requestScheduler,\n        onLoad: this.onTileLoad,\n        onError: this.opts.onTileError\n      });\n    }\n\n    return tile;\n  }\n\n  _getNearestAncestor(tile: Tile2DHeader): Tile2DHeader | null {\n    const {_minZoom = 0} = this;\n\n    let index = tile.index;\n    while (this.getTileZoom(index) > _minZoom) {\n      index = this.getParentIndex(index);\n      const parent = this._getTile(index);\n      if (parent) {\n        return parent;\n      }\n    }\n    return null;\n  }\n}\n\n/* -- Refinement strategies --*/\n/* eslint-disable max-depth */\n\n// For all the selected && pending tiles:\n// - pick the closest ancestor as placeholder\n// - if no ancestor is visible, pick the closest children as placeholder\nfunction updateTileStateDefault(allTiles: Tile2DHeader[]) {\n  for (const tile of allTiles) {\n    tile.state = 0;\n  }\n  for (const tile of allTiles) {\n    if (tile.isSelected && !getPlaceholderInAncestors(tile)) {\n      getPlaceholderInChildren(tile);\n    }\n  }\n  for (const tile of allTiles) {\n    tile.isVisible = Boolean(tile.state! & TILE_STATE_VISIBLE);\n  }\n}\n\n// Until a selected tile and all its selected siblings are loaded, use the closest ancestor as placeholder\nfunction updateTileStateReplace(allTiles: Tile2DHeader[]) {\n  for (const tile of allTiles) {\n    tile.state = 0;\n  }\n  for (const tile of allTiles) {\n    if (tile.isSelected) {\n      getPlaceholderInAncestors(tile);\n    }\n  }\n  // Always process parents first\n  const sortedTiles = Array.from(allTiles).sort((t1, t2) => t1.zoom - t2.zoom);\n  for (const tile of sortedTiles) {\n    tile.isVisible = Boolean(tile.state! & TILE_STATE_VISIBLE);\n\n    if (tile.children && (tile.isVisible || tile.state! & TILE_STATE_VISITED)) {\n      // If the tile is rendered, or if the tile has been explicitly hidden, hide all of its children\n      for (const child of tile.children) {\n        child.state = TILE_STATE_VISITED;\n      }\n    } else if (tile.isSelected) {\n      getPlaceholderInChildren(tile);\n    }\n  }\n}\n\n// Walk up the tree until we find one ancestor that is loaded. Returns true if successful.\nfunction getPlaceholderInAncestors(startTile: Tile2DHeader) {\n  let tile: Tile2DHeader | null = startTile;\n  while (tile) {\n    if (tile.isLoaded || tile.content) {\n      tile.state! |= TILE_STATE_VISIBLE;\n      return true;\n    }\n    tile = tile.parent;\n  }\n  return false;\n}\n\n// Recursively set children as placeholder\nfunction getPlaceholderInChildren(tile) {\n  for (const child of tile.children) {\n    if (child.isLoaded || child.content) {\n      child.state |= TILE_STATE_VISIBLE;\n    } else {\n      getPlaceholderInChildren(child);\n    }\n  }\n}\n", "import {\n  CompositeLayer,\n  CompositeLayerProps,\n  Layer,\n  LayerProps,\n  UpdateParameters,\n  PickingInfo,\n  GetPickingInfoParams,\n  DefaultProps,\n  FilterContext,\n  _flatten as flatten\n} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {LayersList} from '@deck.gl/core';\n\nimport type {TileLoadProps, ZRange} from '../tileset-2d';\nimport {\n  Tileset2D,\n  Tile2DHeader,\n  RefinementStrategy,\n  STRATEGY_DEFAULT,\n  Tileset2DProps\n} from '../tileset-2d';\nimport {urlType, URLTemplate, getURLFromTemplate} from '../tileset-2d';\n\nconst defaultProps: DefaultProps<TileLayerProps> = {\n  TilesetClass: Tileset2D,\n  data: {type: 'data', value: []},\n  dataComparator: urlType.equal,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props)},\n  getTileData: {type: 'function', optional: true, value: null},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null},\n  onTileLoad: {type: 'function', value: tile => {}},\n  onTileUnload: {type: 'function', value: tile => {}},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err)},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  maxRequests: 6,\n  zoomOffset: 0\n};\n\n/** All props supported by the TileLayer */\nexport type TileLayerProps<DataT = any> = CompositeLayerProps & _TileLayerProps<DataT>;\n\n/** Props added by the TileLayer */\ntype _TileLayerProps<DataT> = {\n  data: URLTemplate;\n  /**\n   * Optionally implement a custom indexing scheme.\n   */\n  TilesetClass?: typeof Tileset2D;\n  /**\n   * Renders one or an array of Layer instances.\n   */\n  renderSubLayers?: (\n    props: TileLayerProps<DataT> & {\n      id: string;\n      data: DataT;\n      _offset: number;\n      tile: Tile2DHeader<DataT>;\n    }\n  ) => Layer | null | LayersList;\n  /**\n   * If supplied, `getTileData` is called to retrieve the data of each tile.\n   */\n  getTileData?: ((props: TileLoadProps) => Promise<DataT> | DataT) | null;\n\n  /** Called when all tiles in the current viewport are loaded. */\n  onViewportLoad?: ((tiles: Tile2DHeader<DataT>[]) => void) | null;\n\n  /** Called when a tile successfully loads. */\n  onTileLoad?: (tile: Tile2DHeader<DataT>) => void;\n\n  /** Called when a tile is cleared from cache. */\n  onTileUnload?: (tile: Tile2DHeader<DataT>) => void;\n\n  /** Called when a tile failed to load. */\n  onTileError?: (err: any, tile?) => void;\n\n  /** The bounding box of the layer's data. */\n  extent?: number[] | null;\n\n  /** The pixel dimension of the tiles, usually a power of 2. */\n  tileSize?: number;\n\n  /** The max zoom level of the layer's data.\n   * @default null\n   */\n  maxZoom?: number | null;\n\n  /** The min zoom level of the layer's data.\n   * @default 0\n   */\n  minZoom?: number | null;\n\n  /** The maximum number of tiles that can be cached. */\n  maxCacheSize?: number | null;\n\n  /**\n   * The maximum memory used for caching tiles.\n   *\n   * @default null\n   */\n  maxCacheByteSize?: number | null;\n\n  /**\n   * How the tile layer refines the visibility of tiles.\n   *\n   * @default 'best-available'\n   */\n  refinementStrategy?: RefinementStrategy;\n\n  /** Range of minimum and maximum heights in the tile. */\n  zRange?: ZRange | null;\n\n  /**\n   * The maximum number of concurrent getTileData calls.\n   *\n   * @default 6\n   */\n  maxRequests?: number;\n\n  /**\n   * This offset changes the zoom level at which the tiles are fetched.\n   *\n   * Needs to be an integer.\n   *\n   * @default 0\n   */\n  zoomOffset?: number;\n};\n\nexport type TiledPickingInfo<DataT = any> = PickingInfo & {\n  tile?: Tile2DHeader<DataT>;\n};\n\n/**\n * The TileLayer is a composite layer that makes it possible to visualize very large datasets.\n *\n * Instead of fetching the entire dataset, it only loads and renders what's visible in the current viewport.\n */\nexport default class TileLayer<DataT = any, ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_TileLayerProps<DataT>>\n> {\n  static defaultProps: DefaultProps = defaultProps;\n  static layerName = 'TileLayer';\n\n  initializeState() {\n    this.state = {\n      tileset: null,\n      isLoaded: false\n    };\n  }\n\n  finalizeState() {\n    this.state?.tileset?.finalize();\n  }\n\n  get isLoaded(): boolean {\n    return this.state?.tileset?.selectedTiles.every(\n      tile => tile.isLoaded && tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}): boolean {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({changeFlags}: UpdateParameters<this>) {\n    let {tileset} = this.state;\n    const propsChanged = changeFlags.propsOrDataChanged || changeFlags.updateTriggersChanged;\n    const dataChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (!tileset) {\n      tileset = new this.props.TilesetClass(this._getTilesetOptions());\n      this.setState({tileset});\n    } else if (propsChanged) {\n      tileset.setOptions(this._getTilesetOptions());\n\n      if (dataChanged) {\n        // reload all tiles\n        // use cached layers until new content is loaded\n        tileset.reloadAll();\n      } else {\n        // some render options changed, regenerate sub layers now\n        this.state.tileset.tiles.forEach(tile => {\n          tile.layers = null;\n        });\n      }\n    }\n\n    this._updateTileset();\n  }\n\n  _getTilesetOptions(): Tileset2DProps {\n    const {\n      tileSize,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy,\n      extent,\n      maxZoom,\n      minZoom,\n      maxRequests,\n      zoomOffset\n    } = this.props;\n\n    return {\n      maxCacheSize,\n      maxCacheByteSize,\n      maxZoom,\n      minZoom,\n      tileSize,\n      refinementStrategy,\n      extent,\n      maxRequests,\n      zoomOffset,\n\n      getTileData: this.getTileData.bind(this),\n      onTileLoad: this._onTileLoad.bind(this),\n      onTileError: this._onTileError.bind(this),\n      onTileUnload: this._onTileUnload.bind(this)\n    };\n  }\n\n  private _updateTileset(): void {\n    const {tileset} = this.state;\n    const {zRange, modelMatrix} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange, modelMatrix});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n      this._onViewportLoad();\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onViewportLoad(): void {\n    const {tileset} = this.state;\n    const {onViewportLoad} = this.props;\n\n    if (onViewportLoad) {\n      onViewportLoad(tileset.selectedTiles);\n    }\n  }\n\n  _onTileLoad(tile: Tile2DHeader<DataT>): void {\n    this.props.onTileLoad(tile);\n    tile.layers = null;\n\n    this.setNeedsUpdate();\n  }\n\n  _onTileError(error: any, tile: Tile2DHeader<DataT>) {\n    this.props.onTileError(error);\n    tile.layers = null;\n\n    this.setNeedsUpdate();\n  }\n\n  _onTileUnload(tile: Tile2DHeader<DataT>) {\n    this.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile: TileLoadProps): Promise<DataT> | DataT | null {\n    const {data, getTileData, fetch} = this.props;\n    const {signal} = tile;\n\n    tile.url =\n      typeof data === 'string' || Array.isArray(data) ? getURLFromTemplate(data, tile) : null;\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (fetch && tile.url) {\n      return fetch(tile.url, {propName: 'data', layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(\n    props: TileLayer['props'] & {\n      id: string;\n      data: DataT;\n      _offset: number;\n      tile: Tile2DHeader<DataT>;\n    }\n  ): Layer | null | LayersList {\n    return this.props.renderSubLayers(props);\n  }\n\n  getSubLayerPropsByTile(tile: Tile2DHeader): Partial<LayerProps> | null {\n    return null;\n  }\n\n  getPickingInfo({info, sourceLayer}: GetPickingInfoParams): TiledPickingInfo<DataT> {\n    const sourceTile = (sourceLayer as any).props.tile;\n    if (info.picked) {\n      (info as any).tile = sourceTile;\n    }\n    (info as any).sourceTile = sourceTile;\n    return info;\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const sourceTile = (info as any).sourceTile as Tile2DHeader;\n    if (sourceTile && sourceTile.layers) {\n      for (const layer of sourceTile.layers) {\n        layer.updateAutoHighlight(info);\n      }\n    }\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    return this.state.tileset.tiles.map((tile: Tile2DHeader) => {\n      const subLayerProps = this.getSubLayerPropsByTile(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded && !tile.content) {\n        // nothing to show\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers({\n          ...this.props,\n          ...this.getSubLayerProps({\n            id: tile.id,\n            updateTriggers: this.props.updateTriggers\n          }),\n          data: tile.content,\n          _offset: 0,\n          tile\n        });\n        tile.layers = (flatten(layers, Boolean) as Layer<{tile?: Tile2DHeader}>[]).map(layer =>\n          layer.clone({\n            tile,\n            ...subLayerProps\n          })\n        );\n      } else if (\n        subLayerProps &&\n        tile.layers[0] &&\n        Object.keys(subLayerProps).some(\n          propName => tile.layers![0].props[propName] !== subLayerProps[propName]\n        )\n      ) {\n        tile.layers = tile.layers.map(layer => layer.clone(subLayerProps));\n      }\n      return tile.layers;\n    });\n  }\n\n  filterSubLayer({layer, cullRect}: FilterContext) {\n    const {tile} = (layer as Layer<{tile: Tile2DHeader}>).props;\n    return this.state.tileset.isTileVisible(tile, cullRect);\n  }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport type {NumericArray} from '@math.gl/core';\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport {PathLayer, PathLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<TripsLayerProps> = {\n  fadeTrail: true,\n  trailLength: {type: 'number', value: 120, min: 0},\n  currentTime: {type: 'number', value: 0, min: 0},\n  getTimestamps: {type: 'accessor', value: d => d.timestamps}\n};\n\n/** All properties supported by TripsLayer. */\nexport type TripsLayerProps<DataT = any> = _TripsLayerProps<DataT> & PathLayerProps<DataT>;\n\n/** Properties added by TripsLayer. */\ntype _TripsLayerProps<DataT = any> = {\n  /**\n   * Whether or not the path fades out.\n   * @default true\n   */\n  fadeTrail?: boolean;\n  /**\n   * Trail length.\n   * @default 120\n   */\n  trailLength?: number;\n  /**\n   * The current time of the frame.\n   * @default 0\n   */\n  currentTime?: number;\n  /**\n   * Timestamp accessor.\n   */\n  getTimestamps?: AccessorFunction<DataT, NumericArray>;\n};\n\n/** Render animated paths that represent vehicle trips. */\nexport default class TripsLayer<DataT = any, ExtraProps extends {} = {}> extends PathLayer<\n  DataT,\n  Required<_TripsLayerProps> & ExtraProps\n> {\n  static layerName = 'TripsLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': `\\\nuniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n`,\n      // Timestamp of the vertex\n      'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n      'fs:#decl': `\\\nuniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n`,\n      // Drop the segments outside of the time window\n      'fs:#main-start': `\\\nif(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n`,\n      // Fade the color (currentTime - 100%, end of trail - 0%)\n      'fs:DECKGL_FILTER_COLOR': `\\\nif(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n`\n    };\n    return shaders;\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {fadeTrail, trailLength, currentTime} = this.props;\n\n    params.uniforms = {\n      ...params.uniforms,\n      fadeTrail,\n      trailLength,\n      currentTime\n    };\n\n    super.draw(params);\n  }\n}\n", "\nvar libh3 = (\nfunction(libh3) {\n  libh3 = libh3 || {};\n\nvar Module=typeof libh3!==\"undefined\"?libh3:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort()}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return 4}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0,\"getNativeTypeSize invalid bits \"+bits+\", type \"+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var getTempRet0=function(){return tempRet0};var GLOBAL_BASE=8;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for getValue: \"+type)}return null}var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function getCFunc(ident){var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_NONE=3;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var STACK_BASE=24048,DYNAMIC_BASE=5266928,DYNAMICTOP_PTR=24016;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||33554432;if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}INITIAL_TOTAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var memoryInitializer=null;var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var tempDouble;var tempI64;memoryInitializer=\"data:application/octet-stream;base64,\";var tempDoublePtr=24032;function demangle(func){return func}function demangleAll(text){var regex=/\\b__Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function _emscripten_get_heap_size(){return HEAP8.length}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function emscripten_realloc_buffer(size){try{var newBuffer=new ArrayBuffer(size);if(newBuffer.byteLength!=size)return;new Int8Array(newBuffer).set(HEAP8);_emscripten_replace_memory(newBuffer);updateGlobalBufferAndViews(newBuffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=16777216;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=emscripten_realloc_buffer(newSize);if(!replacement){return false}return true}var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array};var asmLibraryArg={\"a\":abort,\"b\":setTempRet0,\"c\":getTempRet0,\"d\":___assert_fail,\"e\":___setErrNo,\"f\":_emscripten_get_heap_size,\"g\":_emscripten_memcpy_big,\"h\":_emscripten_resize_heap,\"i\":abortOnCannotGrowMemory,\"j\":demangle,\"k\":demangleAll,\"l\":emscripten_realloc_buffer,\"m\":jsStackTrace,\"n\":stackTrace,\"o\":tempDoublePtr,\"p\":DYNAMICTOP_PTR};// EMSCRIPTEN_START_ASM\nvar asm=(/** @suppress {uselessCode} */ function(global,env,buffer) {\n\"almost asm\";var a=new global.Int8Array(buffer),b=new global.Int32Array(buffer),c=new global.Uint8Array(buffer),d=new global.Float32Array(buffer),e=new global.Float64Array(buffer),f=env.o|0,g=env.p|0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=global.Math.floor,q=global.Math.abs,r=global.Math.sqrt,s=global.Math.pow,t=global.Math.cos,u=global.Math.sin,v=global.Math.tan,w=global.Math.acos,x=global.Math.asin,y=global.Math.atan,z=global.Math.atan2,A=global.Math.ceil,B=global.Math.imul,C=global.Math.min,D=global.Math.clz32,E=env.a,F=env.b,G=env.c,H=env.d,I=env.e,J=env.f,K=env.g,L=env.h,M=env.i,N=env.j,O=env.k,P=env.l,Q=env.m,R=env.n,S=24048,T=5266928,U=0.0;function V(newBuffer){a=new Int8Array(newBuffer);c=new Uint8Array(newBuffer);b=new Int32Array(newBuffer);d=new Float32Array(newBuffer);e=new Float64Array(newBuffer);buffer=newBuffer;return true}\n// EMSCRIPTEN_START_FUNCS\nfunction W(a){a=a|0;var b=0;b=S;S=S+a|0;S=S+15&-16;return b|0}function X(){return S|0}function Y(a){a=a|0;S=a}function Z(a,b){a=a|0;b=b|0;S=a;T=b}function _(a){a=a|0;return (B(a*3|0,a+1|0)|0)+1|0}function $(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if(!(ba(a,b,c,d,0)|0))return;f=(B(c*3|0,c+1|0)|0)+1|0;hd(d|0,0,f<<3|0)|0;e=Yc(f,4)|0;if(!e)return;ca(a,b,c,d,e,f,0);Xc(e);return}function aa(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;if(!(ba(a,b,c,d,e)|0))return;f=(B(c*3|0,c+1|0)|0)+1|0;hd(d|0,0,f<<3|0)|0;if(e|0){hd(e|0,0,f<<2|0)|0;ca(a,b,c,d,e,f,0);return}e=Yc(f,4)|0;if(!e)return;ca(a,b,c,d,e,f,0);Xc(e);return}function ba(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=S;S=S+16|0;n=o;g=e;b[g>>2]=a;b[g+4>>2]=c;g=(f|0)!=0;if(g)b[f>>2]=0;if(Fb(a,c)|0){n=1;S=o;return n|0}b[n>>2]=0;a:do if((d|0)>=1)if(g){k=0;l=1;m=1;h=0;g=a;while(1){if(!(h|k)){g=da(g,c,4,n)|0;c=G()|0;if((g|0)==0&(c|0)==0){g=2;break a}if(Fb(g,c)|0){g=1;break a}}g=da(g,c,b[16+(k<<2)>>2]|0,n)|0;c=G()|0;if((g|0)==0&(c|0)==0){g=2;break a}a=e+(m<<3)|0;b[a>>2]=g;b[a+4>>2]=c;b[f+(m<<2)>>2]=l;h=h+1|0;a=(h|0)==(l|0);i=k+1|0;j=(i|0)==6;if(Fb(g,c)|0){g=1;break a}l=l+(j&a&1)|0;if((l|0)>(d|0)){g=0;break}else{k=a?(j?0:i):k;m=m+1|0;h=a?0:h}}}else{k=0;l=1;m=1;h=0;g=a;while(1){if(!(h|k)){g=da(g,c,4,n)|0;c=G()|0;if((g|0)==0&(c|0)==0){g=2;break a}if(Fb(g,c)|0){g=1;break a}}g=da(g,c,b[16+(k<<2)>>2]|0,n)|0;c=G()|0;if((g|0)==0&(c|0)==0){g=2;break a}a=e+(m<<3)|0;b[a>>2]=g;b[a+4>>2]=c;h=h+1|0;a=(h|0)==(l|0);i=k+1|0;j=(i|0)==6;if(Fb(g,c)|0){g=1;break a}l=l+(j&a&1)|0;if((l|0)>(d|0)){g=0;break}else{k=a?(j?0:i):k;m=m+1|0;h=a?0:h}}}else g=0;while(0);n=g;S=o;return n|0}function ca(a,c,d,e,f,g,h){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=S;S=S+16|0;l=m;if((a|0)==0&(c|0)==0){S=m;return}i=bd(a|0,c|0,g|0,((g|0)<0)<<31>>31|0)|0;G()|0;j=e+(i<<3)|0;n=j;o=b[n>>2]|0;n=b[n+4>>2]|0;k=(o|0)==(a|0)&(n|0)==(c|0);if(!((o|0)==0&(n|0)==0|k))do{i=(i+1|0)%(g|0)|0;j=e+(i<<3)|0;o=j;n=b[o>>2]|0;o=b[o+4>>2]|0;k=(n|0)==(a|0)&(o|0)==(c|0)}while(!((n|0)==0&(o|0)==0|k));i=f+(i<<2)|0;if(k?(b[i>>2]|0)<=(h|0):0){S=m;return}o=j;b[o>>2]=a;b[o+4>>2]=c;b[i>>2]=h;if((h|0)>=(d|0)){S=m;return}o=h+1|0;b[l>>2]=0;n=da(a,c,2,l)|0;ca(n,G()|0,d,e,f,g,o);b[l>>2]=0;n=da(a,c,3,l)|0;ca(n,G()|0,d,e,f,g,o);b[l>>2]=0;n=da(a,c,1,l)|0;ca(n,G()|0,d,e,f,g,o);b[l>>2]=0;n=da(a,c,5,l)|0;ca(n,G()|0,d,e,f,g,o);b[l>>2]=0;n=da(a,c,4,l)|0;ca(n,G()|0,d,e,f,g,o);b[l>>2]=0;n=da(a,c,6,l)|0;ca(n,G()|0,d,e,f,g,o);S=m;return}function da(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((b[e>>2]|0)>0){f=0;do{d=Pa(d)|0;f=f+1|0}while((f|0)<(b[e>>2]|0))}i=cd(a|0,c|0,45)|0;G()|0;j=i&127;g=Lb(a,c)|0;f=cd(a|0,c|0,52)|0;G()|0;f=f&15;a:do if(!f)h=6;else while(1){m=(15-f|0)*3|0;n=cd(a|0,c|0,m|0)|0;G()|0;n=n&7;o=(Rb(f)|0)==0;f=f+-1|0;l=dd(7,0,m|0)|0;c=c&~(G()|0);m=dd(b[(o?464:48)+(n*28|0)+(d<<2)>>2]|0,0,m|0)|0;k=G()|0;d=b[(o?672:256)+(n*28|0)+(d<<2)>>2]|0;a=m|a&~l;c=k|c;if(!d){d=0;break a}if(!f){h=6;break}}while(0);if((h|0)==6){o=b[880+(j*28|0)+(d<<2)>>2]|0;n=dd(o|0,0,45)|0;a=n|a;c=G()|0|c&-1040385;d=b[4304+(j*28|0)+(d<<2)>>2]|0;if((o&127|0)==127){o=dd(b[880+(j*28|0)+20>>2]|0,0,45)|0;c=G()|0|c&-1040385;d=b[4304+(j*28|0)+20>>2]|0;a=Nb(o|a,c)|0;c=G()|0;b[e>>2]=(b[e>>2]|0)+1}}h=cd(a|0,c|0,45)|0;G()|0;h=h&127;b:do if(!(la(h)|0)){if((d|0)>0){f=0;do{a=Nb(a,c)|0;c=G()|0;f=f+1|0}while((f|0)!=(d|0))}}else{c:do if((Lb(a,c)|0)==1){if((j|0)!=(h|0))if(ra(h,b[7728+(j*28|0)>>2]|0)|0){a=Pb(a,c)|0;g=1;c=G()|0;break}else{a=Nb(a,c)|0;g=1;c=G()|0;break}switch(g|0){case 5:{a=Pb(a,c)|0;c=G()|0;b[e>>2]=(b[e>>2]|0)+5;g=0;break c}case 3:{a=Nb(a,c)|0;c=G()|0;b[e>>2]=(b[e>>2]|0)+1;g=0;break c}default:{n=0;o=0;F(n|0);return o|0}}}else g=0;while(0);if((d|0)>0){f=0;do{a=Mb(a,c)|0;c=G()|0;f=f+1|0}while((f|0)!=(d|0))}if((j|0)!=(h|0)){if(!(ma(h)|0)){if((g|0)!=0|(Lb(a,c)|0)!=5)break;b[e>>2]=(b[e>>2]|0)+1;break}switch(i&127){case 8:case 118:break b;default:{}}if((Lb(a,c)|0)!=3)b[e>>2]=(b[e>>2]|0)+1}}while(0);b[e>>2]=((b[e>>2]|0)+d|0)%6|0;n=c;o=a;F(n|0);return o|0}function ea(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=S;S=S+16|0;l=m;if(!d){l=e;b[l>>2]=a;b[l+4>>2]=c;l=0;S=m;return l|0}b[l>>2]=0;a:do if(!(Fb(a,c)|0)){g=(d|0)>0;if(g){f=0;k=a;do{k=da(k,c,4,l)|0;c=G()|0;if((k|0)==0&(c|0)==0){a=2;break a}f=f+1|0;if(Fb(k,c)|0){a=1;break a}}while((f|0)<(d|0));j=e;b[j>>2]=k;b[j+4>>2]=c;j=d+-1|0;if(g){g=0;h=1;f=k;a=c;do{f=da(f,a,2,l)|0;a=G()|0;if((f|0)==0&(a|0)==0){a=2;break a}i=e+(h<<3)|0;b[i>>2]=f;b[i+4>>2]=a;h=h+1|0;if(Fb(f,a)|0){a=1;break a}g=g+1|0}while((g|0)<(d|0));i=0;g=h;do{f=da(f,a,3,l)|0;a=G()|0;if((f|0)==0&(a|0)==0){a=2;break a}h=e+(g<<3)|0;b[h>>2]=f;b[h+4>>2]=a;g=g+1|0;if(Fb(f,a)|0){a=1;break a}i=i+1|0}while((i|0)<(d|0));h=0;do{f=da(f,a,1,l)|0;a=G()|0;if((f|0)==0&(a|0)==0){a=2;break a}i=e+(g<<3)|0;b[i>>2]=f;b[i+4>>2]=a;g=g+1|0;if(Fb(f,a)|0){a=1;break a}h=h+1|0}while((h|0)<(d|0));h=0;do{f=da(f,a,5,l)|0;a=G()|0;if((f|0)==0&(a|0)==0){a=2;break a}i=e+(g<<3)|0;b[i>>2]=f;b[i+4>>2]=a;g=g+1|0;if(Fb(f,a)|0){a=1;break a}h=h+1|0}while((h|0)<(d|0));h=0;do{f=da(f,a,4,l)|0;a=G()|0;if((f|0)==0&(a|0)==0){a=2;break a}i=e+(g<<3)|0;b[i>>2]=f;b[i+4>>2]=a;g=g+1|0;if(Fb(f,a)|0){a=1;break a}h=h+1|0}while((h|0)<(d|0));h=0;while(1){f=da(f,a,6,l)|0;a=G()|0;if((f|0)==0&(a|0)==0){a=2;break a}if((h|0)!=(j|0)){i=e+(g<<3)|0;b[i>>2]=f;b[i+4>>2]=a;if(!(Fb(f,a)|0))g=g+1|0;else{a=1;break a}}h=h+1|0;if((h|0)>=(d|0)){h=k;g=c;break}}}else{h=k;f=k;g=c;a=c}}else{h=e;b[h>>2]=a;b[h+4>>2]=c;h=a;f=a;g=c;a=c}a=((h|0)!=(f|0)|(g|0)!=(a|0))&1}else a=1;while(0);l=a;S=m;return l|0}function fa(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;g=S;S=S+48|0;f=g+8|0;e=g;i=a;h=b[i+4>>2]|0;d=e;b[d>>2]=b[i>>2];b[d+4>>2]=h;vc(e,f);f=ya(f,c)|0;c=b[e>>2]|0;e=b[a+8>>2]|0;if((e|0)<=0){i=c;h=(f|0)<(i|0);i=h?i:f;i=i+12|0;S=g;return i|0}d=b[a+12>>2]|0;a=0;do{c=(b[d+(a<<3)>>2]|0)+c|0;a=a+1|0}while((a|0)<(e|0));i=(f|0)<(c|0);i=i?c:f;i=i+12|0;S=g;return i|0}function ga(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;i=S;S=S+48|0;e=i+8|0;f=i;if(!(ha(a,c,d)|0)){S=i;return}j=a;g=b[j+4>>2]|0;h=f;b[h>>2]=b[j>>2];b[h+4>>2]=g;vc(f,e);h=ya(e,c)|0;c=b[f>>2]|0;g=b[a+8>>2]|0;if((g|0)>0){f=b[a+12>>2]|0;e=0;do{c=(b[f+(e<<3)>>2]|0)+c|0;e=e+1|0}while((e|0)!=(g|0))}c=(h|0)<(c|0)?c:h;if((c|0)<=-12){S=i;return}j=c+11|0;hd(d|0,0,(((j|0)>0?j:0)<<3)+8|0)|0;S=i;return}function ha(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,I=0,J=0;J=S;S=S+112|0;D=J+80|0;j=J+72|0;E=J;F=J+56|0;k=a+8|0;I=Wc((b[k>>2]<<5)+32|0)|0;if(!I)H(22848,22448,800,22456);wc(a,I);g=a;e=b[g+4>>2]|0;i=j;b[i>>2]=b[g>>2];b[i+4>>2]=e;vc(j,D);i=ya(D,c)|0;e=b[j>>2]|0;g=b[k>>2]|0;if((g|0)>0){h=b[a+12>>2]|0;f=0;do{e=(b[h+(f<<3)>>2]|0)+e|0;f=f+1|0}while((f|0)!=(g|0))}i=(i|0)<(e|0)?e:i;C=i+12|0;f=Yc(C,8)|0;l=Yc(C,8)|0;b[D>>2]=0;A=a;B=b[A+4>>2]|0;e=j;b[e>>2]=b[A>>2];b[e+4>>2]=B;e=ia(j,C,c,D,f,l)|0;if(e|0){Xc(f);Xc(l);Xc(I);I=e;S=J;return I|0}a:do if((b[k>>2]|0)>0){g=a+12|0;e=0;while(1){h=ia((b[g>>2]|0)+(e<<3)|0,C,c,D,f,l)|0;e=e+1|0;if(h|0)break;if((e|0)>=(b[k>>2]|0))break a}Xc(f);Xc(l);Xc(I);I=h;S=J;return I|0}while(0);if((i|0)>-12)hd(l|0,0,((C|0)>1?C:1)<<3|0)|0;b:do if((b[D>>2]|0)>0){B=((C|0)<0)<<31>>31;v=f;w=l;x=f;y=f;z=l;A=f;e=f;r=f;s=l;t=l;u=l;f=l;c:while(1){q=b[D>>2]|0;o=0;p=0;g=0;while(1){h=E;i=h+56|0;do{b[h>>2]=0;h=h+4|0}while((h|0)<(i|0));c=v+(o<<3)|0;j=b[c>>2]|0;c=b[c+4>>2]|0;if(ba(j,c,1,E,0)|0){h=E;i=h+56|0;do{b[h>>2]=0;h=h+4|0}while((h|0)<(i|0));h=Yc(7,4)|0;if(h|0){ca(j,c,1,E,h,7,0);Xc(h)}}n=0;do{m=E+(n<<3)|0;l=b[m>>2]|0;m=b[m+4>>2]|0;d:do if(!((l|0)==0&(m|0)==0)){j=bd(l|0,m|0,C|0,B|0)|0;G()|0;h=d+(j<<3)|0;i=h;c=b[i>>2]|0;i=b[i+4>>2]|0;if(!((c|0)==0&(i|0)==0)){k=0;while(1){if((k|0)>(C|0))break c;if((c|0)==(l|0)&(i|0)==(m|0))break d;j=(j+1|0)%(C|0)|0;h=d+(j<<3)|0;i=h;c=b[i>>2]|0;i=b[i+4>>2]|0;if((c|0)==0&(i|0)==0)break;else k=k+1|0}}if(!((l|0)==0&(m|0)==0)){Vb(l,m,F);if(xc(a,I,F)|0){k=h;b[k>>2]=l;b[k+4>>2]=m;k=w+(g<<3)|0;b[k>>2]=l;b[k+4>>2]=m;g=g+1|0}}}while(0);n=n+1|0}while(n>>>0<7);p=p+1|0;if((p|0)>=(q|0))break;else o=o+1|0}if((q|0)>0)hd(x|0,0,q<<3|0)|0;b[D>>2]=g;if((g|0)>0){l=f;m=u;n=A;o=t;p=s;q=w;f=r;u=e;t=y;s=x;r=l;e=m;A=z;z=n;y=o;x=p;w=v;v=q}else break b}Xc(y);Xc(z);Xc(I);I=-1;S=J;return I|0}else e=l;while(0);Xc(I);Xc(f);Xc(e);I=0;S=J;return I|0}function ia(a,c,d,f,g,h){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0;C=S;S=S+48|0;y=C+32|0;z=C+16|0;A=C;i=b[a>>2]|0;if((i|0)<=0){B=0;S=C;return B|0}t=a+4|0;u=y+8|0;v=z+8|0;w=A+8|0;x=((c|0)<0)<<31>>31;s=0;a:while(1){j=b[t>>2]|0;q=j+(s<<4)|0;b[y>>2]=b[q>>2];b[y+4>>2]=b[q+4>>2];b[y+8>>2]=b[q+8>>2];b[y+12>>2]=b[q+12>>2];if((s|0)==(i+-1|0)){b[z>>2]=b[j>>2];b[z+4>>2]=b[j+4>>2];b[z+8>>2]=b[j+8>>2];b[z+12>>2]=b[j+12>>2]}else{q=j+(s+1<<4)|0;b[z>>2]=b[q>>2];b[z+4>>2]=b[q+4>>2];b[z+8>>2]=b[q+8>>2];b[z+12>>2]=b[q+12>>2]}q=za(y,z,d)|0;b:do if((q|0)>0){r=+(q|0);p=0;c:while(1){E=+(q-p|0);D=+(p|0);e[A>>3]=+e[y>>3]*E/r+ +e[z>>3]*D/r;e[w>>3]=+e[u>>3]*E/r+ +e[v>>3]*D/r;n=Sb(A,d)|0;o=G()|0;j=bd(n|0,o|0,c|0,x|0)|0;G()|0;i=h+(j<<3)|0;k=i;l=b[k>>2]|0;k=b[k+4>>2]|0;d:do if((l|0)==0&(k|0)==0)B=14;else{m=0;while(1){if((m|0)>(c|0)){i=1;break d}if((l|0)==(n|0)&(k|0)==(o|0)){i=7;break d}j=(j+1|0)%(c|0)|0;i=h+(j<<3)|0;k=i;l=b[k>>2]|0;k=b[k+4>>2]|0;if((l|0)==0&(k|0)==0){B=14;break}else m=m+1|0}}while(0);if((B|0)==14){B=0;if((n|0)==0&(o|0)==0)i=7;else{b[i>>2]=n;b[i+4>>2]=o;i=b[f>>2]|0;m=g+(i<<3)|0;b[m>>2]=n;b[m+4>>2]=o;b[f>>2]=i+1;i=0}}switch(i&7){case 7:case 0:break;default:break c}p=p+1|0;if((q|0)<=(p|0)){B=8;break b}}if(i|0){i=-1;B=20;break a}}else B=8;while(0);if((B|0)==8)B=0;s=s+1|0;i=b[a>>2]|0;if((s|0)>=(i|0)){i=0;B=20;break}}if((B|0)==20){S=C;return i|0}return 0}function ja(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=S;S=S+176|0;j=k;if((c|0)<1){Mc(d,0,0);S=k;return}h=a;h=cd(b[h>>2]|0,b[h+4>>2]|0,52)|0;G()|0;Mc(d,(c|0)>6?c:6,h&15);h=0;do{e=a+(h<<3)|0;Wb(b[e>>2]|0,b[e+4>>2]|0,j);e=b[j>>2]|0;if((e|0)>0){i=0;do{g=j+8+(i<<4)|0;i=i+1|0;e=j+8+(((i|0)%(e|0)|0)<<4)|0;f=Rc(d,e,g)|0;if(!f)Qc(d,g,e)|0;else Pc(d,f)|0;e=b[j>>2]|0}while((i|0)<(e|0))}h=h+1|0}while((h|0)!=(c|0));S=k;return}function ka(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=S;S=S+32|0;e=g;f=g+16|0;ja(a,c,f);b[d>>2]=0;b[d+4>>2]=0;b[d+8>>2]=0;a=Oc(f)|0;if(!a){kc(d)|0;Nc(f);S=g;return}do{c=hc(d)|0;do{ic(c,a)|0;h=a+16|0;b[e>>2]=b[h>>2];b[e+4>>2]=b[h+4>>2];b[e+8>>2]=b[h+8>>2];b[e+12>>2]=b[h+12>>2];Pc(f,a)|0;a=Sc(f,e)|0}while((a|0)!=0);a=Oc(f)|0}while((a|0)!=0);kc(d)|0;Nc(f);S=g;return}function la(a){a=a|0;return b[7728+(a*28|0)+16>>2]|0}function ma(a){a=a|0;return (a|0)==4|(a|0)==117|0}function na(a){a=a|0;return b[11152+((b[a>>2]|0)*216|0)+((b[a+4>>2]|0)*72|0)+((b[a+8>>2]|0)*24|0)+(b[a+12>>2]<<3)>>2]|0}function oa(a){a=a|0;return b[11152+((b[a>>2]|0)*216|0)+((b[a+4>>2]|0)*72|0)+((b[a+8>>2]|0)*24|0)+(b[a+12>>2]<<3)+4>>2]|0}function pa(a,c){a=a|0;c=c|0;a=7728+(a*28|0)|0;b[c>>2]=b[a>>2];b[c+4>>2]=b[a+4>>2];b[c+8>>2]=b[a+8>>2];b[c+12>>2]=b[a+12>>2];return}function qa(a,c){a=a|0;c=c|0;var d=0,e=0;if(c>>>0>20){c=-1;return c|0}do if((b[11152+(c*216|0)>>2]|0)!=(a|0))if((b[11152+(c*216|0)+8>>2]|0)!=(a|0))if((b[11152+(c*216|0)+16>>2]|0)!=(a|0))if((b[11152+(c*216|0)+24>>2]|0)!=(a|0))if((b[11152+(c*216|0)+32>>2]|0)!=(a|0))if((b[11152+(c*216|0)+40>>2]|0)!=(a|0))if((b[11152+(c*216|0)+48>>2]|0)!=(a|0))if((b[11152+(c*216|0)+56>>2]|0)!=(a|0))if((b[11152+(c*216|0)+64>>2]|0)!=(a|0))if((b[11152+(c*216|0)+72>>2]|0)!=(a|0))if((b[11152+(c*216|0)+80>>2]|0)!=(a|0))if((b[11152+(c*216|0)+88>>2]|0)!=(a|0))if((b[11152+(c*216|0)+96>>2]|0)!=(a|0))if((b[11152+(c*216|0)+104>>2]|0)!=(a|0))if((b[11152+(c*216|0)+112>>2]|0)!=(a|0))if((b[11152+(c*216|0)+120>>2]|0)!=(a|0))if((b[11152+(c*216|0)+128>>2]|0)!=(a|0))if((b[11152+(c*216|0)+136>>2]|0)==(a|0)){a=2;d=1;e=2}else{if((b[11152+(c*216|0)+144>>2]|0)==(a|0)){a=0;d=2;e=0;break}if((b[11152+(c*216|0)+152>>2]|0)==(a|0)){a=0;d=2;e=1;break}if((b[11152+(c*216|0)+160>>2]|0)==(a|0)){a=0;d=2;e=2;break}if((b[11152+(c*216|0)+168>>2]|0)==(a|0)){a=1;d=2;e=0;break}if((b[11152+(c*216|0)+176>>2]|0)==(a|0)){a=1;d=2;e=1;break}if((b[11152+(c*216|0)+184>>2]|0)==(a|0)){a=1;d=2;e=2;break}if((b[11152+(c*216|0)+192>>2]|0)==(a|0)){a=2;d=2;e=0;break}if((b[11152+(c*216|0)+200>>2]|0)==(a|0)){a=2;d=2;e=1;break}if((b[11152+(c*216|0)+208>>2]|0)==(a|0)){a=2;d=2;e=2;break}else a=-1;return a|0}else{a=2;d=1;e=1}else{a=2;d=1;e=0}else{a=1;d=1;e=2}else{a=1;d=1;e=1}else{a=1;d=1;e=0}else{a=0;d=1;e=2}else{a=0;d=1;e=1}else{a=0;d=1;e=0}else{a=2;d=0;e=2}else{a=2;d=0;e=1}else{a=2;d=0;e=0}else{a=1;d=0;e=2}else{a=1;d=0;e=1}else{a=1;d=0;e=0}else{a=0;d=0;e=2}else{a=0;d=0;e=1}else{a=0;d=0;e=0}while(0);c=b[11152+(c*216|0)+(d*72|0)+(a*24|0)+(e<<3)+4>>2]|0;return c|0}function ra(a,c){a=a|0;c=c|0;if((b[7728+(a*28|0)+20>>2]|0)==(c|0)){c=1;return c|0}c=(b[7728+(a*28|0)+24>>2]|0)==(c|0);return c|0}function sa(a,c){a=a|0;c=c|0;return b[880+(a*28|0)+(c<<2)>>2]|0}function ta(a,c){a=a|0;c=c|0;if((b[880+(a*28|0)>>2]|0)==(c|0)){c=0;return c|0}if((b[880+(a*28|0)+4>>2]|0)==(c|0)){c=1;return c|0}if((b[880+(a*28|0)+8>>2]|0)==(c|0)){c=2;return c|0}if((b[880+(a*28|0)+12>>2]|0)==(c|0)){c=3;return c|0}if((b[880+(a*28|0)+16>>2]|0)==(c|0)){c=4;return c|0}if((b[880+(a*28|0)+20>>2]|0)==(c|0)){c=5;return c|0}else return ((b[880+(a*28|0)+24>>2]|0)==(c|0)?6:7)|0;return 0}function ua(){return 122}function va(a){a=a|0;var c=0,d=0,e=0;c=0;do{dd(c|0,0,45)|0;e=G()|0|134225919;d=a+(c<<3)|0;b[d>>2]=-1;b[d+4>>2]=e;c=c+1|0}while((c|0)!=122);return}function wa(a){a=a|0;return +e[a+16>>3]<+e[a+24>>3]|0}function xa(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;c=+e[b>>3];if(!(c>=+e[a+8>>3])){b=0;return b|0}if(!(c<=+e[a>>3])){b=0;return b|0}d=+e[a+16>>3];c=+e[a+24>>3];f=+e[b+8>>3];b=f>=c;a=f<=d&1;if(d<c){if(b)a=1}else if(!b)a=0;b=(a|0)!=0;return b|0}function ya(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0,i=0,j=0,k=0.0,l=0.0;i=S;S=S+288|0;d=i+264|0;f=i+96|0;g=i;h=g;j=h+96|0;do{b[h>>2]=0;h=h+4|0}while((h|0)<(j|0));_b(c,g);h=g;j=b[h>>2]|0;h=b[h+4>>2]|0;Vb(j,h,d);Wb(j,h,f);k=+jb(d,f+8|0);e[d>>3]=+e[a>>3];h=d+8|0;e[h>>3]=+e[a+16>>3];e[f>>3]=+e[a+8>>3];j=f+8|0;e[j>>3]=+e[a+24>>3];l=+jb(d,f);j=~~+A(+(l*l/+ed(+(+q(+((+e[h>>3]-+e[j>>3])/(+e[d>>3]-+e[f>>3])))),3.0)/(k*(k*2.59807621135)*.8)));S=i;return ((j|0)==0?1:j)|0}function za(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0.0;i=S;S=S+288|0;e=i+264|0;f=i+96|0;g=i;h=g;j=h+96|0;do{b[h>>2]=0;h=h+4|0}while((h|0)<(j|0));_b(d,g);j=g;h=b[j>>2]|0;j=b[j+4>>2]|0;Vb(h,j,e);Wb(h,j,f);k=+jb(e,f+8|0);j=~~+A(+(+jb(a,c)/(k*2.0)));S=i;return ((j|0)==0?1:j)|0}function Aa(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;b[a>>2]=c;b[a+4>>2]=d;b[a+8>>2]=e;return}function Ba(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0;n=c+8|0;b[n>>2]=0;k=+e[a>>3];i=+q(+k);l=+e[a+8>>3];j=+q(+l)/.8660254037844386;i=i+j*.5;d=~~i;a=~~j;i=i-+(d|0);j=j-+(a|0);do if(i<.5)if(i<.3333333333333333){b[c>>2]=d;if(j<(i+1.0)*.5){b[c+4>>2]=a;break}else{a=a+1|0;b[c+4>>2]=a;break}}else{o=1.0-i;a=(!(j<o)&1)+a|0;b[c+4>>2]=a;if(o<=j&j<i*2.0){d=d+1|0;b[c>>2]=d;break}else{b[c>>2]=d;break}}else{if(!(i<.6666666666666666)){d=d+1|0;b[c>>2]=d;if(j<i*.5){b[c+4>>2]=a;break}else{a=a+1|0;b[c+4>>2]=a;break}}if(j<1.0-i){b[c+4>>2]=a;if(i*2.0+-1.0<j){b[c>>2]=d;break}}else{a=a+1|0;b[c+4>>2]=a}d=d+1|0;b[c>>2]=d}while(0);do if(k<0.0)if(!(a&1)){m=(a|0)/2|0;m=_c(d|0,((d|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;d=~~(+(d|0)-(+(m>>>0)+4294967296.0*+(G()|0))*2.0);b[c>>2]=d;break}else{m=(a+1|0)/2|0;m=_c(d|0,((d|0)<0)<<31>>31|0,m|0,((m|0)<0)<<31>>31|0)|0;d=~~(+(d|0)-((+(m>>>0)+4294967296.0*+(G()|0))*2.0+1.0));b[c>>2]=d;break}while(0);m=c+4|0;if(l<0.0){d=d-((a<<1|1|0)/2|0)|0;b[c>>2]=d;a=0-a|0;b[m>>2]=a}f=a-d|0;if((d|0)<0){g=0-d|0;b[m>>2]=f;b[n>>2]=g;b[c>>2]=0;a=f;d=0}else g=0;if((a|0)<0){d=d-a|0;b[c>>2]=d;g=g-a|0;b[n>>2]=g;b[m>>2]=0;a=0}h=d-g|0;f=a-g|0;if((g|0)<0){b[c>>2]=h;b[m>>2]=f;b[n>>2]=0;a=f;d=h;g=0}f=(a|0)<(d|0)?a:d;f=(g|0)<(f|0)?g:f;if((f|0)<=0)return;b[c>>2]=d-f;b[m>>2]=a-f;b[n>>2]=g-f;return}function Ca(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;if((c|0)<0){d=d-c|0;b[h>>2]=d;g=a+8|0;b[g>>2]=(b[g>>2]|0)-c;b[a>>2]=0;c=0}if((d|0)<0){c=c-d|0;b[a>>2]=c;g=a+8|0;f=(b[g>>2]|0)-d|0;b[g>>2]=f;b[h>>2]=0;d=0}else{f=a+8|0;g=f;f=b[f>>2]|0}if((f|0)<0){c=c-f|0;b[a>>2]=c;d=d-f|0;b[h>>2]=d;b[g>>2]=0;f=0}e=(d|0)<(c|0)?d:c;e=(f|0)<(e|0)?f:e;if((e|0)<=0)return;b[a>>2]=c-e;b[h>>2]=d-e;b[g>>2]=f-e;return}function Da(a,c){a=a|0;c=c|0;var d=0.0,f=0;f=b[a+8>>2]|0;d=+((b[a+4>>2]|0)-f|0);e[c>>3]=+((b[a>>2]|0)-f|0)-d*.5;e[c+8>>3]=d*.8660254037844386;return}function Ea(a,c,d){a=a|0;c=c|0;d=d|0;b[d>>2]=(b[c>>2]|0)+(b[a>>2]|0);b[d+4>>2]=(b[c+4>>2]|0)+(b[a+4>>2]|0);b[d+8>>2]=(b[c+8>>2]|0)+(b[a+8>>2]|0);return}function Fa(a,c,d){a=a|0;c=c|0;d=d|0;b[d>>2]=(b[a>>2]|0)-(b[c>>2]|0);b[d+4>>2]=(b[a+4>>2]|0)-(b[c+4>>2]|0);b[d+8>>2]=(b[a+8>>2]|0)-(b[c+8>>2]|0);return}function Ga(a,c){a=a|0;c=c|0;var d=0,e=0;d=B(b[a>>2]|0,c)|0;b[a>>2]=d;d=a+4|0;e=B(b[d>>2]|0,c)|0;b[d>>2]=e;a=a+8|0;c=B(b[a>>2]|0,c)|0;b[a>>2]=c;return}function Ha(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=b[a>>2]|0;i=(h|0)<0;e=(b[a+4>>2]|0)-(i?h:0)|0;g=(e|0)<0;f=(g?0-e|0:0)+((b[a+8>>2]|0)-(i?h:0))|0;d=(f|0)<0;a=d?0:f;c=(g?0:e)-(d?f:0)|0;f=(i?0:h)-(g?e:0)-(d?f:0)|0;d=(c|0)<(f|0)?c:f;d=(a|0)<(d|0)?a:d;e=(d|0)>0;a=a-(e?d:0)|0;c=c-(e?d:0)|0;a:do switch(f-(e?d:0)|0){case 0:switch(c|0){case 0:{i=(a|0)==0?0:(a|0)==1?1:7;return i|0}case 1:{i=(a|0)==0?2:(a|0)==1?3:7;return i|0}default:break a}case 1:switch(c|0){case 0:{i=(a|0)==0?4:(a|0)==1?5:7;return i|0}case 1:{if(!a)a=6;else break a;return a|0}default:break a}default:{}}while(0);i=7;return i|0}function Ia(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=b[h>>2]|0;c=(b[a>>2]|0)-d|0;i=a+4|0;d=(b[i>>2]|0)-d|0;e=Vc(+((c*3|0)-d|0)/7.0)|0;b[a>>2]=e;c=Vc(+((d<<1)+c|0)/7.0)|0;b[i>>2]=c;b[h>>2]=0;d=c-e|0;if((e|0)<0){g=0-e|0;b[i>>2]=d;b[h>>2]=g;b[a>>2]=0;c=d;e=0;d=g}else d=0;if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0)return;b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;return}function Ja(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=b[h>>2]|0;c=(b[a>>2]|0)-d|0;i=a+4|0;d=(b[i>>2]|0)-d|0;e=Vc(+((c<<1)+d|0)/7.0)|0;b[a>>2]=e;c=Vc(+((d*3|0)-c|0)/7.0)|0;b[i>>2]=c;b[h>>2]=0;d=c-e|0;if((e|0)<0){g=0-e|0;b[i>>2]=d;b[h>>2]=g;b[a>>2]=0;c=d;e=0;d=g}else d=0;if((c|0)<0){e=e-c|0;b[a>>2]=e;d=d-c|0;b[h>>2]=d;b[i>>2]=0;c=0}g=e-d|0;f=c-d|0;if((d|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;c=f;f=g;d=0}else f=e;e=(c|0)<(f|0)?c:f;e=(d|0)<(e|0)?d:e;if((e|0)<=0)return;b[a>>2]=f-e;b[i>>2]=c-e;b[h>>2]=d-e;return}function Ka(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;i=a+8|0;e=b[i>>2]|0;f=d+(c*3|0)|0;b[a>>2]=f;d=e+(d*3|0)|0;b[h>>2]=d;c=(e*3|0)+c|0;b[i>>2]=c;e=d-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=e;b[i>>2]=c;b[a>>2]=0;d=e;e=0}else e=f;if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function La(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=(c*3|0)+f|0;f=d+(f*3|0)|0;b[a>>2]=f;b[h>>2]=e;c=(d*3|0)+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;f=0}else d=e;if((d|0)<0){f=f-d|0;b[a>>2]=f;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=f-c|0;e=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=e;b[i>>2]=0;f=g;c=0}else e=d;d=(e|0)<(f|0)?e:f;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=f-d;b[h>>2]=e-d;b[i>>2]=c-d;return}function Ma(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;if((c+-1|0)>>>0>=6)return;f=(b[15472+(c*12|0)>>2]|0)+(b[a>>2]|0)|0;b[a>>2]=f;i=a+4|0;e=(b[15472+(c*12|0)+4>>2]|0)+(b[i>>2]|0)|0;b[i>>2]=e;h=a+8|0;c=(b[15472+(c*12|0)+8>>2]|0)+(b[h>>2]|0)|0;b[h>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[i>>2]=d;b[h>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[h>>2]=c;b[i>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[i>>2]=f;b[h>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[i>>2]=f-d;b[h>>2]=c-d;return}function Na(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=c+f|0;f=d+f|0;b[a>>2]=f;b[h>>2]=e;c=d+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Oa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;e=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;f=e+c|0;b[a>>2]=f;e=d+e|0;b[h>>2]=e;c=d+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;e=0}else{d=e;e=f}if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Pa(a){a=a|0;switch(a|0){case 1:{a=5;break}case 5:{a=4;break}case 4:{a=6;break}case 6:{a=2;break}case 2:{a=3;break}case 3:{a=1;break}default:{}}return a|0}function Qa(a){a=a|0;switch(a|0){case 1:{a=3;break}case 3:{a=2;break}case 2:{a=6;break}case 6:{a=4;break}case 4:{a=5;break}case 5:{a=1;break}default:{}}return a|0}function Ra(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=b[a>>2]|0;h=a+4|0;d=b[h>>2]|0;i=a+8|0;e=b[i>>2]|0;f=d+(c<<1)|0;b[a>>2]=f;d=e+(d<<1)|0;b[h>>2]=d;c=(e<<1)+c|0;b[i>>2]=c;e=d-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=e;b[i>>2]=c;b[a>>2]=0;d=e;e=0}else e=f;if((d|0)<0){e=e-d|0;b[a>>2]=e;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=e-c|0;f=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=f;b[i>>2]=0;e=g;c=0}else f=d;d=(f|0)<(e|0)?f:e;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=e-d;b[h>>2]=f-d;b[i>>2]=c-d;return}function Sa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=b[a>>2]|0;h=a+4|0;c=b[h>>2]|0;i=a+8|0;d=b[i>>2]|0;e=(c<<1)+f|0;f=d+(f<<1)|0;b[a>>2]=f;b[h>>2]=e;c=(d<<1)+c|0;b[i>>2]=c;d=e-f|0;if((f|0)<0){c=c-f|0;b[h>>2]=d;b[i>>2]=c;b[a>>2]=0;f=0}else d=e;if((d|0)<0){f=f-d|0;b[a>>2]=f;c=c-d|0;b[i>>2]=c;b[h>>2]=0;d=0}g=f-c|0;e=d-c|0;if((c|0)<0){b[a>>2]=g;b[h>>2]=e;b[i>>2]=0;f=g;c=0}else e=d;d=(e|0)<(f|0)?e:f;d=(c|0)<(d|0)?c:d;if((d|0)<=0)return;b[a>>2]=f-d;b[h>>2]=e-d;b[i>>2]=c-d;return}function Ta(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;h=(b[a>>2]|0)-(b[c>>2]|0)|0;i=(h|0)<0;e=(b[a+4>>2]|0)-(b[c+4>>2]|0)-(i?h:0)|0;g=(e|0)<0;f=(i?0-h|0:0)+(b[a+8>>2]|0)-(b[c+8>>2]|0)+(g?0-e|0:0)|0;a=(f|0)<0;c=a?0:f;d=(g?0:e)-(a?f:0)|0;f=(i?0:h)-(g?e:0)-(a?f:0)|0;a=(d|0)<(f|0)?d:f;a=(c|0)<(a|0)?c:a;e=(a|0)>0;c=c-(e?a:0)|0;d=d-(e?a:0)|0;a=f-(e?a:0)|0;a=(a|0)>-1?a:0-a|0;d=(d|0)>-1?d:0-d|0;c=(c|0)>-1?c:0-c|0;c=(d|0)>(c|0)?d:c;return ((a|0)>(c|0)?a:c)|0}function Ua(a,c){a=a|0;c=c|0;var d=0;d=b[a+8>>2]|0;b[c>>2]=(b[a>>2]|0)-d;b[c+4>>2]=(b[a+4>>2]|0)-d;return}function Va(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;e=b[a>>2]|0;b[c>>2]=e;a=b[a+4>>2]|0;h=c+4|0;b[h>>2]=a;i=c+8|0;b[i>>2]=0;d=a-e|0;if((e|0)<0){a=0-e|0;b[h>>2]=d;b[i>>2]=a;b[c>>2]=0;e=0}else{d=a;a=0}if((d|0)<0){e=e-d|0;b[c>>2]=e;a=a-d|0;b[i>>2]=a;b[h>>2]=0;d=0}g=e-a|0;f=d-a|0;if((a|0)<0){b[c>>2]=g;b[h>>2]=f;b[i>>2]=0;d=f;f=g;a=0}else f=e;e=(d|0)<(f|0)?d:f;e=(a|0)<(e|0)?a:e;if((e|0)<=0)return;b[c>>2]=f-e;b[h>>2]=d-e;b[i>>2]=a-e;return}function Wa(a){a=a|0;var c=0,d=0,e=0,f=0;c=a+8|0;f=b[c>>2]|0;d=f-(b[a>>2]|0)|0;b[a>>2]=d;e=a+4|0;a=(b[e>>2]|0)-f|0;b[e>>2]=a;b[c>>2]=0-(a+d);return}function Xa(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;d=b[a>>2]|0;c=0-d|0;b[a>>2]=c;h=a+8|0;b[h>>2]=0;i=a+4|0;e=b[i>>2]|0;f=e+d|0;if((d|0)>0){b[i>>2]=f;b[h>>2]=d;b[a>>2]=0;c=0;e=f}else d=0;if((e|0)<0){g=c-e|0;b[a>>2]=g;d=d-e|0;b[h>>2]=d;b[i>>2]=0;f=g-d|0;c=0-d|0;if((d|0)<0){b[a>>2]=f;b[i>>2]=c;b[h>>2]=0;e=c;d=0}else{e=0;f=g}}else f=c;c=(e|0)<(f|0)?e:f;c=(d|0)<(c|0)?d:c;if((c|0)<=0)return;b[a>>2]=f-c;b[i>>2]=e-c;b[h>>2]=d-c;return}function Ya(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=S;S=S+16|0;e=d;Za(a,b,c,e);Ba(e,c+4|0);S=d;return}function Za(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var g=0.0,h=0,i=0.0,j=0.0,k=0;k=S;S=S+32|0;h=k;Jc(a,h);b[d>>2]=0;g=+Ic(15888,h);i=+Ic(15912,h);if(i<g){b[d>>2]=1;g=i}i=+Ic(15936,h);if(i<g){b[d>>2]=2;g=i}i=+Ic(15960,h);if(i<g){b[d>>2]=3;g=i}i=+Ic(15984,h);if(i<g){b[d>>2]=4;g=i}i=+Ic(16008,h);if(i<g){b[d>>2]=5;g=i}i=+Ic(16032,h);if(i<g){b[d>>2]=6;g=i}i=+Ic(16056,h);if(i<g){b[d>>2]=7;g=i}i=+Ic(16080,h);if(i<g){b[d>>2]=8;g=i}i=+Ic(16104,h);if(i<g){b[d>>2]=9;g=i}i=+Ic(16128,h);if(i<g){b[d>>2]=10;g=i}i=+Ic(16152,h);if(i<g){b[d>>2]=11;g=i}i=+Ic(16176,h);if(i<g){b[d>>2]=12;g=i}i=+Ic(16200,h);if(i<g){b[d>>2]=13;g=i}i=+Ic(16224,h);if(i<g){b[d>>2]=14;g=i}i=+Ic(16248,h);if(i<g){b[d>>2]=15;g=i}i=+Ic(16272,h);if(i<g){b[d>>2]=16;g=i}i=+Ic(16296,h);if(i<g){b[d>>2]=17;g=i}i=+Ic(16320,h);if(i<g){b[d>>2]=18;g=i}i=+Ic(16344,h);if(i<g){b[d>>2]=19;g=i}i=+w(+(1.0-g*.5));if(i<1.0e-16){b[f>>2]=0;b[f+4>>2]=0;b[f+8>>2]=0;b[f+12>>2]=0;S=k;return}d=b[d>>2]|0;g=+e[16368+(d*24|0)>>3];g=+gb(g-+gb(+lb(15568+(d<<4)|0,a)));if(!(Rb(c)|0))j=g;else j=+gb(g+-.3334731722518321);g=+v(+i)/.381966011250105;if((c|0)>0){h=0;do{g=g*2.6457513110645907;h=h+1|0}while((h|0)!=(c|0))}i=+t(+j)*g;e[f>>3]=i;j=+u(+j)*g;e[f+8>>3]=j;S=k;return}function _a(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0.0,i=0.0;h=+Fc(a);if(h<1.0e-16){c=15568+(c<<4)|0;b[g>>2]=b[c>>2];b[g+4>>2]=b[c+4>>2];b[g+8>>2]=b[c+8>>2];b[g+12>>2]=b[c+12>>2];return}i=+z(+(+e[a+8>>3]),+(+e[a>>3]));if((d|0)>0){a=0;do{h=h/2.6457513110645907;a=a+1|0}while((a|0)!=(d|0))}if(!f){h=+y(+(h*.381966011250105));if(Rb(d)|0)i=+gb(i+.3334731722518321)}else{h=h/3.0;d=(Rb(d)|0)==0;h=+y(+((d?h:h/2.6457513110645907)*.381966011250105))}mb(15568+(c<<4)|0,+gb(+e[16368+(c*24|0)>>3]-i),h,g);return}function $a(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;e=S;S=S+16|0;f=e;Da(a+4|0,f);_a(f,b[a>>2]|0,c,0,d);S=e;return}function ab(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0.0,J=0.0;G=S;S=S+272|0;h=G+256|0;u=G+240|0;D=G;E=G+224|0;F=G+208|0;v=G+176|0;w=G+160|0;x=G+192|0;y=G+144|0;z=G+128|0;A=G+112|0;B=G+96|0;C=G+80|0;b[h>>2]=c;b[u>>2]=b[a>>2];b[u+4>>2]=b[a+4>>2];b[u+8>>2]=b[a+8>>2];b[u+12>>2]=b[a+12>>2];bb(u,h,D);b[g>>2]=0;u=f+d+((f|0)==5&1)|0;if((u|0)<=(d|0)){S=G;return}k=b[h>>2]|0;l=E+4|0;m=v+4|0;n=d+5|0;o=16848+(k<<2)|0;p=16928+(k<<2)|0;q=z+8|0;r=A+8|0;s=B+8|0;t=F+4|0;j=d;a:while(1){i=D+(((j|0)%5|0)<<4)|0;b[F>>2]=b[i>>2];b[F+4>>2]=b[i+4>>2];b[F+8>>2]=b[i+8>>2];b[F+12>>2]=b[i+12>>2];do{}while((cb(F,k,0,1)|0)==2);if((j|0)>(d|0)&(Rb(c)|0)!=0){b[v>>2]=b[F>>2];b[v+4>>2]=b[F+4>>2];b[v+8>>2]=b[F+8>>2];b[v+12>>2]=b[F+12>>2];Da(l,w);f=b[v>>2]|0;h=b[17008+(f*80|0)+(b[E>>2]<<2)>>2]|0;b[v>>2]=b[18608+(f*80|0)+(h*20|0)>>2];i=b[18608+(f*80|0)+(h*20|0)+16>>2]|0;if((i|0)>0){a=0;do{Na(m);a=a+1|0}while((a|0)<(i|0))}i=18608+(f*80|0)+(h*20|0)+4|0;b[x>>2]=b[i>>2];b[x+4>>2]=b[i+4>>2];b[x+8>>2]=b[i+8>>2];Ga(x,(b[o>>2]|0)*3|0);Ea(m,x,m);Ca(m);Da(m,y);I=+(b[p>>2]|0);e[z>>3]=I*3.0;e[q>>3]=0.0;J=I*-1.5;e[A>>3]=J;e[r>>3]=I*2.598076211353316;e[B>>3]=J;e[s>>3]=I*-2.598076211353316;switch(b[17008+((b[v>>2]|0)*80|0)+(b[F>>2]<<2)>>2]|0){case 1:{a=A;f=z;break}case 3:{a=B;f=A;break}case 2:{a=z;f=B;break}default:{a=12;break a}}Gc(w,y,f,a,C);_a(C,b[v>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}if((j|0)<(n|0)){Da(t,v);_a(v,b[F>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1};b[E>>2]=b[F>>2];b[E+4>>2]=b[F+4>>2];b[E+8>>2]=b[F+8>>2];b[E+12>>2]=b[F+12>>2];j=j+1|0;if((j|0)>=(u|0)){a=3;break}}if((a|0)==3){S=G;return}else if((a|0)==12)H(22474,22521,581,22531)}function bb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=S;S=S+128|0;e=j+64|0;f=j;g=e;h=20208;i=g+60|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=f;h=20272;i=g+60|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));i=(Rb(b[c>>2]|0)|0)==0;e=i?e:f;f=a+4|0;Ra(f);Sa(f);if(Rb(b[c>>2]|0)|0){La(f);b[c>>2]=(b[c>>2]|0)+1}b[d>>2]=b[a>>2];c=d+4|0;Ea(f,e,c);Ca(c);b[d+16>>2]=b[a>>2];c=d+20|0;Ea(f,e+12|0,c);Ca(c);b[d+32>>2]=b[a>>2];c=d+36|0;Ea(f,e+24|0,c);Ca(c);b[d+48>>2]=b[a>>2];c=d+52|0;Ea(f,e+36|0,c);Ca(c);b[d+64>>2]=b[a>>2];d=d+68|0;Ea(f,e+48|0,d);Ca(d);S=j;return}function cb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=S;S=S+32|0;n=p+12|0;i=p;o=a+4|0;m=b[16928+(c<<2)>>2]|0;l=(e|0)!=0;m=l?m*3|0:m;f=b[o>>2]|0;k=a+8|0;h=b[k>>2]|0;if(l){g=a+12|0;e=b[g>>2]|0;f=h+f+e|0;if((f|0)==(m|0)){o=1;S=p;return o|0}else j=g}else{j=a+12|0;e=b[j>>2]|0;f=h+f+e|0}if((f|0)<=(m|0)){o=0;S=p;return o|0}do if((e|0)>0){e=b[a>>2]|0;if((h|0)>0){g=18608+(e*80|0)+60|0;e=a;break}e=18608+(e*80|0)+40|0;if(!d){g=e;e=a}else{Aa(n,m,0,0);Fa(o,n,i);Oa(i);Ea(i,n,o);g=e;e=a}}else{g=18608+((b[a>>2]|0)*80|0)+20|0;e=a}while(0);b[e>>2]=b[g>>2];f=g+16|0;if((b[f>>2]|0)>0){e=0;do{Na(o);e=e+1|0}while((e|0)<(b[f>>2]|0))}a=g+4|0;b[n>>2]=b[a>>2];b[n+4>>2]=b[a+4>>2];b[n+8>>2]=b[a+8>>2];c=b[16848+(c<<2)>>2]|0;Ga(n,l?c*3|0:c);Ea(o,n,o);Ca(o);if(l)e=((b[k>>2]|0)+(b[o>>2]|0)+(b[j>>2]|0)|0)==(m|0)?1:2;else e=2;o=e;S=p;return o|0}function db(a,b){a=a|0;b=b|0;var c=0;do c=cb(a,b,0,1)|0;while((c|0)==2);return c|0}function eb(a,c,d,f,g){a=a|0;c=c|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0;B=S;S=S+240|0;h=B+224|0;x=B+208|0;y=B;z=B+192|0;A=B+176|0;s=B+160|0;t=B+144|0;u=B+128|0;v=B+112|0;w=B+96|0;b[h>>2]=c;b[x>>2]=b[a>>2];b[x+4>>2]=b[a+4>>2];b[x+8>>2]=b[a+8>>2];b[x+12>>2]=b[a+12>>2];fb(x,h,y);b[g>>2]=0;r=f+d+((f|0)==6&1)|0;if((r|0)<=(d|0)){S=B;return}k=b[h>>2]|0;l=d+6|0;m=16928+(k<<2)|0;n=t+8|0;o=u+8|0;p=v+8|0;q=z+4|0;i=0;j=d;f=-1;a:while(1){h=(j|0)%6|0;a=y+(h<<4)|0;b[z>>2]=b[a>>2];b[z+4>>2]=b[a+4>>2];b[z+8>>2]=b[a+8>>2];b[z+12>>2]=b[a+12>>2];a=i;i=cb(z,k,0,1)|0;if((j|0)>(d|0)&(Rb(c)|0)!=0?((a|0)!=1?(b[z>>2]|0)!=(f|0):0):0){Da(y+(((h+5|0)%6|0)<<4)+4|0,A);Da(y+(h<<4)+4|0,s);C=+(b[m>>2]|0);e[t>>3]=C*3.0;e[n>>3]=0.0;D=C*-1.5;e[u>>3]=D;e[o>>3]=C*2.598076211353316;e[v>>3]=D;e[p>>3]=C*-2.598076211353316;h=b[x>>2]|0;switch(b[17008+(h*80|0)+(((f|0)==(h|0)?b[z>>2]|0:f)<<2)>>2]|0){case 1:{a=u;f=t;break}case 3:{a=v;f=u;break}case 2:{a=t;f=v;break}default:{a=8;break a}}Gc(A,s,f,a,w);if(!(Hc(A,w)|0)?!(Hc(s,w)|0):0){_a(w,b[x>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}}if((j|0)<(l|0)){Da(q,A);_a(A,b[z>>2]|0,k,1,g+8+(b[g>>2]<<4)|0);b[g>>2]=(b[g>>2]|0)+1}j=j+1|0;if((j|0)>=(r|0)){a=3;break}else f=b[z>>2]|0}if((a|0)==3){S=B;return}else if((a|0)==8)H(22557,22521,746,22602)}function fb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=S;S=S+160|0;e=j+80|0;f=j;g=e;h=20336;i=g+72|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));g=f;h=20416;i=g+72|0;do{b[g>>2]=b[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(i|0));i=(Rb(b[c>>2]|0)|0)==0;e=i?e:f;f=a+4|0;Ra(f);Sa(f);if(Rb(b[c>>2]|0)|0){La(f);b[c>>2]=(b[c>>2]|0)+1}b[d>>2]=b[a>>2];c=d+4|0;Ea(f,e,c);Ca(c);b[d+16>>2]=b[a>>2];c=d+20|0;Ea(f,e+12|0,c);Ca(c);b[d+32>>2]=b[a>>2];c=d+36|0;Ea(f,e+24|0,c);Ca(c);b[d+48>>2]=b[a>>2];c=d+52|0;Ea(f,e+36|0,c);Ca(c);b[d+64>>2]=b[a>>2];c=d+68|0;Ea(f,e+48|0,c);Ca(c);b[d+80>>2]=b[a>>2];d=d+84|0;Ea(f,e+60|0,d);Ca(d);S=j;return}function gb(a){a=+a;var b=0.0;b=a<0.0?a+6.283185307179586:a;return +(!(a>=6.283185307179586)?b:b+-6.283185307179586)}function hb(a,b){a=a|0;b=b|0;if(!(+q(+(+e[a>>3]-+e[b>>3]))<1.7453292519943298e-11)){b=0;return b|0}b=+q(+(+e[a+8>>3]-+e[b+8>>3]))<1.7453292519943298e-11;return b|0}function ib(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0)}function jb(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0*6371.007180918475)}function kb(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0;f=+e[b>>3];d=+e[a>>3];g=+u(+((f-d)*.5));c=+u(+((+e[b+8>>3]-+e[a+8>>3])*.5));c=g*g+c*(+t(+f)*+t(+d)*c);return +(+z(+(+r(+c)),+(+r(+(1.0-c))))*2.0*6371.007180918475*1.0e3)}function lb(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0,g=0.0,h=0.0;g=+e[b>>3];d=+t(+g);f=+e[b+8>>3]-+e[a+8>>3];h=d*+u(+f);c=+e[a>>3];return +(+z(+h,+(+u(+g)*+t(+c)-+t(+f)*(d*+u(+c)))))}function mb(a,c,d,f){a=a|0;c=+c;d=+d;f=f|0;var g=0,h=0.0,i=0.0,j=0.0;if(d<1.0e-16){b[f>>2]=b[a>>2];b[f+4>>2]=b[a+4>>2];b[f+8>>2]=b[a+8>>2];b[f+12>>2]=b[a+12>>2];return}h=c<0.0?c+6.283185307179586:c;h=!(c>=6.283185307179586)?h:h+-6.283185307179586;do if(h<1.0e-16){c=+e[a>>3]+d;e[f>>3]=c;g=f}else{g=+q(+(h+-3.141592653589793))<1.0e-16;c=+e[a>>3];if(g){c=c-d;e[f>>3]=c;g=f;break}i=+t(+d);d=+u(+d);c=i*+u(+c)+ +t(+h)*(d*+t(+c));c=c>1.0?1.0:c;c=+x(+(c<-1.0?-1.0:c));e[f>>3]=c;if(+q(+(c+-1.5707963267948966))<1.0e-16){e[f>>3]=1.5707963267948966;e[f+8>>3]=0.0;return}if(+q(+(c+1.5707963267948966))<1.0e-16){e[f>>3]=-1.5707963267948966;e[f+8>>3]=0.0;return}j=+t(+c);h=d*+u(+h)/j;d=+e[a>>3];c=(i-+u(+c)*+u(+d))/+t(+d)/j;i=h>1.0?1.0:h;c=c>1.0?1.0:c;c=+e[a+8>>3]+ +z(+(i<-1.0?-1.0:i),+(c<-1.0?-1.0:c));if(c>3.141592653589793)do c=c+-6.283185307179586;while(c>3.141592653589793);if(c<-3.141592653589793)do c=c+6.283185307179586;while(c<-3.141592653589793);e[f+8>>3]=c;return}while(0);if(+q(+(c+-1.5707963267948966))<1.0e-16){e[g>>3]=1.5707963267948966;e[f+8>>3]=0.0;return}if(+q(+(c+1.5707963267948966))<1.0e-16){e[g>>3]=-1.5707963267948966;e[f+8>>3]=0.0;return}c=+e[a+8>>3];if(c>3.141592653589793)do c=c+-6.283185307179586;while(c>3.141592653589793);if(c<-3.141592653589793)do c=c+6.283185307179586;while(c<-3.141592653589793);e[f+8>>3]=c;return}function nb(a){a=a|0;return +(+e[20496+(a<<3)>>3])}function ob(a){a=a|0;return +(+e[20624+(a<<3)>>3])}function pb(a){a=a|0;return +(+e[20752+(a<<3)>>3])}function qb(a){a=a|0;return +(+e[20880+(a<<3)>>3])}function rb(a){a=a|0;var c=0;c=21008+(a<<3)|0;a=b[c>>2]|0;F(b[c+4>>2]|0);return a|0}function sb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;n=+e[b>>3];l=+e[a>>3];j=+u(+((n-l)*.5));g=+e[b+8>>3];k=+e[a+8>>3];h=+u(+((g-k)*.5));i=+t(+l);m=+t(+n);h=j*j+h*(m*i*h);h=+z(+(+r(+h)),+(+r(+(1.0-h))))*2.0;j=+e[c>>3];n=+u(+((j-n)*.5));d=+e[c+8>>3];g=+u(+((d-g)*.5));f=+t(+j);g=n*n+g*(m*f*g);g=+z(+(+r(+g)),+(+r(+(1.0-g))))*2.0;j=+u(+((l-j)*.5));d=+u(+((k-d)*.5));d=j*j+d*(i*f*d);d=+z(+(+r(+d)),+(+r(+(1.0-d))))*2.0;f=(h+g+d)*.5;return +(+y(+(+r(+(+v(+(f*.5))*+v(+((f-h)*.5))*+v(+((f-g)*.5))*+v(+((f-d)*.5))))))*4.0)}function tb(a,c){a=a|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0;g=S;S=S+192|0;e=g+168|0;f=g;Vb(a,c,e);Wb(a,c,f);c=b[f>>2]|0;if((c|0)<=0){d=0.0;S=g;return +d}d=+sb(f+8|0,f+8+(((c|0)!=1&1)<<4)|0,e)+0.0;if((c|0)==1){S=g;return +d}a=1;do{h=a;a=a+1|0;d=d+ +sb(f+8+(h<<4)|0,f+8+(((a|0)%(c|0)|0)<<4)|0,e)}while((a|0)<(c|0));S=g;return +d}function ub(a,c){a=a|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0;g=S;S=S+192|0;e=g+168|0;f=g;Vb(a,c,e);Wb(a,c,f);c=b[f>>2]|0;if((c|0)>0){d=+sb(f+8|0,f+8+(((c|0)!=1&1)<<4)|0,e)+0.0;if((c|0)!=1){a=1;do{h=a;a=a+1|0;d=d+ +sb(f+8+(h<<4)|0,f+8+(((a|0)%(c|0)|0)<<4)|0,e)}while((a|0)<(c|0))}}else d=0.0;S=g;return +(d*6371.007180918475*6371.007180918475)}function vb(a,c){a=a|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0;g=S;S=S+192|0;e=g+168|0;f=g;Vb(a,c,e);Wb(a,c,f);c=b[f>>2]|0;if((c|0)>0){d=+sb(f+8|0,f+8+(((c|0)!=1&1)<<4)|0,e)+0.0;if((c|0)!=1){a=1;do{h=a;a=a+1|0;d=d+ +sb(f+8+(h<<4)|0,f+8+(((a|0)%(c|0)|0)<<4)|0,e)}while((a|0)<(c|0))}}else d=0.0;S=g;return +(d*6371.007180918475*6371.007180918475*1.0e3*1.0e3)}function wb(a,c){a=a|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0,i=0,j=0.0,k=0.0,l=0.0;i=S;S=S+176|0;h=i;gc(a,c,h);a=b[h>>2]|0;if((a|0)<=1){g=0.0;S=i;return +g}c=a+-1|0;a=0;d=0.0;f=+e[h+8>>3];g=+e[h+16>>3];do{a=a+1|0;k=f;f=+e[h+8+(a<<4)>>3];l=+u(+((f-k)*.5));j=g;g=+e[h+8+(a<<4)+8>>3];j=+u(+((g-j)*.5));j=l*l+j*(+t(+f)*+t(+k)*j);d=d+ +z(+(+r(+j)),+(+r(+(1.0-j))))*2.0}while((a|0)<(c|0));S=i;return +d}function xb(a,c){a=a|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0,i=0,j=0.0,k=0.0,l=0.0;i=S;S=S+176|0;h=i;gc(a,c,h);a=b[h>>2]|0;if((a|0)<=1){g=0.0;S=i;return +g}c=a+-1|0;a=0;d=0.0;f=+e[h+8>>3];g=+e[h+16>>3];do{a=a+1|0;k=f;f=+e[h+8+(a<<4)>>3];l=+u(+((f-k)*.5));j=g;g=+e[h+8+(a<<4)+8>>3];j=+u(+((g-j)*.5));j=l*l+j*(+t(+k)*+t(+f)*j);d=d+ +z(+(+r(+j)),+(+r(+(1.0-j))))*2.0}while((a|0)!=(c|0));l=d*6371.007180918475;S=i;return +l}function yb(a,c){a=a|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0,i=0,j=0.0,k=0.0,l=0.0;i=S;S=S+176|0;h=i;gc(a,c,h);a=b[h>>2]|0;if((a|0)<=1){g=0.0;S=i;return +g}c=a+-1|0;a=0;d=0.0;f=+e[h+8>>3];g=+e[h+16>>3];do{a=a+1|0;k=f;f=+e[h+8+(a<<4)>>3];l=+u(+((f-k)*.5));j=g;g=+e[h+8+(a<<4)+8>>3];j=+u(+((g-j)*.5));j=l*l+j*(+t(+k)*+t(+f)*j);d=d+ +z(+(+r(+j)),+(+r(+(1.0-j))))*2.0}while((a|0)!=(c|0));l=d*6371.007180918475*1.0e3;S=i;return +l}function zb(a,b){a=a|0;b=b|0;b=cd(a|0,b|0,52)|0;G()|0;return b&15|0}function Ab(a,b){a=a|0;b=b|0;b=cd(a|0,b|0,45)|0;G()|0;return b&127|0}function Bb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;if(!(0==0&(b&-16777216|0)==134217728)){b=0;return b|0}g=cd(a|0,b|0,45)|0;G()|0;g=g&127;if(g>>>0>121){b=0;return b|0}c=cd(a|0,b|0,52)|0;G()|0;c=c&15;do if(c|0){e=1;d=0;while(1){f=cd(a|0,b|0,(15-e|0)*3|0)|0;G()|0;f=f&7;if((f|0)!=0&(d^1))if((f|0)==1&(la(g)|0)!=0){h=0;d=13;break}else d=1;if((f|0)==7){h=0;d=13;break}if(e>>>0<c>>>0)e=e+1|0;else{d=9;break}}if((d|0)==9){if((c|0)==15)h=1;else break;return h|0}else if((d|0)==13)return h|0}while(0);while(1){h=cd(a|0,b|0,(14-c|0)*3|0)|0;G()|0;if(!((h&7|0)==7&0==0)){h=0;d=13;break}if(c>>>0<14)c=c+1|0;else{h=1;d=13;break}}if((d|0)==13)return h|0;return 0}function Cb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if((d|0)>=(c|0)){if((d|0)!=(c|0))if(c>>>0<=15){e=dd(c|0,0,52)|0;a=e|a;b=G()|0|b&-15728641;if((d|0)>(c|0))do{e=dd(7,0,(14-c|0)*3|0)|0;c=c+1|0;a=e|a;b=G()|0|b}while((c|0)<(d|0))}else{b=0;a=0}}else{b=0;a=0}F(b|0);return a|0}function Db(a,b,c){a=a|0;b=b|0;c=c|0;a=cd(a|0,b|0,52)|0;G()|0;a=a&15;if(!((c|0)<16&(a|0)<=(c|0))){c=0;return c|0}c=tc(7,c-a|0)|0;return c|0}function Eb(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;h=cd(a|0,c|0,52)|0;G()|0;h=h&15;if(!((d|0)<16&(h|0)<=(d|0)))return;if((h|0)==(d|0)){d=e;b[d>>2]=a;b[d+4>>2]=c;return}j=tc(7,d-h|0)|0;k=(j|0)/7|0;i=cd(a|0,c|0,45)|0;G()|0;if(!(la(i&127)|0))g=0;else{a:do if(!h)f=0;else{g=1;while(1){f=cd(a|0,c|0,(15-g|0)*3|0)|0;G()|0;f=f&7;if(f|0)break a;if(g>>>0<h>>>0)g=g+1|0;else{f=0;break}}}while(0);g=(f|0)==0}l=dd(h+1|0,0,52)|0;f=G()|0|c&-15728641;i=(14-h|0)*3|0;c=dd(7,0,i|0)|0;c=(l|a)&~c;h=f&~(G()|0);Eb(c,h,d,e);f=e+(k<<3)|0;if(!g){l=dd(1,0,i|0)|0;Eb(l|c,G()|0|h,d,f);l=f+(k<<3)|0;j=dd(2,0,i|0)|0;Eb(j|c,G()|0|h,d,l);l=l+(k<<3)|0;j=dd(3,0,i|0)|0;Eb(j|c,G()|0|h,d,l);l=l+(k<<3)|0;j=dd(4,0,i|0)|0;Eb(j|c,G()|0|h,d,l);l=l+(k<<3)|0;j=dd(5,0,i|0)|0;Eb(j|c,G()|0|h,d,l);j=dd(6,0,i|0)|0;Eb(j|c,G()|0|h,d,l+(k<<3)|0);return}g=f+(k<<3)|0;if((j|0)>6){j=f+8|0;l=(g>>>0>j>>>0?g:j)+-1+(0-f)|0;hd(f|0,0,l+8&-8|0)|0;f=j+(l>>>3<<3)|0}l=dd(2,0,i|0)|0;Eb(l|c,G()|0|h,d,f);l=f+(k<<3)|0;j=dd(3,0,i|0)|0;Eb(j|c,G()|0|h,d,l);l=l+(k<<3)|0;j=dd(4,0,i|0)|0;Eb(j|c,G()|0|h,d,l);l=l+(k<<3)|0;j=dd(5,0,i|0)|0;Eb(j|c,G()|0|h,d,l);j=dd(6,0,i|0)|0;Eb(j|c,G()|0|h,d,l+(k<<3)|0);return}function Fb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=cd(a|0,b|0,45)|0;G()|0;if(!(la(e&127)|0)){e=0;return e|0}e=cd(a|0,b|0,52)|0;G()|0;e=e&15;a:do if(!e)c=0;else{d=1;while(1){c=cd(a|0,b|0,(15-d|0)*3|0)|0;G()|0;c=c&7;if(c|0)break a;if(d>>>0<e>>>0)d=d+1|0;else{c=0;break}}}while(0);e=(c|0)==0&1;return e|0}function Gb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if((c|0)<16&(d|0)<=(c|0)){if((d|0)!=(c|0)){e=dd(c|0,0,52)|0;a=e|a;b=G()|0|b&-15728641;if((d|0)<(c|0))do{e=dd(7,0,(14-d|0)*3|0)|0;d=d+1|0;a=a&~e;b=b&~(G()|0)}while((d|0)<(c|0))}}else{b=0;a=0}F(b|0);return a|0}function Hb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if(!d){y=0;return y|0}f=a;e=b[f>>2]|0;f=b[f+4>>2]|0;if(0==0&(f&15728640|0)==0){if((d|0)<=0){y=0;return y|0}y=c;b[y>>2]=e;b[y+4>>2]=f;if((d|0)==1){y=0;return y|0}e=1;do{w=a+(e<<3)|0;x=b[w+4>>2]|0;y=c+(e<<3)|0;b[y>>2]=b[w>>2];b[y+4>>2]=x;e=e+1|0}while((e|0)!=(d|0));e=0;return e|0}w=d<<3;x=Wc(w)|0;if(!x){y=-3;return y|0}gd(x|0,a|0,w|0)|0;v=Yc(d,8)|0;if(!v){Xc(x);y=-3;return y|0}e=d;a:while(1){h=x;l=b[h>>2]|0;h=b[h+4>>2]|0;t=cd(l|0,h|0,52)|0;G()|0;t=t&15;u=t+-1|0;s=(e|0)>0;b:do if(s){r=((e|0)<0)<<31>>31;p=dd(u|0,0,52)|0;q=G()|0;if(u>>>0>15){f=0;a=l;d=h;while(1){if(!((a|0)==0&(d|0)==0)){g=cd(a|0,d|0,52)|0;G()|0;g=g&15;i=(g|0)<(u|0);g=(g|0)==(u|0);k=i?0:g?a:0;a=i?0:g?d:0;d=bd(k|0,a|0,e|0,r|0)|0;G()|0;g=v+(d<<3)|0;i=g;j=b[i>>2]|0;i=b[i+4>>2]|0;if((j|0)==0&(i|0)==0)d=k;else{p=0;o=d;n=i;d=k;while(1){if((p|0)>(e|0)){y=41;break a}if((j|0)==(d|0)&(n&-117440513|0)==(a|0)){k=cd(j|0,n|0,56)|0;G()|0;k=k&7;m=k+1|0;q=cd(j|0,n|0,45)|0;G()|0;c:do if(!(la(q&127)|0))i=7;else{j=cd(j|0,n|0,52)|0;G()|0;j=j&15;if(!j){i=6;break}i=1;while(1){q=dd(7,0,(15-i|0)*3|0)|0;if(!((q&d|0)==0&((G()|0)&a|0)==0)){i=7;break c}if(i>>>0<j>>>0)i=i+1|0;else{i=6;break}}}while(0);if((k+2|0)>>>0>i>>>0){y=51;break a}q=dd(m|0,0,56)|0;a=G()|0|a&-117440513;i=g;b[i>>2]=0;b[i+4>>2]=0;i=o;d=q|d}else i=(o+1|0)%(e|0)|0;g=v+(i<<3)|0;n=g;j=b[n>>2]|0;n=b[n+4>>2]|0;if((j|0)==0&(n|0)==0)break;else{p=p+1|0;o=i}}}q=g;b[q>>2]=d;b[q+4>>2]=a}f=f+1|0;if((f|0)>=(e|0))break b;d=x+(f<<3)|0;a=b[d>>2]|0;d=b[d+4>>2]|0}}f=0;a=l;d=h;while(1){if(!((a|0)==0&(d|0)==0)){i=cd(a|0,d|0,52)|0;G()|0;i=i&15;if((i|0)>=(u|0)){if((i|0)!=(u|0)){a=a|p;d=d&-15728641|q;if(i>>>0>=t>>>0){g=u;do{o=dd(7,0,(14-g|0)*3|0)|0;g=g+1|0;a=o|a;d=G()|0|d}while(g>>>0<i>>>0)}}}else{a=0;d=0}i=bd(a|0,d|0,e|0,r|0)|0;G()|0;g=v+(i<<3)|0;j=g;k=b[j>>2]|0;j=b[j+4>>2]|0;if(!((k|0)==0&(j|0)==0)){o=0;while(1){if((o|0)>(e|0)){y=41;break a}if((k|0)==(a|0)&(j&-117440513|0)==(d|0)){m=cd(k|0,j|0,56)|0;G()|0;m=m&7;n=m+1|0;z=cd(k|0,j|0,45)|0;G()|0;d:do if(!(la(z&127)|0))j=7;else{k=cd(k|0,j|0,52)|0;G()|0;k=k&15;if(!k){j=6;break}j=1;while(1){z=dd(7,0,(15-j|0)*3|0)|0;if(!((z&a|0)==0&((G()|0)&d|0)==0)){j=7;break d}if(j>>>0<k>>>0)j=j+1|0;else{j=6;break}}}while(0);if((m+2|0)>>>0>j>>>0){y=51;break a}z=dd(n|0,0,56)|0;d=G()|0|d&-117440513;n=g;b[n>>2]=0;b[n+4>>2]=0;a=z|a}else i=(i+1|0)%(e|0)|0;g=v+(i<<3)|0;j=g;k=b[j>>2]|0;j=b[j+4>>2]|0;if((k|0)==0&(j|0)==0)break;else o=o+1|0}}z=g;b[z>>2]=a;b[z+4>>2]=d}f=f+1|0;if((f|0)>=(e|0))break b;d=x+(f<<3)|0;a=b[d>>2]|0;d=b[d+4>>2]|0}}while(0);if((e+5|0)>>>0<11){y=99;break}q=Yc((e|0)/6|0,8)|0;if(!q){y=58;break}e:do if(s){o=0;n=0;do{i=v+(o<<3)|0;a=i;f=b[a>>2]|0;a=b[a+4>>2]|0;if(!((f|0)==0&(a|0)==0)){j=cd(f|0,a|0,56)|0;G()|0;j=j&7;d=j+1|0;k=a&-117440513;z=cd(f|0,a|0,45)|0;G()|0;f:do if(la(z&127)|0){m=cd(f|0,a|0,52)|0;G()|0;m=m&15;if(m|0){g=1;while(1){z=dd(7,0,(15-g|0)*3|0)|0;if(!((f&z|0)==0&(k&(G()|0)|0)==0))break f;if(g>>>0<m>>>0)g=g+1|0;else break}}a=dd(d|0,0,56)|0;f=a|f;a=G()|0|k;d=i;b[d>>2]=f;b[d+4>>2]=a;d=j+2|0}while(0);if((d|0)==7){z=q+(n<<3)|0;b[z>>2]=f;b[z+4>>2]=a&-117440513;n=n+1|0}}o=o+1|0}while((o|0)!=(e|0));if(s){p=((e|0)<0)<<31>>31;m=dd(u|0,0,52)|0;o=G()|0;if(u>>>0>15){a=0;f=0;while(1){do if(!((l|0)==0&(h|0)==0)){j=cd(l|0,h|0,52)|0;G()|0;j=j&15;g=(j|0)<(u|0);j=(j|0)==(u|0);i=g?0:j?l:0;j=g?0:j?h:0;g=bd(i|0,j|0,e|0,p|0)|0;G()|0;d=0;while(1){if((d|0)>(e|0)){y=98;break a}z=v+(g<<3)|0;k=b[z+4>>2]|0;if((k&-117440513|0)==(j|0)?(b[z>>2]|0)==(i|0):0){y=70;break}g=(g+1|0)%(e|0)|0;z=v+(g<<3)|0;if((b[z>>2]|0)==(i|0)?(b[z+4>>2]|0)==(j|0):0)break;else d=d+1|0}if((y|0)==70?(y=0,0==0&(k&117440512|0)==100663296):0)break;z=c+(f<<3)|0;b[z>>2]=l;b[z+4>>2]=h;f=f+1|0}while(0);a=a+1|0;if((a|0)>=(e|0)){e=n;break e}h=x+(a<<3)|0;l=b[h>>2]|0;h=b[h+4>>2]|0}}a=0;f=0;while(1){do if(!((l|0)==0&(h|0)==0)){j=cd(l|0,h|0,52)|0;G()|0;j=j&15;if((j|0)>=(u|0))if((j|0)!=(u|0)){d=l|m;g=h&-15728641|o;if(j>>>0<t>>>0)j=g;else{i=u;do{z=dd(7,0,(14-i|0)*3|0)|0;i=i+1|0;d=z|d;g=G()|0|g}while(i>>>0<j>>>0);j=g}}else{d=l;j=h}else{d=0;j=0}i=bd(d|0,j|0,e|0,p|0)|0;G()|0;g=0;while(1){if((g|0)>(e|0)){y=98;break a}z=v+(i<<3)|0;k=b[z+4>>2]|0;if((k&-117440513|0)==(j|0)?(b[z>>2]|0)==(d|0):0){y=93;break}i=(i+1|0)%(e|0)|0;z=v+(i<<3)|0;if((b[z>>2]|0)==(d|0)?(b[z+4>>2]|0)==(j|0):0)break;else g=g+1|0}if((y|0)==93?(y=0,0==0&(k&117440512|0)==100663296):0)break;z=c+(f<<3)|0;b[z>>2]=l;b[z+4>>2]=h;f=f+1|0}while(0);a=a+1|0;if((a|0)>=(e|0)){e=n;break e}h=x+(a<<3)|0;l=b[h>>2]|0;h=b[h+4>>2]|0}}else{f=0;e=n}}else{f=0;e=0}while(0);hd(v|0,0,w|0)|0;gd(x|0,q|0,e<<3|0)|0;Xc(q);if(!e)break;else c=c+(f<<3)|0}if((y|0)==41){Xc(x);Xc(v);z=-1;return z|0}else if((y|0)==51){Xc(x);Xc(v);z=-2;return z|0}else if((y|0)==58){Xc(x);Xc(v);z=-3;return z|0}else if((y|0)==98){Xc(q);Xc(x);Xc(v);z=-1;return z|0}else if((y|0)==99)gd(c|0,x|0,e<<3|0)|0;Xc(x);Xc(v);z=0;return z|0}function Ib(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;if((c|0)<=0){f=0;return f|0}if((f|0)>=16){g=0;while(1){l=a+(g<<3)|0;if(!((b[l>>2]|0)==0&(b[l+4>>2]|0)==0)){g=14;break}g=g+1|0;if((g|0)>=(c|0)){h=0;g=16;break}}if((g|0)==14)return ((e|0)>0?-2:-1)|0;else if((g|0)==16)return h|0}g=0;l=0;a:while(1){k=a+(l<<3)|0;i=k;h=b[i>>2]|0;i=b[i+4>>2]|0;do if(!((h|0)==0&(i|0)==0)){if((g|0)>=(e|0)){h=-1;g=16;break a}j=cd(h|0,i|0,52)|0;G()|0;j=j&15;if((j|0)>(f|0)){h=-2;g=16;break a}if((j|0)==(f|0)){k=d+(g<<3)|0;b[k>>2]=h;b[k+4>>2]=i;g=g+1|0;break}h=(tc(7,f-j|0)|0)+g|0;if((h|0)>(e|0)){h=-1;g=16;break a}Eb(b[k>>2]|0,b[k+4>>2]|0,f,d+(g<<3)|0);g=h}while(0);l=l+1|0;if((l|0)>=(c|0)){h=0;g=16;break}}if((g|0)==16)return h|0;return 0}function Jb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)<=0){d=0;return d|0}if((d|0)>=16){e=0;while(1){h=a+(e<<3)|0;if(!((b[h>>2]|0)==0&(b[h+4>>2]|0)==0)){e=-1;f=13;break}e=e+1|0;if((e|0)>=(c|0)){e=0;f=13;break}}if((f|0)==13)return e|0}e=0;h=0;a:while(1){f=a+(h<<3)|0;g=b[f>>2]|0;f=b[f+4>>2]|0;do if(!((g|0)==0&(f|0)==0)){f=cd(g|0,f|0,52)|0;G()|0;f=f&15;if((f|0)>(d|0)){e=-1;f=13;break a}if((f|0)==(d|0)){e=e+1|0;break}else{e=(tc(7,d-f|0)|0)+e|0;break}}while(0);h=h+1|0;if((h|0)>=(c|0)){f=13;break}}if((f|0)==13)return e|0;return 0}function Kb(a,b){a=a|0;b=b|0;b=cd(a|0,b|0,52)|0;G()|0;return b&1|0}function Lb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=cd(a|0,b|0,52)|0;G()|0;e=e&15;if(!e){e=0;return e|0}d=1;while(1){c=cd(a|0,b|0,(15-d|0)*3|0)|0;G()|0;c=c&7;if(c|0){d=5;break}if(d>>>0<e>>>0)d=d+1|0;else{c=0;d=5;break}}if((d|0)==5)return c|0;return 0}function Mb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=cd(a|0,b|0,52)|0;G()|0;i=i&15;if(!i){h=b;i=a;F(h|0);return i|0}h=1;c=0;while(1){f=(15-h|0)*3|0;d=dd(7,0,f|0)|0;e=G()|0;g=cd(a|0,b|0,f|0)|0;G()|0;f=dd(Pa(g&7)|0,0,f|0)|0;g=G()|0;a=f|a&~d;b=g|b&~e;a:do if(!c)if(!((f&d|0)==0&(g&e|0)==0)){d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if(!d)c=1;else{c=1;b:while(1){g=cd(a|0,b|0,(15-c|0)*3|0)|0;G()|0;switch(g&7){case 1:break b;case 0:break;default:{c=1;break a}}if(c>>>0<d>>>0)c=c+1|0;else{c=1;break a}}c=1;while(1){g=(15-c|0)*3|0;e=cd(a|0,b|0,g|0)|0;G()|0;f=dd(7,0,g|0)|0;b=b&~(G()|0);g=dd(Pa(e&7)|0,0,g|0)|0;a=a&~f|g;b=b|(G()|0);if(c>>>0<d>>>0)c=c+1|0;else{c=1;break}}}}else c=0;while(0);if(h>>>0<i>>>0)h=h+1|0;else break}F(b|0);return a|0}function Nb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if(!d){c=b;d=a;F(c|0);return d|0}c=1;while(1){f=(15-c|0)*3|0;g=cd(a|0,b|0,f|0)|0;G()|0;e=dd(7,0,f|0)|0;b=b&~(G()|0);f=dd(Pa(g&7)|0,0,f|0)|0;a=f|a&~e;b=G()|0|b;if(c>>>0<d>>>0)c=c+1|0;else break}F(b|0);return a|0}function Ob(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=cd(a|0,b|0,52)|0;G()|0;i=i&15;if(!i){h=b;i=a;F(h|0);return i|0}h=1;c=0;while(1){f=(15-h|0)*3|0;d=dd(7,0,f|0)|0;e=G()|0;g=cd(a|0,b|0,f|0)|0;G()|0;f=dd(Qa(g&7)|0,0,f|0)|0;g=G()|0;a=f|a&~d;b=g|b&~e;a:do if(!c)if(!((f&d|0)==0&(g&e|0)==0)){d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if(!d)c=1;else{c=1;b:while(1){g=cd(a|0,b|0,(15-c|0)*3|0)|0;G()|0;switch(g&7){case 1:break b;case 0:break;default:{c=1;break a}}if(c>>>0<d>>>0)c=c+1|0;else{c=1;break a}}c=1;while(1){e=(15-c|0)*3|0;f=dd(7,0,e|0)|0;g=b&~(G()|0);b=cd(a|0,b|0,e|0)|0;G()|0;b=dd(Qa(b&7)|0,0,e|0)|0;a=a&~f|b;b=g|(G()|0);if(c>>>0<d>>>0)c=c+1|0;else{c=1;break}}}}else c=0;while(0);if(h>>>0<i>>>0)h=h+1|0;else break}F(b|0);return a|0}function Pb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if(!d){c=b;d=a;F(c|0);return d|0}c=1;while(1){g=(15-c|0)*3|0;f=dd(7,0,g|0)|0;e=b&~(G()|0);b=cd(a|0,b|0,g|0)|0;G()|0;b=dd(Qa(b&7)|0,0,g|0)|0;a=b|a&~f;b=G()|0|e;if(c>>>0<d>>>0)c=c+1|0;else break}F(b|0);return a|0}function Qb(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;j=S;S=S+64|0;i=j+40|0;e=j+24|0;f=j+12|0;g=j;dd(c|0,0,52)|0;d=G()|0|134225919;if(!c){if((b[a+4>>2]|0)>2){h=0;i=0;F(h|0);S=j;return i|0}if((b[a+8>>2]|0)>2){h=0;i=0;F(h|0);S=j;return i|0}if((b[a+12>>2]|0)>2){h=0;i=0;F(h|0);S=j;return i|0}dd(na(a)|0,0,45)|0;h=G()|0|d;i=-1;F(h|0);S=j;return i|0};b[i>>2]=b[a>>2];b[i+4>>2]=b[a+4>>2];b[i+8>>2]=b[a+8>>2];b[i+12>>2]=b[a+12>>2];h=i+4|0;if((c|0)>0){a=-1;while(1){b[e>>2]=b[h>>2];b[e+4>>2]=b[h+4>>2];b[e+8>>2]=b[h+8>>2];if(!(c&1)){Ja(h);b[f>>2]=b[h>>2];b[f+4>>2]=b[h+4>>2];b[f+8>>2]=b[h+8>>2];La(f)}else{Ia(h);b[f>>2]=b[h>>2];b[f+4>>2]=b[h+4>>2];b[f+8>>2]=b[h+8>>2];Ka(f)}Fa(e,f,g);Ca(g);l=(15-c|0)*3|0;k=dd(7,0,l|0)|0;d=d&~(G()|0);l=dd(Ha(g)|0,0,l|0)|0;a=l|a&~k;d=G()|0|d;if((c|0)>1)c=c+-1|0;else break}}else a=-1;a:do if(((b[h>>2]|0)<=2?(b[i+8>>2]|0)<=2:0)?(b[i+12>>2]|0)<=2:0){e=na(i)|0;c=dd(e|0,0,45)|0;c=c|a;a=G()|0|d&-1040385;g=oa(i)|0;if(!(la(e)|0)){if((g|0)<=0)break;f=0;while(1){e=cd(c|0,a|0,52)|0;G()|0;e=e&15;if(e){d=1;while(1){l=(15-d|0)*3|0;i=cd(c|0,a|0,l|0)|0;G()|0;k=dd(7,0,l|0)|0;a=a&~(G()|0);l=dd(Pa(i&7)|0,0,l|0)|0;c=c&~k|l;a=a|(G()|0);if(d>>>0<e>>>0)d=d+1|0;else break}}f=f+1|0;if((f|0)==(g|0))break a}}f=cd(c|0,a|0,52)|0;G()|0;f=f&15;b:do if(f){d=1;c:while(1){l=cd(c|0,a|0,(15-d|0)*3|0)|0;G()|0;switch(l&7){case 1:break c;case 0:break;default:break b}if(d>>>0<f>>>0)d=d+1|0;else break b}if(ra(e,b[i>>2]|0)|0){d=1;while(1){i=(15-d|0)*3|0;k=dd(7,0,i|0)|0;l=a&~(G()|0);a=cd(c|0,a|0,i|0)|0;G()|0;a=dd(Qa(a&7)|0,0,i|0)|0;c=c&~k|a;a=l|(G()|0);if(d>>>0<f>>>0)d=d+1|0;else break}}else{d=1;while(1){l=(15-d|0)*3|0;i=cd(c|0,a|0,l|0)|0;G()|0;k=dd(7,0,l|0)|0;a=a&~(G()|0);l=dd(Pa(i&7)|0,0,l|0)|0;c=c&~k|l;a=a|(G()|0);if(d>>>0<f>>>0)d=d+1|0;else break}}}while(0);if((g|0)>0){d=0;do{c=Mb(c,a)|0;a=G()|0;d=d+1|0}while((d|0)!=(g|0))}}else{c=0;a=0}while(0);k=a;l=c;F(k|0);S=j;return l|0}function Rb(a){a=a|0;return (a|0)%2|0|0}function Sb(a,c){a=a|0;c=c|0;var d=0,e=0;e=S;S=S+16|0;d=e;if((c>>>0<=15?!(0==0?(b[a+4>>2]&2146435072|0)==2146435072:0):0)?!(0==0?(b[a+8+4>>2]&2146435072|0)==2146435072:0):0){Ya(a,c,d);c=Qb(d,c)|0;a=G()|0}else{a=0;c=0}F(a|0);S=e;return c|0}function Tb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;f=d+4|0;g=cd(a|0,c|0,52)|0;G()|0;g=g&15;h=cd(a|0,c|0,45)|0;G()|0;e=(g|0)==0;if(!(la(h&127)|0)){if(e){h=0;return h|0}if((b[f>>2]|0)==0?(b[d+8>>2]|0)==0:0)e=(b[d+12>>2]|0)!=0&1;else e=1}else if(e){h=1;return h|0}else e=1;d=1;while(1){if(!(d&1))La(f);else Ka(f);h=cd(a|0,c|0,(15-d|0)*3|0)|0;G()|0;Ma(f,h&7);if(d>>>0<g>>>0)d=d+1|0;else break}return e|0}function Ub(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=S;S=S+16|0;j=l;k=cd(a|0,c|0,45)|0;G()|0;k=k&127;a:do if((la(k)|0)!=0?(g=cd(a|0,c|0,52)|0,G()|0,g=g&15,(g|0)!=0):0){e=1;b:while(1){i=cd(a|0,c|0,(15-e|0)*3|0)|0;G()|0;switch(i&7){case 5:break b;case 0:break;default:{e=c;break a}}if(e>>>0<g>>>0)e=e+1|0;else{e=c;break a}}f=1;e=c;while(1){c=(15-f|0)*3|0;h=dd(7,0,c|0)|0;i=e&~(G()|0);e=cd(a|0,e|0,c|0)|0;G()|0;e=dd(Qa(e&7)|0,0,c|0)|0;a=a&~h|e;e=i|(G()|0);if(f>>>0<g>>>0)f=f+1|0;else break}}else e=c;while(0);i=7728+(k*28|0)|0;b[d>>2]=b[i>>2];b[d+4>>2]=b[i+4>>2];b[d+8>>2]=b[i+8>>2];b[d+12>>2]=b[i+12>>2];if(!(Tb(a,e,d)|0)){S=l;return}h=d+4|0;b[j>>2]=b[h>>2];b[j+4>>2]=b[h+4>>2];b[j+8>>2]=b[h+8>>2];g=cd(a|0,e|0,52)|0;G()|0;i=g&15;if(!(g&1))g=i;else{La(h);g=i+1|0}if(!(la(k)|0))e=0;else{c:do if(!i)e=0;else{c=1;while(1){f=cd(a|0,e|0,(15-c|0)*3|0)|0;G()|0;f=f&7;if(f|0){e=f;break c}if(c>>>0<i>>>0)c=c+1|0;else{e=0;break}}}while(0);e=(e|0)==4&1}if(!(cb(d,g,e,0)|0)){if((g|0)!=(i|0)){b[h>>2]=b[j>>2];b[h+4>>2]=b[j+4>>2];b[h+8>>2]=b[j+8>>2]}}else{if(la(k)|0)do{}while((cb(d,g,0,0)|0)!=0);if((g|0)!=(i|0))Ja(h)}S=l;return}function Vb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=S;S=S+16|0;e=d;Ub(a,b,e);b=cd(a|0,b|0,52)|0;G()|0;$a(e,b&15,c);S=d;return}function Wb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=S;S=S+16|0;f=g;Ub(a,b,f);d=cd(a|0,b|0,45)|0;G()|0;d=(la(d&127)|0)==0;e=cd(a|0,b|0,52)|0;G()|0;e=e&15;a:do if(!d){if(e|0){d=1;while(1){h=dd(7,0,(15-d|0)*3|0)|0;if(!((h&a|0)==0&((G()|0)&b|0)==0))break a;if(d>>>0<e>>>0)d=d+1|0;else break}}ab(f,e,0,5,c);S=g;return}while(0);eb(f,e,0,6,c);S=g;return}function Xb(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=cd(a|0,b|0,45)|0;G()|0;if(!(la(d&127)|0)){d=2;return d|0}d=cd(a|0,b|0,52)|0;G()|0;d=d&15;if(!d){d=5;return d|0}c=1;while(1){e=dd(7,0,(15-c|0)*3|0)|0;if(!((e&a|0)==0&((G()|0)&b|0)==0)){c=2;a=6;break}if(c>>>0<d>>>0)c=c+1|0;else{c=5;a=6;break}}if((a|0)==6)return c|0;return 0}function Yb(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;m=S;S=S+128|0;k=m+112|0;g=m+96|0;l=m;f=cd(a|0,c|0,52)|0;G()|0;i=f&15;b[k>>2]=i;h=cd(a|0,c|0,45)|0;G()|0;h=h&127;a:do if(la(h)|0){if(i|0){e=1;while(1){j=dd(7,0,(15-e|0)*3|0)|0;if(!((j&a|0)==0&((G()|0)&c|0)==0)){f=0;break a}if(e>>>0<i>>>0)e=e+1|0;else break}}if(!(f&1)){j=dd(i+1|0,0,52)|0;l=G()|0|c&-15728641;k=dd(7,0,(14-i|0)*3|0)|0;Yb((j|a)&~k,l&~(G()|0),d);S=m;return}else f=1}else f=0;while(0);Ub(a,c,g);if(f){bb(g,k,l);j=5}else{fb(g,k,l);j=6}b:do if(la(h)|0)if(!i)e=20;else{e=1;while(1){h=dd(7,0,(15-e|0)*3|0)|0;if(!((h&a|0)==0&((G()|0)&c|0)==0)){e=8;break b}if(e>>>0<i>>>0)e=e+1|0;else{e=20;break}}}else e=8;while(0);hd(d|0,-1,e|0)|0;if(f){f=0;do{g=l+(f<<4)|0;db(g,b[k>>2]|0)|0;g=b[g>>2]|0;e=0;while(1){h=d+(e<<2)|0;i=b[h>>2]|0;if((i|0)==-1|(i|0)==(g|0))break;else e=e+1|0}b[h>>2]=g;f=f+1|0}while((f|0)!=(j|0))}else{f=0;do{g=l+(f<<4)|0;cb(g,b[k>>2]|0,0,1)|0;g=b[g>>2]|0;e=0;while(1){h=d+(e<<2)|0;i=b[h>>2]|0;if((i|0)==-1|(i|0)==(g|0))break;else e=e+1|0}b[h>>2]=g;f=f+1|0}while((f|0)!=(j|0))}S=m;return}function Zb(){return 12}function _b(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;dd(a|0,0,52)|0;i=G()|0|134225919;if((a|0)<1){e=0;d=0;do{if(la(e)|0){dd(e|0,0,45)|0;h=i|(G()|0);a=c+(d<<3)|0;b[a>>2]=-1;b[a+4>>2]=h;d=d+1|0}e=e+1|0}while((e|0)!=122);return}h=0;d=0;do{if(la(h)|0){dd(h|0,0,45)|0;e=1;f=-1;g=i|(G()|0);while(1){j=dd(7,0,(15-e|0)*3|0)|0;f=f&~j;g=g&~(G()|0);if((e|0)==(a|0))break;else e=e+1|0}j=c+(d<<3)|0;b[j>>2]=f;b[j+4>>2]=g;d=d+1|0}h=h+1|0}while((h|0)!=122);return}function $b(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=S;S=S+64|0;h=i;if((a|0)==(d|0)&(c|0)==(e|0)|(0!=0|(c&2013265920|0)!=134217728|(0!=0|(e&2013265920|0)!=134217728))){h=0;S=i;return h|0}f=cd(a|0,c|0,52)|0;G()|0;f=f&15;g=cd(d|0,e|0,52)|0;G()|0;if((f|0)!=(g&15|0)){h=0;S=i;return h|0}g=f+-1|0;if(f>>>0>1?(k=Cb(a,c,g)|0,j=G()|0,g=Cb(d,e,g)|0,(k|0)==(g|0)&(j|0)==(G()|0)):0){g=(f^15)*3|0;f=cd(a|0,c|0,g|0)|0;G()|0;f=f&7;g=cd(d|0,e|0,g|0)|0;G()|0;g=g&7;if((f|0)==0|(g|0)==0){k=1;S=i;return k|0}if((b[21136+(f<<2)>>2]|0)==(g|0)){k=1;S=i;return k|0}if((b[21168+(f<<2)>>2]|0)==(g|0)){k=1;S=i;return k|0}}f=h;g=f+56|0;do{b[f>>2]=0;f=f+4|0}while((f|0)<(g|0));$(a,c,1,h);k=h;if(((((!((b[k>>2]|0)==(d|0)?(b[k+4>>2]|0)==(e|0):0)?(k=h+8|0,!((b[k>>2]|0)==(d|0)?(b[k+4>>2]|0)==(e|0):0)):0)?(k=h+16|0,!((b[k>>2]|0)==(d|0)?(b[k+4>>2]|0)==(e|0):0)):0)?(k=h+24|0,!((b[k>>2]|0)==(d|0)?(b[k+4>>2]|0)==(e|0):0)):0)?(k=h+32|0,!((b[k>>2]|0)==(d|0)?(b[k+4>>2]|0)==(e|0):0)):0)?(k=h+40|0,!((b[k>>2]|0)==(d|0)?(b[k+4>>2]|0)==(e|0):0)):0){f=h+48|0;f=((b[f>>2]|0)==(d|0)?(b[f+4>>2]|0)==(e|0):0)&1}else f=1;k=f;S=i;return k|0}function ac(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;k=S;S=S+16|0;h=k;if(!($b(a,c,d,e)|0)){i=0;j=0;F(i|0);S=k;return j|0}i=c&-2130706433;f=(Fb(a,c)|0)==0;f=f?1:2;while(1){b[h>>2]=0;l=da(a,c,f,h)|0;g=f+1|0;if((l|0)==(d|0)&(G()|0)==(e|0))break;if(g>>>0<7)f=g;else{f=0;a=0;j=6;break}}if((j|0)==6){F(f|0);S=k;return a|0}l=dd(f|0,0,56)|0;j=i|(G()|0)|268435456;l=a|l;F(j|0);S=k;return l|0}function bc(a,b){a=a|0;b=b|0;var c=0;c=0==0&(b&2013265920|0)==268435456;F((c?b&-2130706433|134217728:0)|0);return (c?a:0)|0}function cc(a,c){a=a|0;c=c|0;var d=0,e=0,f=0;e=S;S=S+16|0;d=e;if(!(0==0&(c&2013265920|0)==268435456)){c=0;d=0;F(c|0);S=e;return d|0}f=cd(a|0,c|0,56)|0;G()|0;b[d>>2]=0;d=da(a,c&-2130706433|134217728,f&7,d)|0;c=G()|0;F(c|0);S=e;return d|0}function dc(a,b){a=a|0;b=b|0;var c=0;if(!(0==0&(b&2013265920|0)==268435456)){c=0;return c|0}c=cd(a|0,b|0,56)|0;G()|0;switch(c&7){case 0:case 7:{c=0;return c|0}default:{}}c=b&-2130706433|134217728;if(0==0&(b&117440512|0)==16777216&(Fb(a,c)|0)!=0){c=0;return c|0}c=Bb(a,c)|0;return c|0}function ec(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;g=S;S=S+16|0;e=g;h=0==0&(c&2013265920|0)==268435456;f=c&-2130706433|134217728;i=d;b[i>>2]=h?a:0;b[i+4>>2]=h?f:0;if(h){c=cd(a|0,c|0,56)|0;G()|0;b[e>>2]=0;a=da(a,f,c&7,e)|0;c=G()|0}else{a=0;c=0}i=d+8|0;b[i>>2]=a;b[i+4>>2]=c;S=g;return}function fc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;f=(Fb(a,c)|0)==0;c=c&-2130706433;e=d;b[e>>2]=f?a:0;b[e+4>>2]=f?c|285212672:0;e=d+8|0;b[e>>2]=a;b[e+4>>2]=c|301989888;e=d+16|0;b[e>>2]=a;b[e+4>>2]=c|318767104;e=d+24|0;b[e>>2]=a;b[e+4>>2]=c|335544320;e=d+32|0;b[e>>2]=a;b[e+4>>2]=c|352321536;d=d+40|0;b[d>>2]=a;b[d+4>>2]=c|369098752;return}function gc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;h=S;S=S+16|0;g=h;e=cd(a|0,c|0,56)|0;G()|0;i=0==0&(c&2013265920|0)==268435456;f=i?a:0;a=i?c&-2130706433|134217728:0;c=Lc(f,a,e&7)|0;if((c|0)==-1){b[d>>2]=0;S=h;return}Ub(f,a,g);e=cd(f|0,a|0,52)|0;G()|0;e=e&15;if(!(Fb(f,a)|0))eb(g,e,c,2,d);else ab(g,e,c,2,d);S=h;return}function hc(a){a=a|0;var c=0,d=0,e=0;c=Yc(1,12)|0;if(!c)H(22691,22646,49,22704);d=a+4|0;e=b[d>>2]|0;if(e|0){e=e+8|0;b[e>>2]=c;b[d>>2]=c;return c|0}if(b[a>>2]|0)H(22721,22646,61,22744);e=a;b[e>>2]=c;b[d>>2]=c;return c|0}function ic(a,c){a=a|0;c=c|0;var d=0,e=0;e=Wc(24)|0;if(!e)H(22758,22646,78,22772);b[e>>2]=b[c>>2];b[e+4>>2]=b[c+4>>2];b[e+8>>2]=b[c+8>>2];b[e+12>>2]=b[c+12>>2];b[e+16>>2]=0;c=a+4|0;d=b[c>>2]|0;if(d|0){b[d+16>>2]=e;b[c>>2]=e;return e|0}if(b[a>>2]|0)H(22787,22646,82,22772);b[a>>2]=e;b[c>>2]=e;return e|0}function jc(a){a=a|0;var c=0,d=0,e=0,f=0;if(!a)return;e=1;while(1){c=b[a>>2]|0;if(c|0)do{d=b[c>>2]|0;if(d|0)do{f=d;d=b[d+16>>2]|0;Xc(f)}while((d|0)!=0);f=c;c=b[c+8>>2]|0;Xc(f)}while((c|0)!=0);c=a;a=b[a+8>>2]|0;if(!e)Xc(c);if(!a)break;else e=0}return}function kc(a){a=a|0;var c=0,d=0,f=0,g=0,h=0.0,i=0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0,r=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,I=0,J=0,K=0;g=a+8|0;if(b[g>>2]|0){K=1;return K|0}f=b[a>>2]|0;if(!f){K=0;return K|0}c=f;d=0;do{d=d+1|0;c=b[c+8>>2]|0}while((c|0)!=0);if(d>>>0<2){K=0;return K|0}I=Wc(d<<2)|0;if(!I)H(22807,22646,317,22826);G=Wc(d<<5)|0;if(!G)H(22848,22646,321,22826);b[a>>2]=0;z=a+4|0;b[z>>2]=0;b[g>>2]=0;d=0;F=0;y=0;n=0;a:while(1){m=b[f>>2]|0;if(m){h=0.0;i=m;do{k=+e[i+8>>3];c=i;i=b[i+16>>2]|0;l=(i|0)==0;g=l?m:i;j=+e[g+8>>3];if(+q(+(k-j))>3.141592653589793){K=14;break}h=h+(j-k)*(+e[c>>3]+ +e[g>>3])}while(!l);if((K|0)==14){K=0;h=0.0;c=m;do{x=+e[c+8>>3];E=c+16|0;D=b[E>>2]|0;D=(D|0)==0?m:D;w=+e[D+8>>3];h=h+(+e[c>>3]+ +e[D>>3])*((w<0.0?w+6.283185307179586:w)-(x<0.0?x+6.283185307179586:x));c=b[((c|0)==0?f:E)>>2]|0}while((c|0)!=0)}if(h>0.0){b[I+(F<<2)>>2]=f;F=F+1|0;g=y;c=n}else K=19}else K=19;if((K|0)==19){K=0;do if(!d)if(!n)if(!(b[a>>2]|0)){g=z;i=a;c=f;d=a;break}else{K=27;break a}else{g=z;i=n+8|0;c=f;d=a;break}else{c=d+8|0;if(b[c>>2]|0){K=21;break a}d=Yc(1,12)|0;if(!d){K=23;break a}b[c>>2]=d;g=d+4|0;i=d;c=n}while(0);b[i>>2]=f;b[g>>2]=f;i=G+(y<<5)|0;l=b[f>>2]|0;if(l){m=G+(y<<5)+8|0;e[m>>3]=1797693134862315708145274.0e284;n=G+(y<<5)+24|0;e[n>>3]=1797693134862315708145274.0e284;e[i>>3]=-1797693134862315708145274.0e284;o=G+(y<<5)+16|0;e[o>>3]=-1797693134862315708145274.0e284;u=1797693134862315708145274.0e284;v=-1797693134862315708145274.0e284;g=0;p=l;k=1797693134862315708145274.0e284;s=1797693134862315708145274.0e284;t=-1797693134862315708145274.0e284;j=-1797693134862315708145274.0e284;while(1){h=+e[p>>3];x=+e[p+8>>3];p=b[p+16>>2]|0;r=(p|0)==0;w=+e[(r?l:p)+8>>3];if(h<k){e[m>>3]=h;k=h}if(x<s){e[n>>3]=x;s=x}if(h>t)e[i>>3]=h;else h=t;if(x>j){e[o>>3]=x;j=x}u=x>0.0&x<u?x:u;v=x<0.0&x>v?x:v;g=g|+q(+(x-w))>3.141592653589793;if(r)break;else t=h}if(g){e[o>>3]=v;e[n>>3]=u}}else{b[i>>2]=0;b[i+4>>2]=0;b[i+8>>2]=0;b[i+12>>2]=0;b[i+16>>2]=0;b[i+20>>2]=0;b[i+24>>2]=0;b[i+28>>2]=0}g=y+1|0}E=f+8|0;f=b[E>>2]|0;b[E>>2]=0;if(!f){K=45;break}else{y=g;n=c}}if((K|0)==21)H(22624,22646,35,22658);else if((K|0)==23)H(22678,22646,37,22658);else if((K|0)==27)H(22721,22646,61,22744);else if((K|0)==45){b:do if((F|0)>0){E=(g|0)==0;C=g<<2;D=(a|0)==0;B=0;c=0;while(1){A=b[I+(B<<2)>>2]|0;if(!E){y=Wc(C)|0;if(!y){K=50;break}z=Wc(C)|0;if(!z){K=52;break}c:do if(!D){g=0;d=0;i=a;while(1){f=G+(g<<5)|0;if(lc(b[i>>2]|0,f,b[A>>2]|0)|0){b[y+(d<<2)>>2]=i;b[z+(d<<2)>>2]=f;r=d+1|0}else r=d;i=b[i+8>>2]|0;if(!i)break;else{g=g+1|0;d=r}}if((r|0)>0){f=b[y>>2]|0;if((r|0)==1)d=f;else{o=0;p=-1;d=f;n=f;while(1){l=b[n>>2]|0;f=0;i=0;while(1){g=b[b[y+(i<<2)>>2]>>2]|0;if((g|0)==(l|0))m=f;else m=f+((lc(g,b[z+(i<<2)>>2]|0,b[l>>2]|0)|0)&1)|0;i=i+1|0;if((i|0)==(r|0))break;else f=m}g=(m|0)>(p|0);d=g?n:d;f=o+1|0;if((f|0)==(r|0))break c;o=f;p=g?m:p;n=b[y+(f<<2)>>2]|0}}}else d=0}else d=0;while(0);Xc(y);Xc(z);if(d){g=d+4|0;f=b[g>>2]|0;if(!f){if(b[d>>2]|0){K=70;break}}else d=f+8|0;b[d>>2]=A;b[g>>2]=A}else K=73}else K=73;if((K|0)==73){K=0;c=b[A>>2]|0;if(c|0)do{z=c;c=b[c+16>>2]|0;Xc(z)}while((c|0)!=0);Xc(A);c=2}B=B+1|0;if((B|0)>=(F|0)){J=c;break b}}if((K|0)==50)H(22863,22646,249,22882);else if((K|0)==52)H(22901,22646,252,22882);else if((K|0)==70)H(22721,22646,61,22744)}else J=0;while(0);Xc(I);Xc(G);K=J;return K|0}return 0}function lc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0;if(!(xa(c,d)|0)){a=0;return a|0}c=wa(c)|0;l=+e[d>>3];f=+e[d+8>>3];f=c&f<0.0?f+6.283185307179586:f;a=b[a>>2]|0;if(!a){a=0;return a|0}if(c){c=0;d=a;a:while(1){while(1){i=+e[d>>3];k=+e[d+8>>3];d=d+16|0;m=b[d>>2]|0;m=(m|0)==0?a:m;h=+e[m>>3];g=+e[m+8>>3];if(i>h){j=i;i=k}else{j=h;h=i;i=g;g=k}if(!(l<h|l>j))break;d=b[d>>2]|0;if(!d){d=22;break a}}k=g<0.0?g+6.283185307179586:g;i=i<0.0?i+6.283185307179586:i;f=i==f|k==f?f+-2.220446049250313e-16:f;k=k+(l-h)/(j-h)*(i-k);if((k<0.0?k+6.283185307179586:k)>f)c=c^1;d=b[d>>2]|0;if(!d){d=22;break}}if((d|0)==22)return c|0}else{c=0;d=a;b:while(1){while(1){i=+e[d>>3];k=+e[d+8>>3];d=d+16|0;m=b[d>>2]|0;m=(m|0)==0?a:m;h=+e[m>>3];g=+e[m+8>>3];if(i>h){j=i;i=k}else{j=h;h=i;i=g;g=k}if(!(l<h|l>j))break;d=b[d>>2]|0;if(!d){d=22;break b}}f=i==f|g==f?f+-2.220446049250313e-16:f;if(g+(l-h)/(j-h)*(i-g)>f)c=c^1;d=b[d>>2]|0;if(!d){d=22;break}}if((d|0)==22)return c|0}return 0}function mc(c,d,e,f,g){c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;u=S;S=S+32|0;t=u+16|0;s=u;h=cd(c|0,d|0,52)|0;G()|0;h=h&15;p=cd(e|0,f|0,52)|0;G()|0;if((h|0)!=(p&15|0)){t=1;S=u;return t|0}l=cd(c|0,d|0,45)|0;G()|0;l=l&127;m=cd(e|0,f|0,45)|0;G()|0;m=m&127;p=(l|0)!=(m|0);if(p){j=ta(l,m)|0;if((j|0)==7){t=2;S=u;return t|0}k=ta(m,l)|0;if((k|0)==7)H(22925,22949,151,22959);else{q=j;i=k}}else{q=0;i=0}n=la(l)|0;o=la(m)|0;b[t>>2]=0;b[t+4>>2]=0;b[t+8>>2]=0;b[t+12>>2]=0;do if(!q){Tb(e,f,t)|0;if((n|0)!=0&(o|0)!=0){if((m|0)!=(l|0))H(23077,22949,243,22959);i=Lb(c,d)|0;h=Lb(e,f)|0;if(!(a[22032+(i*7|0)+h>>0]|0)){i=b[21200+(i*28|0)+(h<<2)>>2]|0;if((i|0)>0){j=t+4|0;h=0;do{Oa(j);h=h+1|0}while((h|0)!=(i|0));r=50}else r=50}else h=5}else r=50}else{m=b[4304+(l*28|0)+(q<<2)>>2]|0;j=(m|0)>0;if(!o)if(j){l=0;k=e;j=f;do{k=Pb(k,j)|0;j=G()|0;i=Qa(i)|0;l=l+1|0}while((l|0)!=(m|0));m=i;l=k;k=j}else{m=i;l=e;k=f}else if(j){l=0;k=e;j=f;do{k=Ob(k,j)|0;j=G()|0;i=Qa(i)|0;if((i|0)==1)i=Qa(1)|0;l=l+1|0}while((l|0)!=(m|0));m=i;l=k;k=j}else{m=i;l=e;k=f}Tb(l,k,t)|0;if(!p)H(22972,22949,181,22959);j=(n|0)!=0;i=(o|0)!=0;if(j&i)H(22999,22949,182,22959);if(!j)if(i){i=Lb(l,k)|0;if(a[22032+(i*7|0)+m>>0]|0){h=4;break}l=0;k=b[21200+(m*28|0)+(i<<2)>>2]|0;r=26}else i=0;else{i=Lb(c,d)|0;if(a[22032+(i*7|0)+q>>0]|0){h=3;break}k=b[21200+(i*28|0)+(q<<2)>>2]|0;l=k;r=26}if((r|0)==26){if((k|0)<=-1)H(23030,22949,212,22959);if((l|0)<=-1)H(23053,22949,213,22959);if((k|0)>0){j=t+4|0;i=0;do{Oa(j);i=i+1|0}while((i|0)!=(k|0));i=l}else i=l};b[s>>2]=0;b[s+4>>2]=0;b[s+8>>2]=0;Ma(s,q);if(h|0)while(1){if(!(Rb(h)|0))La(s);else Ka(s);if((h|0)>1)h=h+-1|0;else break}if((i|0)>0){h=0;do{Oa(s);h=h+1|0}while((h|0)!=(i|0))}r=t+4|0;Ea(r,s,r);Ca(r);r=50}while(0);if((r|0)==50){h=t+4|0;b[g>>2]=b[h>>2];b[g+4>>2]=b[h+4>>2];b[g+8>>2]=b[h+8>>2];h=0}t=h;S=u;return t|0}function nc(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=S;S=S+48|0;h=p+36|0;i=p+24|0;j=p+12|0;k=p;g=cd(a|0,c|0,52)|0;G()|0;g=g&15;n=cd(a|0,c|0,45)|0;G()|0;n=n&127;l=la(n)|0;dd(g|0,0,52)|0;r=G()|0|134225919;q=e;b[q>>2]=-1;b[q+4>>2]=r;if(!g){if((b[d>>2]|0)>1){r=1;S=p;return r|0}if((b[d+4>>2]|0)>1){r=1;S=p;return r|0}if((b[d+8>>2]|0)>1){r=1;S=p;return r|0}f=sa(n,Ha(d)|0)|0;if((f|0)==127){r=1;S=p;return r|0}o=dd(f|0,0,45)|0;q=G()|0;n=e;q=b[n+4>>2]&-1040385|q;r=e;b[r>>2]=b[n>>2]|o;b[r+4>>2]=q;r=0;S=p;return r|0};b[h>>2]=b[d>>2];b[h+4>>2]=b[d+4>>2];b[h+8>>2]=b[d+8>>2];while(1){b[i>>2]=b[h>>2];b[i+4>>2]=b[h+4>>2];b[i+8>>2]=b[h+8>>2];if(!(Rb(g)|0)){Ja(h);b[j>>2]=b[h>>2];b[j+4>>2]=b[h+4>>2];b[j+8>>2]=b[h+8>>2];La(j)}else{Ia(h);b[j>>2]=b[h>>2];b[j+4>>2]=b[h+4>>2];b[j+8>>2]=b[h+8>>2];Ka(j)}Fa(i,j,k);Ca(k);q=e;s=b[q>>2]|0;q=b[q+4>>2]|0;t=(15-g|0)*3|0;d=dd(7,0,t|0)|0;q=q&~(G()|0);t=dd(Ha(k)|0,0,t|0)|0;q=G()|0|q;r=e;b[r>>2]=t|s&~d;b[r+4>>2]=q;if((g|0)>1)g=g+-1|0;else break}a:do if(((b[h>>2]|0)<=1?(b[h+4>>2]|0)<=1:0)?(b[h+8>>2]|0)<=1:0){g=Ha(h)|0;i=sa(n,g)|0;if((i|0)==127)k=0;else k=la(i)|0;b:do if(!g)if((l|0)!=0&(k|0)!=0){t=Lb(a,c)|0;g=e;g=21408+(t*28|0)+((Lb(b[g>>2]|0,b[g+4>>2]|0)|0)<<2)|0;g=b[g>>2]|0;if((g|0)<=-1)H(23201,22949,433,23134);if(!g){f=i;g=55}else{h=e;f=0;d=b[h>>2]|0;h=b[h+4>>2]|0;do{d=Nb(d,h)|0;h=G()|0;t=e;b[t>>2]=d;b[t+4>>2]=h;f=f+1|0}while((f|0)<(g|0));f=i;g=54}}else{f=i;g=54}else{if(l){h=21408+((Lb(a,c)|0)*28|0)+(g<<2)|0;h=b[h>>2]|0;if((h|0)>0){d=0;do{g=Pa(g)|0;d=d+1|0}while((d|0)!=(h|0))}if((g|0)==1){f=3;break a}d=sa(n,g)|0;if((d|0)==127)H(23104,22949,376,23134);if(!(la(d)|0)){o=h;m=g;f=d}else H(23147,22949,377,23134)}else{o=0;m=g;f=i}j=b[4304+(n*28|0)+(m<<2)>>2]|0;if((j|0)<=-1)H(23178,22949,384,23134);if(!k){if((o|0)<=-1)H(23030,22949,417,23134);if(o|0){h=e;g=0;d=b[h>>2]|0;h=b[h+4>>2]|0;do{d=Nb(d,h)|0;h=G()|0;t=e;b[t>>2]=d;b[t+4>>2]=h;g=g+1|0}while((g|0)<(o|0))}if((j|0)<=0){g=54;break}h=e;g=0;d=b[h>>2]|0;h=b[h+4>>2]|0;while(1){d=Nb(d,h)|0;h=G()|0;t=e;b[t>>2]=d;b[t+4>>2]=h;g=g+1|0;if((g|0)==(j|0)){g=54;break b}}}i=ta(f,n)|0;if((i|0)==7)H(22925,22949,393,23134);g=e;d=b[g>>2]|0;g=b[g+4>>2]|0;if((j|0)>0){h=0;do{d=Nb(d,g)|0;g=G()|0;t=e;b[t>>2]=d;b[t+4>>2]=g;h=h+1|0}while((h|0)!=(j|0))}d=Lb(d,g)|0;t=ma(f)|0;d=b[(t?21824:21616)+(i*28|0)+(d<<2)>>2]|0;if((d|0)<=-1)H(23030,22949,412,23134);if(!d)g=54;else{i=e;g=0;h=b[i>>2]|0;i=b[i+4>>2]|0;do{h=Mb(h,i)|0;i=G()|0;t=e;b[t>>2]=h;b[t+4>>2]=i;g=g+1|0}while((g|0)<(d|0));g=54}}while(0);if((g|0)==54)if(k)g=55;if((g|0)==55){t=e;if((Lb(b[t>>2]|0,b[t+4>>2]|0)|0)==1){f=4;break}}t=e;r=b[t>>2]|0;t=b[t+4>>2]&-1040385;s=dd(f|0,0,45)|0;t=t|(G()|0);f=e;b[f>>2]=r|s;b[f+4>>2]=t;f=0}else f=2;while(0);t=f;S=p;return t|0}function oc(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=S;S=S+16|0;f=g;a=mc(a,b,c,d,f)|0;if(!a){Ua(f,e);a=0}S=g;return a|0}function pc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=S;S=S+16|0;f=e;Va(c,f);d=nc(a,b,f,d)|0;S=e;return d|0}function qc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=S;S=S+32|0;e=g+12|0;f=g;if((mc(a,b,a,b,e)|0)==0?(mc(a,b,c,d,f)|0)==0:0)a=Ta(e,f)|0;else a=-1;S=g;return a|0}function rc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=S;S=S+32|0;e=g+12|0;f=g;if((mc(a,b,a,b,e)|0)==0?(mc(a,b,c,d,f)|0)==0:0)a=Ta(e,f)|0;else a=-1;S=g;return (a>>>31^1)+a|0}function sc(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0;x=S;S=S+48|0;g=x+24|0;h=x+12|0;w=x;if((mc(a,c,a,c,g)|0)==0?(mc(a,c,d,e,h)|0)==0:0){v=Ta(g,h)|0;if((v|0)<0){w=v;S=x;return w|0};b[g>>2]=0;b[g+4>>2]=0;b[g+8>>2]=0;b[h>>2]=0;b[h+4>>2]=0;b[h+8>>2]=0;mc(a,c,a,c,g)|0;mc(a,c,d,e,h)|0;Wa(g);Wa(h);if(!v){e=g+4|0;n=g+8|0;s=e;t=n;u=g;d=b[g>>2]|0;e=b[e>>2]|0;g=b[n>>2]|0;p=0.0;r=0.0;o=0.0}else{l=b[g>>2]|0;o=+(v|0);s=g+4|0;m=b[s>>2]|0;t=g+8|0;n=b[t>>2]|0;u=g;d=l;e=m;g=n;p=+((b[h>>2]|0)-l|0)/o;r=+((b[h+4>>2]|0)-m|0)/o;o=+((b[h+8>>2]|0)-n|0)/o}b[w>>2]=d;n=w+4|0;b[n>>2]=e;m=w+8|0;b[m>>2]=g;l=0;while(1){j=+(l|0);y=p*j+ +(d|0);i=r*j+ +(b[s>>2]|0);j=o*j+ +(b[t>>2]|0);e=~~+fd(+y);h=~~+fd(+i);d=~~+fd(+j);y=+q(+(+(e|0)-y));i=+q(+(+(h|0)-i));j=+q(+(+(d|0)-j));do if(!(y>i&y>j)){k=0-e|0;if(i>j){g=k-d|0;break}else{g=h;d=k-h|0;break}}else{e=0-(h+d)|0;g=h}while(0);b[w>>2]=e;b[n>>2]=g;b[m>>2]=d;Xa(w);nc(a,c,w,f+(l<<3)|0)|0;if((l|0)==(v|0))break;l=l+1|0;d=b[u>>2]|0}w=0;S=x;return w|0}w=-1;S=x;return w|0}function tc(a,b){a=a|0;b=b|0;var c=0;if(!b){c=1;return c|0}c=a;a=1;do{a=B((b&1|0)==0?1:c,a)|0;b=b>>1;c=B(c,c)|0}while((b|0)!=0);return a|0}function uc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0.0;if(!(xa(c,d)|0)){n=0;return n|0}c=wa(c)|0;o=+e[d>>3];f=+e[d+8>>3];f=c&f<0.0?f+6.283185307179586:f;n=b[a>>2]|0;if((n|0)<=0){n=0;return n|0}m=b[a+4>>2]|0;if(c){c=0;d=-1;a=0;a:while(1){l=a;while(1){i=+e[m+(l<<4)>>3];k=+e[m+(l<<4)+8>>3];a=(d+2|0)%(n|0)|0;h=+e[m+(a<<4)>>3];g=+e[m+(a<<4)+8>>3];if(i>h){j=i;i=k}else{j=h;h=i;i=g;g=k}if(!(o<h|o>j))break;d=l+1|0;if((d|0)<(n|0)){a=l;l=d;d=a}else{d=22;break a}}k=g<0.0?g+6.283185307179586:g;i=i<0.0?i+6.283185307179586:i;f=i==f|k==f?f+-2.220446049250313e-16:f;k=k+(o-h)/(j-h)*(i-k);if((k<0.0?k+6.283185307179586:k)>f)c=c^1;a=l+1|0;if((a|0)>=(n|0)){d=22;break}else d=l}if((d|0)==22)return c|0}else{c=0;d=-1;a=0;b:while(1){l=a;while(1){i=+e[m+(l<<4)>>3];k=+e[m+(l<<4)+8>>3];a=(d+2|0)%(n|0)|0;h=+e[m+(a<<4)>>3];g=+e[m+(a<<4)+8>>3];if(i>h){j=i;i=k}else{j=h;h=i;i=g;g=k}if(!(o<h|o>j))break;d=l+1|0;if((d|0)<(n|0)){a=l;l=d;d=a}else{d=22;break b}}f=i==f|g==f?f+-2.220446049250313e-16:f;if(g+(o-h)/(j-h)*(i-g)>f)c=c^1;a=l+1|0;if((a|0)>=(n|0)){d=22;break}else d=l}if((d|0)==22)return c|0}return 0}function vc(a,c){a=a|0;c=c|0;var d=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,r=0,s=0,t=0,u=0,v=0;r=b[a>>2]|0;if(!r){b[c>>2]=0;b[c+4>>2]=0;b[c+8>>2]=0;b[c+12>>2]=0;b[c+16>>2]=0;b[c+20>>2]=0;b[c+24>>2]=0;b[c+28>>2]=0;return}s=c+8|0;e[s>>3]=1797693134862315708145274.0e284;t=c+24|0;e[t>>3]=1797693134862315708145274.0e284;e[c>>3]=-1797693134862315708145274.0e284;u=c+16|0;e[u>>3]=-1797693134862315708145274.0e284;if((r|0)<=0)return;o=b[a+4>>2]|0;l=1797693134862315708145274.0e284;m=-1797693134862315708145274.0e284;n=0;a=-1;h=1797693134862315708145274.0e284;i=1797693134862315708145274.0e284;k=-1797693134862315708145274.0e284;f=-1797693134862315708145274.0e284;p=0;while(1){d=+e[o+(p<<4)>>3];j=+e[o+(p<<4)+8>>3];a=a+2|0;g=+e[o+(((a|0)==(r|0)?0:a)<<4)+8>>3];if(d<h){e[s>>3]=d;h=d}if(j<i){e[t>>3]=j;i=j}if(d>k)e[c>>3]=d;else d=k;if(j>f){e[u>>3]=j;f=j}l=j>0.0&j<l?j:l;m=j<0.0&j>m?j:m;n=n|+q(+(j-g))>3.141592653589793;a=p+1|0;if((a|0)==(r|0))break;else{v=p;k=d;p=a;a=v}}if(!n)return;e[u>>3]=m;e[t>>3]=l;return}function wc(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;r=b[a>>2]|0;if(r){s=c+8|0;e[s>>3]=1797693134862315708145274.0e284;t=c+24|0;e[t>>3]=1797693134862315708145274.0e284;e[c>>3]=-1797693134862315708145274.0e284;u=c+16|0;e[u>>3]=-1797693134862315708145274.0e284;if((r|0)>0){g=b[a+4>>2]|0;o=1797693134862315708145274.0e284;p=-1797693134862315708145274.0e284;f=0;d=-1;k=1797693134862315708145274.0e284;l=1797693134862315708145274.0e284;n=-1797693134862315708145274.0e284;i=-1797693134862315708145274.0e284;v=0;while(1){h=+e[g+(v<<4)>>3];m=+e[g+(v<<4)+8>>3];z=d+2|0;j=+e[g+(((z|0)==(r|0)?0:z)<<4)+8>>3];if(h<k){e[s>>3]=h;k=h}if(m<l){e[t>>3]=m;l=m}if(h>n)e[c>>3]=h;else h=n;if(m>i){e[u>>3]=m;i=m}o=m>0.0&m<o?m:o;p=m<0.0&m>p?m:p;f=f|+q(+(m-j))>3.141592653589793;d=v+1|0;if((d|0)==(r|0))break;else{z=v;n=h;v=d;d=z}}if(f){e[u>>3]=p;e[t>>3]=o}}}else{b[c>>2]=0;b[c+4>>2]=0;b[c+8>>2]=0;b[c+12>>2]=0;b[c+16>>2]=0;b[c+20>>2]=0;b[c+24>>2]=0;b[c+28>>2]=0}z=a+8|0;d=b[z>>2]|0;if((d|0)<=0)return;y=a+12|0;x=0;do{g=b[y>>2]|0;f=x;x=x+1|0;t=c+(x<<5)|0;u=b[g+(f<<3)>>2]|0;if(u){v=c+(x<<5)+8|0;e[v>>3]=1797693134862315708145274.0e284;a=c+(x<<5)+24|0;e[a>>3]=1797693134862315708145274.0e284;e[t>>3]=-1797693134862315708145274.0e284;w=c+(x<<5)+16|0;e[w>>3]=-1797693134862315708145274.0e284;if((u|0)>0){r=b[g+(f<<3)+4>>2]|0;o=1797693134862315708145274.0e284;p=-1797693134862315708145274.0e284;g=0;f=-1;s=0;k=1797693134862315708145274.0e284;l=1797693134862315708145274.0e284;m=-1797693134862315708145274.0e284;i=-1797693134862315708145274.0e284;while(1){h=+e[r+(s<<4)>>3];n=+e[r+(s<<4)+8>>3];f=f+2|0;j=+e[r+(((f|0)==(u|0)?0:f)<<4)+8>>3];if(h<k){e[v>>3]=h;k=h}if(n<l){e[a>>3]=n;l=n}if(h>m)e[t>>3]=h;else h=m;if(n>i){e[w>>3]=n;i=n}o=n>0.0&n<o?n:o;p=n<0.0&n>p?n:p;g=g|+q(+(n-j))>3.141592653589793;f=s+1|0;if((f|0)==(u|0))break;else{A=s;s=f;m=h;f=A}}if(g){e[w>>3]=p;e[a>>3]=o}}}else{b[t>>2]=0;b[t+4>>2]=0;b[t+8>>2]=0;b[t+12>>2]=0;b[t+16>>2]=0;b[t+20>>2]=0;b[t+24>>2]=0;b[t+28>>2]=0;d=b[z>>2]|0}}while((x|0)<(d|0));return}function xc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0,g=0;if(!(uc(a,c,d)|0)){f=0;return f|0}f=a+8|0;if((b[f>>2]|0)<=0){f=1;return f|0}e=a+12|0;a=0;while(1){g=a;a=a+1|0;if(uc((b[e>>2]|0)+(g<<3)|0,c+(a<<5)|0,d)|0){a=0;e=6;break}if((a|0)>=(b[f>>2]|0)){a=1;e=6;break}}if((e|0)==6)return a|0;return 0}function yc(){return 8}function zc(){return 16}function Ac(){return 168}function Bc(){return 8}function Cc(){return 16}function Dc(){return 12}function Ec(){return 8}function Fc(a){a=a|0;var b=0.0,c=0.0;c=+e[a>>3];b=+e[a+8>>3];return +(+r(+(c*c+b*b)))}function Gc(a,b,c,d,f){a=a|0;b=b|0;c=c|0;d=d|0;f=f|0;var g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;k=+e[a>>3];j=+e[b>>3]-k;i=+e[a+8>>3];h=+e[b+8>>3]-i;m=+e[c>>3];g=+e[d>>3]-m;n=+e[c+8>>3];l=+e[d+8>>3]-n;g=(g*(i-n)-(k-m)*l)/(j*l-h*g);e[f>>3]=k+j*g;e[f+8>>3]=i+h*g;return}function Hc(a,b){a=a|0;b=b|0;if(!(+e[a>>3]==+e[b>>3])){b=0;return b|0}b=+e[a+8>>3]==+e[b+8>>3];return b|0}function Ic(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;f=+e[a>>3]-+e[b>>3];d=+e[a+8>>3]-+e[b+8>>3];c=+e[a+16>>3]-+e[b+16>>3];return +(f*f+d*d+c*c)}function Jc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,f=0.0;c=+e[a>>3];d=+t(+c);c=+u(+c);e[b+16>>3]=c;c=+e[a+8>>3];f=d*+t(+c);e[b>>3]=f;c=d*+u(+c);e[b+8>>3]=c;return}function Kc(a,c){a=a|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=S;S=S+32|0;f=k+16|0;g=k;Ub(a,c,f);h=Ab(a,c)|0;j=Lb(a,c)|0;pa(h,g);c=qa(h,b[f>>2]|0)|0;if(!(la(h)|0)){j=c;S=k;return j|0}do switch(h|0){case 4:{a=0;d=14;break}case 14:{a=1;d=14;break}case 24:{a=2;d=14;break}case 38:{a=3;d=14;break}case 49:{a=4;d=14;break}case 58:{a=5;d=14;break}case 63:{a=6;d=14;break}case 72:{a=7;d=14;break}case 83:{a=8;d=14;break}case 97:{a=9;d=14;break}case 107:{a=10;d=14;break}case 117:{a=11;d=14;break}default:{i=0;e=0}}while(0);if((d|0)==14){i=b[22096+(a*24|0)+8>>2]|0;e=b[22096+(a*24|0)+16>>2]|0}a=b[f>>2]|0;if((a|0)!=(b[g>>2]|0)){h=ma(h)|0;a=b[f>>2]|0;if(h|(a|0)==(e|0))c=(c+1|0)%6|0}if((j|0)==3&(a|0)==(e|0)){j=(c+5|0)%6|0;S=k;return j|0}if(!((j|0)==5&(a|0)==(i|0))){j=c;S=k;return j|0}j=(c+1|0)%6|0;S=k;return j|0}function Lc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0,f=0;e=Fb(a,c)|0;if((d+-1|0)>>>0>5){d=-1;return d|0}f=(e|0)!=0;if((d|0)==1&f){d=-1;return d|0}e=Kc(a,c)|0;if(f){d=(5-e+(b[22384+(d<<2)>>2]|0)|0)%5|0;return d|0}else{d=(6-e+(b[22416+(d<<2)>>2]|0)|0)%6|0;return d|0}return 0}function Mc(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if((c|0)>0){e=Yc(c,4)|0;b[a>>2]=e;if(!e)H(23230,23253,40,23267)}else b[a>>2]=0;b[a+4>>2]=c;b[a+8>>2]=0;b[a+12>>2]=d;return}function Nc(a){a=a|0;var c=0,d=0,f=0,g=0,h=0,i=0,j=0;g=a+4|0;h=a+12|0;i=a+8|0;a:while(1){d=b[g>>2]|0;c=0;while(1){if((c|0)>=(d|0))break a;f=b[a>>2]|0;j=b[f+(c<<2)>>2]|0;if(!j)c=c+1|0;else break}c=f+(~~(+q(+(+s(10.0,+(+(15-(b[h>>2]|0)|0)))*(+e[j>>3]+ +e[j+8>>3])))%+(d|0))>>>0<<2)|0;d=b[c>>2]|0;b:do if(d|0){f=j+32|0;if((d|0)==(j|0))b[c>>2]=b[f>>2];else{d=d+32|0;c=b[d>>2]|0;if(!c)break;while(1){if((c|0)==(j|0))break;d=c+32|0;c=b[d>>2]|0;if(!c)break b}b[d>>2]=b[f>>2]}Xc(j);b[i>>2]=(b[i>>2]|0)+-1}while(0)}Xc(b[a>>2]|0);return}function Oc(a){a=a|0;var c=0,d=0,e=0;e=b[a+4>>2]|0;d=0;while(1){if((d|0)>=(e|0)){c=0;d=4;break}c=b[(b[a>>2]|0)+(d<<2)>>2]|0;if(!c)d=d+1|0;else{d=4;break}}if((d|0)==4)return c|0;return 0}function Pc(a,c){a=a|0;c=c|0;var d=0,f=0,g=0,h=0;d=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;d=(b[a>>2]|0)+(d<<2)|0;f=b[d>>2]|0;if(!f){h=1;return h|0}h=c+32|0;do if((f|0)!=(c|0)){d=b[f+32>>2]|0;if(!d){h=1;return h|0}g=d;while(1){if((g|0)==(c|0)){g=8;break}d=b[g+32>>2]|0;if(!d){d=1;g=10;break}else{f=g;g=d}}if((g|0)==8){b[f+32>>2]=b[h>>2];break}else if((g|0)==10)return d|0}else b[d>>2]=b[h>>2];while(0);Xc(c);h=a+8|0;b[h>>2]=(b[h>>2]|0)+-1;h=0;return h|0}function Qc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0,h=0,i=0;h=Wc(40)|0;if(!h)H(23283,23253,98,23296);b[h>>2]=b[c>>2];b[h+4>>2]=b[c+4>>2];b[h+8>>2]=b[c+8>>2];b[h+12>>2]=b[c+12>>2];g=h+16|0;b[g>>2]=b[d>>2];b[g+4>>2]=b[d+4>>2];b[g+8>>2]=b[d+8>>2];b[g+12>>2]=b[d+12>>2];b[h+32>>2]=0;g=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;g=(b[a>>2]|0)+(g<<2)|0;f=b[g>>2]|0;do if(!f)b[g>>2]=h;else{while(1){if(hb(f,c)|0?hb(f+16|0,d)|0:0)break;g=b[f+32>>2]|0;f=(g|0)==0?f:g;if(!(b[f+32>>2]|0)){i=10;break}}if((i|0)==10){b[f+32>>2]=h;break}Xc(h);i=f;return i|0}while(0);i=a+8|0;b[i>>2]=(b[i>>2]|0)+1;i=h;return i|0}function Rc(a,c,d){a=a|0;c=c|0;d=d|0;var f=0,g=0;g=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;g=b[(b[a>>2]|0)+(g<<2)>>2]|0;if(!g){d=0;return d|0}if(!d){a=g;while(1){if(hb(a,c)|0){f=10;break}a=b[a+32>>2]|0;if(!a){a=0;f=10;break}}if((f|0)==10)return a|0}a=g;while(1){if(hb(a,c)|0?hb(a+16|0,d)|0:0){f=10;break}a=b[a+32>>2]|0;if(!a){a=0;f=10;break}}if((f|0)==10)return a|0;return 0}function Sc(a,c){a=a|0;c=c|0;var d=0;d=~~(+q(+(+s(10.0,+(+(15-(b[a+12>>2]|0)|0)))*(+e[c>>3]+ +e[c+8>>3])))%+(b[a+4>>2]|0))>>>0;a=b[(b[a>>2]|0)+(d<<2)>>2]|0;if(!a){d=0;return d|0}while(1){if(hb(a,c)|0){c=5;break}a=b[a+32>>2]|0;if(!a){a=0;c=5;break}}if((c|0)==5)return a|0;return 0}function Tc(){return 23312}function Uc(a){a=+a;return +(+id(+a))}function Vc(a){a=+a;return ~~+Uc(a)|0}function Wc(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=S;S=S+16|0;n=w;do if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=b[5829]|0;d=m>>>a;if(d&3|0){c=(d&1^1)+a|0;a=23356+(c<<1<<2)|0;d=a+8|0;e=b[d>>2]|0;f=e+8|0;g=b[f>>2]|0;if((g|0)==(a|0))b[5829]=m&~(1<<c);else{b[g+12>>2]=a;b[d>>2]=g}v=c<<3;b[e+4>>2]=v|3;v=e+v+4|0;b[v>>2]=b[v>>2]|1;v=f;S=w;return v|0}l=b[5831]|0;if(k>>>0>l>>>0){if(d|0){c=2<<a;c=d<<a&(c|0-c);c=(c&0-c)+-1|0;i=c>>>12&16;c=c>>>i;d=c>>>5&8;c=c>>>d;g=c>>>2&4;c=c>>>g;a=c>>>1&2;c=c>>>a;e=c>>>1&1;e=(d|i|g|a|e)+(c>>>e)|0;c=23356+(e<<1<<2)|0;a=c+8|0;g=b[a>>2]|0;i=g+8|0;d=b[i>>2]|0;if((d|0)==(c|0)){a=m&~(1<<e);b[5829]=a}else{b[d+12>>2]=c;b[a>>2]=d;a=m}v=e<<3;h=v-k|0;b[g+4>>2]=k|3;f=g+k|0;b[f+4>>2]=h|1;b[g+v>>2]=h;if(l|0){e=b[5834]|0;c=l>>>3;d=23356+(c<<1<<2)|0;c=1<<c;if(!(a&c)){b[5829]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=e;b[c+12>>2]=e;b[e+8>>2]=c;b[e+12>>2]=d}b[5831]=h;b[5834]=f;v=i;S=w;return v|0}g=b[5830]|0;if(g){d=(g&0-g)+-1|0;f=d>>>12&16;d=d>>>f;e=d>>>5&8;d=d>>>e;h=d>>>2&4;d=d>>>h;i=d>>>1&2;d=d>>>i;j=d>>>1&1;j=b[23620+((e|f|h|i|j)+(d>>>j)<<2)>>2]|0;d=j;i=j;j=(b[j+4>>2]&-8)-k|0;while(1){a=b[d+16>>2]|0;if(!a){a=b[d+20>>2]|0;if(!a)break}h=(b[a+4>>2]&-8)-k|0;f=h>>>0<j>>>0;d=a;i=f?a:i;j=f?h:j}h=i+k|0;if(h>>>0>i>>>0){f=b[i+24>>2]|0;c=b[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;c=b[a>>2]|0;if(!c){a=i+16|0;c=b[a>>2]|0;if(!c){d=0;break}}while(1){e=c+20|0;d=b[e>>2]|0;if(!d){e=c+16|0;d=b[e>>2]|0;if(!d)break;else{c=d;a=e}}else{c=d;a=e}}b[a>>2]=0;d=c}else{d=b[i+8>>2]|0;b[d+12>>2]=c;b[c+8>>2]=d;d=c}while(0);do if(f|0){c=b[i+28>>2]|0;a=23620+(c<<2)|0;if((i|0)==(b[a>>2]|0)){b[a>>2]=d;if(!d){b[5830]=g&~(1<<c);break}}else{v=f+16|0;b[((b[v>>2]|0)==(i|0)?v:f+20|0)>>2]=d;if(!d)break}b[d+24>>2]=f;c=b[i+16>>2]|0;if(c|0){b[d+16>>2]=c;b[c+24>>2]=d}c=b[i+20>>2]|0;if(c|0){b[d+20>>2]=c;b[c+24>>2]=d}}while(0);if(j>>>0<16){v=j+k|0;b[i+4>>2]=v|3;v=i+v+4|0;b[v>>2]=b[v>>2]|1}else{b[i+4>>2]=k|3;b[h+4>>2]=j|1;b[h+j>>2]=j;if(l|0){e=b[5834]|0;c=l>>>3;d=23356+(c<<1<<2)|0;c=1<<c;if(!(c&m)){b[5829]=c|m;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=e;b[c+12>>2]=e;b[e+8>>2]=c;b[e+12>>2]=d}b[5831]=j;b[5834]=h}v=i+8|0;S=w;return v|0}else m=k}else m=k}else m=k}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;e=b[5830]|0;if(e){f=0-k|0;a=a>>>8;if(a)if(k>>>0>16777215)j=31;else{m=(a+1048320|0)>>>16&8;q=a<<m;i=(q+520192|0)>>>16&4;q=q<<i;j=(q+245760|0)>>>16&2;j=14-(i|m|j)+(q<<j>>>15)|0;j=k>>>(j+7|0)&1|j<<1}else j=0;d=b[23620+(j<<2)>>2]|0;a:do if(!d){d=0;a=0;q=61}else{a=0;i=k<<((j|0)==31?0:25-(j>>>1)|0);g=0;while(1){h=(b[d+4>>2]&-8)-k|0;if(h>>>0<f>>>0)if(!h){a=d;f=0;q=65;break a}else{a=d;f=h}q=b[d+20>>2]|0;d=b[d+16+(i>>>31<<2)>>2]|0;g=(q|0)==0|(q|0)==(d|0)?g:q;if(!d){d=g;q=61;break}else i=i<<1}}while(0);if((q|0)==61){if((d|0)==0&(a|0)==0){a=2<<j;a=(a|0-a)&e;if(!a){m=k;break}m=(a&0-a)+-1|0;h=m>>>12&16;m=m>>>h;g=m>>>5&8;m=m>>>g;i=m>>>2&4;m=m>>>i;j=m>>>1&2;m=m>>>j;d=m>>>1&1;a=0;d=b[23620+((g|h|i|j|d)+(m>>>d)<<2)>>2]|0}if(!d){i=a;h=f}else q=65}if((q|0)==65){g=d;while(1){m=(b[g+4>>2]&-8)-k|0;d=m>>>0<f>>>0;f=d?m:f;a=d?g:a;d=b[g+16>>2]|0;if(!d)d=b[g+20>>2]|0;if(!d){i=a;h=f;break}else g=d}}if(((i|0)!=0?h>>>0<((b[5831]|0)-k|0)>>>0:0)?(l=i+k|0,l>>>0>i>>>0):0){g=b[i+24>>2]|0;c=b[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;c=b[a>>2]|0;if(!c){a=i+16|0;c=b[a>>2]|0;if(!c){c=0;break}}while(1){f=c+20|0;d=b[f>>2]|0;if(!d){f=c+16|0;d=b[f>>2]|0;if(!d)break;else{c=d;a=f}}else{c=d;a=f}}b[a>>2]=0}else{v=b[i+8>>2]|0;b[v+12>>2]=c;b[c+8>>2]=v}while(0);do if(g){a=b[i+28>>2]|0;d=23620+(a<<2)|0;if((i|0)==(b[d>>2]|0)){b[d>>2]=c;if(!c){e=e&~(1<<a);b[5830]=e;break}}else{v=g+16|0;b[((b[v>>2]|0)==(i|0)?v:g+20|0)>>2]=c;if(!c)break}b[c+24>>2]=g;a=b[i+16>>2]|0;if(a|0){b[c+16>>2]=a;b[a+24>>2]=c}a=b[i+20>>2]|0;if(a){b[c+20>>2]=a;b[a+24>>2]=c}}while(0);b:do if(h>>>0<16){v=h+k|0;b[i+4>>2]=v|3;v=i+v+4|0;b[v>>2]=b[v>>2]|1}else{b[i+4>>2]=k|3;b[l+4>>2]=h|1;b[l+h>>2]=h;c=h>>>3;if(h>>>0<256){d=23356+(c<<1<<2)|0;a=b[5829]|0;c=1<<c;if(!(a&c)){b[5829]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=l;b[c+12>>2]=l;b[l+8>>2]=c;b[l+12>>2]=d;break}c=h>>>8;if(c)if(h>>>0>16777215)d=31;else{u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;d=(v+245760|0)>>>16&2;d=14-(t|u|d)+(v<<d>>>15)|0;d=h>>>(d+7|0)&1|d<<1}else d=0;c=23620+(d<<2)|0;b[l+28>>2]=d;a=l+16|0;b[a+4>>2]=0;b[a>>2]=0;a=1<<d;if(!(e&a)){b[5830]=e|a;b[c>>2]=l;b[l+24>>2]=c;b[l+12>>2]=l;b[l+8>>2]=l;break}c=b[c>>2]|0;c:do if((b[c+4>>2]&-8|0)!=(h|0)){e=h<<((d|0)==31?0:25-(d>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(h|0)){c=a;break c}else{e=e<<1;c=a}}b[d>>2]=l;b[l+24>>2]=c;b[l+12>>2]=l;b[l+8>>2]=l;break b}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=l;b[u>>2]=l;b[l+8>>2]=v;b[l+12>>2]=c;b[l+24>>2]=0}while(0);v=i+8|0;S=w;return v|0}else m=k}else m=k}else m=-1;while(0);d=b[5831]|0;if(d>>>0>=m>>>0){c=d-m|0;a=b[5834]|0;if(c>>>0>15){v=a+m|0;b[5834]=v;b[5831]=c;b[v+4>>2]=c|1;b[a+d>>2]=c;b[a+4>>2]=m|3}else{b[5831]=0;b[5834]=0;b[a+4>>2]=d|3;v=a+d+4|0;b[v>>2]=b[v>>2]|1}v=a+8|0;S=w;return v|0}h=b[5832]|0;if(h>>>0>m>>>0){t=h-m|0;b[5832]=t;v=b[5835]|0;u=v+m|0;b[5835]=u;b[u+4>>2]=t|1;b[v+4>>2]=m|3;v=v+8|0;S=w;return v|0}if(!(b[5947]|0)){b[5949]=4096;b[5948]=4096;b[5950]=-1;b[5951]=-1;b[5952]=0;b[5940]=0;b[5947]=n&-16^1431655768;a=4096}else a=b[5949]|0;i=m+48|0;j=m+47|0;g=a+j|0;f=0-a|0;k=g&f;if(k>>>0<=m>>>0){v=0;S=w;return v|0}a=b[5939]|0;if(a|0?(l=b[5937]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){v=0;S=w;return v|0}d:do if(!(b[5940]&4)){d=b[5835]|0;e:do if(d){e=23764;while(1){n=b[e>>2]|0;if(n>>>0<=d>>>0?(n+(b[e+4>>2]|0)|0)>>>0>d>>>0:0)break;a=b[e+8>>2]|0;if(!a){q=128;break e}else e=a}c=g-h&f;if(c>>>0<2147483647){a=jd(c|0)|0;if((a|0)==((b[e>>2]|0)+(b[e+4>>2]|0)|0)){if((a|0)!=(-1|0)){h=c;g=a;q=145;break d}}else{e=a;q=136}}else c=0}else q=128;while(0);do if((q|0)==128){d=jd(0)|0;if((d|0)!=(-1|0)?(c=d,o=b[5948]|0,p=o+-1|0,c=((p&c|0)==0?0:(p+c&0-o)-c|0)+k|0,o=b[5937]|0,p=c+o|0,c>>>0>m>>>0&c>>>0<2147483647):0){n=b[5939]|0;if(n|0?p>>>0<=o>>>0|p>>>0>n>>>0:0){c=0;break}a=jd(c|0)|0;if((a|0)==(d|0)){h=c;g=d;q=145;break d}else{e=a;q=136}}else c=0}while(0);do if((q|0)==136){d=0-c|0;if(!(i>>>0>c>>>0&(c>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){c=0;break}else{h=c;g=e;q=145;break d}a=b[5949]|0;a=j-c+a&0-a;if(a>>>0>=2147483647){h=c;g=e;q=145;break d}if((jd(a|0)|0)==(-1|0)){jd(d|0)|0;c=0;break}else{h=a+c|0;g=e;q=145;break d}}while(0);b[5940]=b[5940]|4;q=143}else{c=0;q=143}while(0);if(((q|0)==143?k>>>0<2147483647:0)?(t=jd(k|0)|0,p=jd(0)|0,r=p-t|0,s=r>>>0>(m+40|0)>>>0,!((t|0)==(-1|0)|s^1|t>>>0<p>>>0&((t|0)!=(-1|0)&(p|0)!=(-1|0))^1)):0){h=s?r:c;g=t;q=145}if((q|0)==145){c=(b[5937]|0)+h|0;b[5937]=c;if(c>>>0>(b[5938]|0)>>>0)b[5938]=c;j=b[5835]|0;f:do if(j){c=23764;while(1){a=b[c>>2]|0;d=b[c+4>>2]|0;if((g|0)==(a+d|0)){q=154;break}e=b[c+8>>2]|0;if(!e)break;else c=e}if(((q|0)==154?(u=c+4|0,(b[c+12>>2]&8|0)==0):0)?g>>>0>j>>>0&a>>>0<=j>>>0:0){b[u>>2]=d+h;v=(b[5832]|0)+h|0;t=j+8|0;t=(t&7|0)==0?0:0-t&7;u=j+t|0;t=v-t|0;b[5835]=u;b[5832]=t;b[u+4>>2]=t|1;b[j+v+4>>2]=40;b[5836]=b[5951];break}if(g>>>0<(b[5833]|0)>>>0)b[5833]=g;d=g+h|0;c=23764;while(1){if((b[c>>2]|0)==(d|0)){q=162;break}a=b[c+8>>2]|0;if(!a)break;else c=a}if((q|0)==162?(b[c+12>>2]&8|0)==0:0){b[c>>2]=g;l=c+4|0;b[l>>2]=(b[l>>2]|0)+h;l=g+8|0;l=g+((l&7|0)==0?0:0-l&7)|0;c=d+8|0;c=d+((c&7|0)==0?0:0-c&7)|0;k=l+m|0;i=c-l-m|0;b[l+4>>2]=m|3;g:do if((j|0)==(c|0)){v=(b[5832]|0)+i|0;b[5832]=v;b[5835]=k;b[k+4>>2]=v|1}else{if((b[5834]|0)==(c|0)){v=(b[5831]|0)+i|0;b[5831]=v;b[5834]=k;b[k+4>>2]=v|1;b[k+v>>2]=v;break}a=b[c+4>>2]|0;if((a&3|0)==1){h=a&-8;e=a>>>3;h:do if(a>>>0<256){a=b[c+8>>2]|0;d=b[c+12>>2]|0;if((d|0)==(a|0)){b[5829]=b[5829]&~(1<<e);break}else{b[a+12>>2]=d;b[d+8>>2]=a;break}}else{g=b[c+24>>2]|0;a=b[c+12>>2]|0;do if((a|0)==(c|0)){d=c+16|0;e=d+4|0;a=b[e>>2]|0;if(!a){a=b[d>>2]|0;if(!a){a=0;break}}else d=e;while(1){f=a+20|0;e=b[f>>2]|0;if(!e){f=a+16|0;e=b[f>>2]|0;if(!e)break;else{a=e;d=f}}else{a=e;d=f}}b[d>>2]=0}else{v=b[c+8>>2]|0;b[v+12>>2]=a;b[a+8>>2]=v}while(0);if(!g)break;d=b[c+28>>2]|0;e=23620+(d<<2)|0;do if((b[e>>2]|0)!=(c|0)){v=g+16|0;b[((b[v>>2]|0)==(c|0)?v:g+20|0)>>2]=a;if(!a)break h}else{b[e>>2]=a;if(a|0)break;b[5830]=b[5830]&~(1<<d);break h}while(0);b[a+24>>2]=g;d=c+16|0;e=b[d>>2]|0;if(e|0){b[a+16>>2]=e;b[e+24>>2]=a}d=b[d+4>>2]|0;if(!d)break;b[a+20>>2]=d;b[d+24>>2]=a}while(0);c=c+h|0;f=h+i|0}else f=i;c=c+4|0;b[c>>2]=b[c>>2]&-2;b[k+4>>2]=f|1;b[k+f>>2]=f;c=f>>>3;if(f>>>0<256){d=23356+(c<<1<<2)|0;a=b[5829]|0;c=1<<c;if(!(a&c)){b[5829]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=k;b[c+12>>2]=k;b[k+8>>2]=c;b[k+12>>2]=d;break}c=f>>>8;do if(!c)e=0;else{if(f>>>0>16777215){e=31;break}u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}while(0);c=23620+(e<<2)|0;b[k+28>>2]=e;a=k+16|0;b[a+4>>2]=0;b[a>>2]=0;a=b[5830]|0;d=1<<e;if(!(a&d)){b[5830]=a|d;b[c>>2]=k;b[k+24>>2]=c;b[k+12>>2]=k;b[k+8>>2]=k;break}c=b[c>>2]|0;i:do if((b[c+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(f|0)){c=a;break i}else{e=e<<1;c=a}}b[d>>2]=k;b[k+24>>2]=c;b[k+12>>2]=k;b[k+8>>2]=k;break g}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=k;b[u>>2]=k;b[k+8>>2]=v;b[k+12>>2]=c;b[k+24>>2]=0}while(0);v=l+8|0;S=w;return v|0}c=23764;while(1){a=b[c>>2]|0;if(a>>>0<=j>>>0?(v=a+(b[c+4>>2]|0)|0,v>>>0>j>>>0):0)break;c=b[c+8>>2]|0}f=v+-47|0;a=f+8|0;a=f+((a&7|0)==0?0:0-a&7)|0;f=j+16|0;a=a>>>0<f>>>0?j:a;c=a+8|0;d=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=d-t|0;b[5835]=u;b[5832]=t;b[u+4>>2]=t|1;b[g+d+4>>2]=40;b[5836]=b[5951];d=a+4|0;b[d>>2]=27;b[c>>2]=b[5941];b[c+4>>2]=b[5942];b[c+8>>2]=b[5943];b[c+12>>2]=b[5944];b[5941]=g;b[5942]=h;b[5944]=0;b[5943]=c;c=a+24|0;do{u=c;c=c+4|0;b[c>>2]=7}while((u+8|0)>>>0<v>>>0);if((a|0)!=(j|0)){g=a-j|0;b[d>>2]=b[d>>2]&-2;b[j+4>>2]=g|1;b[a>>2]=g;c=g>>>3;if(g>>>0<256){d=23356+(c<<1<<2)|0;a=b[5829]|0;c=1<<c;if(!(a&c)){b[5829]=a|c;c=d;a=d+8|0}else{a=d+8|0;c=b[a>>2]|0}b[a>>2]=j;b[c+12>>2]=j;b[j+8>>2]=c;b[j+12>>2]=d;break}c=g>>>8;if(c)if(g>>>0>16777215)e=31;else{u=(c+1048320|0)>>>16&8;v=c<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=g>>>(e+7|0)&1|e<<1}else e=0;d=23620+(e<<2)|0;b[j+28>>2]=e;b[j+20>>2]=0;b[f>>2]=0;c=b[5830]|0;a=1<<e;if(!(c&a)){b[5830]=c|a;b[d>>2]=j;b[j+24>>2]=d;b[j+12>>2]=j;b[j+8>>2]=j;break}c=b[d>>2]|0;j:do if((b[c+4>>2]&-8|0)!=(g|0)){e=g<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=c+16+(e>>>31<<2)|0;a=b[d>>2]|0;if(!a)break;if((b[a+4>>2]&-8|0)==(g|0)){c=a;break j}else{e=e<<1;c=a}}b[d>>2]=j;b[j+24>>2]=c;b[j+12>>2]=j;b[j+8>>2]=j;break f}while(0);u=c+8|0;v=b[u>>2]|0;b[v+12>>2]=j;b[u>>2]=j;b[j+8>>2]=v;b[j+12>>2]=c;b[j+24>>2]=0}}else{v=b[5833]|0;if((v|0)==0|g>>>0<v>>>0)b[5833]=g;b[5941]=g;b[5942]=h;b[5944]=0;b[5838]=b[5947];b[5837]=-1;b[5842]=23356;b[5841]=23356;b[5844]=23364;b[5843]=23364;b[5846]=23372;b[5845]=23372;b[5848]=23380;b[5847]=23380;b[5850]=23388;b[5849]=23388;b[5852]=23396;b[5851]=23396;b[5854]=23404;b[5853]=23404;b[5856]=23412;b[5855]=23412;b[5858]=23420;b[5857]=23420;b[5860]=23428;b[5859]=23428;b[5862]=23436;b[5861]=23436;b[5864]=23444;b[5863]=23444;b[5866]=23452;b[5865]=23452;b[5868]=23460;b[5867]=23460;b[5870]=23468;b[5869]=23468;b[5872]=23476;b[5871]=23476;b[5874]=23484;b[5873]=23484;b[5876]=23492;b[5875]=23492;b[5878]=23500;b[5877]=23500;b[5880]=23508;b[5879]=23508;b[5882]=23516;b[5881]=23516;b[5884]=23524;b[5883]=23524;b[5886]=23532;b[5885]=23532;b[5888]=23540;b[5887]=23540;b[5890]=23548;b[5889]=23548;b[5892]=23556;b[5891]=23556;b[5894]=23564;b[5893]=23564;b[5896]=23572;b[5895]=23572;b[5898]=23580;b[5897]=23580;b[5900]=23588;b[5899]=23588;b[5902]=23596;b[5901]=23596;b[5904]=23604;b[5903]=23604;v=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=v-t|0;b[5835]=u;b[5832]=t;b[u+4>>2]=t|1;b[g+v+4>>2]=40;b[5836]=b[5951]}while(0);c=b[5832]|0;if(c>>>0>m>>>0){t=c-m|0;b[5832]=t;v=b[5835]|0;u=v+m|0;b[5835]=u;b[u+4>>2]=t|1;b[v+4>>2]=m|3;v=v+8|0;S=w;return v|0}}v=Tc()|0;b[v>>2]=12;v=0;S=w;return v|0}function Xc(a){a=a|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(!a)return;d=a+-8|0;f=b[5833]|0;a=b[a+-4>>2]|0;c=a&-8;j=d+c|0;do if(!(a&1)){e=b[d>>2]|0;if(!(a&3))return;h=d+(0-e)|0;g=e+c|0;if(h>>>0<f>>>0)return;if((b[5834]|0)==(h|0)){a=j+4|0;c=b[a>>2]|0;if((c&3|0)!=3){i=h;c=g;break}b[5831]=g;b[a>>2]=c&-2;b[h+4>>2]=g|1;b[h+g>>2]=g;return}d=e>>>3;if(e>>>0<256){a=b[h+8>>2]|0;c=b[h+12>>2]|0;if((c|0)==(a|0)){b[5829]=b[5829]&~(1<<d);i=h;c=g;break}else{b[a+12>>2]=c;b[c+8>>2]=a;i=h;c=g;break}}f=b[h+24>>2]|0;a=b[h+12>>2]|0;do if((a|0)==(h|0)){c=h+16|0;d=c+4|0;a=b[d>>2]|0;if(!a){a=b[c>>2]|0;if(!a){a=0;break}}else c=d;while(1){e=a+20|0;d=b[e>>2]|0;if(!d){e=a+16|0;d=b[e>>2]|0;if(!d)break;else{a=d;c=e}}else{a=d;c=e}}b[c>>2]=0}else{i=b[h+8>>2]|0;b[i+12>>2]=a;b[a+8>>2]=i}while(0);if(f){c=b[h+28>>2]|0;d=23620+(c<<2)|0;if((b[d>>2]|0)==(h|0)){b[d>>2]=a;if(!a){b[5830]=b[5830]&~(1<<c);i=h;c=g;break}}else{i=f+16|0;b[((b[i>>2]|0)==(h|0)?i:f+20|0)>>2]=a;if(!a){i=h;c=g;break}}b[a+24>>2]=f;c=h+16|0;d=b[c>>2]|0;if(d|0){b[a+16>>2]=d;b[d+24>>2]=a}c=b[c+4>>2]|0;if(c){b[a+20>>2]=c;b[c+24>>2]=a;i=h;c=g}else{i=h;c=g}}else{i=h;c=g}}else{i=d;h=d}while(0);if(h>>>0>=j>>>0)return;a=j+4|0;e=b[a>>2]|0;if(!(e&1))return;if(!(e&2)){if((b[5835]|0)==(j|0)){j=(b[5832]|0)+c|0;b[5832]=j;b[5835]=i;b[i+4>>2]=j|1;if((i|0)!=(b[5834]|0))return;b[5834]=0;b[5831]=0;return}if((b[5834]|0)==(j|0)){j=(b[5831]|0)+c|0;b[5831]=j;b[5834]=h;b[i+4>>2]=j|1;b[h+j>>2]=j;return}f=(e&-8)+c|0;d=e>>>3;do if(e>>>0<256){c=b[j+8>>2]|0;a=b[j+12>>2]|0;if((a|0)==(c|0)){b[5829]=b[5829]&~(1<<d);break}else{b[c+12>>2]=a;b[a+8>>2]=c;break}}else{g=b[j+24>>2]|0;a=b[j+12>>2]|0;do if((a|0)==(j|0)){c=j+16|0;d=c+4|0;a=b[d>>2]|0;if(!a){a=b[c>>2]|0;if(!a){d=0;break}}else c=d;while(1){e=a+20|0;d=b[e>>2]|0;if(!d){e=a+16|0;d=b[e>>2]|0;if(!d)break;else{a=d;c=e}}else{a=d;c=e}}b[c>>2]=0;d=a}else{d=b[j+8>>2]|0;b[d+12>>2]=a;b[a+8>>2]=d;d=a}while(0);if(g|0){a=b[j+28>>2]|0;c=23620+(a<<2)|0;if((b[c>>2]|0)==(j|0)){b[c>>2]=d;if(!d){b[5830]=b[5830]&~(1<<a);break}}else{e=g+16|0;b[((b[e>>2]|0)==(j|0)?e:g+20|0)>>2]=d;if(!d)break}b[d+24>>2]=g;a=j+16|0;c=b[a>>2]|0;if(c|0){b[d+16>>2]=c;b[c+24>>2]=d}a=b[a+4>>2]|0;if(a|0){b[d+20>>2]=a;b[a+24>>2]=d}}}while(0);b[i+4>>2]=f|1;b[h+f>>2]=f;if((i|0)==(b[5834]|0)){b[5831]=f;return}}else{b[a>>2]=e&-2;b[i+4>>2]=c|1;b[h+c>>2]=c;f=c}a=f>>>3;if(f>>>0<256){d=23356+(a<<1<<2)|0;c=b[5829]|0;a=1<<a;if(!(c&a)){b[5829]=c|a;a=d;c=d+8|0}else{c=d+8|0;a=b[c>>2]|0}b[c>>2]=i;b[a+12>>2]=i;b[i+8>>2]=a;b[i+12>>2]=d;return}a=f>>>8;if(a)if(f>>>0>16777215)e=31;else{h=(a+1048320|0)>>>16&8;j=a<<h;g=(j+520192|0)>>>16&4;j=j<<g;e=(j+245760|0)>>>16&2;e=14-(g|h|e)+(j<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;a=23620+(e<<2)|0;b[i+28>>2]=e;b[i+20>>2]=0;b[i+16>>2]=0;c=b[5830]|0;d=1<<e;a:do if(!(c&d)){b[5830]=c|d;b[a>>2]=i;b[i+24>>2]=a;b[i+12>>2]=i;b[i+8>>2]=i}else{a=b[a>>2]|0;b:do if((b[a+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=a+16+(e>>>31<<2)|0;c=b[d>>2]|0;if(!c)break;if((b[c+4>>2]&-8|0)==(f|0)){a=c;break b}else{e=e<<1;a=c}}b[d>>2]=i;b[i+24>>2]=a;b[i+12>>2]=i;b[i+8>>2]=i;break a}while(0);h=a+8|0;j=b[h>>2]|0;b[j+12>>2]=i;b[h>>2]=i;b[i+8>>2]=j;b[i+12>>2]=a;b[i+24>>2]=0}while(0);j=(b[5837]|0)+-1|0;b[5837]=j;if(j|0)return;a=23772;while(1){a=b[a>>2]|0;if(!a)break;else a=a+8|0}b[5837]=-1;return}function Yc(a,c){a=a|0;c=c|0;var d=0;if(a){d=B(c,a)|0;if((c|a)>>>0>65535)d=((d>>>0)/(a>>>0)|0|0)==(c|0)?d:-1}else d=0;a=Wc(d)|0;if(!a)return a|0;if(!(b[a+-4>>2]&3))return a|0;hd(a|0,0,d|0)|0;return a|0}function Zc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (F(b+d+(c>>>0<a>>>0|0)>>>0|0),c|0)|0}function _c(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (F(d|0),a-c>>>0|0)|0}function $c(a){a=a|0;return (a?31-(D(a^a-1)|0)|0:32)|0}function ad(a,c,d,e,f){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=c;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){b[f>>2]=(l>>>0)%(h>>>0);b[f+4>>2]=0}n=0;f=(l>>>0)/(h>>>0)>>>0;return (F(n|0),f)|0}else{if(!g){n=0;f=0;return (F(n|0),f)|0}b[f>>2]=a|0;b[f+4>>2]=c&0;n=0;f=0;return (F(n|0),f)|0}}g=(i|0)==0;do if(h){if(!g){g=(D(i|0)|0)-(D(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;c=g-31>>31;h=m;a=l>>>(m>>>0)&c|k<<i;c=k>>>(m>>>0)&c;g=0;i=l<<i;break}if(!f){n=0;f=0;return (F(n|0),f)|0}b[f>>2]=a|0;b[f+4>>2]=j|c&0;n=0;f=0;return (F(n|0),f)|0}g=h-1|0;if(g&h|0){i=(D(h|0)|0)+33-(D(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;c=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&c;c=c&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break}if(f|0){b[f>>2]=g&l;b[f+4>>2]=0}if((h|0)==1){o=j|c&0;p=a|0|0;return (F(o|0),p)|0}else{p=$c(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return (F(o|0),p)|0}}else{if(g){if(f|0){b[f>>2]=(k>>>0)%(h>>>0);b[f+4>>2]=0}o=0;p=(k>>>0)/(h>>>0)>>>0;return (F(o|0),p)|0}if(!l){if(f|0){b[f>>2]=0;b[f+4>>2]=(k>>>0)%(i>>>0)}o=0;p=(k>>>0)/(i>>>0)>>>0;return (F(o|0),p)|0}g=i-1|0;if(!(g&i)){if(f|0){b[f>>2]=a|0;b[f+4>>2]=g&k|c&0}o=0;p=k>>>(($c(i|0)|0)>>>0);return (F(o|0),p)|0}g=(D(i|0)|0)-(D(k|0)|0)|0;if(g>>>0<=30){c=g+1|0;i=31-g|0;h=c;a=k<<i|l>>>(c>>>0);c=k>>>(c>>>0);g=0;i=l<<i;break}if(!f){o=0;p=0;return (F(o|0),p)|0}b[f>>2]=a|0;b[f+4>>2]=j|c&0;o=0;p=0;return (F(o|0),p)|0}while(0);if(!h){k=i;j=0;i=0}else{m=d|0|0;l=n|e&0;k=Zc(m|0,l|0,-1,-1)|0;d=G()|0;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|c<<1|0;_c(k|0,d|0,e|0,n|0)|0;p=G()|0;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=_c(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;c=G()|0;h=h-1|0}while((h|0)!=0);k=j;j=0}h=0;if(f|0){b[f>>2]=a;b[f+4>>2]=c}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return (F(o|0),p)|0}function bd(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=S;S=S+16|0;f=g|0;ad(a,c,d,e,f)|0;S=g;return (F(b[f+4>>2]|0),b[f>>2]|0)|0}function cd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F(b>>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c}F(0);return b>>>c-32|0}function dd(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F(b<<c|(a&(1<<c)-1<<32-c)>>>32-c|0);return a<<c}F(a<<c-32|0);return 0}function ed(a,b){a=+a;b=+b;if(a!=a)return +b;if(b!=b)return +a;return +C(+a,+b)}function fd(a){a=+a;return a>=0.0?+p(a+.5):+A(a-.5)}function gd(c,d,e){c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192){K(c|0,d|0,e|0)|0;return c|0}h=c|0;g=c+e|0;if((c&3)==(d&3)){while(c&3){if(!e)return h|0;a[c>>0]=a[d>>0]|0;c=c+1|0;d=d+1|0;e=e-1|0}e=g&-4|0;f=e-64|0;while((c|0)<=(f|0)){b[c>>2]=b[d>>2];b[c+4>>2]=b[d+4>>2];b[c+8>>2]=b[d+8>>2];b[c+12>>2]=b[d+12>>2];b[c+16>>2]=b[d+16>>2];b[c+20>>2]=b[d+20>>2];b[c+24>>2]=b[d+24>>2];b[c+28>>2]=b[d+28>>2];b[c+32>>2]=b[d+32>>2];b[c+36>>2]=b[d+36>>2];b[c+40>>2]=b[d+40>>2];b[c+44>>2]=b[d+44>>2];b[c+48>>2]=b[d+48>>2];b[c+52>>2]=b[d+52>>2];b[c+56>>2]=b[d+56>>2];b[c+60>>2]=b[d+60>>2];c=c+64|0;d=d+64|0}while((c|0)<(e|0)){b[c>>2]=b[d>>2];c=c+4|0;d=d+4|0}}else{e=g-4|0;while((c|0)<(e|0)){a[c>>0]=a[d>>0]|0;a[c+1>>0]=a[d+1>>0]|0;a[c+2>>0]=a[d+2>>0]|0;a[c+3>>0]=a[d+3>>0]|0;c=c+4|0;d=d+4|0}}while((c|0)<(g|0)){a[c>>0]=a[d>>0]|0;c=c+1|0;d=d+1|0}return h|0}function hd(c,d,e){c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=c+e|0;d=d&255;if((e|0)>=67){while(c&3){a[c>>0]=d;c=c+1|0}f=h&-4|0;i=d|d<<8|d<<16|d<<24;g=f-64|0;while((c|0)<=(g|0)){b[c>>2]=i;b[c+4>>2]=i;b[c+8>>2]=i;b[c+12>>2]=i;b[c+16>>2]=i;b[c+20>>2]=i;b[c+24>>2]=i;b[c+28>>2]=i;b[c+32>>2]=i;b[c+36>>2]=i;b[c+40>>2]=i;b[c+44>>2]=i;b[c+48>>2]=i;b[c+52>>2]=i;b[c+56>>2]=i;b[c+60>>2]=i;c=c+64|0}while((c|0)<(f|0)){b[c>>2]=i;c=c+4|0}}while((c|0)<(h|0)){a[c>>0]=d;c=c+1|0}return h-e|0}function id(a){a=+a;return a>=0.0?+p(a+.5):+A(a-.5)}function jd(a){a=a|0;var c=0,d=0,e=0;e=J()|0;d=b[g>>2]|0;c=d+a|0;if((a|0)>0&(c|0)<(d|0)|(c|0)<0){M(c|0)|0;I(12);return -1}if((c|0)>(e|0))if(!(L(c|0)|0)){I(12);return -1}b[g>>2]=c;return d|0}\n\n// EMSCRIPTEN_END_FUNCS\nreturn{___uremdi3:bd,_bitshift64Lshr:cd,_bitshift64Shl:dd,_calloc:Yc,_cellAreaKm2:ub,_cellAreaM2:vb,_cellAreaRads2:tb,_compact:Hb,_destroyLinkedPolygon:jc,_edgeLengthKm:pb,_edgeLengthM:qb,_emscripten_replace_memory:V,_exactEdgeLengthKm:xb,_exactEdgeLengthM:yb,_exactEdgeLengthRads:wb,_experimentalH3ToLocalIj:oc,_experimentalLocalIjToH3:pc,_free:Xc,_geoToH3:Sb,_getDestinationH3IndexFromUnidirectionalEdge:cc,_getH3IndexesFromUnidirectionalEdge:ec,_getH3UnidirectionalEdge:ac,_getH3UnidirectionalEdgeBoundary:gc,_getH3UnidirectionalEdgesFromHexagon:fc,_getOriginH3IndexFromUnidirectionalEdge:bc,_getPentagonIndexes:_b,_getRes0Indexes:va,_h3Distance:qc,_h3GetBaseCell:Ab,_h3GetFaces:Yb,_h3GetResolution:zb,_h3IndexesAreNeighbors:$b,_h3IsPentagon:Fb,_h3IsResClassIII:Kb,_h3IsValid:Bb,_h3Line:sc,_h3LineSize:rc,_h3SetToLinkedGeo:ka,_h3ToCenterChild:Gb,_h3ToChildren:Eb,_h3ToGeo:Vb,_h3ToGeoBoundary:Wb,_h3ToParent:Cb,_h3UnidirectionalEdgeIsValid:dc,_hexAreaKm2:nb,_hexAreaM2:ob,_hexRing:ea,_i64Subtract:_c,_kRing:$,_kRingDistances:aa,_llvm_minnum_f64:ed,_llvm_round_f64:fd,_malloc:Wc,_maxFaceCount:Xb,_maxH3ToChildrenSize:Db,_maxKringSize:_,_maxPolyfillSize:fa,_maxUncompactSize:Jb,_memcpy:gd,_memset:hd,_numHexagons:rb,_pentagonIndexCount:Zb,_pointDistKm:jb,_pointDistM:kb,_pointDistRads:ib,_polyfill:ga,_res0IndexCount:ua,_round:id,_sbrk:jd,_sizeOfCoordIJ:Ec,_sizeOfGeoBoundary:Ac,_sizeOfGeoCoord:zc,_sizeOfGeoPolygon:Cc,_sizeOfGeofence:Bc,_sizeOfH3Index:yc,_sizeOfLinkedGeoPolygon:Dc,_uncompact:Ib,establishStackSpace:Z,stackAlloc:W,stackRestore:Y,stackSave:X}})\n\n\n// EMSCRIPTEN_END_ASM\n(asmGlobalArg,asmLibraryArg,buffer);var ___uremdi3=Module[\"___uremdi3\"]=asm[\"___uremdi3\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var _calloc=Module[\"_calloc\"]=asm[\"_calloc\"];var _cellAreaKm2=Module[\"_cellAreaKm2\"]=asm[\"_cellAreaKm2\"];var _cellAreaM2=Module[\"_cellAreaM2\"]=asm[\"_cellAreaM2\"];var _cellAreaRads2=Module[\"_cellAreaRads2\"]=asm[\"_cellAreaRads2\"];var _compact=Module[\"_compact\"]=asm[\"_compact\"];var _destroyLinkedPolygon=Module[\"_destroyLinkedPolygon\"]=asm[\"_destroyLinkedPolygon\"];var _edgeLengthKm=Module[\"_edgeLengthKm\"]=asm[\"_edgeLengthKm\"];var _edgeLengthM=Module[\"_edgeLengthM\"]=asm[\"_edgeLengthM\"];var _emscripten_replace_memory=Module[\"_emscripten_replace_memory\"]=asm[\"_emscripten_replace_memory\"];var _exactEdgeLengthKm=Module[\"_exactEdgeLengthKm\"]=asm[\"_exactEdgeLengthKm\"];var _exactEdgeLengthM=Module[\"_exactEdgeLengthM\"]=asm[\"_exactEdgeLengthM\"];var _exactEdgeLengthRads=Module[\"_exactEdgeLengthRads\"]=asm[\"_exactEdgeLengthRads\"];var _experimentalH3ToLocalIj=Module[\"_experimentalH3ToLocalIj\"]=asm[\"_experimentalH3ToLocalIj\"];var _experimentalLocalIjToH3=Module[\"_experimentalLocalIjToH3\"]=asm[\"_experimentalLocalIjToH3\"];var _free=Module[\"_free\"]=asm[\"_free\"];var _geoToH3=Module[\"_geoToH3\"]=asm[\"_geoToH3\"];var _getDestinationH3IndexFromUnidirectionalEdge=Module[\"_getDestinationH3IndexFromUnidirectionalEdge\"]=asm[\"_getDestinationH3IndexFromUnidirectionalEdge\"];var _getH3IndexesFromUnidirectionalEdge=Module[\"_getH3IndexesFromUnidirectionalEdge\"]=asm[\"_getH3IndexesFromUnidirectionalEdge\"];var _getH3UnidirectionalEdge=Module[\"_getH3UnidirectionalEdge\"]=asm[\"_getH3UnidirectionalEdge\"];var _getH3UnidirectionalEdgeBoundary=Module[\"_getH3UnidirectionalEdgeBoundary\"]=asm[\"_getH3UnidirectionalEdgeBoundary\"];var _getH3UnidirectionalEdgesFromHexagon=Module[\"_getH3UnidirectionalEdgesFromHexagon\"]=asm[\"_getH3UnidirectionalEdgesFromHexagon\"];var _getOriginH3IndexFromUnidirectionalEdge=Module[\"_getOriginH3IndexFromUnidirectionalEdge\"]=asm[\"_getOriginH3IndexFromUnidirectionalEdge\"];var _getPentagonIndexes=Module[\"_getPentagonIndexes\"]=asm[\"_getPentagonIndexes\"];var _getRes0Indexes=Module[\"_getRes0Indexes\"]=asm[\"_getRes0Indexes\"];var _h3Distance=Module[\"_h3Distance\"]=asm[\"_h3Distance\"];var _h3GetBaseCell=Module[\"_h3GetBaseCell\"]=asm[\"_h3GetBaseCell\"];var _h3GetFaces=Module[\"_h3GetFaces\"]=asm[\"_h3GetFaces\"];var _h3GetResolution=Module[\"_h3GetResolution\"]=asm[\"_h3GetResolution\"];var _h3IndexesAreNeighbors=Module[\"_h3IndexesAreNeighbors\"]=asm[\"_h3IndexesAreNeighbors\"];var _h3IsPentagon=Module[\"_h3IsPentagon\"]=asm[\"_h3IsPentagon\"];var _h3IsResClassIII=Module[\"_h3IsResClassIII\"]=asm[\"_h3IsResClassIII\"];var _h3IsValid=Module[\"_h3IsValid\"]=asm[\"_h3IsValid\"];var _h3Line=Module[\"_h3Line\"]=asm[\"_h3Line\"];var _h3LineSize=Module[\"_h3LineSize\"]=asm[\"_h3LineSize\"];var _h3SetToLinkedGeo=Module[\"_h3SetToLinkedGeo\"]=asm[\"_h3SetToLinkedGeo\"];var _h3ToCenterChild=Module[\"_h3ToCenterChild\"]=asm[\"_h3ToCenterChild\"];var _h3ToChildren=Module[\"_h3ToChildren\"]=asm[\"_h3ToChildren\"];var _h3ToGeo=Module[\"_h3ToGeo\"]=asm[\"_h3ToGeo\"];var _h3ToGeoBoundary=Module[\"_h3ToGeoBoundary\"]=asm[\"_h3ToGeoBoundary\"];var _h3ToParent=Module[\"_h3ToParent\"]=asm[\"_h3ToParent\"];var _h3UnidirectionalEdgeIsValid=Module[\"_h3UnidirectionalEdgeIsValid\"]=asm[\"_h3UnidirectionalEdgeIsValid\"];var _hexAreaKm2=Module[\"_hexAreaKm2\"]=asm[\"_hexAreaKm2\"];var _hexAreaM2=Module[\"_hexAreaM2\"]=asm[\"_hexAreaM2\"];var _hexRing=Module[\"_hexRing\"]=asm[\"_hexRing\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _kRing=Module[\"_kRing\"]=asm[\"_kRing\"];var _kRingDistances=Module[\"_kRingDistances\"]=asm[\"_kRingDistances\"];var _llvm_minnum_f64=Module[\"_llvm_minnum_f64\"]=asm[\"_llvm_minnum_f64\"];var _llvm_round_f64=Module[\"_llvm_round_f64\"]=asm[\"_llvm_round_f64\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _maxFaceCount=Module[\"_maxFaceCount\"]=asm[\"_maxFaceCount\"];var _maxH3ToChildrenSize=Module[\"_maxH3ToChildrenSize\"]=asm[\"_maxH3ToChildrenSize\"];var _maxKringSize=Module[\"_maxKringSize\"]=asm[\"_maxKringSize\"];var _maxPolyfillSize=Module[\"_maxPolyfillSize\"]=asm[\"_maxPolyfillSize\"];var _maxUncompactSize=Module[\"_maxUncompactSize\"]=asm[\"_maxUncompactSize\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var _numHexagons=Module[\"_numHexagons\"]=asm[\"_numHexagons\"];var _pentagonIndexCount=Module[\"_pentagonIndexCount\"]=asm[\"_pentagonIndexCount\"];var _pointDistKm=Module[\"_pointDistKm\"]=asm[\"_pointDistKm\"];var _pointDistM=Module[\"_pointDistM\"]=asm[\"_pointDistM\"];var _pointDistRads=Module[\"_pointDistRads\"]=asm[\"_pointDistRads\"];var _polyfill=Module[\"_polyfill\"]=asm[\"_polyfill\"];var _res0IndexCount=Module[\"_res0IndexCount\"]=asm[\"_res0IndexCount\"];var _round=Module[\"_round\"]=asm[\"_round\"];var _sbrk=Module[\"_sbrk\"]=asm[\"_sbrk\"];var _sizeOfCoordIJ=Module[\"_sizeOfCoordIJ\"]=asm[\"_sizeOfCoordIJ\"];var _sizeOfGeoBoundary=Module[\"_sizeOfGeoBoundary\"]=asm[\"_sizeOfGeoBoundary\"];var _sizeOfGeoCoord=Module[\"_sizeOfGeoCoord\"]=asm[\"_sizeOfGeoCoord\"];var _sizeOfGeoPolygon=Module[\"_sizeOfGeoPolygon\"]=asm[\"_sizeOfGeoPolygon\"];var _sizeOfGeofence=Module[\"_sizeOfGeofence\"]=asm[\"_sizeOfGeofence\"];var _sizeOfH3Index=Module[\"_sizeOfH3Index\"]=asm[\"_sizeOfH3Index\"];var _sizeOfLinkedGeoPolygon=Module[\"_sizeOfLinkedGeoPolygon\"]=asm[\"_sizeOfLinkedGeoPolygon\"];var _uncompact=Module[\"_uncompact\"]=asm[\"_uncompact\"];var establishStackSpace=Module[\"establishStackSpace\"]=asm[\"establishStackSpace\"];var stackAlloc=Module[\"stackAlloc\"]=asm[\"stackAlloc\"];var stackRestore=Module[\"stackRestore\"]=asm[\"stackRestore\"];var stackSave=Module[\"stackSave\"]=asm[\"stackSave\"];Module[\"asm\"]=asm;Module[\"cwrap\"]=cwrap;Module[\"setValue\"]=setValue;Module[\"getValue\"]=getValue;Module[\"getTempRet0\"]=getTempRet0;if(memoryInitializer){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer)}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=readBinary(memoryInitializer);HEAPU8.set(data,GLOBAL_BASE)}else{addRunDependency(\"memory initializer\");var applyMemoryInitializer=function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module[\"memoryInitializerRequest\"])delete Module[\"memoryInitializerRequest\"].response;removeRunDependency(\"memory initializer\")};var doBrowserLoad=function(){readAsync(memoryInitializer,applyMemoryInitializer,function(){throw\"could not load memory initializer \"+memoryInitializer})};var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer)}else if(Module[\"memoryInitializerRequest\"]){var useRequest=function(){var request=Module[\"memoryInitializerRequest\"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);if(data){response=data.buffer}else{console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \"+request.status+\", retrying \"+memoryInitializer);doBrowserLoad();return}}applyMemoryInitializer(response)};if(Module[\"memoryInitializerRequest\"].response){setTimeout(useRequest,0)}else{Module[\"memoryInitializerRequest\"].addEventListener(\"load\",useRequest)}}else{doBrowserLoad()}}}var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";out(what);err(what);ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n\n  return libh3\n}\n)(typeof libh3 === 'object' ? libh3 : {});\nexport default libh3;", "/*\n * Copyright 2018-2019 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Define the C bindings for the h3 library\n\n// Add some aliases to make the function definitions more intelligible\nconst NUMBER = 'number';\nconst BOOLEAN = NUMBER;\nconst H3_LOWER = NUMBER;\nconst H3_UPPER = NUMBER;\nconst RESOLUTION = NUMBER;\nconst POINTER = NUMBER;\n\n// Define the bindings to functions in the C lib. Functions are defined as\n// [name, return type, [arg types]]. You must run `npm run build-emscripten`\n// before new functions added here will be available.\nexport default [\n    // The size functions are inserted via build/sizes.h\n    ['sizeOfH3Index', NUMBER],\n    ['sizeOfGeoCoord', NUMBER],\n    ['sizeOfGeoBoundary', NUMBER],\n    ['sizeOfGeoPolygon', NUMBER],\n    ['sizeOfGeofence', NUMBER],\n    ['sizeOfLinkedGeoPolygon', NUMBER],\n    ['sizeOfCoordIJ', NUMBER],\n    // The remaining functions are defined in the core lib in h3Api.h\n    ['h3IsValid', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['geoToH3', H3_LOWER, [NUMBER, NUMBER, RESOLUTION]],\n    ['h3ToGeo', null, [H3_LOWER, H3_UPPER, POINTER]],\n    ['h3ToGeoBoundary', null, [H3_LOWER, H3_UPPER, POINTER]],\n    ['maxKringSize', NUMBER, [NUMBER]],\n    ['kRing', null, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['kRingDistances', null, [H3_LOWER, H3_UPPER, NUMBER, POINTER, POINTER]],\n    ['hexRing', null, [H3_LOWER, H3_UPPER, NUMBER, POINTER]],\n    ['maxPolyfillSize', NUMBER, [POINTER, RESOLUTION]],\n    ['polyfill', null, [POINTER, RESOLUTION, POINTER]],\n    ['h3SetToLinkedGeo', null, [POINTER, NUMBER, POINTER]],\n    ['destroyLinkedPolygon', null, [POINTER]],\n    ['compact', NUMBER, [POINTER, POINTER, NUMBER]],\n    ['uncompact', NUMBER, [POINTER, NUMBER, POINTER, NUMBER, RESOLUTION]],\n    ['maxUncompactSize', NUMBER, [POINTER, NUMBER, RESOLUTION]],\n    ['h3IsPentagon', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['h3IsResClassIII', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['h3GetBaseCell', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['h3GetResolution', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['maxFaceCount', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['h3GetFaces', null, [H3_LOWER, H3_UPPER, POINTER]],\n    ['h3ToParent', H3_LOWER, [H3_LOWER, H3_UPPER, RESOLUTION]],\n    ['h3ToChildren', null, [H3_LOWER, H3_UPPER, RESOLUTION, POINTER]],\n    ['h3ToCenterChild', H3_LOWER, [H3_LOWER, H3_UPPER, RESOLUTION]],\n    ['maxH3ToChildrenSize', NUMBER, [H3_LOWER, H3_UPPER, RESOLUTION]],\n    ['h3IndexesAreNeighbors', BOOLEAN, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER]],\n    ['getH3UnidirectionalEdge', H3_LOWER, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER]],\n    ['getOriginH3IndexFromUnidirectionalEdge', H3_LOWER, [H3_LOWER, H3_UPPER]],\n    ['getDestinationH3IndexFromUnidirectionalEdge', H3_LOWER, [H3_LOWER, H3_UPPER]],\n    ['h3UnidirectionalEdgeIsValid', BOOLEAN, [H3_LOWER, H3_UPPER]],\n    ['getH3IndexesFromUnidirectionalEdge', null, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getH3UnidirectionalEdgesFromHexagon', null, [H3_LOWER, H3_UPPER, POINTER]],\n    ['getH3UnidirectionalEdgeBoundary', null, [H3_LOWER, H3_UPPER, POINTER]],\n    ['h3Distance', NUMBER, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER]],\n    ['h3Line', NUMBER, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['h3LineSize', NUMBER, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER]],\n    ['experimentalH3ToLocalIj', NUMBER, [H3_LOWER, H3_UPPER, H3_LOWER, H3_UPPER, POINTER]],\n    ['experimentalLocalIjToH3', NUMBER, [H3_LOWER, H3_UPPER, POINTER, POINTER]],\n    ['hexAreaM2', NUMBER, [RESOLUTION]],\n    ['hexAreaKm2', NUMBER, [RESOLUTION]],\n    ['edgeLengthM', NUMBER, [RESOLUTION]],\n    ['edgeLengthKm', NUMBER, [RESOLUTION]],\n    ['pointDistM', NUMBER, [POINTER, POINTER]],\n    ['pointDistKm', NUMBER, [POINTER, POINTER]],\n    ['pointDistRads', NUMBER, [POINTER, POINTER]],\n    ['cellAreaM2', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['cellAreaKm2', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['cellAreaRads2', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['exactEdgeLengthM', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['exactEdgeLengthKm', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['exactEdgeLengthRads', NUMBER, [H3_LOWER, H3_UPPER]],\n    ['numHexagons', NUMBER, [RESOLUTION]],\n    ['getRes0Indexes', null, [POINTER]],\n    ['res0IndexCount', NUMBER],\n    ['getPentagonIndexes', null, [NUMBER, POINTER]],\n    ['pentagonIndexCount', NUMBER]\n];\n", "/*\n * Copyright 2018-2019 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module h3\n */\n\nimport C from '../out/libh3';\nimport BINDINGS from './bindings';\n\nconst H3 = {};\n\n// Create the bound functions themselves\nBINDINGS.forEach(function bind(def) {\n    H3[def[0]] = C.cwrap(...def);\n});\n\n// Alias the hexidecimal base for legibility\nconst BASE_16 = 16;\n\n// ----------------------------------------------------------------------------\n// Byte size imports\n\nconst SZ_INT = 4;\nconst SZ_PTR = 4;\nconst SZ_DBL = 8;\nconst SZ_H3INDEX = H3.sizeOfH3Index();\nconst SZ_GEOCOORD = H3.sizeOfGeoCoord();\nconst SZ_GEOBOUNDARY = H3.sizeOfGeoBoundary();\nconst SZ_GEOPOLYGON = H3.sizeOfGeoPolygon();\nconst SZ_GEOFENCE = H3.sizeOfGeofence();\nconst SZ_LINKED_GEOPOLYGON = H3.sizeOfLinkedGeoPolygon();\nconst SZ_COORDIJ = H3.sizeOfCoordIJ();\n\n// ----------------------------------------------------------------------------\n// Custom types\n\n/**\n * 64-bit hexidecimal string representation of an H3 index\n * @static\n * @typedef {string} H3Index\n */\n\n/**\n * 64-bit hexidecimal string representation of an H3 index,\n * or two 32-bit integers in little endian order in an array.\n * @static\n * @typedef {string | number[]} H3IndexInput\n */\n\n/**\n * Coordinates as an `{i, j}` pair\n * @static\n * @typedef CoordIJ\n * @type {Object}\n * @property {number} i\n * @property {number} j\n */\n\n// ----------------------------------------------------------------------------\n// Unit constants\n\n/**\n * Length/Area units\n * @static\n * @typedef UNITS\n * @type {Object}\n * @property {string} m\n * @property {string} m2\n * @property {string} km\n * @property {string} km2\n * @property {string} rads\n * @property {string} rads2\n */\nexport const UNITS = {\n    m: 'm',\n    m2: 'm2',\n    km: 'km',\n    km2: 'km2',\n    rads: 'rads',\n    rads2: 'rads2'\n};\n\n// ----------------------------------------------------------------------------\n// Utilities and helpers\n\n/**\n * Validate a resolution, throwing an error if invalid\n * @private\n * @param  {mixed} res Value to validate\n * @throws {Error}     Error if invalid\n */\nfunction validateRes(res) {\n    if (typeof res !== 'number' || res < 0 || res > 15 || Math.floor(res) !== res) {\n        throw new Error(`Invalid resolution: ${res}`);\n    }\n}\n\nconst INVALID_HEXIDECIMAL_CHAR = /[^0-9a-fA-F]/;\n\n/**\n * Convert an H3 index (64-bit hexidecimal string) into a \"split long\" - a pair of 32-bit ints\n * @private\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {number[]}         A two-element array with 32 lower bits and 32 upper bits\n */\nexport function h3IndexToSplitLong(h3Index) {\n    if (\n        Array.isArray(h3Index) &&\n        h3Index.length === 2 &&\n        Number.isInteger(h3Index[0]) &&\n        Number.isInteger(h3Index[1])\n    ) {\n        return h3Index;\n    }\n    if (typeof h3Index !== 'string' || INVALID_HEXIDECIMAL_CHAR.test(h3Index)) {\n        return [0, 0];\n    }\n    const upper = parseInt(h3Index.substring(0, h3Index.length - 8), BASE_16);\n    const lower = parseInt(h3Index.substring(h3Index.length - 8), BASE_16);\n    return [lower, upper];\n}\n\n/**\n * Convert a 32-bit int to a hexdecimal string\n * @private\n * @param  {number} num  Integer to convert\n * @return {H3Index}     Hexidecimal string\n */\nfunction hexFrom32Bit(num) {\n    if (num >= 0) {\n        return num.toString(BASE_16);\n    }\n\n    // Handle negative numbers\n    num = num & 0x7fffffff;\n    let tempStr = zeroPad(8, num.toString(BASE_16));\n    const topNum = (parseInt(tempStr[0], BASE_16) + 8).toString(BASE_16);\n    tempStr = topNum + tempStr.substring(1);\n    return tempStr;\n}\n\n/**\n * Get a H3 index from a split long (pair of 32-bit ints)\n * @private\n * @param  {number} lower Lower 32 bits\n * @param  {number} upper Upper 32 bits\n * @return {H3Index}       H3 index\n */\nexport function splitLongToh3Index(lower, upper) {\n    return hexFrom32Bit(upper) + zeroPad(8, hexFrom32Bit(lower));\n}\n\n/**\n * Zero-pad a string to a given length\n * @private\n * @param  {number} fullLen Target length\n * @param  {string} numStr  String to zero-pad\n * @return {string}         Zero-padded string\n */\nfunction zeroPad(fullLen, numStr) {\n    const numZeroes = fullLen - numStr.length;\n    let outStr = '';\n    for (let i = 0; i < numZeroes; i++) {\n        outStr += '0';\n    }\n    outStr = outStr + numStr;\n    return outStr;\n}\n\n/**\n * Populate a C-appropriate Geofence struct from a polygon array\n * @private\n * @param  {Array[]} polygonArray Polygon, as an array of coordinate pairs\n * @param  {number}  geofence     C pointer to a Geofence struct\n * @param  {boolean} isGeoJson    Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}               C pointer to populated Geofence struct\n */\nfunction polygonArrayToGeofence(polygonArray, geofence, isGeoJson) {\n    const numVerts = polygonArray.length;\n    const geoCoordArray = C._calloc(numVerts, SZ_GEOCOORD);\n    // Support [lng, lat] pairs if GeoJSON is specified\n    const latIndex = isGeoJson ? 1 : 0;\n    const lngIndex = isGeoJson ? 0 : 1;\n    for (let i = 0; i < numVerts * 2; i += 2) {\n        C.HEAPF64.set(\n            [polygonArray[i / 2][latIndex], polygonArray[i / 2][lngIndex]].map(degsToRads),\n            geoCoordArray / SZ_DBL + i\n        );\n    }\n    C.HEAPU32.set([numVerts, geoCoordArray], geofence / SZ_INT);\n    return geofence;\n}\n\n/**\n * Create a C-appropriate GeoPolygon struct from an array of polygons\n * @private\n * @param  {Array[]} coordinates  Array of polygons, each an array of coordinate pairs\n * @param  {boolean} isGeoJson    Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}               C pointer to populated GeoPolygon struct\n */\nfunction coordinatesToGeoPolygon(coordinates, isGeoJson) {\n    // Any loops beyond the first loop are holes\n    const numHoles = coordinates.length - 1;\n    const geoPolygon = C._calloc(SZ_GEOPOLYGON);\n    // Byte positions within the struct\n    const geofenceOffset = 0;\n    const numHolesOffset = geofenceOffset + SZ_GEOFENCE;\n    const holesOffset = numHolesOffset + SZ_INT;\n    // geofence is first part of struct\n    polygonArrayToGeofence(coordinates[0], geoPolygon + geofenceOffset, isGeoJson);\n    let holes;\n    if (numHoles > 0) {\n        holes = C._calloc(numHoles, SZ_GEOFENCE);\n        for (let i = 0; i < numHoles; i++) {\n            polygonArrayToGeofence(coordinates[i + 1], holes + SZ_GEOFENCE * i, isGeoJson);\n        }\n    }\n    C.setValue(geoPolygon + numHolesOffset, numHoles, 'i32');\n    C.setValue(geoPolygon + holesOffset, holes, 'i32');\n    return geoPolygon;\n}\n\n/**\n * Free memory allocated for a GeoPolygon struct. It is an error to access the struct\n * after passing it to this method.\n * @private\n * @return {number} geoPolygon C pointer to populated GeoPolygon struct\n */\nfunction destroyGeoPolygon(geoPolygon) {\n    // Byte positions within the struct\n    const geofenceOffset = 0;\n    const numHolesOffset = geofenceOffset + SZ_GEOFENCE;\n    const holesOffset = numHolesOffset + SZ_INT;\n    // Offset of the geofence vertex array pointer within the Geofence struct\n    const geofenceArrayOffset = SZ_INT;\n    // Free the outer vertex array\n    C._free(C.getValue(geoPolygon + geofenceOffset + geofenceArrayOffset, 'i8*'));\n    // Free the vertex array for the holes, if any\n    const numHoles = C.getValue(geoPolygon + numHolesOffset, 'i32');\n    if (numHoles > 0) {\n        const holes = C.getValue(geoPolygon + holesOffset, 'i32');\n        for (let i = 0; i < numHoles; i++) {\n            C._free(C.getValue(holes + SZ_GEOFENCE * i + geofenceArrayOffset, 'i8*'));\n        }\n        C._free(holes);\n    }\n    C._free(geoPolygon);\n}\n\n/**\n * Read a long value, returning the lower and upper portions as separate 32-bit integers.\n * Because the upper bits are returned via side effect, the argument to this function is\n * intended to be the invocation that caused the side effect, e.g. readLong(H3.getSomeLong())\n * @private\n * @param  {number} invocation Invoked function returning a long value. The actual return\n *                             value of these functions is a 32-bit integer.\n * @return {number}            Long value as a [lower, upper] pair\n */\nfunction readLong(invocation) {\n    // Upper 32-bits of the long set via side-effect\n    const upper = C.getTempRet0();\n    return [invocation, upper];\n}\n\n/**\n * Read an H3 index from a C return value. As with readLong, the argument to this function\n * is intended to be an invocation, e.g. readH3Index(H3.getSomeAddress()), to help ensure that\n * the temp value storing the upper bits of the long is still set.\n * @private\n * @param  {number} invocation  Invoked function returning a single H3 index\n * @return {H3Index}            H3 index, or null if index was invalid\n */\nfunction readH3Index(invocation) {\n    const [lower, upper] = readLong(invocation);\n    // The lower bits are allowed to be 0s, but if the upper bits are 0\n    // this represents an invalid H3 index\n    return upper ? splitLongToh3Index(lower, upper) : null;\n}\n\n/**\n * Read an H3 index from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes, in case we're\n *                            reading an array\n * @return {H3Index}          H3 index, or null if index was invalid\n */\nfunction readH3IndexFromPointer(cAddress, offset = 0) {\n    const lower = C.getValue(cAddress + SZ_INT * offset * 2, 'i32');\n    const upper = C.getValue(cAddress + SZ_INT * (offset * 2 + 1), 'i32');\n    // The lower bits are allowed to be 0s, but if the upper bits are 0\n    // this represents an invalid H3 index\n    return upper ? splitLongToh3Index(lower, upper) : null;\n}\n\n/**\n * Store an H3 index in C memory. Primarily used as an efficient way to\n * write sets of hexagons.\n * @private\n * @param  {H3IndexInput} h3Index  H3 index to store\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes from beginning\n *                            of the current array\n */\nfunction storeH3Index(h3Index, cAddress, offset) {\n    // HEAPU32 is a typed array projection on the index space\n    // as unsigned 32-bit integers. This means the index needs\n    // to be divided by SZ_INT (4) to access correctly. Also,\n    // the H3 index is 64 bits, so we skip by twos as we're writing\n    // to 32-bit integers in the proper order.\n    C.HEAPU32.set(h3IndexToSplitLong(h3Index), cAddress / SZ_INT + 2 * offset);\n}\n\n/**\n * Read an array of 64-bit H3 indexes from C and convert to a JS array of\n * H3 index strings\n * @private\n * @param  {number} cAddress    Pointer to C ouput array\n * @param  {number} maxCount    Max number of hexagons in array. Hexagons with\n *                              the value 0 will be skipped, so this isn't\n *                              necessarily the length of the output array.\n * @return {H3Index[]}          Array of H3 indexes\n */\nfunction readArrayOfHexagons(cAddress, maxCount) {\n    const out = [];\n    for (let i = 0; i < maxCount; i++) {\n        const h3Index = readH3IndexFromPointer(cAddress, i);\n        if (h3Index !== null) {\n            out.push(h3Index);\n        }\n    }\n    return out;\n}\n\n/**\n * Store an array of H3 index strings as a C array of 64-bit integers.\n * @private\n * @param  {number} cAddress    Pointer to C input array\n * @param  {H3IndexInput[]} hexagons H3 indexes to pass to the C lib\n */\nfunction storeArrayOfHexagons(cAddress, hexagons) {\n    // Assuming the cAddress points to an already appropriately\n    // allocated space\n    const count = hexagons.length;\n    for (let i = 0; i < count; i++) {\n        storeH3Index(hexagons[i], cAddress, i);\n    }\n}\n\n/**\n * Populate a C-appropriate GeoCoord struct from a [lat, lng] array\n * @private\n * @param {number} lat     Coordinate latitude\n * @param {number} lng     Coordinate longitude\n * @return {number}        C pointer to populated GeoCoord struct\n */\nfunction storeGeoCoord(lat, lng) {\n    const geoCoord = C._calloc(1, SZ_GEOCOORD);\n    C.HEAPF64.set([lat, lng].map(degsToRads), geoCoord / SZ_DBL);\n    return geoCoord;\n}\n\nfunction readSingleCoord(cAddress) {\n    return radsToDegs(C.getValue(cAddress, 'double'));\n}\n\n/**\n * Read a GeoCoord from C and return a [lat, lng] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {number[]}           [lat, lng] pair\n */\nfunction readGeoCoord(cAddress) {\n    return [readSingleCoord(cAddress), readSingleCoord(cAddress + SZ_DBL)];\n}\n\n/**\n * Read a GeoCoord from C and return a GeoJSON-style [lng, lat] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {number[]}           [lng, lat] pair\n */\nfunction readGeoCoordGeoJson(cAddress) {\n    return [readSingleCoord(cAddress + SZ_DBL), readSingleCoord(cAddress)];\n}\n\n/**\n * Read the GeoBoundary structure into a list of geo coordinate pairs\n * @private\n * @param {number}  geoBoundary     C pointer to GeoBoundary struct\n * @param {boolean} geoJsonCoords   Whether to provide GeoJSON coordinate order: [lng, lat]\n * @param {boolean} closedLoop      Whether to close the loop\n * @return {Array[]}                Array of geo coordinate pairs\n */\nfunction readGeoBoundary(geoBoundary, geoJsonCoords, closedLoop) {\n    const numVerts = C.getValue(geoBoundary, 'i32');\n    // Note that though numVerts is an int, the coordinate doubles have to be\n    // aligned to 8 bytes, hence the 8-byte offset here\n    const vertsPos = geoBoundary + SZ_DBL;\n    const out = [];\n    // Support [lng, lat] pairs if GeoJSON is specified\n    const readCoord = geoJsonCoords ? readGeoCoordGeoJson : readGeoCoord;\n    for (let i = 0; i < numVerts * 2; i += 2) {\n        out.push(readCoord(vertsPos + SZ_DBL * i));\n    }\n    if (closedLoop) {\n        // Close loop if GeoJSON is specified\n        out.push(out[0]);\n    }\n    return out;\n}\n\n/**\n * Read the LinkedGeoPolygon structure into a nested array of MultiPolygon coordinates\n * @private\n * @param {number}  polygon         C pointer to LinkedGeoPolygon struct\n * @param {boolean} formatAsGeoJson Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {number[][][][]}         MultiPolygon-style output.\n */\nfunction readMultiPolygon(polygon, formatAsGeoJson) {\n    const output = [];\n    const readCoord = formatAsGeoJson ? readGeoCoordGeoJson : readGeoCoord;\n    let loops;\n    let loop;\n    let coords;\n    let coord;\n    // Loop through the linked structure, building the output\n    while (polygon) {\n        output.push((loops = []));\n        // Follow ->first pointer\n        loop = C.getValue(polygon, 'i8*');\n        while (loop) {\n            loops.push((coords = []));\n            // Follow ->first pointer\n            coord = C.getValue(loop, 'i8*');\n            while (coord) {\n                coords.push(readCoord(coord));\n                // Follow ->next pointer\n                coord = C.getValue(coord + SZ_DBL * 2, 'i8*');\n            }\n            if (formatAsGeoJson) {\n                // Close loop if GeoJSON is requested\n                coords.push(coords[0]);\n            }\n            // Follow ->next pointer\n            loop = C.getValue(loop + SZ_PTR * 2, 'i8*');\n        }\n        // Follow ->next pointer\n        polygon = C.getValue(polygon + SZ_PTR * 2, 'i8*');\n    }\n    return output;\n}\n\n/**\n * Read a CoordIJ from C and return an {i, j} pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordIJ}            {i, j} pair\n */\nfunction readCoordIJ(cAddress) {\n    return {\n        i: C.getValue(cAddress, 'i32'),\n        j: C.getValue(cAddress + SZ_INT, 'i32')\n    };\n}\n\n/**\n * Store an {i, j} pair to a C CoordIJ struct.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordIJ}            {i, j} pair\n */\nfunction storeCoordIJ(cAddress, {i, j}) {\n    C.setValue(cAddress, i, 'i32');\n    C.setValue(cAddress + SZ_INT, j, 'i32');\n}\n\n/**\n * Read an array of positive integers array from C. Negative\n * values are considered invalid and ignored in output.\n * @private\n * @param  {number} cAddress    Pointer to C array\n * @param  {number} count       Length of C array\n * @return {number[]}           Javascript integer array\n */\nfunction readArrayOfPositiveIntegers(cAddress, count) {\n    const out = [];\n    for (let i = 0; i < count; i++) {\n        const int = C.getValue(cAddress + SZ_INT * i, 'i32');\n        if (int >= 0) {\n            out.push(int);\n        }\n    }\n    return out;\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Core\n\n/**\n * Whether a given string represents a valid H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          Whether the index is valid\n */\nexport function h3IsValid(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.h3IsValid(lower, upper));\n}\n\n/**\n * Whether the given H3 index is a pentagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isPentagon\n */\nexport function h3IsPentagon(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.h3IsPentagon(lower, upper));\n}\n\n/**\n * Whether the given H3 index is in a Class III resolution (rotated versus\n * the icosahedron and subject to shape distortion adding extra points on\n * icosahedron edges, making them not true hexagons).\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isResClassIII\n */\nexport function h3IsResClassIII(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return Boolean(H3.h3IsResClassIII(lower, upper));\n}\n\n/**\n * Get the number of the base cell for a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get the base cell for\n * @return {number}           Index of the base cell (0-121)\n */\nexport function h3GetBaseCell(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return H3.h3GetBaseCell(lower, upper);\n}\n\n/**\n * Get the indices of all icosahedron faces intersected by a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get faces for\n * @return {number[]}         Indices (0-19) of all intersected faces\n */\nexport function h3GetFaces(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const count = H3.maxFaceCount(lower, upper);\n    const faces = C._malloc(SZ_INT * count);\n    H3.h3GetFaces(lower, upper, faces);\n    const out = readArrayOfPositiveIntegers(faces, count);\n    C._free(faces);\n    return out;\n}\n\n/**\n * Returns the resolution of an H3 index\n * @static\n * @param  {H3IndexInput} h3Index H3 index to get resolution\n * @return {number}          The number (0-15) resolution, or -1 if invalid\n */\nexport function h3GetResolution(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    if (!H3.h3IsValid(lower, upper)) {\n        // Compatability with stated API\n        return -1;\n    }\n    return H3.h3GetResolution(lower, upper);\n}\n\n/**\n * Get the hexagon containing a lat,lon point\n * @static\n * @param  {number} lat Latitude of point\n * @param  {number} lng Longtitude of point\n * @param  {number} res Resolution of hexagons to return\n * @return {H3Index}    H3 index\n */\nexport function geoToH3(lat, lng, res) {\n    const latlng = C._malloc(SZ_GEOCOORD);\n    // Slightly more efficient way to set the memory\n    C.HEAPF64.set([lat, lng].map(degsToRads), latlng / SZ_DBL);\n    // Read value as a split long\n    const h3Index = readH3Index(H3.geoToH3(latlng, res));\n    C._free(latlng);\n    return h3Index;\n}\n\n/**\n * Get the lat,lon center of a given hexagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index\n * @return {number[]}         Point as a [lat, lng] pair\n */\nexport function h3ToGeo(h3Index) {\n    const latlng = C._malloc(SZ_GEOCOORD);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    H3.h3ToGeo(lower, upper, latlng);\n    const out = readGeoCoord(latlng);\n    C._free(latlng);\n    return out;\n}\n\n/**\n * Get the vertices of a given hexagon (or pentagon), as an array of [lat, lng]\n * points. For pentagons and hexagons on the edge of an icosahedron face, this\n * function may return up to 10 vertices.\n * @static\n * @param  {H3Index} h3Index          H3 index\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {number[][]}               Array of [lat, lng] pairs\n */\nexport function h3ToGeoBoundary(h3Index, formatAsGeoJson) {\n    const geoBoundary = C._malloc(SZ_GEOBOUNDARY);\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    H3.h3ToGeoBoundary(lower, upper, geoBoundary);\n    const out = readGeoBoundary(geoBoundary, formatAsGeoJson, formatAsGeoJson);\n    C._free(geoBoundary);\n    return out;\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Algorithms\n\n/**\n * Get the parent of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get parent for\n * @param  {number} res       Resolution of hexagon to return\n * @return {H3Index}          H3 index of parent, or null for invalid input\n */\nexport function h3ToParent(h3Index, res) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return readH3Index(H3.h3ToParent(lower, upper, res));\n}\n\n/**\n * Get the children/descendents of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get children for\n * @param  {number} res       Resolution of hexagons to return\n * @return {H3Index[]}        H3 indexes of children, or empty array for invalid input\n */\nexport function h3ToChildren(h3Index, res) {\n    // Bad input in this case can potentially result in high computation volume\n    // using the current C algorithm. Validate and return an empty array on failure.\n    if (!h3IsValid(h3Index)) {\n        return [];\n    }\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const maxCount = H3.maxH3ToChildrenSize(lower, upper, res);\n    const hexagons = C._calloc(maxCount, SZ_H3INDEX);\n    H3.h3ToChildren(lower, upper, res, hexagons);\n    const out = readArrayOfHexagons(hexagons, maxCount);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Get the center child of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get center child for\n * @param  {number} res       Resolution of hexagon to return\n * @return {H3Index}          H3 index of child, or null for invalid input\n */\nexport function h3ToCenterChild(h3Index, res) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    return readH3Index(H3.h3ToCenterChild(lower, upper, res));\n}\n\n/**\n * Get all hexagons in a k-ring around a given center. The order of the hexagons is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n */\nexport function kRing(h3Index, ringSize) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const maxCount = H3.maxKringSize(ringSize);\n    const hexagons = C._calloc(maxCount, SZ_H3INDEX);\n    H3.kRing(lower, upper, ringSize, hexagons);\n    const out = readArrayOfHexagons(hexagons, maxCount);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Get all hexagons in a k-ring around a given center, in an array of arrays\n * ordered by distance from the origin. The order of the hexagons within each ring is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[][]}      Array of arrays with H3 indexes for all hexagons each ring\n */\nexport function kRingDistances(h3Index, ringSize) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const maxCount = H3.maxKringSize(ringSize);\n    const kRings = C._calloc(maxCount, SZ_H3INDEX);\n    const distances = C._calloc(maxCount, SZ_INT);\n    H3.kRingDistances(lower, upper, ringSize, kRings, distances);\n    // Create an array of empty arrays to hold the output\n    const out = [];\n    for (let i = 0; i < ringSize + 1; i++) {\n        out.push([]);\n    }\n    // Read the array of hexagons, putting them into the appropriate rings\n    for (let i = 0; i < maxCount * 2; i += 2) {\n        const hexLower = C.getValue(kRings + SZ_INT * i, 'i32');\n        const hexUpper = C.getValue(kRings + SZ_INT * (i + 1), 'i32');\n        const index = C.getValue(distances + SZ_INT * (i / 2), 'i32');\n        if (hexLower !== 0 || hexUpper !== 0) {\n            out[index].push(splitLongToh3Index(hexLower, hexUpper));\n        }\n    }\n    C._free(kRings);\n    C._free(distances);\n    return out;\n}\n\n/**\n * Get all hexagons in a hollow hexagonal ring centered at origin with sides of a given length.\n * Unlike kRing, this function will throw an error if there is a pentagon anywhere in the ring.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {Error}            If the algorithm could not calculate the ring\n */\nexport function hexRing(h3Index, ringSize) {\n    const maxCount = ringSize === 0 ? 1 : 6 * ringSize;\n    const hexagons = C._calloc(maxCount, SZ_H3INDEX);\n    const retVal = H3.hexRing(...h3IndexToSplitLong(h3Index), ringSize, hexagons);\n    if (retVal !== 0) {\n        C._free(hexagons);\n        throw new Error('Failed to get hexRing (encountered a pentagon?)');\n    }\n    const out = readArrayOfHexagons(hexagons, maxCount);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Get all hexagons with centers contained in a given polygon. The polygon\n * is specified with GeoJson semantics as an array of loops. Each loop is\n * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).\n * The first loop is the perimeter of the polygon, and subsequent loops are\n * expected to be holes.\n * @static\n * @param  {number[][] | number[][][]} coordinates\n *                                  Array of loops, or a single loop\n * @param  {number} res             Resolution of hexagons to return\n * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]\n *                                  pairs instead of [lat, lng]\n * @return {H3Index[]}              H3 indexes for all hexagons in polygon\n */\nexport function polyfill(coordinates, res, isGeoJson) {\n    validateRes(res);\n    isGeoJson = Boolean(isGeoJson);\n    // Guard against empty input\n    if (coordinates.length === 0 || coordinates[0].length === 0) {\n        return [];\n    }\n    // Wrap to expected format if a single loop is provided\n    if (typeof coordinates[0][0] === 'number') {\n        coordinates = [coordinates];\n    }\n    const geoPolygon = coordinatesToGeoPolygon(coordinates, isGeoJson);\n    const arrayLen = H3.maxPolyfillSize(geoPolygon, res);\n    const hexagons = C._calloc(arrayLen, SZ_H3INDEX);\n    H3.polyfill(geoPolygon, res, hexagons);\n    const out = readArrayOfHexagons(hexagons, arrayLen);\n    C._free(hexagons);\n    destroyGeoPolygon(geoPolygon);\n    return out;\n}\n\n/**\n * Get the outlines of a set of H3 hexagons, returned in GeoJSON MultiPolygon\n * format (an array of polygons, each with an array of loops, each an array of\n * coordinates). Coordinates are returned as [lat, lng] pairs unless GeoJSON\n * is requested.\n *\n * It is the responsibility of the caller to ensure that all hexagons in the\n * set have the same resolution and that the set contains no duplicates. Behavior\n * is undefined if duplicates or multiple resolutions are present, and the\n * algorithm may produce unexpected or invalid polygons.\n *\n * @static\n * @param {H3IndexInput[]} h3Indexes       H3 indexes to get outlines for\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output:\n *                                    [lng, lat], closed loops\n * @return {number[][][][]}           MultiPolygon-style output.\n */\nexport function h3SetToMultiPolygon(h3Indexes, formatAsGeoJson) {\n    // Early exit on empty input\n    if (!h3Indexes || !h3Indexes.length) {\n        return [];\n    }\n    // Set up input set\n    const indexCount = h3Indexes.length;\n    const set = C._calloc(indexCount, SZ_H3INDEX);\n    storeArrayOfHexagons(set, h3Indexes);\n    // Allocate memory for output linked polygon\n    const polygon = C._calloc(SZ_LINKED_GEOPOLYGON);\n    // Store a reference to the first polygon - that's the one we need for\n    // memory deallocation\n    const originalPolygon = polygon;\n    H3.h3SetToLinkedGeo(set, indexCount, polygon);\n    const multiPolygon = readMultiPolygon(polygon, formatAsGeoJson);\n    // Clean up\n    H3.destroyLinkedPolygon(originalPolygon);\n    C._free(originalPolygon);\n    C._free(set);\n    return multiPolygon;\n}\n\n/**\n * Compact a set of hexagons of the same resolution into a set of hexagons across\n * multiple levels that represents the same area.\n * @static\n * @param  {H3IndexInput[]} h3Set H3 indexes to compact\n * @return {H3Index[]}       Compacted H3 indexes\n * @throws {Error}           If the input is invalid (e.g. duplicate hexagons)\n */\nexport function compact(h3Set) {\n    if (!h3Set || !h3Set.length) {\n        return [];\n    }\n    // Set up input set\n    const count = h3Set.length;\n    const set = C._calloc(count, SZ_H3INDEX);\n    storeArrayOfHexagons(set, h3Set);\n    // Allocate memory for compacted hexagons, worst-case is no compaction\n    const compactedSet = C._calloc(count, SZ_H3INDEX);\n    const retVal = H3.compact(set, compactedSet, count);\n    if (retVal !== 0) {\n        C._free(set);\n        C._free(compactedSet);\n        throw new Error('Failed to compact, malformed input data (duplicate hexagons?)');\n    }\n    const out = readArrayOfHexagons(compactedSet, count);\n    C._free(set);\n    C._free(compactedSet);\n    return out;\n}\n\n/**\n * Uncompact a compacted set of hexagons to hexagons of the same resolution\n * @static\n * @param  {H3IndexInput[]} compactedSet H3 indexes to uncompact\n * @param  {number}    res          The resolution to uncompact to\n * @return {H3Index[]}              The uncompacted H3 indexes\n * @throws {Error}                  If the input is invalid (e.g. invalid resolution)\n */\nexport function uncompact(compactedSet, res) {\n    validateRes(res);\n    if (!compactedSet || !compactedSet.length) {\n        return [];\n    }\n    // Set up input set\n    const count = compactedSet.length;\n    const set = C._calloc(count, SZ_H3INDEX);\n    storeArrayOfHexagons(set, compactedSet);\n    // Estimate how many hexagons we need (always overestimates if in error)\n    const maxUncompactedNum = H3.maxUncompactSize(set, count, res);\n    // Allocate memory for uncompacted hexagons\n    const uncompactedSet = C._calloc(maxUncompactedNum, SZ_H3INDEX);\n    const retVal = H3.uncompact(set, count, uncompactedSet, maxUncompactedNum, res);\n    if (retVal !== 0) {\n        C._free(set);\n        C._free(uncompactedSet);\n        throw new Error('Failed to uncompact (bad resolution?)');\n    }\n    const out = readArrayOfHexagons(uncompactedSet, maxUncompactedNum);\n    C._free(set);\n    C._free(uncompactedSet);\n    return out;\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Unidirectional edges\n\n/**\n * Whether two H3 indexes are neighbors (share an edge)\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {boolean}             Whether the hexagons share an edge\n */\nexport function h3IndexesAreNeighbors(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    return Boolean(H3.h3IndexesAreNeighbors(oLower, oUpper, dLower, dUpper));\n}\n\n/**\n * Get an H3 index representing a unidirectional edge for a given origin and destination\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index}             H3 index of the edge, or null if no edge is shared\n */\nexport function getH3UnidirectionalEdge(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    return readH3Index(H3.getH3UnidirectionalEdge(oLower, oUpper, dLower, dUpper));\n}\n\n/**\n * Get the origin hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge origin\n */\nexport function getOriginH3IndexFromUnidirectionalEdge(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    return readH3Index(H3.getOriginH3IndexFromUnidirectionalEdge(lower, upper));\n}\n\n/**\n * Get the destination hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge destination\n */\nexport function getDestinationH3IndexFromUnidirectionalEdge(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    return readH3Index(H3.getDestinationH3IndexFromUnidirectionalEdge(lower, upper));\n}\n\n/**\n * Whether the input is a valid unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {boolean}           Whether the index is valid\n */\nexport function h3UnidirectionalEdgeIsValid(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    return Boolean(H3.h3UnidirectionalEdgeIsValid(lower, upper));\n}\n\n/**\n * Get the [origin, destination] pair represented by a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index[]}         [origin, destination] pair as H3 indexes\n */\nexport function getH3IndexesFromUnidirectionalEdge(edgeIndex) {\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    const count = 2;\n    const hexagons = C._calloc(count, SZ_H3INDEX);\n    H3.getH3IndexesFromUnidirectionalEdge(lower, upper, hexagons);\n    const out = readArrayOfHexagons(hexagons, count);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Get all of the unidirectional edges with the given H3 index as the origin (i.e. an edge to\n * every neighbor)\n * @static\n * @param  {H3IndexInput} h3Index   H3 index of the origin hexagon\n * @return {H3Index[]}         List of unidirectional edges\n */\nexport function getH3UnidirectionalEdgesFromHexagon(h3Index) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    const count = 6;\n    const edges = C._calloc(count, SZ_H3INDEX);\n    H3.getH3UnidirectionalEdgesFromHexagon(lower, upper, edges);\n    const out = readArrayOfHexagons(edges, count);\n    C._free(edges);\n    return out;\n}\n\n/**\n * Get the vertices of a given edge as an array of [lat, lng] points. Note that for edges that\n * cross the edge of an icosahedron face, this may return 3 coordinates.\n * @static\n * @param  {H3IndexInput} edgeIndex        H3 index of the edge\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat]\n * @return {number[][]}               Array of geo coordinate pairs\n */\nexport function getH3UnidirectionalEdgeBoundary(edgeIndex, formatAsGeoJson) {\n    const geoBoundary = C._malloc(SZ_GEOBOUNDARY);\n    const [lower, upper] = h3IndexToSplitLong(edgeIndex);\n    H3.getH3UnidirectionalEdgeBoundary(lower, upper, geoBoundary);\n    const out = readGeoBoundary(geoBoundary, formatAsGeoJson);\n    C._free(geoBoundary);\n    return out;\n}\n\n/**\n * Get the grid distance between two hex indexes. This function may fail\n * to find the distance between two indexes if they are very far apart or\n * on opposite sides of a pentagon.\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {number}              Distance between hexagons, or a negative\n *                               number if the distance could not be computed\n */\nexport function h3Distance(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    return H3.h3Distance(oLower, oUpper, dLower, dUpper);\n}\n\n/**\n * Given two H3 indexes, return the line of indexes between them (inclusive).\n *\n * This function may fail to find the line between two indexes, for\n * example if they are very far apart. It may also fail when finding\n * distances for indexes on opposite sides of a pentagon.\n *\n * Notes:\n *\n *  - The specific output of this function should not be considered stable\n *    across library versions. The only guarantees the library provides are\n *    that the line length will be `h3Distance(start, end) + 1` and that\n *    every index in the line will be a neighbor of the preceding index.\n *  - Lines are drawn in grid space, and may not correspond exactly to either\n *    Cartesian lines or great arcs.\n *\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index[]}           H3 indexes connecting origin and destination\n * @throws {Error}               If the line cannot be calculated\n */\nexport function h3Line(origin, destination) {\n    const [oLower, oUpper] = h3IndexToSplitLong(origin);\n    const [dLower, dUpper] = h3IndexToSplitLong(destination);\n    const count = H3.h3LineSize(oLower, oUpper, dLower, dUpper);\n    if (count < 0) {\n        // We can't get the specific error code here - may be any of\n        // the errors possible in experimentalH3ToLocalIj\n        throw new Error('Line cannot be calculated');\n    }\n    const hexagons = C._calloc(count, SZ_H3INDEX);\n    H3.h3Line(oLower, oUpper, dLower, dUpper, hexagons);\n    const out = readArrayOfHexagons(hexagons, count);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Produces IJ coordinates for an H3 index anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin      Origin H3 index\n * @param  {H3IndexInput} destination H3 index for which to find relative coordinates\n * @return {CoordIJ}             Coordinates as an `{i, j}` pair\n * @throws {Error}               If the IJ coordinates cannot be calculated\n */\nexport function experimentalH3ToLocalIj(origin, destination) {\n    const ij = C._malloc(SZ_COORDIJ);\n    const retVal = H3.experimentalH3ToLocalIj(\n        ...h3IndexToSplitLong(origin),\n        ...h3IndexToSplitLong(destination),\n        ij\n    );\n    const coords = readCoordIJ(ij);\n    C._free(ij);\n    // Return the pair, or throw if an error code was returned.\n    // Switch statement and error codes cribbed from h3-java's implementation.\n    switch (retVal) {\n        case 0:\n            return coords;\n        case 1:\n            throw new Error('Incompatible origin and index.');\n        case 2:\n        default:\n            throw new Error(\n                'Local IJ coordinates undefined for this origin and index pair. ' +\n                    'The index may be too far from the origin.'\n            );\n        case 3:\n        case 4:\n        case 5:\n            throw new Error('Encountered possible pentagon distortion');\n    }\n}\n\n/**\n * Produces an H3 index for IJ coordinates anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin     Origin H3 index\n * @param  {CoordIJ} coords     Coordinates as an `{i, j}` pair\n * @return {H3Index}            H3 index at the relative coordinates\n * @throws {Error}              If the H3 index cannot be calculated\n */\nexport function experimentalLocalIjToH3(origin, coords) {\n    // Validate input coords\n    if (!coords || typeof coords.i !== 'number' || typeof coords.j !== 'number') {\n        throw new Error('Coordinates must be provided as an {i, j} object');\n    }\n    // Allocate memory for the CoordIJ struct and an H3 index to hold the return value\n    const ij = C._malloc(SZ_COORDIJ);\n    const out = C._malloc(SZ_H3INDEX);\n    storeCoordIJ(ij, coords);\n    const retVal = H3.experimentalLocalIjToH3(...h3IndexToSplitLong(origin), ij, out);\n    const h3Index = readH3IndexFromPointer(out);\n    C._free(ij);\n    C._free(out);\n    if (retVal !== 0) {\n        throw new Error(\n            'Index not defined for this origin and IJ coordinates pair. ' +\n                'IJ coordinates may be too far from origin, or ' +\n                'a pentagon distortion was encountered.'\n        );\n    }\n    return h3Index;\n}\n\n// ----------------------------------------------------------------------------\n// Public API functions: Distance/area utilities\n\n/**\n * Great circle distance between two geo points. This is not specific to H3,\n * but is implemented in the library and provided here as a convenience.\n * @static\n * @param  {number[]} latlng1 Origin coordinate as [lat, lng]\n * @param  {number[]} latlng2 Destination coordinate as [lat, lng]\n * @param  {string}   unit    Distance unit (either UNITS.m or UNITS.km)\n * @return {number}           Great circle distance\n * @throws {Error}            If the unit is invalid\n */\nexport function pointDist(latlng1, latlng2, unit) {\n    const coord1 = storeGeoCoord(latlng1[0], latlng1[1]);\n    const coord2 = storeGeoCoord(latlng2[0], latlng2[1]);\n    let result;\n    switch (unit) {\n        case UNITS.m:\n            result = H3.pointDistM(coord1, coord2);\n            break;\n        case UNITS.km:\n            result = H3.pointDistKm(coord1, coord2);\n            break;\n        case UNITS.rads:\n            result = H3.pointDistRads(coord1, coord2);\n            break;\n        default:\n            result = null;\n    }\n    C._free(coord1);\n    C._free(coord2);\n    if (result === null) {\n        throw new Error(`Unknown unit: ${unit}`);\n    }\n    return result;\n}\n\n/**\n * Exact area of a given cell\n * @static\n * @param  {H3Index} h3Index  H3 index of the hexagon to measure\n * @param  {string}  unit     Distance unit (either UNITS.m2 or UNITS.km2)\n * @return {number}           Cell area\n * @throws {Error}            If the unit is invalid\n */\nexport function cellArea(h3Index, unit) {\n    const [lower, upper] = h3IndexToSplitLong(h3Index);\n    switch (unit) {\n        case UNITS.m2:\n            return H3.cellAreaM2(lower, upper);\n        case UNITS.km2:\n            return H3.cellAreaKm2(lower, upper);\n        case UNITS.rads2:\n            return H3.cellAreaRads2(lower, upper);\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\n\n/**\n * Exact length of a given unidirectional edge\n * @static\n * @param  {H3Index} edge     H3 index of the edge to measure\n * @param  {string}  unit     Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Cell area\n * @throws {Error}            If the unit is invalid\n */\nexport function exactEdgeLength(edge, unit) {\n    const [lower, upper] = h3IndexToSplitLong(edge);\n    switch (unit) {\n        case UNITS.m:\n            return H3.exactEdgeLengthM(lower, upper);\n        case UNITS.km:\n            return H3.exactEdgeLengthKm(lower, upper);\n        case UNITS.rads:\n            return H3.exactEdgeLengthRads(lower, upper);\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\n\n/**\n * Average hexagon area at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Area unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}      Average area\n * @throws {Error}       If the unit is invalid\n */\nexport function hexArea(res, unit) {\n    validateRes(res);\n    switch (unit) {\n        case UNITS.m2:\n            return H3.hexAreaM2(res);\n        case UNITS.km2:\n            return H3.hexAreaKm2(res);\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\n\n/**\n * Average hexagon edge length at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}      Average edge length\n * @throws {Error}       If the unit is invalid\n */\nexport function edgeLength(res, unit) {\n    validateRes(res);\n    switch (unit) {\n        case UNITS.m:\n            return H3.edgeLengthM(res);\n        case UNITS.km:\n            return H3.edgeLengthKm(res);\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\n\n// ----------------------------------------------------------------------------\n// Public informational utilities\n\n/**\n * The total count of hexagons in the world at a given resolution. Note that above\n * resolution 8 the exact count cannot be represented in a JavaScript 32-bit number,\n * so consumers should use caution when applying further operations to the output.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {number}      Count\n */\nexport function numHexagons(res) {\n    validateRes(res);\n    // Get number as a long value\n    const [lower, upper] = readLong(H3.numHexagons(res));\n    // If we're using <= 32 bits we can use normal JS numbers\n    if (!upper) {\n        return lower;\n    }\n    // Above 32 bit, make a JS number that's correct in order of magnitude\n    return upper * Math.pow(2, 32) + lower;\n}\n\n/**\n * Get all H3 indexes at resolution 0. As every index at every resolution > 0 is\n * the descendant of a res 0 index, this can be used with h3ToChildren to iterate\n * over H3 indexes at any resolution.\n * @static\n * @return {H3Index[]}  All H3 indexes at res 0\n */\nexport function getRes0Indexes() {\n    const count = H3.res0IndexCount();\n    const hexagons = C._malloc(SZ_H3INDEX * count);\n    H3.getRes0Indexes(hexagons);\n    const out = readArrayOfHexagons(hexagons, count);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Get the twelve pentagon indexes at a given resolution.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {H3Index[]}  All H3 pentagon indexes at res\n */\nexport function getPentagonIndexes(res) {\n    validateRes(res);\n    const count = H3.pentagonIndexCount();\n    const hexagons = C._malloc(SZ_H3INDEX * count);\n    H3.getPentagonIndexes(res, hexagons);\n    const out = readArrayOfHexagons(hexagons, count);\n    C._free(hexagons);\n    return out;\n}\n\n/**\n * Convert degrees to radians\n * @static\n * @param  {number} deg Value in degrees\n * @return {number}     Value in radians\n */\nexport function degsToRads(deg) {\n    return (deg * Math.PI) / 180;\n}\n\n/**\n * Convert radians to degrees\n * @static\n * @param  {number} rad Value in radians\n * @return {number}     Value in degrees\n */\nexport function radsToDegs(rad) {\n    return (rad * 180) / Math.PI;\n}\n", "import {\n  h3ToGeoBoundary,\n  h3GetResolution,\n  h3ToGeo,\n  geoToH3,\n  h3IsPentagon,\n  h3Distance,\n  edgeLength,\n  H3Index\n} from 'h3-js';\nimport {lerp} from '@math.gl/core';\nimport {\n  AccessorFunction,\n  CompositeLayer,\n  createIterable,\n  Layer,\n  LayersList,\n  UpdateParameters,\n  WebMercatorViewport,\n  DefaultProps\n} from '@deck.gl/core';\nimport {ColumnLayer, PolygonLayer, PolygonLayerProps} from '@deck.gl/layers';\n\n// There is a cost to updating the instanced geometries when using highPrecision: false\n// This constant defines the distance between two hexagons that leads to \"significant\n// distortion.\" Smaller value makes the column layer more sensitive to viewport change.\nconst UPDATE_THRESHOLD_KM = 10;\n\n// normalize longitudes w.r.t center (refLng), when not provided first vertex\nexport function normalizeLongitudes(vertices: number[][], refLng?: number): void {\n  refLng = refLng === undefined ? vertices[0][0] : refLng;\n  for (const pt of vertices) {\n    const deltaLng = pt[0] - refLng;\n    if (deltaLng > 180) {\n      pt[0] -= 360;\n    } else if (deltaLng < -180) {\n      pt[0] += 360;\n    }\n  }\n}\n\n// scale polygon vertices w.r.t center (hexId)\nexport function scalePolygon(hexId: H3Index, vertices: number[][], factor: number): void {\n  const [lat, lng] = h3ToGeo(hexId);\n  const actualCount = vertices.length;\n\n  // normalize with respect to center\n  normalizeLongitudes(vertices, lng);\n\n  // `h3ToGeoBoundary` returns same array object for first and last vertex (closed polygon),\n  // if so skip scaling the last vertex\n  const vertexCount = vertices[0] === vertices[actualCount - 1] ? actualCount - 1 : actualCount;\n  for (let i = 0; i < vertexCount; i++) {\n    vertices[i][0] = lerp(lng, vertices[i][0], factor);\n    vertices[i][1] = lerp(lat, vertices[i][1], factor);\n  }\n}\n\nfunction getHexagonCentroid(getHexagon, object, objectInfo) {\n  const hexagonId = getHexagon(object, objectInfo);\n  const [lat, lng] = h3ToGeo(hexagonId);\n  return [lng, lat];\n}\n\nfunction h3ToPolygon(hexId: H3Index, coverage: number = 1): number[][] {\n  const vertices = h3ToGeoBoundary(hexId, true);\n\n  if (coverage !== 1) {\n    // scale and normalize vertices w.r.t to center\n    scalePolygon(hexId, vertices, coverage);\n  } else {\n    // normalize w.r.t to start vertex\n    normalizeLongitudes(vertices);\n  }\n\n  return vertices;\n}\n\nfunction flattenPolygon(vertices: number[][]): Float64Array {\n  const positions = new Float64Array(vertices.length * 2);\n  let i = 0;\n  for (const pt of vertices) {\n    positions[i++] = pt[0];\n    positions[i++] = pt[1];\n  }\n  return positions;\n}\n\nfunction mergeTriggers(getHexagon, coverage) {\n  let trigger;\n  if (getHexagon === undefined || getHexagon === null) {\n    trigger = coverage;\n  } else if (typeof getHexagon === 'object') {\n    trigger = {...getHexagon, coverage};\n  } else {\n    trigger = {getHexagon, coverage};\n  }\n  return trigger;\n}\n\nconst defaultProps: DefaultProps<H3HexagonLayerProps> = {\n  ...PolygonLayer.defaultProps,\n  highPrecision: 'auto',\n  coverage: {type: 'number', min: 0, max: 1, value: 1},\n  centerHexagon: null,\n  getHexagon: {type: 'accessor', value: x => x.hexagon},\n  extruded: true\n};\n\n/** All properties supported by H3HexagonLayer */\nexport type H3HexagonLayerProps<DataT = any> = _H3HexagonLayerProps<DataT> &\n  PolygonLayerProps<DataT>;\n\n/** Props added by the H3HexagonLayer */\ntype _H3HexagonLayerProps<DataT> = {\n  /**\n   * Whether or not draw hexagons with high precision.\n   * @default 'auto'\n   */\n  highPrecision?: boolean | 'auto';\n  /**\n   * Coverage of hexagon in cell.\n   * @default 1\n   */\n  coverage?: number;\n  /**\n   * Center hexagon that best represents the shape of the set. If not specified, the hexagon closest to the center of the viewport is used.\n   */\n  centerHexagon?: H3Index | null;\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `hexagon` property of data object.\n   */\n  getHexagon?: AccessorFunction<DataT, string>;\n  /**\n   * Whether to extrude polygons.\n   * @default true\n   */\n  extruded?: boolean;\n};\n\n/**\n * Render hexagons from the [H3](https://h3geo.org/) geospatial indexing system.\n */\nexport default class H3HexagonLayer<\n  DataT = any,\n  ExtraPropsT extends {} = {}\n> extends CompositeLayer<ExtraPropsT & Required<H3HexagonLayerProps<DataT>>> {\n  static defaultProps = defaultProps;\n  static layerName = 'H3HexagonLayer';\n\n  // See `main/bundle.ts`\n  static _checkH3Lib = () => {};\n\n  initializeState() {\n    H3HexagonLayer._checkH3Lib();\n    this.state = {\n      edgeLengthKM: 0,\n      resolution: -1\n    };\n  }\n\n  state!: {\n    centerHex?: H3Index;\n    edgeLengthKM: number;\n    hasMultipleRes?: boolean;\n    hasPentagon?: boolean;\n    resolution: number;\n    vertices?: number[][];\n  };\n\n  shouldUpdateState({changeFlags}: UpdateParameters<this>): boolean {\n    return this._shouldUseHighPrecision()\n      ? changeFlags.propsOrDataChanged\n      : changeFlags.somethingChanged;\n  }\n\n  updateState({props, changeFlags}: UpdateParameters<this>): void {\n    if (\n      props.highPrecision !== true &&\n      (changeFlags.dataChanged ||\n        (changeFlags.updateTriggersChanged && changeFlags.updateTriggersChanged.getHexagon))\n    ) {\n      const dataProps = this._calculateH3DataProps();\n      this.setState(dataProps);\n    }\n\n    this._updateVertices(this.context.viewport as WebMercatorViewport);\n  }\n\n  private _calculateH3DataProps() {\n    let resolution = -1;\n    let hasPentagon = false;\n    let hasMultipleRes = false;\n\n    const {iterable, objectInfo} = createIterable(this.props.data);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const hexId = this.props.getHexagon(object, objectInfo);\n      // Take the resolution of the first hex\n      const hexResolution = h3GetResolution(hexId);\n      if (resolution < 0) {\n        resolution = hexResolution;\n        if (!this.props.highPrecision) break;\n      } else if (resolution !== hexResolution) {\n        hasMultipleRes = true;\n        break;\n      }\n      if (h3IsPentagon(hexId)) {\n        hasPentagon = true;\n        break;\n      }\n    }\n\n    return {\n      resolution,\n      edgeLengthKM: resolution >= 0 ? edgeLength(resolution, 'km') : 0,\n      hasMultipleRes,\n      hasPentagon\n    };\n  }\n\n  private _shouldUseHighPrecision(): boolean {\n    if (this.props.highPrecision === 'auto') {\n      const {resolution, hasPentagon, hasMultipleRes} = this.state;\n      const {viewport} = this.context;\n      return (\n        Boolean(viewport?.resolution) ||\n        hasMultipleRes ||\n        hasPentagon ||\n        (resolution >= 0 && resolution <= 5)\n      );\n    }\n\n    return this.props.highPrecision;\n  }\n\n  private _updateVertices(viewport: WebMercatorViewport): void {\n    if (this._shouldUseHighPrecision()) {\n      return;\n    }\n    const {resolution, edgeLengthKM, centerHex} = this.state;\n    if (resolution < 0) {\n      return;\n    }\n    const hex =\n      this.props.centerHexagon || geoToH3(viewport.latitude, viewport.longitude, resolution);\n    if (centerHex === hex) {\n      return;\n    }\n    if (centerHex) {\n      const distance = h3Distance(centerHex, hex);\n      // h3Distance returns a negative number if the distance could not be computed\n      // due to the two indexes very far apart or on opposite sides of a pentagon.\n      if (distance >= 0 && distance * edgeLengthKM < UPDATE_THRESHOLD_KM) {\n        return;\n      }\n    }\n\n    const {unitsPerMeter} = viewport.distanceScales;\n\n    let vertices = h3ToPolygon(hex);\n    const [centerLat, centerLng] = h3ToGeo(hex);\n\n    const [centerX, centerY] = viewport.projectFlat([centerLng, centerLat]);\n    vertices = vertices.map(p => {\n      const worldPosition = viewport.projectFlat(p);\n      return [\n        (worldPosition[0] - centerX) / unitsPerMeter[0],\n        (worldPosition[1] - centerY) / unitsPerMeter[1]\n      ];\n    });\n\n    this.setState({centerHex: hex, vertices});\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    return this._shouldUseHighPrecision() ? this._renderPolygonLayer() : this._renderColumnLayer();\n  }\n\n  private _getForwardProps() {\n    const {\n      elevationScale,\n      material,\n      coverage,\n      extruded,\n      wireframe,\n      stroked,\n      filled,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      getFillColor,\n      getElevation,\n      getLineColor,\n      getLineWidth,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    return {\n      elevationScale,\n      extruded,\n      coverage,\n      wireframe,\n      stroked,\n      filled,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      material,\n      getElevation,\n      getFillColor,\n      getLineColor,\n      getLineWidth,\n      transitions,\n      updateTriggers: {\n        getFillColor: updateTriggers.getFillColor,\n        getElevation: updateTriggers.getElevation,\n        getLineColor: updateTriggers.getLineColor,\n        getLineWidth: updateTriggers.getLineWidth\n      } as {\n        getFillColor: any;\n        getElevation: any;\n        getLineColor: any;\n        getLineWidth: any;\n        getPolygon?: any;\n        getPosition?: any;\n      }\n    };\n  }\n\n  private _renderPolygonLayer(): PolygonLayer {\n    const {data, getHexagon, updateTriggers, coverage} = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell-hifi', PolygonLayer);\n    const forwardProps = this._getForwardProps();\n    forwardProps.updateTriggers.getPolygon = mergeTriggers(updateTriggers.getHexagon, coverage);\n\n    return new SubLayerClass(\n      forwardProps,\n      this.getSubLayerProps({\n        id: 'hexagon-cell-hifi',\n        updateTriggers: forwardProps.updateTriggers\n      }),\n      {\n        data,\n        _normalize: false,\n        _windingOrder: 'CCW',\n        positionFormat: 'XY',\n        getPolygon: (object, objectInfo) => {\n          const hexagonId = getHexagon(object, objectInfo);\n          return flattenPolygon(h3ToPolygon(hexagonId, coverage));\n        }\n      }\n    );\n  }\n\n  private _renderColumnLayer(): ColumnLayer {\n    const {data, getHexagon, updateTriggers} = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n    const forwardProps = this._getForwardProps();\n    forwardProps.updateTriggers.getPosition = updateTriggers.getHexagon;\n\n    return new SubLayerClass(\n      forwardProps,\n      this.getSubLayerProps({\n        id: 'hexagon-cell',\n        flatShading: true,\n        updateTriggers: forwardProps.updateTriggers\n      }),\n      {\n        data,\n        diskResolution: 6, // generate an extruded hexagon as the base geometry\n        radius: 1,\n        vertices: this.state.vertices,\n        getPosition: getHexagonCentroid.bind(null, getHexagon)\n      }\n    );\n  }\n}\n", "import {h3SetToMultiPolygon, H3IndexInput} from 'h3-js';\n\nimport {AccessorFunction, createIterable, UpdateParameters, DefaultProps} from '@deck.gl/core';\nimport {default as H3HexagonLayer} from './h3-hexagon-layer';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\n\nconst defaultProps: DefaultProps<H3ClusterLayerProps> = {\n  getHexagons: {type: 'accessor', value: d => d.hexagons}\n};\n\n/** All properties supported by H3ClusterLayer. */\nexport type H3ClusterLayerProps<DataT = any> = _H3ClusterLayerProps<DataT> &\n  GeoCellLayerProps<DataT>;\n\n/** Properties added by H3ClusterLayer. */\ntype _H3ClusterLayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the hexagon identifiers.\n   *\n   * By default, it reads `hexagons` property of data object.\n   */\n  getHexagons?: AccessorFunction<DataT, H3IndexInput[]>;\n};\n\nexport default class H3ClusterLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_H3ClusterLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'H3ClusterLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    H3HexagonLayer._checkH3Lib();\n  }\n\n  updateState({props, changeFlags}: UpdateParameters<this>): void {\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged && changeFlags.updateTriggersChanged.getHexagons)\n    ) {\n      const {data, getHexagons} = props;\n      const polygons: {polygon: number[][][]}[] = [];\n\n      const {iterable, objectInfo} = createIterable(data);\n      for (const object of iterable) {\n        objectInfo.index++;\n        const hexagons = getHexagons(object, objectInfo);\n        const multiPolygon = h3SetToMultiPolygon(hexagons, true);\n\n        for (const polygon of multiPolygon) {\n          polygons.push(this.getSubLayerRow({polygon}, object, objectInfo.index));\n        }\n      }\n\n      this.setState({polygons});\n    }\n  }\n\n  indexToBounds(): Partial<GeoCellLayer['props']> {\n    const {getElevation, getFillColor, getLineColor, getLineWidth} = this.props;\n\n    return {\n      data: this.state.polygons,\n      getPolygon: d => d.polygon,\n\n      getElevation: this.getSubLayerAccessor(getElevation),\n      getFillColor: this.getSubLayerAccessor(getFillColor),\n      getLineColor: this.getSubLayerAccessor(getLineColor),\n      getLineWidth: this.getSubLayerAccessor(getLineWidth)\n    };\n  }\n}\n", "import {COORDINATE_SYSTEM, createIterable} from '@deck.gl/core';\n\n/* eslint-disable max-statements, complexity, camelcase */\nconst RADIAN_PER_DEGREE = Math.PI / 180;\nconst modelMatrix = new Float32Array(16);\nconst valueArray = new Float32Array(12);\n\nfunction calculateTransformMatrix(targetMatrix, orientation, scale) {\n  const pitch = orientation[0] * RADIAN_PER_DEGREE;\n  const yaw = orientation[1] * RADIAN_PER_DEGREE;\n  const roll = orientation[2] * RADIAN_PER_DEGREE;\n\n  const sr = Math.sin(roll);\n  const sp = Math.sin(pitch);\n  const sw = Math.sin(yaw);\n\n  const cr = Math.cos(roll);\n  const cp = Math.cos(pitch);\n  const cw = Math.cos(yaw);\n\n  const scx = scale[0];\n  const scy = scale[1];\n  const scz = scale[2];\n\n  targetMatrix[0] = scx * cw * cp; // 0,0\n  targetMatrix[1] = scx * sw * cp; // 1,0\n  targetMatrix[2] = scx * -sp; // 2,0\n  targetMatrix[3] = scy * (-sw * cr + cw * sp * sr); // 0,1\n  targetMatrix[4] = scy * (cw * cr + sw * sp * sr); // 1,1\n  targetMatrix[5] = scy * cp * sr; // 2,1\n  targetMatrix[6] = scz * (sw * sr + cw * sp * cr); // 0,2\n  targetMatrix[7] = scz * (-cw * sr + sw * sp * cr); // 1,2\n  targetMatrix[8] = scz * cp * cr; // 2,2\n}\n\nfunction getExtendedMat3FromMat4(mat4) {\n  mat4[0] = mat4[0];\n  mat4[1] = mat4[1];\n  mat4[2] = mat4[2];\n  mat4[3] = mat4[4];\n  mat4[4] = mat4[5];\n  mat4[5] = mat4[6];\n  mat4[6] = mat4[8];\n  mat4[7] = mat4[9];\n  mat4[8] = mat4[10];\n  mat4[9] = mat4[12];\n  mat4[10] = mat4[13];\n  mat4[11] = mat4[14];\n\n  return mat4.subarray(0, 12);\n}\n\nexport const MATRIX_ATTRIBUTES = {\n  size: 12,\n  accessor: ['getOrientation', 'getScale', 'getTranslation', 'getTransformMatrix'],\n  shaderAttributes: {\n    instanceModelMatrix__LOCATION_0: {\n      size: 3,\n      elementOffset: 0\n    },\n    instanceModelMatrix__LOCATION_1: {\n      size: 3,\n      elementOffset: 3\n    },\n    instanceModelMatrix__LOCATION_2: {\n      size: 3,\n      elementOffset: 6\n    },\n    instanceTranslation: {\n      size: 3,\n      elementOffset: 9\n    }\n  } as const,\n\n  update(attribute, {startRow, endRow}) {\n    // @ts-expect-error: \"this\" will be bound to a layer when this function is called\n    const {data, getOrientation, getScale, getTranslation, getTransformMatrix} = this.props;\n\n    const arrayMatrix = Array.isArray(getTransformMatrix);\n    const constantMatrix = arrayMatrix && getTransformMatrix.length === 16;\n    const constantScale = Array.isArray(getScale);\n    const constantOrientation = Array.isArray(getOrientation);\n    const constantTranslation = Array.isArray(getTranslation);\n\n    const hasMatrix = constantMatrix || (!arrayMatrix && Boolean(getTransformMatrix(data[0])));\n\n    if (hasMatrix) {\n      attribute.constant = constantMatrix;\n    } else {\n      attribute.constant = constantOrientation && constantScale && constantTranslation;\n    }\n\n    const instanceModelMatrixData = attribute.value;\n\n    if (attribute.constant) {\n      let matrix;\n\n      if (hasMatrix) {\n        modelMatrix.set(getTransformMatrix);\n        matrix = getExtendedMat3FromMat4(modelMatrix);\n      } else {\n        matrix = valueArray;\n\n        const orientation = getOrientation;\n        const scale = getScale;\n\n        calculateTransformMatrix(matrix, orientation, scale);\n        matrix.set(getTranslation, 9);\n      }\n\n      attribute.value = new Float32Array(matrix);\n    } else {\n      let i = startRow * attribute.size;\n      const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n      for (const object of iterable) {\n        objectInfo.index++;\n        let matrix;\n\n        if (hasMatrix) {\n          modelMatrix.set(\n            constantMatrix ? getTransformMatrix : getTransformMatrix(object, objectInfo)\n          );\n          matrix = getExtendedMat3FromMat4(modelMatrix);\n        } else {\n          matrix = valueArray;\n\n          const orientation = constantOrientation\n            ? getOrientation\n            : getOrientation(object, objectInfo);\n          const scale = constantScale ? getScale : getScale(object, objectInfo);\n\n          calculateTransformMatrix(matrix, orientation, scale);\n          matrix.set(constantTranslation ? getTranslation : getTranslation(object, objectInfo), 9);\n        }\n\n        instanceModelMatrixData[i++] = matrix[0];\n        instanceModelMatrixData[i++] = matrix[1];\n        instanceModelMatrixData[i++] = matrix[2];\n        instanceModelMatrixData[i++] = matrix[3];\n        instanceModelMatrixData[i++] = matrix[4];\n        instanceModelMatrixData[i++] = matrix[5];\n        instanceModelMatrixData[i++] = matrix[6];\n        instanceModelMatrixData[i++] = matrix[7];\n        instanceModelMatrixData[i++] = matrix[8];\n        instanceModelMatrixData[i++] = matrix[9];\n        instanceModelMatrixData[i++] = matrix[10];\n        instanceModelMatrixData[i++] = matrix[11];\n      }\n    }\n  }\n};\n\n// only apply composeModelMatrix when in cartesian or meter_offsets coordinate system\n// with `composeModelMatrix` enabled, the rotation part of the layer's modelMatrix will be composed to instance's transformations\n// since rotating latitude and longitude can not provide meaningful results, hence `composeModelMatrix` is disabled\n// when in LNGLAT and LNGLAT_OFFSET coordinates.\nexport function shouldComposeModelMatrix(viewport, coordinateSystem) {\n  return (\n    coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ||\n    coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS ||\n    (coordinateSystem === COORDINATE_SYSTEM.DEFAULT && !viewport.isGeospatial)\n  );\n}\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = instancePickingColors;\n\n  vTexCoord = texCoords;\n  cameraPosition = project_uCameraPosition;\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\n\n  if (composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    // using instancePositions as world coordinates\n    // when using globe mode, this branch does not re-orient the model to align with the surface of the earth\n    // call project_normal before setting position to avoid rotation\n    normals_commonspace = project_normal(instanceModelMatrix * normals);\n    geometry.worldPosition += pos;\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\n    geometry.position = position_commonspace;\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\n    geometry.position = position_commonspace;\n    normals_commonspace = project_normal(instanceModelMatrix * normals);\n  }\n\n  geometry.normal = normals_commonspace;\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  DECKGL_FILTER_COLOR(color, geometry);\n\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n}\n`;\n", "import type {Schema} from '../schema/schema';\nimport type {TableBatch} from '../../category/table/table-types';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  rows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.rows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.rows = null;\n\n    const batch: TableBatch = {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n\n    return batch;\n  }\n}\n", "/** Convert an object row to an array row */\nexport function convertToObjectRow(\n  arrayRow: any[],\n  headers: string[]\n): {[columnName: string]: any} {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const objectRow = {};\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n  return objectRow;\n}\n\n/** Convert an object row to an array row */\nexport function convertToArrayRow(\n  objectRow: {[columnName: string]: any},\n  headers: string[]\n): any[] {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const arrayRow = new Array(headers.length);\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n  return arrayRow;\n}\n", "import type {Schema} from '../schema/schema';\nimport type {TableBatch} from '../../category/table/table-types';\n// import type {ArrayRowTableBatch, ObjectRowTableBatch} from '../../category/table';\nimport {convertToArrayRow, convertToObjectRow} from '../utils/row-utils';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  objectRows: {[columnName: string]: any} | null = null;\n  arrayRows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'object-row-table':\n        const rowObject = convertToObjectRow(row, this._headers);\n        this.addObjectRow(rowObject, cursor);\n        break;\n      case 'array-row-table':\n        this.arrayRows = this.arrayRows || new Array(DEFAULT_ROW_COUNT);\n        this.arrayRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'array-row-table':\n        const rowArray = convertToArrayRow(row, this._headers);\n        this.addArrayRow(rowArray, cursor);\n        break;\n      case 'object-row-table':\n        this.objectRows = this.objectRows || new Array(DEFAULT_ROW_COUNT);\n        this.objectRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.arrayRows || this.objectRows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.arrayRows = null;\n    this.objectRows = null;\n\n    return {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n  }\n}\n", "import type {Schema} from '../schema/schema';\nimport type {ColumnarTableBatch, ArrowTableBatch} from '../../category/table/table-types';\nimport {TableBatchAggregator} from './table-batch-aggregator';\n\ntype ColumnarTableBatchOptions = {};\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class ColumnarTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  length: number = 0;\n  allocated: number = 0;\n  columns: {[columnName: string]: any[]} = {};\n\n  constructor(schema: Schema, options: ColumnarTableBatchOptions) {\n    this.schema = schema;\n    this._reallocateColumns();\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[]) {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    let i = 0;\n    // TODO what if no csv header, columns not populated?\n    for (const fieldName in this.columns) {\n      this.columns[fieldName][this.length] = row[i++];\n    }\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}): void {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    for (const fieldName in row) {\n      this.columns[fieldName][this.length] = row[fieldName];\n    }\n    this.length++;\n  }\n\n  getBatch(): ColumnarTableBatch | ArrowTableBatch | null {\n    this._pruneColumns();\n    const columns = Array.isArray(this.schema) ? this.columns : {};\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    // columns should match schema format\n    if (!Array.isArray(this.schema)) {\n      for (const fieldName in this.schema) {\n        const field = this.schema[fieldName];\n        columns[field.name] = this.columns[field.index];\n      }\n    }\n\n    this.columns = {};\n\n    const batch: ColumnarTableBatch = {\n      shape: 'columnar-table',\n      batchType: 'data',\n      data: columns,\n      schema: this.schema,\n      length: this.length\n    };\n\n    return batch;\n  }\n\n  // HELPERS\n\n  _reallocateColumns() {\n    if (this.length < this.allocated) {\n      return;\n    }\n\n    // @ts-ignore TODO\n    this.allocated = this.allocated > 0 ? (this.allocated *= 2) : DEFAULT_ROW_COUNT;\n    this.columns = {};\n\n    for (const fieldName in this.schema) {\n      const field = this.schema[fieldName];\n      const ArrayType = field.type || Float32Array;\n      const oldColumn = this.columns[field.index];\n\n      if (oldColumn && ArrayBuffer.isView(oldColumn)) {\n        // Copy the old data to the new array\n        const typedArray = new ArrayType(this.allocated);\n        typedArray.set(oldColumn);\n        this.columns[field.index] = typedArray;\n      } else if (oldColumn) {\n        // Plain array\n        oldColumn.length = this.allocated;\n        this.columns[field.index] = oldColumn;\n      } else {\n        // Create new\n        this.columns[field.index] = new ArrayType(this.allocated);\n      }\n    }\n  }\n\n  _pruneColumns() {\n    for (const [columnName, column] of Object.entries(this.columns)) {\n      this.columns[columnName] = column.slice(0, this.length);\n    }\n  }\n}\n", "import type {Schema} from '../schema/schema';\nimport type {TableBatch} from '../../category/table/table-types';\nimport type {TableBatchAggregator, TableBatchConstructor} from './table-batch-aggregator';\nimport BaseTableBatchAggregator from './base-table-batch-aggregator';\nimport RowTableBatchAggregator from './row-table-batch-aggregator';\nimport ColumnarTableBatchAggregator from './columnar-table-batch-aggregator';\n\n// TODO define interface instead\ntype TableBatchBuilderOptions = {\n  shape: 'row-table' | 'array-row-table' | 'object-row-table' | 'columnar-table' | 'arrow-table';\n  batchSize?: number | 'auto';\n  batchDebounceMs?: number;\n  limit: number;\n  _limitMB: number;\n};\n\ntype GetBatchOptions = {\n  bytesUsed?: number;\n  [key: string]: any;\n};\n\nconst DEFAULT_OPTIONS: Required<TableBatchBuilderOptions> = {\n  shape: 'array-row-table',\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  limit: 0,\n  _limitMB: 0\n};\n\nconst ERR_MESSAGE = 'TableBatchBuilder';\n\n/** Incrementally builds batches from a stream of rows */\nexport default class TableBatchBuilder {\n  schema: Schema;\n  options: Required<TableBatchBuilderOptions>;\n\n  private aggregator: TableBatchAggregator | null = null;\n  private batchCount: number = 0;\n  private bytesUsed: number = 0;\n  private isChunkComplete: boolean = false;\n  private lastBatchEmittedMs: number = Date.now();\n  private totalLength: number = 0;\n  private totalBytes: number = 0;\n  private rowBytes: number = 0;\n\n  static ArrowBatch?: TableBatchConstructor;\n\n  constructor(schema: Schema, options?: TableBatchBuilderOptions) {\n    this.schema = schema;\n    this.options = {...DEFAULT_OPTIONS, ...options};\n  }\n\n  limitReached(): boolean {\n    if (Boolean(this.options?.limit) && this.totalLength >= this.options.limit) {\n      return true;\n    }\n    if (Boolean(this.options?._limitMB) && this.totalBytes / 1e6 >= this.options._limitMB) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated Use addArrayRow or addObjectRow */\n  addRow(row: any[] | {[columnName: string]: any}): void {\n    if (this.limitReached()) {\n      return;\n    }\n    this.totalLength++;\n    this.rowBytes = this.rowBytes || this._estimateRowMB(row);\n    this.totalBytes += this.rowBytes;\n    if (Array.isArray(row)) {\n      this.addArrayRow(row);\n    } else {\n      this.addObjectRow(row);\n    }\n  }\n\n  /** Add one row to the batch */\n  protected addArrayRow(row: any[]) {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addArrayRow(row);\n  }\n\n  /** Add one row to the batch */\n  protected addObjectRow(row: {[columnName: string]: any}): void {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addObjectRow(row);\n  }\n\n  /** Mark an incoming raw memory chunk has completed */\n  chunkComplete(chunk: ArrayBuffer | string): void {\n    if (chunk instanceof ArrayBuffer) {\n      this.bytesUsed += chunk.byteLength;\n    }\n    if (typeof chunk === 'string') {\n      this.bytesUsed += chunk.length;\n    }\n    this.isChunkComplete = true;\n  }\n\n  getFullBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._isFull() ? this._getBatch(options) : null;\n  }\n\n  getFinalBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._getBatch(options);\n  }\n\n  // INTERNAL\n\n  _estimateRowMB(row: any[] | object): number {\n    return Array.isArray(row) ? row.length * 8 : Object.keys(row).length * 8;\n  }\n\n  private _isFull(): boolean {\n    // No batch, not ready\n    if (!this.aggregator || this.aggregator.rowCount() === 0) {\n      return false;\n    }\n\n    // if batchSize === 'auto' we wait for chunk to complete\n    // if batchSize === number, ensure we have enough rows\n    if (this.options.batchSize === 'auto') {\n      if (!this.isChunkComplete) {\n        return false;\n      }\n    } else if (this.options.batchSize > this.aggregator.rowCount()) {\n      return false;\n    }\n\n    // Debounce batches\n    if (this.options.batchDebounceMs > Date.now() - this.lastBatchEmittedMs) {\n      return false;\n    }\n\n    // Emit batch\n    this.isChunkComplete = false;\n    this.lastBatchEmittedMs = Date.now();\n    return true;\n  }\n\n  /**\n   * bytesUsed can be set via chunkComplete or via getBatch*\n   */\n  private _getBatch(options?: GetBatchOptions): TableBatch | null {\n    if (!this.aggregator) {\n      return null;\n    }\n\n    // TODO - this can overly increment bytes used?\n    if (options?.bytesUsed) {\n      this.bytesUsed = options.bytesUsed;\n    }\n    const normalizedBatch = this.aggregator.getBatch() as TableBatch;\n    normalizedBatch.count = this.batchCount;\n    normalizedBatch.bytesUsed = this.bytesUsed;\n    Object.assign(normalizedBatch, options);\n\n    this.batchCount++;\n    this.aggregator = null;\n    return normalizedBatch;\n  }\n\n  private _getTableBatchType(): TableBatchConstructor {\n    switch (this.options.shape) {\n      case 'row-table':\n        return BaseTableBatchAggregator;\n      case 'array-row-table':\n      case 'object-row-table':\n        return RowTableBatchAggregator;\n      case 'columnar-table':\n        return ColumnarTableBatchAggregator;\n      case 'arrow-table':\n        if (!TableBatchBuilder.ArrowBatch) {\n          throw new Error(ERR_MESSAGE);\n        }\n        return TableBatchBuilder.ArrowBatch;\n      default:\n        throw new Error(ERR_MESSAGE);\n    }\n  }\n}\n", "// Mesh category utilities\n// TODO - move to mesh category module, or to math.gl/geometry module\nimport {TypedArray} from '../../types';\nimport {MeshAttributes} from './mesh-types';\n\ntype TypedArrays = {[key: string]: TypedArray};\n\n/**\n * Holds an axis aligned bounding box\n * TODO - make sure AxisAlignedBoundingBox in math.gl/culling understands this format (or change this format)\n */\ntype BoundingBox = [[number, number, number], [number, number, number]];\n\n/**\n * Get number of vertices in mesh\n * @param attributes\n */\nexport function getMeshSize(attributes: TypedArrays): number {\n  let size = 0;\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    if (ArrayBuffer.isView(attribute)) {\n      // @ts-ignore DataView doesn't have BYTES_PER_ELEMENT\n      size += attribute.byteLength * attribute.BYTES_PER_ELEMENT;\n    }\n  }\n  return size;\n}\n\n/**\n * Get the (axis aligned) bounding box of a mesh\n * @param attributes\n * @returns array of two vectors representing the axis aligned bounding box\n */\n// eslint-disable-next-line complexity\nexport function getMeshBoundingBox(attributes: MeshAttributes): BoundingBox {\n  let minX = Infinity;\n  let minY = Infinity;\n  let minZ = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n\n  const positions = attributes.POSITION ? attributes.POSITION.value : [];\n  const len = positions && positions.length;\n\n  for (let i = 0; i < len; i += 3) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const z = positions[i + 2];\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    minZ = z < minZ ? z : minZ;\n\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n    maxZ = z > maxZ ? z : maxZ;\n  }\n  return [\n    [minX, minY, minZ],\n    [maxX, maxY, maxZ]\n  ];\n}\n", "// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n", "import {assert} from '../../utils/assert';\nimport Field from './field';\n\nexport type SchemaMetadata = Map<string, any>;\n\n/**\n * ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\n * https://loaders.gl/arrowjs/docs/api-reference/schema\n */\nexport default class Schema {\n  fields: Field[];\n  // TODO - Arrow just allows Map<string, string>\n  metadata: SchemaMetadata;\n\n  constructor(fields: Field[], metadata?: SchemaMetadata) {\n    assert(Array.isArray(fields));\n    checkNames(fields);\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\n    this.fields = fields;\n    this.metadata = metadata || new Map();\n  }\n\n  // TODO - arrow only seems to compare fields, not metadata\n  compareTo(other: Schema): boolean {\n    if (this.metadata !== other.metadata) {\n      return false;\n    }\n    if (this.fields.length !== other.fields.length) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; ++i) {\n      if (!this.fields[i].compareTo(other.fields[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  select(...columnNames: string[]): Schema {\n    // Ensure column names reference valid fields\n    const nameMap = Object.create(null);\n    for (const name of columnNames) {\n      nameMap[name] = true;\n    }\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  selectAt(...columnIndices: number[]): Schema {\n    // Ensure column indices reference valid fields\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  assign(schemaOrFields: Schema | Field[]): Schema {\n    let fields: Field[];\n    let metadata: SchemaMetadata = this.metadata;\n\n    if (schemaOrFields instanceof Schema) {\n      const otherSchema = schemaOrFields;\n      fields = otherSchema.fields;\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherSchema.metadata);\n    } else {\n      fields = schemaOrFields;\n    }\n\n    // Create a merged list of fields, overwrite fields in place, new fields at end\n    const fieldMap: {[key: string]: Field} = Object.create(null);\n\n    for (const field of this.fields) {\n      fieldMap[field.name] = field;\n    }\n\n    for (const field of fields) {\n      fieldMap[field.name] = field;\n    }\n\n    const mergedFields = Object.values(fieldMap);\n\n    return new Schema(mergedFields, metadata);\n  }\n}\n\n// Warn if any duplicated field names\nfunction checkNames(fields: Field[]): void {\n  const usedNames: Record<string, boolean> = {};\n  for (const field of fields) {\n    if (usedNames[field.name]) {\n      // eslint-disable-next-line\n      console.warn('Schema: duplicated field name', field.name, field);\n    }\n    usedNames[field.name] = true;\n  }\n}\n\nfunction mergeMaps<T>(m1: T, m2: T): T {\n  // @ts-ignore\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n", "import {DataType} from './type';\n\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport default class Field {\n  name: string;\n  type: DataType;\n  nullable: boolean;\n  metadata: Map<string, string>;\n\n  constructor(\n    name: string,\n    type: DataType,\n    nullable = false,\n    metadata: Map<string, string> = new Map()\n  ) {\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n\n  get typeId(): number {\n    return this.type && this.type.typeId;\n  }\n\n  clone(): Field {\n    return new Field(this.name, this.type, this.nullable, this.metadata);\n  }\n\n  compareTo(other: this): boolean {\n    return (\n      this.name === other.name &&\n      this.type === other.type &&\n      this.nullable === other.nullable &&\n      this.metadata === other.metadata\n    );\n  }\n\n  toString(): string {\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\n      this.metadata ? `, metadata: ${this.metadata}` : ''\n    }`;\n  }\n}\n", "// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n  /** The default placeholder type */\n  NONE = 0,\n  /** A NULL type having no physical storage */\n  Null = 1,\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n  Int = 2,\n  /** 2, 4, or 8-byte floating point value */\n  Float = 3,\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\n  Binary = 4,\n  /** UTF8 variable-length string as List<Char> */\n  Utf8 = 5,\n  /** Boolean as 1 bit, LSB bit-packed ordering */\n  Bool = 6,\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n  Decimal = 7,\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\n  Date = 8,\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n  Time = 9,\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n  Timestamp = 10,\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\n  Interval = 11,\n  /** A list of some logical data type */\n  List = 12,\n  /** Struct of logical types */\n  Struct = 13,\n  /** Union of logical types */\n  Union = 14,\n  /** Fixed-size binary. Each value occupies the same number of bytes */\n  FixedSizeBinary = 15,\n  /** Fixed-size list. Each value occupies the same number of bytes */\n  FixedSizeList = 16,\n  /** Map of named logical types */\n  Map = 17,\n\n  /** Dictionary aka Category type */\n  Dictionary = -1,\n  Int8 = -2,\n  Int16 = -3,\n  Int32 = -4,\n  Int64 = -5,\n  Uint8 = -6,\n  Uint16 = -7,\n  Uint32 = -8,\n  Uint64 = -9,\n  Float16 = -10,\n  Float32 = -11,\n  Float64 = -12,\n  DateDay = -13,\n  DateMillisecond = -14,\n  TimestampSecond = -15,\n  TimestampMillisecond = -16,\n  TimestampMicrosecond = -17,\n  TimestampNanosecond = -18,\n  TimeSecond = -19,\n  TimeMillisecond = -20,\n  TimeMicrosecond = -21,\n  TimeNanosecond = -22,\n  DenseUnion = -23,\n  SparseUnion = -24,\n  IntervalDayTime = -25,\n  IntervalYearMonth = -26\n}\n", "// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: any;\n  readonly bitWidth: number;\n\n  constructor(unit: any, bitWidth: number) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n\nexport class Struct extends DataType {\n  public readonly children: Field[];\n\n  constructor(children: Field[]) {\n    super();\n    this.children = children;\n  }\n\n  public get typeId() {\n    return Type.Struct;\n  }\n  public toString() {\n    return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(', ')}}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Struct';\n  }\n}\n", "import type {TypedArray} from '../../types';\nimport {\n  DataType,\n  Float32,\n  Float64,\n  Int16,\n  Int32,\n  Int8,\n  Uint16,\n  Uint32,\n  Uint8\n} from '../schema/schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n", "import {MeshAttribute, MeshAttributes} from './mesh-types';\nimport {Schema, Field, FixedSizeList} from '../../lib/schema/schema';\nimport {getArrowTypeFromTypedArray} from '../../lib/arrow/arrow-like-type-utils';\n\n/**\n * Create a schema for mesh attributes data\n * @param attributes\n * @param metadata\n * @returns\n */\nexport function deduceMeshSchema(\n  attributes: MeshAttributes,\n  metadata?: Map<string, string>\n): Schema {\n  const fields = deduceMeshFields(attributes);\n  return new Schema(fields, metadata);\n}\n\n/**\n * Create arrow-like schema field for mesh attribute\n * @param attributeName\n * @param attribute\n * @param optionalMetadata\n * @returns\n */\nexport function deduceMeshField(\n  attributeName: string,\n  attribute: MeshAttribute,\n  optionalMetadata?: Map<string, string>\n): Field {\n  const type = getArrowTypeFromTypedArray(attribute.value);\n  const metadata = optionalMetadata ? optionalMetadata : makeMeshAttributeMetadata(attribute);\n  const field = new Field(\n    attributeName,\n    new FixedSizeList(attribute.size, new Field('value', type)),\n    false,\n    metadata\n  );\n  return field;\n}\n\n/**\n * Create fields array for mesh attributes\n * @param attributes\n * @returns\n */\nfunction deduceMeshFields(attributes: MeshAttributes): Field[] {\n  const fields: Field[] = [];\n  for (const attributeName in attributes) {\n    const attribute: MeshAttribute = attributes[attributeName];\n    fields.push(deduceMeshField(attributeName, attribute));\n  }\n  return fields;\n}\n\n/**\n * Make metadata by mesh attribute properties\n * @param attribute\n * @returns\n */\nexport function makeMeshAttributeMetadata(attribute: MeshAttribute): Map<string, string> {\n  const result = new Map();\n  if ('byteOffset' in attribute) {\n    result.set('byteOffset', attribute.byteOffset!.toString(10));\n  }\n  if ('byteStride' in attribute) {\n    result.set('byteStride', attribute.byteStride!.toString(10));\n  }\n  if ('normalized' in attribute) {\n    result.set('normalized', attribute.normalized!.toString());\n  }\n  return result;\n}\n", "// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue<T> extends Array<T> {\n  enqueue(value: T) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue(): T {\n    // Remove first element\n    return this.shift() as T;\n  }\n}\n\nexport default class AsyncQueue<T> {\n  private _values: ArrayQueue<T | Error>;\n  private _settlers: ArrayQueue<{resolve: (value: any) => void; reject: (reason?: any) => void}>;\n  private _closed: boolean;\n\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue<T>();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue<{\n      resolve: (value: any) => void;\n      reject: (reason?: any) => void;\n    }>();\n    this._closed = false;\n  }\n\n  close(): void {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next(): Promise<any> {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements in `asyncIterable`\n */\nexport async function takeAsync(\n  asyncIterable: AsyncIterable<any>,\n  count = Infinity\n): Promise<any[]> {\n  const result: Array<any> = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n", "// Note: This file will either be moved back to deck.gl or reformatted to web-monorepo standards\n// Disabling lint temporarily to facilitate copying code in and out of this repo\n/* eslint-disable */\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  phongLighting,\n  picking,\n  DefaultProps,\n  log,\n  LayerContext,\n  Material\n} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, Texture2D, isWebGL2} from '@luma.gl/core';\nimport {hasFeature, FEATURES} from '@luma.gl/webgl';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './simple-mesh-layer-vertex.glsl';\nimport fs from './simple-mesh-layer-fragment.glsl';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  UpdateParameters,\n  Accessor,\n  Position,\n  Color,\n  Texture\n} from '@deck.gl/core';\nimport type {MeshAttribute, MeshAttributes} from '@loaders.gl/schema';\nimport type {Geometry as GeometryType} from '@luma.gl/engine';\nimport {GLTFMaterialParser} from '@luma.gl/experimental';\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\n\nfunction validateGeometryAttributes(attributes: Record<string, any>, useMeshColors: boolean): void {\n  const hasColorAttribute = attributes.COLOR_0 || attributes.colors;\n  const useColorAttribute = hasColorAttribute && useMeshColors;\n  if (!useColorAttribute) {\n    attributes.colors = {constant: true, value: new Float32Array([1, 1, 1])};\n  }\n  log.assert(\n    attributes.positions || attributes.POSITION,\n    'no \"postions\" or \"POSITION\" attribute in mesh'\n  );\n}\n\n/*\n * Convert mesh data into geometry\n * @returns {Geometry} geometry\n */\nfunction getGeometry(data: Mesh, useMeshColors: boolean): Geometry {\n  if ((data as any).attributes) {\n    validateGeometryAttributes((data as any).attributes, useMeshColors);\n    if (data instanceof Geometry) {\n      return data;\n    } else {\n      return new Geometry(data);\n    }\n  } else if ((data as MeshAttributes).positions || (data as MeshAttributes).POSITION) {\n    validateGeometryAttributes(data, useMeshColors);\n    return new Geometry({\n      attributes: data\n    });\n  }\n  throw Error('Invalid mesh');\n}\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\ntype Mesh =\n  | GeometryType\n  | {\n      attributes: MeshAttributes;\n      indices?: MeshAttribute;\n    }\n  | MeshAttributes;\n\ntype _SimpleMeshLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  mesh: string | Mesh | Promise<Mesh> | null;\n  texture?: string | Texture | Promise<Texture>;\n  /** Customize the [texture parameters](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter). */\n  textureParameters?: Record<number, number> | null;\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * If `mesh` does not contain vertex colors, use this color to render each object.\n   * If `mesh` contains vertex colors, then the two colors are mixed together.\n   * Use `[255, 255, 255]` to use the original mesh colors.\n   * If `texture` is assigned, then both colors will be ignored.\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * @deprecated Whether to color pixels using vertex colors supplied in the mesh (the `COLOR_0` or `colors` attribute).\n   * If set to `false` vertex colors will be ignored.\n   * This prop will be removed and set to always true in the next major release.\n   * @default false\n   */\n  _useMeshColors?: boolean;\n\n  /**\n   * (Experimental) If rendering only one instance of the mesh, set this to false to treat mesh positions\n   * as deltas of the world coordinates of the anchor.\n   * E.g. in LNGLAT coordinates, mesh positions are interpreted as meter offsets by default.\n   * setting _instanced to false interpreted mesh positions as lnglat deltas.\n   * @default true\n   */\n  _instanced?: boolean; // TODO - formalize API\n  /**\n   * Whether to render the mesh in wireframe mode.\n   * @default false\n   */\n  wireframe?: boolean;\n  /**\n   * Material props for lighting effect.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting#constructing-a-material-instance\n   */\n  material?: Material;\n};\n\nexport type SimpleMeshLayerProps<DataT = any> = _SimpleMeshLayerProps<DataT> & LayerProps;\n\nconst defaultProps: DefaultProps<SimpleMeshLayerProps> = {\n  mesh: {type: 'object', value: null, async: true},\n  texture: {type: 'image', value: null, async: true},\n  sizeScale: {type: 'number', value: 1, min: 0},\n  // Whether the color attribute in a mesh will be used\n  // This prop will be removed and set to true in next major release\n  _useMeshColors: {type: 'boolean', value: false},\n\n  // _instanced is a hack to use world position instead of meter offsets in mesh\n  // TODO - formalize API\n  _instanced: true,\n  // NOTE(Tarek): Quick and dirty wireframe. Just draws\n  // the same mesh with LINE_STRIPS. Won't follow edges\n  // of the original mesh.\n  wireframe: false,\n  // Optional material for 'lighting' shader module\n  material: true,\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  textureParameters: {type: 'object', ignore: true}\n};\n\n/** Render a number of instances of an arbitrary 3D geometry. */\nexport default class SimpleMeshLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_SimpleMeshLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'SimpleMeshLayer';\n\n  state!: {\n    materialParser?: GLTFMaterialParser;\n    model?: Model;\n    emptyTexture: Texture2D;\n    hasNormals?: boolean;\n    positionBounds?: [number[], number[]] | null;\n  };\n\n  getShaders() {\n    const transpileToGLSL100 = !isWebGL2(this.context.gl);\n\n    const defines: any = {};\n\n    if (hasFeature(this.context.gl, FEATURES.GLSL_DERIVATIVES)) {\n      defines.DERIVATIVES_AVAILABLE = 1;\n    }\n\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, phongLighting, picking],\n      transpileToGLSL100,\n      defines\n    });\n  }\n\n  getBounds(): [number[], number[]] | null {\n    if (this.props._instanced) {\n      return super.getBounds();\n    }\n    let result = this.state.positionBounds;\n    if (result) {\n      return result;\n    }\n    const {mesh} = this.props;\n    if (!mesh) {\n      return null;\n    }\n    // @ts-ignore Detect if mesh is generated by loaders.gl\n    result = mesh.header?.boundingBox;\n\n    if (!result) {\n      // Otherwise, calculate bounding box from positions\n      const {attributes} = getGeometry(mesh as Mesh, this.props._useMeshColors);\n      attributes.POSITION = attributes.POSITION || attributes.positions;\n      result = getMeshBoundingBox(attributes);\n    }\n\n    this.state.positionBounds = result;\n    return result;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined in a primitive layer\n    attributeManager!.addInstanced({\n      instancePositions: {\n        transition: true,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        size: 3,\n        accessor: 'getPosition'\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        size: this.props.colorFormat.length,\n        normalized: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n\n    this.setState({\n      // Avoid luma.gl's missing uniform warning\n      // TODO - add feature to luma.gl to specify ignored uniforms?\n      emptyTexture: new Texture2D(this.context.gl, {\n        data: new Uint8Array(4),\n        width: 1,\n        height: 1\n      })\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n\n    const {props, oldProps, changeFlags} = params;\n    if (props.mesh !== oldProps.mesh || changeFlags.extensionsChanged) {\n      this.state.positionBounds = null;\n      this.state.model?.delete();\n      if (props.mesh) {\n        this.state.model = this.getModel(props.mesh as Mesh);\n\n        const attributes = (props.mesh as any).attributes || props.mesh;\n        this.setState({\n          hasNormals: Boolean(attributes.NORMAL || attributes.normals)\n        });\n      }\n      // attributeManager is always defined in a primitive layer\n      this.getAttributeManager()!.invalidateAll();\n    }\n\n    if (props.texture !== oldProps.texture) {\n      this.setTexture(props.texture);\n    }\n\n    if (this.state.model) {\n      this.state.model.setDrawMode(this.props.wireframe ? GL.LINE_STRIP : GL.TRIANGLES);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n\n    this.state.emptyTexture.delete();\n  }\n\n  draw({uniforms}) {\n    if (!this.state.model) {\n      return;\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, coordinateSystem, _instanced} = this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        sizeScale,\n        composeModelMatrix: !_instanced || shouldComposeModelMatrix(viewport, coordinateSystem),\n        flatShading: !this.state.hasNormals\n      })\n      .draw();\n  }\n\n  protected getModel(mesh: Mesh): Model {\n    const model = new Model(this.context.gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: getGeometry(mesh, this.props._useMeshColors),\n      isInstanced: true\n    });\n\n    const {texture} = this.props;\n    const {emptyTexture} = this.state;\n    model.setUniforms({\n      sampler: texture || emptyTexture,\n      hasTexture: Boolean(texture)\n    });\n\n    return model;\n  }\n\n  private setTexture(texture: Texture2D): void {\n    const {emptyTexture, model} = this.state;\n\n    // props.mesh may not be ready at this time.\n    // The sampler will be set when `getModel` is called\n    if (model) {\n      model.setUniforms({\n        sampler: texture || emptyTexture,\n        hasTexture: Boolean(texture)\n      });\n    }\n  }\n}\n", "import {Vector3, Matrix4} from '@math.gl/core';\nimport {assert, uid} from '@luma.gl/webgl';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  getBounds() {\n    return null;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update(options = {}) {\n    const {position, rotation, scale} = options;\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n", "import {Matrix4, Vector3} from '@math.gl/core';\nimport {log} from '@luma.gl/webgl';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class GroupNode extends ScenegraphNode {\n  constructor(props = {}) {\n    props = Array.isArray(props) ? {children: props} : props;\n    const {children = []} = props;\n    log.assert(\n      children.every(child => child instanceof ScenegraphNode),\n      'every child must an instance of ScenegraphNode'\n    );\n    super(props);\n    this.children = children;\n  }\n\n  // Unpacks arrays and nested arrays of children\n  add(...children) {\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.add(...child);\n      } else {\n        this.children.push(child);\n      }\n    }\n    return this;\n  }\n\n  remove(child) {\n    const children = this.children;\n    const indexOf = children.indexOf(child);\n    if (indexOf > -1) {\n      children.splice(indexOf, 1);\n    }\n    return this;\n  }\n\n  removeAll() {\n    this.children = [];\n    return this;\n  }\n\n  delete() {\n    this.children.forEach(child => child.delete());\n    this.removeAll();\n    super.delete();\n  }\n\n  getBounds() {\n    /** @type [number[], number[]] */\n    const result = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n\n    this.traverse((node, {worldMatrix}) => {\n      const bounds = node.getBounds();\n      if (!bounds) {\n        return;\n      }\n      const [min, max] = bounds;\n      const center = new Vector3(min).add(max).divide([2, 2, 2]);\n      worldMatrix.transformAsPoint(center, center);\n      const halfSize = new Vector3(max).subtract(min).divide([2, 2, 2]);\n      worldMatrix.transformAsVector(halfSize, halfSize);\n\n      for (let v = 0; v < 8; v++) {\n        // Test all 8 corners of the box\n        const position = new Vector3(v & 0b001 ? -1 : 1, v & 0b010 ? -1 : 1, v & 0b100 ? -1 : 1)\n          .multiply(halfSize)\n          .add(center);\n\n        for (let i = 0; i < 3; i++) {\n          result[0][i] = Math.min(result[0][i], position[i]);\n          result[1][i] = Math.max(result[1][i], position[i]);\n        }\n      }\n    });\n    if (!Number.isFinite(result[0][0])) {\n      return null;\n    }\n    return result;\n  }\n\n  traverse(visitor, {worldMatrix = new Matrix4()} = {}) {\n    const modelMatrix = new Matrix4(worldMatrix).multiplyRight(this.matrix);\n\n    for (const child of this.children) {\n      if (child instanceof GroupNode) {\n        child.traverse(visitor, {worldMatrix: modelMatrix});\n      } else {\n        visitor(child, {worldMatrix: modelMatrix});\n      }\n    }\n  }\n}\n", "import {assert, log} from '@luma.gl/webgl';\nimport {Matrix4, Quaternion} from '@math.gl/core';\n\n// TODO: import from loaders.gl?\nexport const ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nexport const ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n//\n\nfunction accessorToJsArray(accessor) {\n  if (!accessor._animation) {\n    const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n    const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n    const length = components * accessor.count;\n    const {buffer, byteOffset} = accessor.bufferView.data;\n\n    const array = new ArrayType(buffer, byteOffset + (accessor.byteOffset || 0), length);\n\n    if (components === 1) {\n      accessor._animation = Array.from(array);\n    } else {\n      // Slice array\n      const slicedArray = [];\n      for (let i = 0; i < array.length; i += components) {\n        slicedArray.push(Array.from(array.slice(i, i + components)));\n      }\n      accessor._animation = slicedArray;\n    }\n  }\n\n  return accessor._animation;\n}\n\n// TODO: share with GLTFInstantiator\nconst helperMatrix = new Matrix4();\nfunction applyTranslationRotationScale(gltfNode, node) {\n  node.matrix.identity();\n\n  if (gltfNode.translation) {\n    node.matrix.translate(gltfNode.translation);\n  }\n\n  if (gltfNode.rotation) {\n    const rotationMatrix = helperMatrix.fromQuaternion(gltfNode.rotation);\n    node.matrix.multiplyRight(rotationMatrix);\n  }\n\n  if (gltfNode.scale) {\n    node.matrix.scale(gltfNode.scale);\n  }\n}\n\nconst quaternion = new Quaternion();\nfunction linearInterpolate(target, path, start, stop, ratio) {\n  if (path === 'rotation') {\n    // SLERP when path is rotation\n    quaternion.slerp({start, target: stop, ratio});\n    for (let i = 0; i < quaternion.length; i++) {\n      target[path][i] = quaternion[i];\n    }\n  } else {\n    // regular interpolation\n    for (let i = 0; i < start.length; i++) {\n      target[path][i] = ratio * stop[i] + (1 - ratio) * start[i];\n    }\n  }\n}\n\nfunction cubicsplineInterpolate(target, path, {p0, outTangent0, inTangent1, p1, tDiff, ratio: t}) {\n  // TODO: Quaternion might need normalization\n  for (let i = 0; i < target[path].length; i++) {\n    const m0 = outTangent0[i] * tDiff;\n    const m1 = inTangent1[i] * tDiff;\n    target[path][i] =\n      (2 * Math.pow(t, 3) - 3 * Math.pow(t, 2) + 1) * p0[i] +\n      (Math.pow(t, 3) - 2 * Math.pow(t, 2) + t) * m0 +\n      (-2 * Math.pow(t, 3) + 3 * Math.pow(t, 2)) * p1[i] +\n      (Math.pow(t, 3) - Math.pow(t, 2)) * m1;\n  }\n}\n\nfunction stepInterpolate(target, path, value) {\n  for (let i = 0; i < value.length; i++) {\n    target[path][i] = value[i];\n  }\n}\n\nfunction interpolate(time, {input, interpolation, output}, target, path) {\n  const maxTime = input[input.length - 1];\n  const animationTime = time % maxTime;\n\n  const nextIndex = input.findIndex(t => t >= animationTime);\n  const previousIndex = Math.max(0, nextIndex - 1);\n\n  if (!Array.isArray(target[path])) {\n    switch (path) {\n      case 'translation':\n        target[path] = [0, 0, 0];\n        break;\n\n      case 'rotation':\n        target[path] = [0, 0, 0, 1];\n        break;\n\n      case 'scale':\n        target[path] = [1, 1, 1];\n        break;\n\n      default:\n        log.warn(`Bad animation path ${path}`)();\n    }\n  }\n\n  assert(target[path].length === output[previousIndex].length);\n  const previousTime = input[previousIndex];\n  const nextTime = input[nextIndex];\n\n  switch (interpolation) {\n    case 'STEP':\n      stepInterpolate(target, path, output[previousIndex]);\n      break;\n\n    case 'LINEAR':\n      if (nextTime > previousTime) {\n        const ratio = (animationTime - previousTime) / (nextTime - previousTime);\n        linearInterpolate(target, path, output[previousIndex], output[nextIndex], ratio);\n      }\n      break;\n\n    case 'CUBICSPLINE':\n      if (nextTime > previousTime) {\n        const ratio = (animationTime - previousTime) / (nextTime - previousTime);\n        const tDiff = nextTime - previousTime;\n\n        const p0 = output[3 * previousIndex + 1];\n        const outTangent0 = output[3 * previousIndex + 2];\n        const inTangent1 = output[3 * nextIndex + 0];\n        const p1 = output[3 * nextIndex + 1];\n\n        cubicsplineInterpolate(target, path, {p0, outTangent0, inTangent1, p1, tDiff, ratio});\n      }\n      break;\n\n    default:\n      log.warn(`Interpolation ${interpolation} not supported`)();\n      break;\n  }\n}\n\nclass GLTFAnimation {\n  constructor(props) {\n    this.startTime = 0;\n    this.playing = true;\n    this.speed = 1;\n    this.channels = [];\n\n    Object.assign(this, props);\n  }\n\n  animate(timeMs) {\n    if (!this.playing) {\n      return;\n    }\n\n    const absTime = timeMs / 1000;\n    const time = (absTime - this.startTime) * this.speed;\n\n    this.channels.forEach(({sampler, target, path}) => {\n      interpolate(time, sampler, target, path);\n      applyTranslationRotationScale(target, target._node);\n    });\n  }\n}\n\nexport default class GLTFAnimator {\n  constructor(gltf) {\n    this.animations = gltf.animations.map((animation, index) => {\n      const name = animation.name || `Animation-${index}`;\n      const samplers = animation.samplers.map(({input, interpolation = 'LINEAR', output}) => ({\n        input: accessorToJsArray(gltf.accessors[input]),\n        interpolation,\n        output: accessorToJsArray(gltf.accessors[output])\n      }));\n      const channels = animation.channels.map(({sampler, target}) => ({\n        sampler: samplers[sampler],\n        target: gltf.nodes[target.node],\n        path: target.path\n      }));\n      return new GLTFAnimation({name, channels});\n    });\n  }\n\n  // TODO(Tarek): This should be removed? (deck.gl is using this)\n  animate(time) {\n    this.setTime(time);\n  }\n\n  setTime(time) {\n    this.animations.forEach(animation => animation.animate(time));\n  }\n\n  getAnimations() {\n    return this.animations;\n  }\n}\n", "import {Model} from '@luma.gl/engine';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.bounds = null;\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  getBounds() {\n    return this.bounds;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n", "import {Texture2D, hasFeature, FEATURES, log} from '@luma.gl/webgl';\n\nexport default class GLTFMaterialParser {\n  constructor(\n    gl,\n    {attributes, material, pbrDebug, imageBasedLightingEnvironment, lights, useTangents}\n  ) {\n    this.gl = gl;\n\n    this.defines = {\n      // TODO: Use EXT_sRGB if available (Standard in WebGL 2.0)\n      MANUAL_SRGB: 1,\n      SRGB_FAST_APPROXIMATION: 1\n    };\n\n    if (hasFeature(gl, FEATURES.GLSL_TEXTURE_LOD)) {\n      this.defines.USE_TEX_LOD = 1;\n    }\n\n    this.uniforms = {\n      // TODO: find better values?\n      u_Camera: [0, 0, 0], // Model should override\n\n      u_MetallicRoughnessValues: [1, 1] // Default is 1 and 1\n    };\n\n    this.parameters = {};\n    this.generatedTextures = [];\n\n    if (imageBasedLightingEnvironment) {\n      this.uniforms.u_DiffuseEnvSampler = imageBasedLightingEnvironment.getDiffuseEnvSampler();\n      this.uniforms.u_SpecularEnvSampler = imageBasedLightingEnvironment.getSpecularEnvSampler();\n      this.uniforms.u_brdfLUT = imageBasedLightingEnvironment.getBrdfTexture();\n      this.uniforms.u_ScaleIBLAmbient = [1, 1];\n    }\n\n    if (pbrDebug) {\n      // Override final color for reference app visualization\n      // of various parameters in the lighting equation.\n      this.uniforms.u_ScaleDiffBaseMR = [0, 0, 0, 0];\n      this.uniforms.u_ScaleFGDSpec = [0, 0, 0, 0];\n    }\n\n    this.defineIfPresent(attributes.NORMAL, 'HAS_NORMALS');\n    this.defineIfPresent(attributes.TANGENT && useTangents, 'HAS_TANGENTS');\n    this.defineIfPresent(attributes.TEXCOORD_0, 'HAS_UV');\n\n    this.defineIfPresent(imageBasedLightingEnvironment, 'USE_IBL');\n    this.defineIfPresent(lights, 'USE_LIGHTS');\n    this.defineIfPresent(pbrDebug, 'PBR_DEBUG');\n\n    if (material) {\n      this.parseMaterial(material);\n    }\n  }\n\n  defineIfPresent(value, name) {\n    if (value) {\n      this.defines[name] = 1;\n    }\n  }\n\n  parseTexture(gltfTexture, name, define = null) {\n    const parameters =\n      (gltfTexture.texture &&\n        gltfTexture.texture.sampler &&\n        gltfTexture.texture.sampler.parameters) ||\n      {};\n\n    const image = gltfTexture.texture.source.image;\n    let textureOptions;\n    let specialTextureParameters = {};\n    if (image.compressed) {\n      textureOptions = image;\n      specialTextureParameters = {\n        [this.gl.TEXTURE_MIN_FILTER]:\n          image.data.length > 1 ? this.gl.LINEAR_MIPMAP_NEAREST : this.gl.LINEAR\n      };\n    } else {\n      // Texture2D accepts a promise that returns an image as data (Async Textures)\n      textureOptions = {data: image};\n    }\n\n    const texture = new Texture2D(this.gl, {\n      id: gltfTexture.name || gltfTexture.id,\n      parameters: {\n        ...parameters,\n        ...specialTextureParameters\n      },\n      pixelStore: {\n        [this.gl.UNPACK_FLIP_Y_WEBGL]: false\n      },\n      ...textureOptions\n    });\n    this.uniforms[name] = texture;\n    this.defineIfPresent(define, define);\n    this.generatedTextures.push(texture);\n  }\n\n  parsePbrMetallicRoughness(pbrMetallicRoughness) {\n    if (pbrMetallicRoughness.baseColorTexture) {\n      this.parseTexture(\n        pbrMetallicRoughness.baseColorTexture,\n        'u_BaseColorSampler',\n        'HAS_BASECOLORMAP'\n      );\n    }\n    this.uniforms.u_BaseColorFactor = pbrMetallicRoughness.baseColorFactor || [1, 1, 1, 1];\n\n    if (pbrMetallicRoughness.metallicRoughnessTexture) {\n      this.parseTexture(\n        pbrMetallicRoughness.metallicRoughnessTexture,\n        'u_MetallicRoughnessSampler',\n        'HAS_METALROUGHNESSMAP'\n      );\n    }\n    const {metallicFactor = 1, roughnessFactor = 1} = pbrMetallicRoughness;\n    this.uniforms.u_MetallicRoughnessValues = [metallicFactor, roughnessFactor];\n  }\n\n  parseMaterial(material) {\n    this.uniforms.pbr_uUnlit = Boolean(material.unlit);\n\n    if (material.pbrMetallicRoughness) {\n      this.parsePbrMetallicRoughness(material.pbrMetallicRoughness);\n    }\n    if (material.normalTexture) {\n      this.parseTexture(material.normalTexture, 'u_NormalSampler', 'HAS_NORMALMAP');\n\n      const {scale = 1} = material.normalTexture;\n      this.uniforms.u_NormalScale = scale;\n    }\n    if (material.occlusionTexture) {\n      this.parseTexture(material.occlusionTexture, 'u_OcclusionSampler', 'HAS_OCCLUSIONMAP');\n\n      const {strength = 1} = material.occlusionTexture;\n      this.uniforms.u_OcclusionStrength = strength;\n    }\n    if (material.emissiveTexture) {\n      this.parseTexture(material.emissiveTexture, 'u_EmissiveSampler', 'HAS_EMISSIVEMAP');\n      this.uniforms.u_EmissiveFactor = material.emissiveFactor || [0, 0, 0];\n    }\n    if (material.alphaMode === 'MASK') {\n      const {alphaCutoff = 0.5} = material;\n      this.defines.ALPHA_CUTOFF = 1;\n      this.uniforms.u_AlphaCutoff = alphaCutoff;\n    } else if (material.alphaMode === 'BLEND') {\n      log.warn('BLEND alphaMode might not work well because it requires mesh sorting')();\n      Object.assign(this.parameters, {\n        blend: true,\n        blendEquation: this.gl.FUNC_ADD,\n        blendFunc: [\n          this.gl.SRC_ALPHA,\n          this.gl.ONE_MINUS_SRC_ALPHA,\n          this.gl.ONE,\n          this.gl.ONE_MINUS_SRC_ALPHA\n        ]\n      });\n    }\n  }\n\n  /**\n   * Destroy all generated resources to release memory.\n   */\n  delete() {\n    this.generatedTextures.forEach(texture => texture.delete());\n  }\n}\n", "import {isWebGL2} from '@luma.gl/gltools';\nimport {log} from '@luma.gl/webgl';\nimport {pbr} from '@luma.gl/shadertools';\nimport ModelNode from '../scenegraph/model-node';\nimport GLTFMaterialParser from './gltf-material-parser';\n\nconst vs = `\n#if (__VERSION__ < 300)\n  #define _attr attribute\n#else\n  #define _attr in\n#endif\n\n  _attr vec4 POSITION;\n\n  #ifdef HAS_NORMALS\n    _attr vec4 NORMAL;\n  #endif\n\n  #ifdef HAS_TANGENTS\n    _attr vec4 TANGENT;\n  #endif\n\n  #ifdef HAS_UV\n    _attr vec2 TEXCOORD_0;\n  #endif\n\n  void main(void) {\n    vec4 _NORMAL = vec4(0.);\n    vec4 _TANGENT = vec4(0.);\n    vec2 _TEXCOORD_0 = vec2(0.);\n\n    #ifdef HAS_NORMALS\n      _NORMAL = NORMAL;\n    #endif\n\n    #ifdef HAS_TANGENTS\n      _TANGENT = TANGENT;\n    #endif\n\n    #ifdef HAS_UV\n      _TEXCOORD_0 = TEXCOORD_0;\n    #endif\n\n    pbr_setPositionNormalTangentUV(POSITION, _NORMAL, _TANGENT, _TEXCOORD_0);\n    gl_Position = u_MVPMatrix * POSITION;\n  }\n`;\n\nconst fs = `\n#if (__VERSION__ < 300)\n  #define fragmentColor gl_FragColor\n#else\n  out vec4 fragmentColor;\n#endif\n\n  void main(void) {\n    fragmentColor = pbr_filterColor(vec4(0));\n  }\n`;\n\nfunction addVersionToShader(gl, source) {\n  if (isWebGL2(gl)) {\n    return `#version 300 es\\n${source}`;\n  }\n\n  return source;\n}\n\nexport default function createGLTFModel(gl, options) {\n  const {id, drawMode, vertexCount, attributes, modelOptions} = options;\n  const materialParser = new GLTFMaterialParser(gl, options);\n\n  log.info(4, 'createGLTFModel defines: ', materialParser.defines)();\n\n  // Calculate managedResources\n  // TODO: Implement resource management logic that will\n  // not deallocate resources/textures/buffers that are shared\n  const managedResources = [];\n  managedResources.push(...materialParser.generatedTextures);\n  managedResources.push(...Object.values(attributes).map(attribute => attribute.buffer));\n\n  const model = new ModelNode(\n    gl,\n    Object.assign(\n      {\n        id,\n        drawMode,\n        vertexCount,\n        modules: [pbr],\n        defines: materialParser.defines,\n        parameters: materialParser.parameters,\n        vs: addVersionToShader(gl, vs),\n        fs: addVersionToShader(gl, fs),\n        managedResources\n      },\n      modelOptions\n    )\n  );\n\n  model.setProps({attributes});\n  model.setUniforms(materialParser.uniforms);\n\n  return model;\n}\n", "import {Matrix4} from '@math.gl/core';\nimport {Buffer, Accessor, log} from '@luma.gl/webgl';\nimport GroupNode from '../scenegraph/group-node';\n\nimport GLTFAnimator from './gltf-animator';\nimport createGLTFModel from './create-gltf-model';\n\n// TODO: import {ATTRIBUTE_TYPE_TO_COMPONENTS} from '@loaders.gl/gltf';\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst DEFAULT_OPTIONS = {\n  modelOptions: {},\n  pbrDebug: false,\n  imageBasedLightingEnvironment: null,\n  lights: true,\n  useTangents: false\n};\n\n// GLTF instantiator for luma.gl\n// Walks the parsed and resolved glTF structure and builds a luma.gl scenegraph\nexport default class GLTFInstantiator {\n  constructor(gl, options = {}) {\n    this.gl = gl;\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n  }\n\n  instantiate(gltf) {\n    this.gltf = gltf;\n    const scenes = (gltf.scenes || []).map(scene => this.createScene(scene));\n    return scenes;\n  }\n\n  createAnimator() {\n    if (Array.isArray(this.gltf.animations)) {\n      return new GLTFAnimator(this.gltf);\n    }\n\n    return null;\n  }\n\n  createScene(gltfScene) {\n    const gltfNodes = gltfScene.nodes || [];\n    const nodes = gltfNodes.map(node => this.createNode(node));\n    const scene = new GroupNode({\n      id: gltfScene.name || gltfScene.id,\n      children: nodes\n    });\n    return scene;\n  }\n\n  createNode(gltfNode) {\n    if (!gltfNode._node) {\n      const gltfChildren = gltfNode.children || [];\n      const children = gltfChildren.map(child => this.createNode(child));\n\n      // Node can have children nodes and meshes at the same time\n      if (gltfNode.mesh) {\n        children.push(this.createMesh(gltfNode.mesh));\n      }\n\n      const node = new GroupNode({\n        id: gltfNode.name || gltfNode.id,\n        children\n      });\n\n      if (gltfNode.matrix) {\n        node.setMatrix(gltfNode.matrix);\n      } else {\n        node.matrix.identity();\n\n        if (gltfNode.translation) {\n          node.matrix.translate(gltfNode.translation);\n        }\n\n        if (gltfNode.rotation) {\n          const rotationMatrix = new Matrix4().fromQuaternion(gltfNode.rotation);\n          node.matrix.multiplyRight(rotationMatrix);\n        }\n\n        if (gltfNode.scale) {\n          node.matrix.scale(gltfNode.scale);\n        }\n      }\n      gltfNode._node = node;\n    }\n\n    return gltfNode._node;\n  }\n\n  createMesh(gltfMesh) {\n    // TODO: avoid changing the gltf\n    if (!gltfMesh._mesh) {\n      const gltfPrimitives = gltfMesh.primitives || [];\n      const primitives = gltfPrimitives.map((gltfPrimitive, i) =>\n        this.createPrimitive(gltfPrimitive, i, gltfMesh)\n      );\n      const mesh = new GroupNode({\n        id: gltfMesh.name || gltfMesh.id,\n        children: primitives\n      });\n      gltfMesh._mesh = mesh;\n    }\n\n    return gltfMesh._mesh;\n  }\n\n  getVertexCount(attributes) {\n    // TODO: implement this\n    log.warn('getVertexCount() not found')();\n  }\n\n  createPrimitive(gltfPrimitive, i, gltfMesh) {\n    const model = createGLTFModel(\n      this.gl,\n      Object.assign(\n        {\n          id: gltfPrimitive.name || `${gltfMesh.name || gltfMesh.id}-primitive-${i}`,\n          drawMode: gltfPrimitive.mode || 4,\n          vertexCount: gltfPrimitive.indices\n            ? gltfPrimitive.indices.count\n            : this.getVertexCount(gltfPrimitive.attributes),\n          attributes: this.createAttributes(gltfPrimitive.attributes, gltfPrimitive.indices),\n          material: gltfPrimitive.material\n        },\n        this.options\n      )\n    );\n\n    model.bounds = [gltfPrimitive.attributes.POSITION.min, gltfPrimitive.attributes.POSITION.max];\n\n    return model;\n  }\n\n  createAttributes(attributes, indices) {\n    const loadedAttributes = {};\n\n    Object.keys(attributes).forEach(attrName => {\n      loadedAttributes[attrName] = this.createAccessor(\n        attributes[attrName],\n        this.createBuffer(attributes[attrName], this.gl.ARRAY_BUFFER)\n      );\n    });\n\n    if (indices) {\n      loadedAttributes.indices = this.createAccessor(\n        indices,\n        this.createBuffer(indices, this.gl.ELEMENT_ARRAY_BUFFER)\n      );\n    }\n\n    log.info(4, 'glTF Attributes', {attributes, indices, generated: loadedAttributes})();\n\n    return loadedAttributes;\n  }\n\n  createBuffer(attribute, target) {\n    if (!attribute.bufferView) {\n      // Draco decoded files do not have a bufferView\n      attribute.bufferView = {};\n    }\n\n    const {bufferView} = attribute;\n    if (!bufferView.lumaBuffers) {\n      bufferView.lumaBuffers = {};\n    }\n\n    if (!bufferView.lumaBuffers[target]) {\n      bufferView.lumaBuffers[target] = new Buffer(this.gl, {\n        id: `from-${bufferView.id}`,\n        // Draco decoded files have attribute.value\n        data: bufferView.data || attribute.value,\n        target\n      });\n    }\n\n    return bufferView.lumaBuffers[target];\n  }\n\n  createAccessor(accessor, buffer) {\n    return new Accessor({\n      buffer,\n      offset: accessor.byteOffset || 0,\n      stride: accessor.bufferView.byteStride || 0,\n      type: accessor.componentType,\n      size: ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type]\n    });\n  }\n\n  // TODO - create sampler in WebGL2\n  createSampler(gltfSampler) {\n    return gltfSampler;\n  }\n\n  // Helper methods (move to GLTFLoader.resolve...?)\n\n  needsPOT() {\n    // Has a wrapping mode (either wrapS or wrapT) equal to REPEAT or MIRRORED_REPEAT, or\n    // Has a minification filter (minFilter) that uses mipmapping\n    // (NEAREST_MIPMAP_NEAREST, NEAREST_MIPMAP_LINEAR,\n    // LINEAR_MIPMAP_NEAREST, or LINEAR_MIPMAP_LINEAR).\n    return false;\n  }\n}\n", "import GLTFInstantiator from './gltf-instantiator';\n\nexport default function createGLTFObjects(gl, gltf, options) {\n  const instantiator = new GLTFInstantiator(gl, options);\n  const scenes = instantiator.instantiate(gltf);\n  const animator = instantiator.createAnimator();\n\n  return {scenes, animator};\n}\n", "// => COPIED FROM  deck.gl\n\n// Copyright (c) 2015 - 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-params */\nimport earcut from 'earcut';\n\n// For Web Mercator projection\nconst PI_4 = Math.PI / 4;\nconst DEGREES_TO_RADIANS_HALF = Math.PI / 360;\n\n// 4 data formats are supported:\n// Simple Polygon: an array of points\n// Complex Polygon: an array of array of points (array of rings)\n//   with the first ring representing the outer hull and other rings representing holes\n// Simple Flat: an array of numbers (flattened \"simple polygon\")\n// Complex Flat: {position: array<number>, holeIndices: array<number>}\n//   (flattened \"complex polygon\")\n\n/**\n * Ensure a polygon is valid format\n * @param {Array|Object} polygon\n */\nfunction validate(polygon) {\n  polygon = (polygon && polygon.positions) || polygon;\n  if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n    throw new Error('invalid polygon');\n  }\n}\n\n/**\n * Check if a polygon is simple or complex\n * @param {Array} polygon - either a complex or simple polygon\n * @return {Boolean} - true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction isSimple(polygon) {\n  return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n\n/**\n * Check if a simple polygon is a closed ring\n * @param {Array} simplePolygon - array of points\n * @return {Boolean} - true if the simple polygon is a closed ring\n */\nfunction isNestedRingClosed(simplePolygon) {\n  // check if first and last vertex are the same\n  const p0 = simplePolygon[0];\n  const p1 = simplePolygon[simplePolygon.length - 1];\n\n  return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n\n/**\n * Check if a simple flat array is a closed ring\n * @param {Array} positions - array of numbers\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} startIndex - start index of the path in the positions array\n * @param {Number} endIndex - end index of the path in the positions array\n * @return {Boolean} - true if the simple flat array is a closed ring\n */\nfunction isFlatRingClosed(positions, size, startIndex, endIndex) {\n  for (let i = 0; i < size; i++) {\n    if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Copy a simple polygon coordinates into a flat array, closes the ring if needed.\n * @param {Float64Array} target - destination\n * @param {Number} targetStartIndex - index in the destination to start copying into\n * @param {Array} simplePolygon - array of points\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @returns {Number} - the index of the write head in the destination\n */\nfunction copyNestedRing(target, targetStartIndex, simplePolygon, size) {\n  let targetIndex = targetStartIndex;\n  const len = simplePolygon.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[i][j] || 0;\n    }\n  }\n\n  if (!isNestedRingClosed(simplePolygon)) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[0][j] || 0;\n    }\n  }\n  return targetIndex;\n}\n\n/**\n * Copy a simple flat array into another flat array, closes the ring if needed.\n * @param {Float64Array} target - destination\n * @param {Number} targetStartIndex - index in the destination to start copying into\n * @param {Array} positions - array of numbers\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} [srcStartIndex] - start index of the path in the positions array\n * @param {Number} [srcEndIndex] - end index of the path in the positions array\n * @returns {Number} - the index of the write head in the destination\n */\nfunction copyFlatRing(target, targetStartIndex, positions, size, srcStartIndex = 0, srcEndIndex) {\n  srcEndIndex = srcEndIndex || positions.length;\n  const srcLength = srcEndIndex - srcStartIndex;\n  if (srcLength <= 0) {\n    return targetStartIndex;\n  }\n  let targetIndex = targetStartIndex;\n\n  for (let i = 0; i < srcLength; i++) {\n    target[targetIndex++] = positions[srcStartIndex + i];\n  }\n\n  if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n    for (let i = 0; i < size; i++) {\n      target[targetIndex++] = positions[srcStartIndex + i];\n    }\n  }\n  return targetIndex;\n}\n\n/**\n * Counts the number of vertices in a simple polygon, closes the polygon if needed.\n * @param {Array} simplePolygon - array of points\n * @returns {Number} vertex count\n */\nfunction getNestedVertexCount(simplePolygon) {\n  return (isNestedRingClosed(simplePolygon) ? 0 : 1) + simplePolygon.length;\n}\n\n/**\n * Counts the number of vertices in a simple flat array, closes the polygon if needed.\n * @param {Array} positions - array of numbers\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} [startIndex] - start index of the path in the positions array\n * @param {Number} [endIndex] - end index of the path in the positions array\n * @returns {Number} vertex count\n */\nfunction getFlatVertexCount(positions, size, startIndex = 0, endIndex) {\n  endIndex = endIndex || positions.length;\n  if (startIndex >= endIndex) {\n    return 0;\n  }\n  return (\n    (isFlatRingClosed(positions, size, startIndex, endIndex) ? 0 : 1) +\n    (endIndex - startIndex) / size\n  );\n}\n\n/**\n * Counts the number of vertices in any polygon representation.\n * @param {Array|Object} polygon\n * @param {Number} positionSize - size of a position, 2 (xy) or 3 (xyz)\n * @returns {Number} vertex count\n */\nexport function getVertexCount(polygon, positionSize, normalization = true) {\n  if (!normalization) {\n    polygon = polygon.positions || polygon;\n    return polygon.length / positionSize;\n  }\n\n  validate(polygon);\n\n  if (polygon.positions) {\n    // complex flat\n    const {positions, holeIndices} = polygon;\n\n    if (holeIndices) {\n      let vertexCount = 0;\n      // split the positions array into `holeIndices.length + 1` rings\n      // holeIndices[-1] falls back to 0\n      // holeIndices[holeIndices.length] falls back to positions.length\n      for (let i = 0; i <= holeIndices.length; i++) {\n        vertexCount += getFlatVertexCount(\n          polygon.positions,\n          positionSize,\n          holeIndices[i - 1],\n          holeIndices[i]\n        );\n      }\n      return vertexCount;\n    }\n    polygon = positions;\n  }\n  if (Number.isFinite(polygon[0])) {\n    // simple flat\n    return getFlatVertexCount(polygon, positionSize);\n  }\n  if (!isSimple(polygon)) {\n    // complex polygon\n    let vertexCount = 0;\n    for (const simplePolygon of polygon) {\n      vertexCount += getNestedVertexCount(simplePolygon);\n    }\n    return vertexCount;\n  }\n  // simple polygon\n  return getNestedVertexCount(polygon);\n}\n\n/**\n * Normalize any polygon representation into the \"complex flat\" format\n * @param {Array|Object} polygon\n * @param {Number} positionSize - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} [vertexCount] - pre-computed vertex count in the polygon.\n *   If provided, will skip counting.\n * @return {Object} - {positions: <Float64Array>, holeIndices: <Array|null>}\n */\n/* eslint-disable max-statements */\nexport function normalize(polygon, positionSize, vertexCount) {\n  validate(polygon);\n\n  vertexCount = vertexCount || getVertexCount(polygon, positionSize);\n\n  const positions = new Float64Array(vertexCount * positionSize);\n  const holeIndices = [];\n\n  if (polygon.positions) {\n    // complex flat\n    const {positions: srcPositions, holeIndices: srcHoleIndices} = polygon;\n\n    if (srcHoleIndices) {\n      let targetIndex = 0;\n      // split the positions array into `holeIndices.length + 1` rings\n      // holeIndices[-1] falls back to 0\n      // holeIndices[holeIndices.length] falls back to positions.length\n      for (let i = 0; i <= srcHoleIndices.length; i++) {\n        targetIndex = copyFlatRing(\n          positions,\n          targetIndex,\n          srcPositions,\n          positionSize,\n          srcHoleIndices[i - 1],\n          srcHoleIndices[i]\n        );\n        holeIndices.push(targetIndex);\n      }\n      // The last one is not a starting index of a hole, remove\n      holeIndices.pop();\n\n      return {positions, holeIndices};\n    }\n    polygon = srcPositions;\n  }\n  if (Number.isFinite(polygon[0])) {\n    // simple flat\n    copyFlatRing(positions, 0, polygon, positionSize);\n    return positions;\n  }\n  if (!isSimple(polygon)) {\n    // complex polygon\n    let targetIndex = 0;\n\n    for (const simplePolygon of polygon) {\n      targetIndex = copyNestedRing(positions, targetIndex, simplePolygon, positionSize);\n      holeIndices.push(targetIndex);\n    }\n    // The last one is not a starting index of a hole, remove\n    holeIndices.pop();\n    // last index points to the end of the array, remove it\n    return {positions, holeIndices};\n  }\n  // simple polygon\n  copyNestedRing(positions, 0, polygon, positionSize);\n  return positions;\n}\n/* eslint-enable max-statements */\n\n/*\n * Get vertex indices for drawing polygon mesh\n * @param {Object} normalizedPolygon - {positions, holeIndices}\n * @param {Number} positionSize - size of a position, 2 (xy) or 3 (xyz)\n * @returns {Array} array of indices\n */\nexport function getSurfaceIndices(normalizedPolygon, positionSize, preproject) {\n  let holeIndices = null;\n\n  if (normalizedPolygon.holeIndices) {\n    holeIndices = normalizedPolygon.holeIndices.map(positionIndex => positionIndex / positionSize);\n  }\n  let positions = normalizedPolygon.positions || normalizedPolygon;\n\n  // TODO - handle other coordinate systems and projection modes\n  if (preproject) {\n    // When tesselating lnglat coordinates, project them to the Web Mercator plane for accuracy\n    const n = positions.length;\n    // Clone the array\n    positions = positions.slice();\n    for (let i = 0; i < n; i += positionSize) {\n      // project points to a scaled version of the web-mercator plane\n      // It doesn't matter if x and y are scaled/translated, but the relationship must be linear\n      const y = positions[i + 1];\n      positions[i + 1] = Math.log(Math.tan(PI_4 + y * DEGREES_TO_RADIANS_HALF));\n    }\n  }\n\n  // Let earcut triangulate the polygon\n  return earcut(positions, holeIndices, positionSize);\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n", "// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n// @ts-nocheck\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst BASIS_CDN_ENCODER_WASM = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.wasm`;\nconst BASIS_CDN_ENCODER_JS = `https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.js`;\n\nlet loadBasisTranscoderPromise;\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nexport async function loadBasisTrascoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basis) {\n    return modules.basis;\n  }\n\n  loadBasisTranscoderPromise = loadBasisTranscoderPromise || loadBasisTrascoder(options);\n  return await loadBasisTranscoderPromise;\n}\n\n/**\n * Loads wasm transcoder module\n * @param options\n * @returns {BasisFile} promise\n */\nasync function loadBasisTrascoder(options) {\n  let BASIS = null;\n  let wasmBinary = null;\n\n  [BASIS, wasmBinary] = await Promise.all([\n    await loadLibrary('basis_transcoder.js', 'textures', options),\n    await loadLibrary('basis_transcoder.wasm', 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS = BASIS || globalThis.BASIS;\n  return await initializeBasisTrascoderModule(BASIS, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile} promise\n */\nfunction initializeBasisTrascoderModule(BasisModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisModule(options).then((module) => {\n      const {BasisFile, initializeBasis} = module;\n      initializeBasis();\n      resolve({BasisFile});\n    });\n  });\n}\n\nlet loadBasisEncoderPromise;\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nexport async function loadBasisEncoderModule(options) {\n  const modules = options.modules || {};\n  if (modules.basisEncoder) {\n    return modules.basisEncoder;\n  }\n\n  loadBasisEncoderPromise = loadBasisEncoderPromise || loadBasisEncoder(options);\n  return await loadBasisEncoderPromise;\n}\n\n/**\n * Loads wasm encoder module\n * @param options\n * @returns {BasisFile, KTX2File} promise\n */\nasync function loadBasisEncoder(options) {\n  let BASIS_ENCODER = null;\n  let wasmBinary = null;\n\n  [BASIS_ENCODER, wasmBinary] = await Promise.all([\n    await loadLibrary(BASIS_CDN_ENCODER_JS, 'textures', options),\n    await loadLibrary(BASIS_CDN_ENCODER_WASM, 'textures', options)\n  ]);\n\n  // Depends on how import happened...\n  // @ts-ignore TS2339: Property does not exist on type\n  BASIS_ENCODER = BASIS_ENCODER || globalThis.BASIS;\n  return await initializeBasisEncoderModule(BASIS_ENCODER, wasmBinary);\n}\n\n/**\n * Initialize wasm transcoder module\n * @param BasisEncoderModule - js part of the module\n * @param wasmBinary - wasm part of the module\n * @returns {BasisFile, KTX2File} promise\n */\nfunction initializeBasisEncoderModule(BasisEncoderModule, wasmBinary) {\n  const options: {wasmBinary?} = {};\n\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    // if you try to return BasisModule the browser crashes!\n    BasisEncoderModule(options).then((module) => {\n      const {BasisFile, KTX2File, initializeBasis, BasisEncoder} = module;\n      initializeBasis();\n      resolve({BasisFile, KTX2File, BasisEncoder});\n    });\n  });\n}\n", "/* eslint-disable camelcase */\nexport const GL_EXTENSIONS_CONSTANTS = {\n  // WEBGL_compressed_texture_s3tc\n\n  COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n  COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n  COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n  COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n\n  // WEBGL_compressed_texture_es3\n\n  COMPRESSED_R11_EAC: 0x9270,\n  COMPRESSED_SIGNED_R11_EAC: 0x9271,\n  COMPRESSED_RG11_EAC: 0x9272,\n  COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n  COMPRESSED_RGB8_ETC2: 0x9274,\n  COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n  COMPRESSED_SRGB8_ETC2: 0x9276,\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n\n  // WEBGL_compressed_texture_pvrtc\n\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n\n  // WEBGL_compressed_texture_etc1\n\n  COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n\n  // WEBGL_compressed_texture_atc\n\n  COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c93,\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n\n  // WEBGL_compressed_texture_astc\n\n  COMPRESSED_RGBA_ASTC_4X4_KHR: 0x93b0,\n  COMPRESSED_RGBA_ASTC_5X4_KHR: 0x93b1,\n  COMPRESSED_RGBA_ASTC_5X5_KHR: 0x93b2,\n  COMPRESSED_RGBA_ASTC_6X5_KHR: 0x93b3,\n  COMPRESSED_RGBA_ASTC_6X6_KHR: 0x93b4,\n  COMPRESSED_RGBA_ASTC_8X5_KHR: 0x93b5,\n  COMPRESSED_RGBA_ASTC_8X6_KHR: 0x93b6,\n  COMPRESSED_RGBA_ASTC_8X8_KHR: 0x93b7,\n  COMPRESSED_RGBA_ASTC_10X5_KHR: 0x93b8,\n  COMPRESSED_RGBA_ASTC_10X6_KHR: 0x93b9,\n  COMPRESSED_RGBA_ASTC_10X8_KHR: 0x93ba,\n  COMPRESSED_RGBA_ASTC_10X10_KHR: 0x93bb,\n  COMPRESSED_RGBA_ASTC_12X10_KHR: 0x93bc,\n  COMPRESSED_RGBA_ASTC_12X12_KHR: 0x93bd,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR: 0x93d0,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR: 0x93d1,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR: 0x93d2,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR: 0x93d3,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR: 0x93d4,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR: 0x93d5,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR: 0x93d6,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR: 0x93d7,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR: 0x93d8,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR: 0x93d9,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR: 0x93da,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR: 0x93db,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR: 0x93dc,\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR: 0x93dd,\n\n  // EXT_texture_compression_rgtc\n\n  COMPRESSED_RED_RGTC1_EXT: 0x8dbb,\n  COMPRESSED_SIGNED_RED_RGTC1_EXT: 0x8dbc,\n  COMPRESSED_RED_GREEN_RGTC2_EXT: 0x8dbd,\n  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: 0x8dbe,\n\n  // WEBGL_compressed_texture_s3tc_srgb\n\n  COMPRESSED_SRGB_S3TC_DXT1_EXT: 0x8c4c,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: 0x8c4d,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: 0x8c4e,\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: 0x8c4f\n};\n", "import type {GPUTextureFormat} from '@loaders.gl/schema';\n\nconst BROWSER_PREFIXES = ['', 'WEBKIT_', 'MOZ_'];\n\nconst WEBGL_EXTENSIONS: {[key: string]: GPUTextureFormat} = {\n  /* eslint-disable camelcase */\n  WEBGL_compressed_texture_s3tc: 'dxt',\n  WEBGL_compressed_texture_s3tc_srgb: 'dxt-srgb',\n  WEBGL_compressed_texture_etc1: 'etc1',\n  WEBGL_compressed_texture_etc: 'etc2',\n  WEBGL_compressed_texture_pvrtc: 'pvrtc',\n  WEBGL_compressed_texture_atc: 'atc',\n  WEBGL_compressed_texture_astc: 'astc',\n  EXT_texture_compression_rgtc: 'rgtc'\n  /* eslint-enable camelcase */\n};\n\nlet formats: Set<GPUTextureFormat> | null = null;\n\n/**\n * Returns a list of formats.\n * Creates a temporary WebGLRenderingContext if none is provided.\n *\n * @param gl - Optional context.\n */\nexport function getSupportedGPUTextureFormats(gl?: WebGLRenderingContext): Set<string> {\n  if (!formats) {\n    gl = gl || getWebGLContext() || undefined;\n\n    formats = new Set<GPUTextureFormat>();\n\n    for (const prefix of BROWSER_PREFIXES) {\n      for (const extension in WEBGL_EXTENSIONS) {\n        if (gl && gl.getExtension(`${prefix}${extension}`)) {\n          const gpuTextureFormat = WEBGL_EXTENSIONS[extension];\n          formats.add(gpuTextureFormat);\n        }\n      }\n    }\n  }\n\n  return formats;\n}\n\n/**\n * @returns {WebGLRenderingContext?}\n */\nfunction getWebGLContext() {\n  try {\n    const canvas = document.createElement('canvas');\n    return canvas.getContext('webgl');\n  } catch (error) {\n    return null;\n  }\n}\n", "///////////////////////////////////////////////////\n// Common.\n///////////////////////////////////////////////////\n\n// Injected at compile time, from $npm_package_version.\ndeclare const PACKAGE_VERSION: string;\n\nexport const KTX_WRITER = `KTX-Parse v${PACKAGE_VERSION}`;\n\nexport const NUL = new Uint8Array([0x00]);\n\n\n///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\n\nexport const KTX2_ID = [\n\t// '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n\t0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\n];\n\nexport const HEADER_BYTE_LENGTH = 68; // 13 * 4 + 2 * 8\n\nexport enum KTX2SupercompressionScheme {\n\tNONE = 0,\n\tBASISLZ = 1,\n\tZSTD = 2,\n\tZLIB = 3,\n};\n\n\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\n\nexport enum KTX2DataFormatType {\n    BASICFORMAT = 0x00,\n};\n\nexport const KHR_DF_VENDORID_KHRONOS = 0;\n\nexport const KHR_DF_VERSION = 2;\n\nexport const KHR_DF_BLOCKSIZE = 40;\n\nexport const VK_FORMAT_UNDEFINED = 0;\n\nexport enum KTX2DataFormatModel {\n    UNSPECIFIED = 0,\n\tETC1S = 163,\n\tUASTC = 166,\n};\n\nexport enum KTX2DataFormatPrimaries {\n    UNSPECIFIED = 0,\n    SRGB = 1,\n};\n\nexport enum KTX2DataFormatTransfer {\n    UNSPECIFIED = 0,\n    LINEAR = 1,\n    SRGB = 2,\n    ITU = 3,\n    NTSC = 4,\n    SLOG = 5,\n    SLOG2 = 6,\n};\n\nexport enum KTX2DataFormatFlags {\n    ALPHA_STRAIGHT = 0,\n    ALPHA_PREMULTIPLIED = 1,\n};\n\nexport enum KTX2DataFormatChannelETC1S {\n    RGB = 0,\n    RRR = 3,\n    GGG = 4,\n    AAA = 15,\n};\n\nexport enum KTX2DataFormatChannelUASTC {\n    RGB = 0,\n    RGBA = 3,\n    RRR = 4,\n    RRRG = 5,\n};\n", "import { KHR_DF_BLOCKSIZE, KHR_DF_VENDORID_KHRONOS, KHR_DF_VERSION, KTX2DataFormatFlags, KTX2DataFormatModel, KTX2DataFormatPrimaries, KTX2DataFormatType, KTX2SupercompressionScheme, VK_FORMAT_UNDEFINED } from './constants';\n\n/**\n * Represents an unpacked KTX 2.0 texture container. Data for individual mip levels are stored in\n * the `.levels` array, typically compressed in Basis Universal formats. Additional properties\n * provide metadata required to process, transcode, and upload these textures.\n */\nexport class KTX2Container {\n\t/**\n\t * Specifies the image format using Vulkan VkFormat enum values. When using Basis Universal\n\t * texture formats, `vkFormat` must be VK_FORMAT_UNDEFINED.\n\t */\n\tpublic vkFormat = VK_FORMAT_UNDEFINED;\n\n\t/**\n\t * Size of the data type in bytes used to upload the data to a graphics API. When `vkFormat` is\n\t * VK_FORMAT_UNDEFINED, `typeSize` must be 1.\n\t */\n\tpublic typeSize: number = 1;\n\n\t/** Width of the texture image for level 0, in pixels. */\n\tpublic pixelWidth: number = 0;\n\n\t/** Height of the texture image for level 0, in pixels. */\n\tpublic pixelHeight: number = 0;\n\n\t/** Depth of the texture image for level 0, in pixels (3D textures only). */\n\tpublic pixelDepth: number = 0;\n\n\t/** Number of array elements (array textures only). */\n\tpublic layerCount: number = 0;\n\n\t/**\n\t * Number of cubemap faces. For cubemaps and cubemap arrays, `faceCount` must be 6. For all\n\t * other textures, `faceCount` must be 1. Cubemap faces are stored in +X, -X, +Y, -Y, +Z, -Z\n\t * order.\n\t */\n\tpublic faceCount: number = 1;\n\n\t/** Indicates which supercompression scheme has been applied to mip level images, if any. */\n\tpublic supercompressionScheme = KTX2SupercompressionScheme.NONE;\n\n\t/** Mip levels, ordered largest (original) to smallest (~1px). */\n\tpublic levels: KTX2Level[] = [];\n\n\t/** Data Format Descriptor. */\n\tpublic dataFormatDescriptor: KTX2DataFormatDescriptorBasicFormat[] = [{\n\t\tvendorId: KHR_DF_VENDORID_KHRONOS,\n\t\tdescriptorType: KTX2DataFormatType.BASICFORMAT,\n\t\tversionNumber: KHR_DF_VERSION,\n\t\tdescriptorBlockSize: KHR_DF_BLOCKSIZE,\n\t\tcolorModel: KTX2DataFormatModel.UNSPECIFIED,\n\t\tcolorPrimaries: KTX2DataFormatPrimaries.SRGB,\n\t\ttransferFunction: KTX2DataFormatPrimaries.SRGB,\n\t\tflags: KTX2DataFormatFlags.ALPHA_STRAIGHT,\n\t\ttexelBlockDimension: {x: 4, y: 4, z: 1, w: 1},\n\t\tbytesPlane: [],\n\t\tsamples: [],\n\t}];\n\n\t/** Key/Value Data. */\n\tpublic keyValue: {[key: string]: string | Uint8Array} = {};\n\n\t/** Supercompression Global Data. */\n\tpublic globalData: KTX2GlobalDataBasisLZ | null = null;\n}\n\n\n///////////////////////////////////////////////////\n// Mip Levels.\n///////////////////////////////////////////////////\n\nexport interface KTX2Level {\n\t/** Compressed data of the mip level. */\n\tlevelData: Uint8Array;\n\n\t/**\n\t * Size of the mip level after reflation from supercompression, if applicable. When\n\t * `supercompressionType` is BASISLZ, `uncompressedByteLength` must be 0. When\n\t * `supercompressionType` is `NONE`, `uncompressedByteLength` must match the `levelData` byte\n\t * length.\n\t *\n\t * _**NOTICE:** this implies that for formats such as UASTC, `uncompressedByteLength` may\n\t * indicate size after ZSTD reflation (and of transcoded ASTC data), but does _not_ indicate\n\t * size of decoded RGBA32 pixels._\n\t */\n\tuncompressedByteLength: number;\n};\n\n\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\n\nexport interface KTX2DataFormatDescriptorBasicFormat {\n\tvendorId: number;\n\tdescriptorType: number;\n\tversionNumber: number;\n\tdescriptorBlockSize: number;\n\tcolorModel: number;\n\tcolorPrimaries: number;\n\ttransferFunction: number;\n\tflags: number;\n\ttexelBlockDimension: KTX2BasicFormatTexelBlockDimensions;\n\tbytesPlane: number[];\n\tsamples: KTX2BasicFormatSample[],\n};\n\nexport interface KTX2BasicFormatTexelBlockDimensions {\n\tx: number;\n\ty: number;\n\tz: number;\n\tw: number;\n};\n\nexport interface KTX2BasicFormatSample {\n\tbitOffset: number;\n\tbitLength: number;\n\tchannelID: number;\n\tsamplePosition: number[];\n\tsampleLower: number;\n\tsampleUpper: number;\n};\n\n\n///////////////////////////////////////////////////\n// Supercompression Global Data.\n///////////////////////////////////////////////////\n\nexport interface KTX2GlobalDataBasisLZ {\n\tendpointCount: number;\n\tselectorCount: number;\n\timageDescs: KTX2GlobalDataBasisLZImageDesc[];\n\tendpointsData: Uint8Array;\n\tselectorsData: Uint8Array;\n\ttablesData: Uint8Array;\n\textendedData: Uint8Array;\n};\n\ninterface KTX2GlobalDataBasisLZImageDesc {\n\timageFlags: number;\n\trgbSliceByteOffset: number;\n\trgbSliceByteLength: number;\n\talphaSliceByteOffset: number;\n\talphaSliceByteLength: number;\n};\n", "export class BufferReader {\n\tprivate _dataView: DataView;\n\tprivate _littleEndian: boolean;\n\tpublic _offset: number;\n\n\tconstructor(data: Uint8Array, byteOffset: number, byteLength: number, littleEndian: boolean) {\n\t\tthis._dataView = new DataView(data.buffer, data.byteOffset + byteOffset, byteLength);\n\t\tthis._littleEndian = littleEndian;\n\t\tthis._offset = 0;\n\t}\n\n\t_nextUint8() {\n\t\tconst value = this._dataView.getUint8(this._offset);\n\t\tthis._offset += 1;\n\t\treturn value;\n\t}\n\n\t_nextUint16() {\n\t\tconst value = this._dataView.getUint16(this._offset, this._littleEndian);\n\t\tthis._offset += 2;\n\t\treturn value;\n\t}\n\n\t_nextUint32() {\n\t\tconst value = this._dataView.getUint32(this._offset, this._littleEndian);\n\t\tthis._offset += 4;\n\t\treturn value;\n\t}\n\n\t_nextUint64() {\n\t\tconst left = this._dataView.getUint32(this._offset, this._littleEndian);\n\t\tconst right = this._dataView.getUint32(this._offset + 4, this._littleEndian);\n\t\t// TODO(cleanup): Just test this...\n\t\t// const value = this._littleEndian ? left + (2 ** 32 * right) : (2 ** 32 * left) + right;\n\t\tconst value = left + (2 ** 32 * right);\n\t\tthis._offset += 8;\n\t\treturn value;\n\t}\n\n\t_skip(bytes: number) {\n\t\tthis._offset += bytes;\n\t\treturn this;\n\t}\n\n\t_scan(maxByteLength: number, term: number = 0x00): Uint8Array {\n\t\tconst byteOffset = this._offset;\n\t\tlet byteLength = 0;\n\t\twhile (this._dataView.getUint8(this._offset) !== term && byteLength < maxByteLength) {\n\t\t\tbyteLength++;\n\t\t\tthis._offset++;\n\t\t}\n\n\t\tif (byteLength < maxByteLength) this._offset++;\n\n\t\treturn new Uint8Array(\n\t\t\tthis._dataView.buffer,\n\t\t\tthis._dataView.byteOffset + byteOffset,\n\t\t\tbyteLength\n\t\t);\n\t}\n}\n", "\n/** Encodes text to an ArrayBuffer. */\nexport function encodeText(text: string): Uint8Array {\n\tif (typeof TextEncoder !== 'undefined') {\n\t\treturn new TextEncoder().encode(text);\n\t}\n\treturn Buffer.from(text);\n}\n\n/** Decodes an ArrayBuffer to text. */\nexport function decodeText(buffer: Uint8Array): string {\n\tif (typeof TextDecoder !== 'undefined') {\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\treturn Buffer.from(buffer).toString('utf8');\n}\n\n/** Concatenates N ArrayBuffers. */\nexport function concat (buffers: (ArrayBuffer | Uint8Array)[]): Uint8Array {\n\tlet totalByteLength = 0;\n\tfor (const buffer of buffers) {\n\t\ttotalByteLength += buffer.byteLength;\n\t}\n\n\tconst result = new Uint8Array(totalByteLength);\n\tlet byteOffset = 0;\n\n\tfor (const buffer of buffers) {\n\t\tresult.set(new Uint8Array(buffer), byteOffset);\n\t\tbyteOffset += buffer.byteLength;\n\t}\n\n\treturn result;\n}", "import { BufferReader } from './buffer-reader';\nimport { KTX2_ID } from './constants';\nimport { KTX2Container, KTX2DataFormatDescriptorBasicFormat } from './container';\nimport { decodeText } from './util';\n\n/**\n * Parses a KTX 2.0 file, returning an unpacked {@link KTX2Container} instance with all associated\n * data. The container's mip levels and other binary data are pointers into the original file, not\n * copies, so the original file should not be overwritten after reading.\n *\n * @param data Bytes of KTX 2.0 file, as Uint8Array or Buffer.\n */\nexport function read(data: Uint8Array): KTX2Container {\n\n\t///////////////////////////////////////////////////\n\t// KTX 2.0 Identifier.\n\t///////////////////////////////////////////////////\n\n\tconst id = new Uint8Array(data.buffer, data.byteOffset, KTX2_ID.length);\n\tif (id[0] !== KTX2_ID[0] || // '´'\n\t\tid[1] !== KTX2_ID[1] || // 'K'\n\t\tid[2] !== KTX2_ID[2] || // 'T'\n\t\tid[3] !== KTX2_ID[3] || // 'X'\n\t\tid[4] !== KTX2_ID[4] || // ' '\n\t\tid[5] !== KTX2_ID[5] || // '2'\n\t\tid[6] !== KTX2_ID[6] || // '0'\n\t\tid[7] !== KTX2_ID[7] || // 'ª'\n\t\tid[8] !== KTX2_ID[8] || // '\\r'\n\t\tid[9] !== KTX2_ID[9] || // '\\n'\n\t\tid[10] !== KTX2_ID[10] || // '\\x1A'\n\t\tid[11] !== KTX2_ID[11] // '\\n'\n\t) {\n\t\tthrow new Error('Missing KTX 2.0 identifier.');\n\t}\n\n\tconst container = new KTX2Container();\n\n\t///////////////////////////////////////////////////\n\t// Header.\n\t///////////////////////////////////////////////////\n\n\tconst headerByteLength = 17 * Uint32Array.BYTES_PER_ELEMENT;\n\tconst headerReader = new BufferReader(data, KTX2_ID.length, headerByteLength, true);\n\n\tcontainer.vkFormat = headerReader._nextUint32();\n\tcontainer.typeSize = headerReader._nextUint32();\n\tcontainer.pixelWidth = headerReader._nextUint32();\n\tcontainer.pixelHeight = headerReader._nextUint32();\n\tcontainer.pixelDepth = headerReader._nextUint32();\n\tcontainer.layerCount = headerReader._nextUint32();\n\tcontainer.faceCount = headerReader._nextUint32();\n\n\tconst levelCount = headerReader._nextUint32();\n\n\tcontainer.supercompressionScheme = headerReader._nextUint32();\n\n\tconst dfdByteOffset = headerReader._nextUint32();\n\tconst dfdByteLength = headerReader._nextUint32();\n\tconst kvdByteOffset = headerReader._nextUint32();\n\tconst kvdByteLength = headerReader._nextUint32();\n\tconst sgdByteOffset = headerReader._nextUint64();\n\tconst sgdByteLength = headerReader._nextUint64();\n\n\t///////////////////////////////////////////////////\n\t// Level Index.\n\t///////////////////////////////////////////////////\n\n\tconst levelByteLength = levelCount * 3 * 8;\n\tconst levelReader = new BufferReader(data, KTX2_ID.length + headerByteLength, levelByteLength, true);\n\n\tfor (let i = 0; i < levelCount; i ++) {\n\t\tcontainer.levels.push({\n\t\t\tlevelData: new Uint8Array(data.buffer, data.byteOffset + levelReader._nextUint64(), levelReader._nextUint64()),\n\t\t\tuncompressedByteLength: levelReader._nextUint64(),\n\t\t});\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Data Format Descriptor (DFD).\n\t///////////////////////////////////////////////////\n\n\tconst dfdReader = new BufferReader(data, dfdByteOffset, dfdByteLength, true);\n\n\tconst dfd: KTX2DataFormatDescriptorBasicFormat = {\n\t\tvendorId: dfdReader._skip(4 /* totalSize */)._nextUint16(),\n\t\tdescriptorType: dfdReader._nextUint16(),\n\t\tversionNumber: dfdReader._nextUint16(),\n\t\tdescriptorBlockSize: dfdReader._nextUint16(),\n\t\tcolorModel: dfdReader._nextUint8(),\n\t\tcolorPrimaries: dfdReader._nextUint8(),\n\t\ttransferFunction: dfdReader._nextUint8(),\n\t\tflags: dfdReader._nextUint8(),\n\t\ttexelBlockDimension: {\n\t\t\tx: dfdReader._nextUint8() + 1,\n\t\t\ty: dfdReader._nextUint8() + 1,\n\t\t\tz: dfdReader._nextUint8() + 1,\n\t\t\tw: dfdReader._nextUint8() + 1,\n\t\t},\n\t\tbytesPlane: [\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t\tdfdReader._nextUint8(),\n\t\t],\n\t\tsamples: [],\n\t};\n\n\tconst sampleStart = 6;\n\tconst sampleWords = 4;\n\tconst numSamples = (dfd.descriptorBlockSize / 4 - sampleStart) / sampleWords;\n\n\tfor (let i = 0; i < numSamples; i ++) {\n\t\tdfd.samples[ i ] = {\n\t\t\tbitOffset: dfdReader._nextUint16(),\n\t\t\tbitLength: dfdReader._nextUint8(),\n\t\t\tchannelID: dfdReader._nextUint8(),\n\t\t\tsamplePosition: [\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t\tdfdReader._nextUint8(),\n\t\t\t],\n\t\t\tsampleLower: dfdReader._nextUint32(),\n\t\t\tsampleUpper: dfdReader._nextUint32(),\n\t\t};\n\t}\n\n\tcontainer.dataFormatDescriptor.length = 0;\n\tcontainer.dataFormatDescriptor.push(dfd);\n\n\n\t///////////////////////////////////////////////////\n\t// Key/Value Data (KVD).\n\t///////////////////////////////////////////////////\n\n\tconst kvdReader = new BufferReader(data, kvdByteOffset, kvdByteLength, true);\n\n\twhile (kvdReader._offset < kvdByteLength) {\n\t\tconst keyValueByteLength = kvdReader._nextUint32();\n\t\tconst keyData = kvdReader._scan(keyValueByteLength);\n\t\tconst key = decodeText(keyData);\n\t\tconst valueData = kvdReader._scan(keyValueByteLength - keyData.byteLength);\n\t\tcontainer.keyValue[key] = key.match(/^ktx/i) ? decodeText(valueData) : valueData;\n\n\t\t// 4-byte alignment.\n\t\tif (keyValueByteLength % 4) kvdReader._skip(4 - (keyValueByteLength % 4));\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Supercompression Global Data (SGD).\n\t///////////////////////////////////////////////////\n\n\tif (sgdByteLength <= 0) return container;\n\n\tconst sgdReader = new BufferReader(data, sgdByteOffset, sgdByteLength, true);\n\n\tconst endpointCount = sgdReader._nextUint16();\n\tconst selectorCount = sgdReader._nextUint16();\n\tconst endpointsByteLength = sgdReader._nextUint32();\n\tconst selectorsByteLength = sgdReader._nextUint32();\n\tconst tablesByteLength = sgdReader._nextUint32();\n\tconst extendedByteLength = sgdReader._nextUint32();\n\n\tconst imageDescs = [];\n\tfor (let i = 0; i < levelCount; i ++) {\n\t\timageDescs.push({\n\t\t\timageFlags: sgdReader._nextUint32(),\n\t\t\trgbSliceByteOffset: sgdReader._nextUint32(),\n\t\t\trgbSliceByteLength: sgdReader._nextUint32(),\n\t\t\talphaSliceByteOffset: sgdReader._nextUint32(),\n\t\t\talphaSliceByteLength: sgdReader._nextUint32(),\n\t\t});\n\t}\n\n\tconst endpointsByteOffset = sgdByteOffset + sgdReader._offset;\n\tconst selectorsByteOffset = endpointsByteOffset + endpointsByteLength;\n\tconst tablesByteOffset = selectorsByteOffset + selectorsByteLength;\n\tconst extendedByteOffset = tablesByteOffset + tablesByteLength;\n\n\tconst endpointsData = new Uint8Array(data.buffer, data.byteOffset + endpointsByteOffset, endpointsByteLength);\n\tconst selectorsData = new Uint8Array(data.buffer, data.byteOffset + selectorsByteOffset, selectorsByteLength);\n\tconst tablesData = new Uint8Array(data.buffer, data.byteOffset + tablesByteOffset, tablesByteLength);\n\tconst extendedData = new Uint8Array(data.buffer, data.byteOffset + extendedByteOffset, extendedByteLength);\n\n\tcontainer.globalData = {\n\t\tendpointCount,\n\t\tselectorCount,\n\t\timageDescs,\n\t\tendpointsData,\n\t\tselectorsData,\n\t\ttablesData,\n\t\textendedData,\n\t};\n\n\treturn container;\n}\n", "import { HEADER_BYTE_LENGTH, KTX2DataFormatType, KTX2_ID, KTX_WRITER, NUL } from './constants';\nimport { KTX2Container } from './container';\nimport { concat, encodeText } from './util';\n\ninterface WriteOptions {keepWriter?: boolean};\nconst DEFAULT_OPTIONS: WriteOptions = {keepWriter: false};\n\n/**\n * Serializes a {@link KTX2Container} instance to a KTX 2.0 file. Mip levels and other binary data\n * are copied into the resulting Uint8Array, so the original container can safely be edited or\n * destroyed after it is serialized.\n *\n * Options:\n * - keepWriter: If true, 'KTXWriter' key/value field is written as provided by the container.\n * \t\tOtherwise, a string for the current ktx-parse version is generated. Default: false.\n *\n * @param container\n * @param options\n */\nexport function write(container: KTX2Container, options: WriteOptions = {}): Uint8Array {\n\toptions = {...DEFAULT_OPTIONS, ...options};\n\n\t///////////////////////////////////////////////////\n\t// Supercompression Global Data (SGD).\n\t///////////////////////////////////////////////////\n\n\tlet sgdBuffer = new ArrayBuffer(0);\n\tif (container.globalData) {\n\t\tconst sgdHeaderBuffer = new ArrayBuffer(20 + container.globalData.imageDescs.length * 5 * 4);\n\t\tconst sgdHeaderView = new DataView(sgdHeaderBuffer);\n\t\tsgdHeaderView.setUint16(0, container.globalData.endpointCount, true);\n\t\tsgdHeaderView.setUint16(2, container.globalData.selectorCount, true);\n\t\tsgdHeaderView.setUint32(4, container.globalData.endpointsData.byteLength, true);\n\t\tsgdHeaderView.setUint32(8, container.globalData.selectorsData.byteLength, true);\n\t\tsgdHeaderView.setUint32(12, container.globalData.tablesData.byteLength, true);\n\t\tsgdHeaderView.setUint32(16, container.globalData.extendedData.byteLength, true);\n\n\t\tfor (let i = 0; i < container.globalData.imageDescs.length; i++) {\n\t\t\tconst imageDesc = container.globalData.imageDescs[i];\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 0, imageDesc.imageFlags, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 4, imageDesc.rgbSliceByteOffset, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 8, imageDesc.rgbSliceByteLength, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 12, imageDesc.alphaSliceByteOffset, true);\n\t\t\tsgdHeaderView.setUint32(20 + i * 5 * 4 + 16, imageDesc.alphaSliceByteLength, true);\n\t\t}\n\n\t\tsgdBuffer = concat([\n\t\t\tsgdHeaderBuffer,\n\t\t\tcontainer.globalData.endpointsData,\n\t\t\tcontainer.globalData.selectorsData,\n\t\t\tcontainer.globalData.tablesData,\n\t\t\tcontainer.globalData.extendedData,\n\t\t]);\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Key/Value Data (KVD).\n\t///////////////////////////////////////////////////\n\n\tconst keyValueData: Uint8Array[] = [];\n\tlet keyValue = container.keyValue;\n\n\tif (!options.keepWriter) {\n\t\tkeyValue = {...container.keyValue, 'KTXwriter': KTX_WRITER};\n\t}\n\n\tfor (const key in keyValue) {\n\t\tconst value = keyValue[key];\n\t\tconst keyData = encodeText(key);\n\t\tconst valueData = typeof value === 'string' ? encodeText(value) : value;\n\t\tconst kvByteLength = keyData.byteLength + 1 + valueData.byteLength + 1;\n\t\tconst kvPadding = kvByteLength % 4 ? (4 - (kvByteLength % 4)) : 0; // align(4)\n\t\tkeyValueData.push(concat([\n\t\t\tnew Uint32Array([kvByteLength]),\n\t\t\tkeyData,\n\t\t\tNUL,\n\t\t\tvalueData,\n\t\t\tNUL,\n\t\t\tnew Uint8Array(kvPadding).fill(0x00), // align(4)\n\t\t]));\n\t}\n\n\tconst kvdBuffer = concat(keyValueData);\n\n\n\t///////////////////////////////////////////////////\n\t// Data Format Descriptor (DFD).\n\t///////////////////////////////////////////////////\n\n\tconst dfdBuffer = new ArrayBuffer(44);\n\tconst dfdView = new DataView(dfdBuffer);\n\n\tif (container.dataFormatDescriptor.length !== 1\n\t\t\t|| container.dataFormatDescriptor[0].descriptorType !== KTX2DataFormatType.BASICFORMAT) {\n\t\tthrow new Error('Only BASICFORMAT Data Format Descriptor output supported.');\n\t}\n\n\tconst dfd = container.dataFormatDescriptor[0];\n\n\tdfdView.setUint32(0, 44, true);\n\tdfdView.setUint16(4, dfd.vendorId, true);\n\tdfdView.setUint16(6, dfd.descriptorType, true);\n\tdfdView.setUint16(8, dfd.versionNumber, true);\n\tdfdView.setUint16(10, dfd.descriptorBlockSize, true);\n\n\tdfdView.setUint8(12, dfd.colorModel);\n\tdfdView.setUint8(13, dfd.colorPrimaries);\n\tdfdView.setUint8(14, dfd.transferFunction);\n\tdfdView.setUint8(15, dfd.flags);\n\n\tdfdView.setUint8(16, dfd.texelBlockDimension.x - 1);\n\tdfdView.setUint8(17, dfd.texelBlockDimension.y - 1);\n\tdfdView.setUint8(18, dfd.texelBlockDimension.z - 1);\n\tdfdView.setUint8(19, dfd.texelBlockDimension.w - 1);\n\n\tfor (let i = 0; i < 8; i++) dfdView.setUint8(20 + i, dfd.bytesPlane[i]);\n\n\tfor (let i = 0; i < dfd.samples.length; i++) {\n\t\tconst sample = dfd.samples[i];\n\t\tconst sampleByteOffset = 28 + i * 16;\n\n\t\tdfdView.setUint16(sampleByteOffset + 0, sample.bitOffset, true);\n\t\tdfdView.setUint8(sampleByteOffset + 2, sample.bitLength);\n\t\tdfdView.setUint8(sampleByteOffset + 3, sample.channelID);\n\n\t\tdfdView.setUint8(sampleByteOffset + 4, sample.samplePosition[0]);\n\t\tdfdView.setUint8(sampleByteOffset + 5, sample.samplePosition[1]);\n\t\tdfdView.setUint8(sampleByteOffset + 6, sample.samplePosition[2]);\n\t\tdfdView.setUint8(sampleByteOffset + 7, sample.samplePosition[3]);\n\n\t\tdfdView.setUint32(sampleByteOffset + 8, sample.sampleLower, true);\n\t\tdfdView.setUint32(sampleByteOffset + 12, sample.sampleUpper, true);\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Data alignment.\n\t///////////////////////////////////////////////////\n\n\tconst dfdByteOffset = KTX2_ID.length + HEADER_BYTE_LENGTH + container.levels.length * 3 * 8;\n\tconst kvdByteOffset = dfdByteOffset + dfdBuffer.byteLength;\n\tlet sgdByteOffset = kvdByteOffset + kvdBuffer.byteLength;\n\tif (sgdByteOffset % 8) sgdByteOffset += 8 - (sgdByteOffset % 8); // align(8)\n\n\n\t///////////////////////////////////////////////////\n\t// Level Index.\n\t///////////////////////////////////////////////////\n\n\tconst levelData: Uint8Array[] = [];\n\tconst levelIndex = new DataView(new ArrayBuffer(container.levels.length * 3 * 8));\n\n\tlet levelDataByteOffset = sgdByteOffset + sgdBuffer.byteLength;\n\tfor (let i = 0; i < container.levels.length; i++) {\n\t\tconst level = container.levels[i];\n\t\tlevelData.push(level.levelData);\n\t\tlevelIndex.setBigUint64(i * 24 + 0, BigInt(levelDataByteOffset), true);\n\t\tlevelIndex.setBigUint64(i * 24 + 8, BigInt(level.levelData.byteLength), true);\n\t\tlevelIndex.setBigUint64(i * 24 + 16, BigInt(level.uncompressedByteLength), true);\n\t\tlevelDataByteOffset += level.levelData.byteLength;\n\t}\n\n\n\t///////////////////////////////////////////////////\n\t// Header.\n\t///////////////////////////////////////////////////\n\n\tconst headerBuffer = new ArrayBuffer(HEADER_BYTE_LENGTH);\n\tconst headerView = new DataView(headerBuffer);\n\theaderView.setUint32(0, container.vkFormat, true);\n\theaderView.setUint32(4, container.typeSize, true);\n\theaderView.setUint32(8, container.pixelWidth, true);\n\theaderView.setUint32(12, container.pixelHeight, true);\n\theaderView.setUint32(16, container.pixelDepth, true);\n\theaderView.setUint32(20, container.layerCount, true);\n\theaderView.setUint32(24, container.faceCount, true);\n\theaderView.setUint32(28, container.levels.length, true);\n\theaderView.setUint32(32, container.supercompressionScheme, true);\n\n\theaderView.setUint32(36, dfdByteOffset, true);\n\theaderView.setUint32(40, dfdBuffer.byteLength, true);\n\theaderView.setUint32(44, kvdByteOffset, true);\n\theaderView.setUint32(48, kvdBuffer.byteLength, true);\n\theaderView.setBigUint64(52, BigInt(sgdByteOffset), true);\n\theaderView.setBigUint64(60, BigInt(sgdBuffer.byteLength), true);\n\n\n\t///////////////////////////////////////////////////\n\t// Compose.\n\t///////////////////////////////////////////////////\n\n\treturn new Uint8Array(concat([\n\t\tnew Uint8Array(KTX2_ID).buffer,\n\t\theaderBuffer,\n\t\tlevelIndex.buffer,\n\t\tdfdBuffer,\n\t\tkvdBuffer,\n\t\tnew ArrayBuffer(sgdByteOffset - (kvdByteOffset + kvdBuffer.byteLength)), // align(8)\n\t\tsgdBuffer,\n\t\t...levelData,\n\t]));\n}\n\n", "import type {TextureLevel} from '@loaders.gl/schema';\n\nexport type CompressedTextureExtractOptions = {\n  mipMapLevels: number;\n  width: number;\n  height: number;\n  sizeFunction: Function;\n  internalFormat: number;\n};\n\n/**\n * Extract mipmap images from compressed texture buffer\n * @param data - binary data of compressed texture or Array of level objects\n * @param options.mipMapLevels - number of mipmap level inside image\n * @param options.width - width of 0 - level\n * @param options.height - height of 0 - level\n * @param options.sizeFunction - format-related function to calculate level size in bytes\n * @param options.internalFormat - WebGL compatible format code\n * @returns Array of the texture levels\n */\nexport function extractMipmapImages(\n  data: Uint8Array | object[],\n  options: CompressedTextureExtractOptions\n): TextureLevel[] {\n  const images = new Array(options.mipMapLevels);\n\n  let levelWidth = options.width;\n  let levelHeight = options.height;\n  let offset = 0;\n\n  for (let i = 0; i < options.mipMapLevels; ++i) {\n    // @ts-expect-error\n    const levelSize = getLevelSize(options, levelWidth, levelHeight, data, i);\n    // @ts-expect-error\n    const levelData = getLevelData(data, i, offset, levelSize);\n\n    images[i] = {\n      compressed: true,\n      format: options.internalFormat,\n      data: levelData,\n      width: levelWidth,\n      height: levelHeight,\n      levelSize\n    };\n\n    levelWidth = Math.max(1, levelWidth >> 1);\n    levelHeight = Math.max(1, levelHeight >> 1);\n\n    offset += levelSize;\n  }\n  return images;\n}\n\nfunction getLevelData(\n  data: Uint8Array,\n  index: number,\n  offset: number,\n  levelSize: number\n): Uint8Array {\n  if (!Array.isArray(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset + offset, levelSize);\n  }\n\n  return data[index].levelData;\n}\n\nfunction getLevelSize(\n  options: CompressedTextureExtractOptions,\n  levelWidth: number,\n  levelHeight: number,\n  data: Uint8Array[] | object[],\n  index: number\n): number {\n  if (!Array.isArray(data)) {\n    return options.sizeFunction(levelWidth, levelHeight);\n  }\n  return options.sizeFunction(data[index]);\n}\n", "import {GL_EXTENSIONS_CONSTANTS} from '../gl-extensions';\n\nconst VULKAN_TO_WEBGL_FORMAT_MAP: Record<number, number> = {\n  131: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT,\n  132: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_S3TC_DXT1_EXT,\n  133: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT1_EXT,\n  134: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT,\n  135: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n  136: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,\n  137: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n  138: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,\n  139: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RED_RGTC1_EXT,\n  140: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_RED_RGTC1_EXT,\n  141: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RED_GREEN_RGTC2_EXT,\n  142: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT,\n  147: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_ETC2,\n  148: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ETC2,\n  149: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  150: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n  151: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA8_ETC2_EAC,\n  152: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,\n  153: GL_EXTENSIONS_CONSTANTS.COMPRESSED_R11_EAC,\n  154: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_R11_EAC,\n  155: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RG11_EAC,\n  156: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SIGNED_RG11_EAC,\n  // @ts-ignore\n  157: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  158: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR,\n  // @ts-ignore\n  159: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  160: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR,\n  // @ts-ignore\n  161: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  162: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR,\n  // @ts-ignore\n  163: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  164: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR,\n  // @ts-ignore\n  165: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  166: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR,\n  // @ts-ignore\n  167: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  168: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR,\n  // @ts-ignore\n  169: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  170: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR,\n  // @ts-ignore\n  171: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  172: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR,\n  // @ts-ignore\n  173: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  174: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR,\n  // @ts-ignore\n  175: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  176: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR,\n  // @ts-ignore\n  177: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  178: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR,\n  // @ts-ignore\n  179: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  180: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR,\n  // @ts-ignore\n  181: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  182: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR,\n  // @ts-ignore\n  183: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x12_KHR,\n  // @ts-ignore\n  184: GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR,\n  1000054000: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\n  1000054001: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n  // @ts-ignore\n  1000066000: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4x4_KHR,\n  // @ts-ignore\n  1000066001: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x4_KHR,\n  // @ts-ignore\n  1000066002: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5x5_KHR,\n  // @ts-ignore\n  1000066003: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x5_KHR,\n  // @ts-ignore\n  1000066004: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6x6_KHR,\n  // @ts-ignore\n  1000066005: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x5_KHR,\n  // @ts-ignore\n  1000066006: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x6_KHR,\n  // @ts-ignore\n  1000066007: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8x8_KHR,\n  // @ts-ignore\n  1000066008: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x5_KHR,\n  // @ts-ignore\n  1000066009: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x6_KHR,\n  // @ts-ignore\n  1000066010: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x8_KHR,\n  // @ts-ignore\n  1000066011: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10x10_KHR,\n  // @ts-ignore\n  1000066012: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x10_KHR,\n  // @ts-ignore\n  1000066013: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12x12_KHR\n};\n\n/**\n * Returns WebGl format based on Vulkan format\n * Vulkan to WebGl format mapping provided here http://github.khronos.org/KTX-Specification/#formatMapping\n * Vulkan name to format number mapping provided here: https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkFormat.html\n * @param vkFormat\n * @returns WebGL / OpenGL constant\n */\nexport function mapVkFormatToWebGL(vkFormat: number): number {\n  return VULKAN_TO_WEBGL_FORMAT_MAP[vkFormat];\n}\n", "import type {TextureLevel} from '@loaders.gl/schema';\nimport {read} from 'ktx-parse';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\nimport {mapVkFormatToWebGL} from '../utils/ktx-format-helper';\n\nconst KTX2_ID = [\n  // '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n  0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a\n];\n\n// eslint-disable-next-line complexity\nexport function isKTX(data: ArrayBuffer) {\n  // const id = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  const id = new Uint8Array(data);\n  const notKTX =\n    id.byteLength < KTX2_ID.length ||\n    id[0] !== KTX2_ID[0] || // '´'\n    id[1] !== KTX2_ID[1] || // 'K'\n    id[2] !== KTX2_ID[2] || // 'T'\n    id[3] !== KTX2_ID[3] || // 'X'\n    id[4] !== KTX2_ID[4] || // ' '\n    id[5] !== KTX2_ID[5] || // '2'\n    id[6] !== KTX2_ID[6] || // '0'\n    id[7] !== KTX2_ID[7] || // 'ª'\n    id[8] !== KTX2_ID[8] || // '\\r'\n    id[9] !== KTX2_ID[9] || // '\\n'\n    id[10] !== KTX2_ID[10] || // '\\x1A'\n    id[11] !== KTX2_ID[11]; // '\\n'\n\n  return !notKTX;\n}\n\nexport function parseKTX(arrayBuffer: ArrayBuffer): TextureLevel[] {\n  const uint8Array = new Uint8Array(arrayBuffer);\n  const ktx = read(uint8Array);\n  const mipMapLevels = Math.max(1, ktx.levels.length);\n  const width = ktx.pixelWidth;\n  const height = ktx.pixelHeight;\n  const internalFormat = mapVkFormatToWebGL(ktx.vkFormat);\n\n  return extractMipmapImages(ktx.levels, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction: (level: any): number => level.uncompressedByteLength,\n    internalFormat\n  });\n}\n", "/* eslint-disable indent */\nimport type {TextureLevel} from '@loaders.gl/schema';\nimport {loadBasisEncoderModule, loadBasisTrascoderModule} from './basis-module-loader';\nimport {GL_EXTENSIONS_CONSTANTS} from '../gl-extensions';\nimport {getSupportedGPUTextureFormats} from '../utils/texture-formats';\nimport {isKTX} from './parse-ktx';\n\nexport type BasisFormat =\n  | 'etc1'\n  | 'etc2'\n  | 'bc1'\n  | 'bc3'\n  | 'bc4'\n  | 'bc5'\n  | 'bc7-m6-opaque-only'\n  | 'bc7-m5'\n  | 'pvrtc1-4-rgb'\n  | 'pvrtc1-4-rgba'\n  | 'astc-4x4'\n  | 'atc-rgb'\n  | 'atc-rgba-interpolated-alpha'\n  | 'rgba32'\n  | 'rgb565'\n  | 'bgr565'\n  | 'rgba4444';\n\ntype BasisOutputOptions = {\n  basisFormat: number;\n  compressed: boolean;\n  format?: number;\n};\n\nconst OutputFormat: Record<string, BasisOutputOptions> = {\n  etc1: {\n    basisFormat: 0,\n    compressed: true,\n    format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_ETC1_WEBGL\n  },\n  etc2: {basisFormat: 1, compressed: true},\n  bc1: {\n    basisFormat: 2,\n    compressed: true,\n    format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT\n  },\n  bc3: {\n    basisFormat: 3,\n    compressed: true,\n    format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT\n  },\n  bc4: {basisFormat: 4, compressed: true},\n  bc5: {basisFormat: 5, compressed: true},\n  'bc7-m6-opaque-only': {basisFormat: 6, compressed: true},\n  'bc7-m5': {basisFormat: 7, compressed: true},\n  'pvrtc1-4-rgb': {\n    basisFormat: 8,\n    compressed: true,\n    format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG\n  },\n  'pvrtc1-4-rgba': {\n    basisFormat: 9,\n    compressed: true,\n    format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG\n  },\n  'astc-4x4': {\n    basisFormat: 10,\n    compressed: true,\n    format: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4X4_KHR\n  },\n  'atc-rgb': {basisFormat: 11, compressed: true},\n  'atc-rgba-interpolated-alpha': {basisFormat: 12, compressed: true},\n  rgba32: {basisFormat: 13, compressed: false},\n  rgb565: {basisFormat: 14, compressed: false},\n  bgr565: {basisFormat: 15, compressed: false},\n  rgba4444: {basisFormat: 16, compressed: false}\n};\n\n/**\n * parse data with a Binomial Basis_Universal module\n * @param data\n * @param options\n * @returns compressed texture data\n */\nexport default async function parseBasis(data: ArrayBuffer, options): Promise<TextureLevel[][]> {\n  if (options.basis.containerFormat === 'auto') {\n    if (isKTX(data)) {\n      const fileConstructors = await loadBasisEncoderModule(options);\n      return parseKTX2File(fileConstructors.KTX2File, data, options);\n    }\n    const {BasisFile} = await loadBasisTrascoderModule(options);\n    return parseBasisFile(BasisFile, data, options);\n  }\n  switch (options.basis.module) {\n    case 'encoder':\n      const fileConstructors = await loadBasisEncoderModule(options);\n      switch (options.basis.containerFormat) {\n        case 'ktx2':\n          return parseKTX2File(fileConstructors.KTX2File, data, options);\n        case 'basis':\n        default:\n          return parseBasisFile(fileConstructors.BasisFile, data, options);\n      }\n    case 'transcoder':\n    default:\n      const {BasisFile} = await loadBasisTrascoderModule(options);\n      return parseBasisFile(BasisFile, data, options);\n  }\n}\n\n/**\n * Parse *.basis file data\n * @param BasisFile - initialized transcoder module\n * @param data\n * @param options\n * @returns compressed texture data\n */\nfunction parseBasisFile(BasisFile, data, options): TextureLevel[][] {\n  const basisFile = new BasisFile(new Uint8Array(data));\n\n  try {\n    if (!basisFile.startTranscoding()) {\n      throw new Error('Failed to start basis transcoding');\n    }\n\n    const imageCount = basisFile.getNumImages();\n    const images: TextureLevel[][] = [];\n\n    for (let imageIndex = 0; imageIndex < imageCount; imageIndex++) {\n      const levelsCount = basisFile.getNumLevels(imageIndex);\n      const levels: TextureLevel[] = [];\n\n      for (let levelIndex = 0; levelIndex < levelsCount; levelIndex++) {\n        levels.push(transcodeImage(basisFile, imageIndex, levelIndex, options));\n      }\n\n      images.push(levels);\n    }\n\n    return images;\n  } finally {\n    basisFile.close();\n    basisFile.delete();\n  }\n}\n\n/**\n * Parse the particular level image of a basis file\n * @param basisFile\n * @param imageIndex\n * @param levelIndex\n * @param options\n * @returns compressed texture data\n */\nfunction transcodeImage(basisFile, imageIndex, levelIndex, options): TextureLevel {\n  const width = basisFile.getImageWidth(imageIndex, levelIndex);\n  const height = basisFile.getImageHeight(imageIndex, levelIndex);\n\n  // See https://github.com/BinomialLLC/basis_universal/pull/83\n  const hasAlpha = basisFile.getHasAlpha(/* imageIndex, levelIndex */);\n\n  // Check options for output format etc\n  const {compressed, format, basisFormat} = getBasisOptions(options, hasAlpha);\n\n  const decodedSize = basisFile.getImageTranscodedSizeInBytes(imageIndex, levelIndex, basisFormat);\n  const decodedData = new Uint8Array(decodedSize);\n\n  if (!basisFile.transcodeImage(decodedData, imageIndex, levelIndex, basisFormat, 0, 0)) {\n    throw new Error('failed to start Basis transcoding');\n  }\n\n  return {\n    // standard loaders.gl image category payload\n    width,\n    height,\n    data: decodedData,\n    compressed,\n    format,\n\n    // Additional fields\n    // Add levelSize field.\n    hasAlpha\n  };\n}\n\n/**\n * Parse *.ktx2 file data\n * @param KTX2File\n * @param data\n * @param options\n * @returns compressed texture data\n */\nfunction parseKTX2File(KTX2File, data: ArrayBuffer, options): TextureLevel[][] {\n  const ktx2File = new KTX2File(new Uint8Array(data));\n\n  try {\n    if (!ktx2File.startTranscoding()) {\n      throw new Error('failed to start KTX2 transcoding');\n    }\n    const levelsCount = ktx2File.getLevels();\n    const levels: TextureLevel[] = [];\n\n    for (let levelIndex = 0; levelIndex < levelsCount; levelIndex++) {\n      levels.push(transcodeKTX2Image(ktx2File, levelIndex, options));\n      break; // texture app can only show one level for some reason\n    }\n\n    return [levels];\n  } finally {\n    ktx2File.close();\n    ktx2File.delete();\n  }\n}\n\n/**\n * Parse the particular level image of a ktx2 file\n * @param ktx2File\n * @param levelIndex\n * @param options\n * @returns\n */\nfunction transcodeKTX2Image(ktx2File, levelIndex: number, options): TextureLevel {\n  const {alphaFlag, height, width} = ktx2File.getImageLevelInfo(levelIndex, 0, 0);\n\n  // Check options for output format etc\n  const {compressed, format, basisFormat} = getBasisOptions(options, alphaFlag);\n\n  const decodedSize = ktx2File.getImageTranscodedSizeInBytes(\n    levelIndex,\n    0 /* layerIndex */,\n    0 /* faceIndex */,\n    basisFormat\n  );\n  const decodedData = new Uint8Array(decodedSize);\n\n  if (\n    !ktx2File.transcodeImage(\n      decodedData,\n      levelIndex,\n      0 /* layerIndex */,\n      0 /* faceIndex */,\n      basisFormat,\n      0,\n      -1 /* channel0 */,\n      -1 /* channel1 */\n    )\n  ) {\n    throw new Error('Failed to transcode KTX2 image');\n  }\n\n  return {\n    // standard loaders.gl image category payload\n    width,\n    height,\n    data: decodedData,\n    compressed,\n\n    // Additional fields\n    levelSize: decodedSize,\n    hasAlpha: alphaFlag,\n    format\n  };\n}\n\n/**\n * Get BasisFormat by loader format option\n * @param options\n * @param hasAlpha\n * @returns BasisFormat data\n */\nfunction getBasisOptions(options, hasAlpha: boolean): BasisOutputOptions {\n  let format = options && options.basis && options.basis.format;\n  if (format === 'auto') {\n    format = selectSupportedBasisFormat();\n  }\n  if (typeof format === 'object') {\n    format = hasAlpha ? format.alpha : format.noAlpha;\n  }\n  format = format.toLowerCase();\n  return OutputFormat[format];\n}\n\n/**\n * Select transcode format from the list of supported formats\n * @returns key for OutputFormat map\n */\nexport function selectSupportedBasisFormat():\n  | BasisFormat\n  | {\n      alpha: BasisFormat;\n      noAlpha: BasisFormat;\n    } {\n  const supportedFormats = getSupportedGPUTextureFormats();\n  if (supportedFormats.has('astc')) {\n    return 'astc-4x4';\n  } else if (supportedFormats.has('dxt')) {\n    return {\n      alpha: 'bc3',\n      noAlpha: 'bc1'\n    };\n  } else if (supportedFormats.has('pvrtc')) {\n    return {\n      alpha: 'pvrtc1-4-rgba',\n      noAlpha: 'pvrtc1-4-rgb'\n    };\n  } else if (supportedFormats.has('etc1')) {\n    return 'etc1';\n  } else if (supportedFormats.has('etc2')) {\n    return 'etc2';\n  }\n  return 'rgb565';\n}\n", "import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {isBrowser} from '@loaders.gl/worker-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\n\n/**\n * Worker loader for Basis super compressed textures\n */\nexport const BasisWorkerLoader = {\n  name: 'Basis',\n  id: isBrowser ? 'basis' : 'basis-nodejs',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis', 'ktx2'],\n  mimeTypes: ['application/octet-stream', 'image/ktx2'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'auto', // gl context doesn't exist on a worker thread\n      libraryPath: 'libs/',\n      containerFormat: 'auto', // 'basis' || 'ktx2' || 'auto'\n      module: 'transcoder' // 'transcoder' || 'encoder'\n    }\n  }\n};\n\n/**\n * Loader for Basis super compressed textures\n */\nexport const BasisLoader = {\n  ...BasisWorkerLoader,\n  parse: parseBasis\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckBasisWorkerLoader: Loader = BasisWorkerLoader;\nexport const _TypecheckBasisLoader: LoaderWithParser = BasisLoader;\n", "import type {TextureLevel} from '@loaders.gl/schema';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {GL_EXTENSIONS_CONSTANTS} from '../gl-extensions';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst DDS_CONSTANTS = {\n  MAGIC_NUMBER: 0x20534444,\n  HEADER_LENGTH: 31,\n  MAGIC_NUMBER_INDEX: 0,\n  HEADER_SIZE_INDEX: 1,\n  HEADER_FLAGS_INDEX: 2,\n  HEADER_HEIGHT_INDEX: 3,\n  HEADER_WIDTH_INDEX: 4,\n  MIPMAPCOUNT_INDEX: 7,\n  HEADER_PF_FLAGS_INDEX: 20,\n  HEADER_PF_FOURCC_INDEX: 21,\n  DDSD_MIPMAPCOUNT: 0x20000,\n  DDPF_FOURCC: 0x4\n};\n\nconst DDS_PIXEL_FORMATS: Record<string, number> = {\n  DXT1: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT,\n  DXT3: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT3_EXT,\n  DXT5: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n  'ATC ': GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_ATC_WEBGL,\n  ATCA: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n  ATCI: GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n};\n\nconst getATCLevelSize = getDxt1LevelSize;\nconst getATCALevelSize = getDxtXLevelSize;\nconst getATCILevelSize = getDxtXLevelSize;\n\nconst DDS_SIZE_FUNCTIONS: Record<string, (width: number, height: number) => number> = {\n  DXT1: getDxt1LevelSize,\n  DXT3: getDxtXLevelSize,\n  DXT5: getDxtXLevelSize,\n  'ATC ': getATCLevelSize,\n  ATCA: getATCALevelSize,\n  ATCI: getATCILevelSize\n};\n\n/**\n * Check if data is in \"DDS\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"DDS\" format, else - false\n */\nexport function isDDS(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const magic = header[DDS_CONSTANTS.MAGIC_NUMBER_INDEX];\n  return magic === DDS_CONSTANTS.MAGIC_NUMBER;\n}\n\n/**\n * Parse texture data as \"DDS\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseDDS(data: ArrayBuffer): TextureLevel[] {\n  const header = new Int32Array(data, 0, DDS_CONSTANTS.HEADER_LENGTH);\n  const pixelFormatNumber = header[DDS_CONSTANTS.HEADER_PF_FOURCC_INDEX];\n  assert(\n    Boolean(header[DDS_CONSTANTS.HEADER_PF_FLAGS_INDEX] & DDS_CONSTANTS.DDPF_FOURCC),\n    'DDS: Unsupported format, must contain a FourCC code'\n  );\n  const fourCC = int32ToFourCC(pixelFormatNumber);\n  const internalFormat = DDS_PIXEL_FORMATS[fourCC];\n  const sizeFunction = DDS_SIZE_FUNCTIONS[fourCC];\n  assert(internalFormat && sizeFunction, `DDS: Unknown pixel format ${pixelFormatNumber}`);\n\n  let mipMapLevels = 1;\n  if (header[DDS_CONSTANTS.HEADER_FLAGS_INDEX] & DDS_CONSTANTS.DDSD_MIPMAPCOUNT) {\n    mipMapLevels = Math.max(1, header[DDS_CONSTANTS.MIPMAPCOUNT_INDEX]);\n  }\n  const width = header[DDS_CONSTANTS.HEADER_WIDTH_INDEX];\n  const height = header[DDS_CONSTANTS.HEADER_HEIGHT_INDEX];\n  const dataOffset = header[DDS_CONSTANTS.HEADER_SIZE_INDEX] + 4;\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n/**\n * DXT1 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxt1LevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n}\n\n/**\n * DXT3 & DXT5 applicable function to calculate level size\n * @param width - level width\n * @param height - level height\n * @returns level size in bytes\n */\nexport function getDxtXLevelSize(width: number, height: number): number {\n  return ((width + 3) >> 2) * ((height + 3) >> 2) * 16;\n}\n\n/**\n * Convert every byte of Int32 value to char\n * @param value - Int32 number\n * @returns string of 4 characters\n */\nfunction int32ToFourCC(value: number): string {\n  return String.fromCharCode(\n    value & 0xff,\n    (value >> 8) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 24) & 0xff\n  );\n}\n", "/* eslint-disable camelcase */\n// Forked from PicoGL: https://github.com/tsherif/picogl.js/blob/master/examples/utils/utils.js\n// Copyright (c) 2017 Tarek Sherif, The MIT License (MIT)\n\nimport type {TextureLevel} from '@loaders.gl/schema';\nimport {GL_EXTENSIONS_CONSTANTS} from '../gl-extensions';\nimport {extractMipmapImages} from '../utils/extract-mipmap-images';\n\nconst PVR_CONSTANTS: Record<string, number> = {\n  MAGIC_NUMBER: 0x03525650,\n  MAGIC_NUMBER_EXTRA: 0x50565203,\n  HEADER_LENGTH: 13,\n  HEADER_SIZE: 52,\n  MAGIC_NUMBER_INDEX: 0,\n  PIXEL_FORMAT_INDEX: 2,\n  COLOUR_SPACE_INDEX: 4,\n  HEIGHT_INDEX: 6,\n  WIDTH_INDEX: 7,\n  MIPMAPCOUNT_INDEX: 11,\n  METADATA_SIZE_INDEX: 12\n};\n\nconst PVR_PIXEL_FORMATS: Record<number, number[]> = {\n  0: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_PVRTC_2BPPV1_IMG],\n  1: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG],\n  2: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG],\n  3: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG],\n  6: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_ETC1_WEBGL],\n  7: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB_S3TC_DXT1_EXT],\n  9: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT3_EXT],\n  11: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_S3TC_DXT5_EXT],\n  22: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_ETC2],\n  23: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA8_ETC2_EAC],\n  24: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2],\n  25: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_R11_EAC],\n  26: [GL_EXTENSIONS_CONSTANTS.COMPRESSED_RG11_EAC],\n  27: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_4X4_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR\n  ],\n  28: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5X4_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR\n  ],\n  29: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_5X5_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR\n  ],\n  30: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6X5_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR\n  ],\n  31: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_6X6_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR\n  ],\n  32: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8X5_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR\n  ],\n  33: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8X6_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR\n  ],\n  34: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_8X8_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR\n  ],\n  35: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X5_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR\n  ],\n  36: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X6_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR\n  ],\n  37: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X8_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR\n  ],\n  38: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_10X10_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR\n  ],\n  39: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12X10_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR\n  ],\n  40: [\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_RGBA_ASTC_12X12_KHR,\n    GL_EXTENSIONS_CONSTANTS.COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR\n  ]\n};\n\nconst PVR_SIZE_FUNCTIONS: Record<number, (width: number, height: number) => number> = {\n  0: pvrtc2bppSize,\n  1: pvrtc2bppSize,\n  2: pvrtc4bppSize,\n  3: pvrtc4bppSize,\n  6: dxtEtcSmallSize,\n  7: dxtEtcSmallSize,\n  9: dxtEtcAstcBigSize,\n  11: dxtEtcAstcBigSize,\n  22: dxtEtcSmallSize,\n  23: dxtEtcAstcBigSize,\n  24: dxtEtcSmallSize,\n  25: dxtEtcSmallSize,\n  26: dxtEtcAstcBigSize,\n  27: dxtEtcAstcBigSize,\n  28: atc5x4Size,\n  29: atc5x5Size,\n  30: atc6x5Size,\n  31: atc6x6Size,\n  32: atc8x5Size,\n  33: atc8x6Size,\n  34: atc8x8Size,\n  35: atc10x5Size,\n  36: atc10x6Size,\n  37: atc10x8Size,\n  38: atc10x10Size,\n  39: atc12x10Size,\n  40: atc12x12Size\n};\n\n/**\n * Check if data is in \"PVR\" format by its magic number\n * @param data - binary data of compressed texture\n * @returns true - data in \"PVR\" format, else - false\n */\nexport function isPVR(data: ArrayBuffer): boolean {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n  const version = header[PVR_CONSTANTS.MAGIC_NUMBER_INDEX];\n\n  return version === PVR_CONSTANTS.MAGIC_NUMBER || version === PVR_CONSTANTS.MAGIC_NUMBER_EXTRA;\n}\n\n/**\n * Parse texture data as \"PVR\" format\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n * @see http://cdn.imgtec.com/sdk-documentation/PVR+File+Format.Specification.pdf\n */\nexport function parsePVR(data: ArrayBuffer): TextureLevel[] {\n  const header = new Uint32Array(data, 0, PVR_CONSTANTS.HEADER_LENGTH);\n\n  const pvrFormat = header[PVR_CONSTANTS.PIXEL_FORMAT_INDEX];\n  const colourSpace = header[PVR_CONSTANTS.COLOUR_SPACE_INDEX];\n  const pixelFormats = PVR_PIXEL_FORMATS[pvrFormat] || [];\n  const internalFormat = pixelFormats.length > 1 && colourSpace ? pixelFormats[1] : pixelFormats[0];\n\n  const sizeFunction = PVR_SIZE_FUNCTIONS[pvrFormat];\n\n  const mipMapLevels = header[PVR_CONSTANTS.MIPMAPCOUNT_INDEX];\n\n  const width = header[PVR_CONSTANTS.WIDTH_INDEX];\n  const height = header[PVR_CONSTANTS.HEIGHT_INDEX];\n\n  const dataOffset = PVR_CONSTANTS.HEADER_SIZE + header[PVR_CONSTANTS.METADATA_SIZE_INDEX];\n\n  const image = new Uint8Array(data, dataOffset);\n\n  return extractMipmapImages(image, {\n    mipMapLevels,\n    width,\n    height,\n    sizeFunction,\n    internalFormat\n  });\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc2bppSize(width: number, height: number): number {\n  width = Math.max(width, 16);\n  height = Math.max(height, 8);\n\n  return (width * height) / 4;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/\nfunction pvrtc4bppSize(width: number, height: number): number {\n  width = Math.max(width, 8);\n  height = Math.max(height, 8);\n\n  return (width * height) / 2;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// Size for:\n// COMPRESSED_RGB_S3TC_DXT1_EXT\n// COMPRESSED_R11_EAC\n// COMPRESSED_SIGNED_R11_EAC\n// COMPRESSED_RGB8_ETC2\n// COMPRESSED_SRGB8_ETC2\n// COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2\n// COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2\nfunction dxtEtcSmallSize(width: number, height: number): number {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\n// Size for:\n// COMPRESSED_RGBA_S3TC_DXT3_EXT\n// COMPRESSED_RGBA_S3TC_DXT5_EXT\n// COMPRESSED_RG11_EAC\n// COMPRESSED_SIGNED_RG11_EAC\n// COMPRESSED_RGBA8_ETC2_EAC\n// COMPRESSED_SRGB8_ALPHA8_ETC2_EAC\n// COMPRESSED_RGBA_ASTC_4x4_KHR\nfunction dxtEtcAstcBigSize(width: number, height: number): number {\n  return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x4Size(width: number, height: number): number {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 3) / 4) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc5x5Size(width: number, height: number): number {\n  return Math.floor((width + 4) / 5) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x5Size(width: number, height: number): number {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc6x6Size(width: number, height: number): number {\n  return Math.floor((width + 5) / 6) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x5Size(width: number, height: number): number {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x6Size(width: number, height: number): number {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc8x8Size(width: number, height: number): number {\n  return Math.floor((width + 7) / 8) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x5Size(width: number, height: number): number {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 4) / 5) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x6Size(width: number, height: number): number {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 5) / 6) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x8Size(width: number, height: number): number {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 7) / 8) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc10x10Size(width: number, height: number): number {\n  return Math.floor((width + 9) / 10) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x10Size(width: number, height: number): number {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 9) / 10) * 16;\n}\n\n// https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/\nfunction atc12x12Size(width: number, height: number): number {\n  return Math.floor((width + 11) / 12) * Math.floor((height + 11) / 12) * 16;\n}\n", "import type {TextureLevel} from '@loaders.gl/schema';\nimport {isKTX, parseKTX} from './parse-ktx';\nimport {isDDS, parseDDS} from './parse-dds';\nimport {isPVR, parsePVR} from './parse-pvr';\n\n/**\n * Deduces format and parses compressed texture loaded in ArrayBuffer\n * @param data - binary data of compressed texture\n * @returns Array of the texture levels\n */\nexport function parseCompressedTexture(data: ArrayBuffer): TextureLevel[] {\n  if (isKTX(data)) {\n    // TODO: remove @ts-ignore when `parseKTX` output is normalized to loaders.gl texture format\n    // @ts-ignore\n    return parseKTX(data);\n  }\n  if (isDDS(data)) {\n    return parseDDS(data);\n  }\n  if (isPVR(data)) {\n    return parsePVR(data);\n  }\n  throw new Error('Texture container format not recognized');\n}\n", "import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseCompressedTexture} from './lib/parsers/parse-compressed-texture';\nimport parseBasis from './lib/parsers/parse-basis';\n\nexport type TextureLoaderOptions = {\n  'compressed-texture'?: {\n    libraryPath?: string;\n    useBasis?: boolean;\n  };\n};\n\nconst DEFAULT_TEXTURE_LOADER_OPTIONS = {\n  'compressed-texture': {\n    libraryPath: 'libs/',\n    useBasis: false\n  }\n};\n\n/**\n * Worker Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureWorkerLoader = {\n  name: 'Texture Containers',\n  id: 'compressed-texture',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: [\n    'ktx',\n    'ktx2',\n    'dds', // WEBGL_compressed_texture_s3tc, WEBGL_compressed_texture_atc\n    'pvr' // WEBGL_compressed_texture_pvrtc\n  ],\n  mimeTypes: [\n    'image/ktx2',\n    'image/ktx',\n    'image/vnd-ms.dds',\n    'image/x-dds',\n    'application/octet-stream'\n  ],\n  binary: true,\n  options: DEFAULT_TEXTURE_LOADER_OPTIONS\n};\n\n/**\n * Loader for KTX, DDS, and PVR texture container formats\n */\nexport const CompressedTextureLoader = {\n  ...CompressedTextureWorkerLoader,\n  parse: async (arrayBuffer, options) => {\n    if (options['compressed-texture'].useBasis) {\n      options.basis = {\n        format: {\n          alpha: 'BC3',\n          noAlpha: 'BC1'\n        },\n        ...options.basis,\n        containerFormat: 'ktx2',\n        module: 'encoder'\n      };\n      return (await parseBasis(arrayBuffer, options))[0];\n    }\n    return parseCompressedTexture(arrayBuffer);\n  }\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckCompressedTextureWorkerLoader: Loader = CompressedTextureWorkerLoader;\nexport const _TypecheckCompressedTextureLoader: LoaderWithParser = CompressedTextureLoader;\n", "// import type {TextureLevel} from '@loaders.gl/schema';\n\ntype NumpyHeader = {descr: string; shape: number[]};\ntype TypedArrayConstructor =\n  | typeof Int8Array\n  | typeof Uint8Array\n  | typeof Int16Array\n  | typeof Uint16Array\n  | typeof Int32Array\n  | typeof Uint32Array\n  | typeof Int32Array\n  | typeof Uint32Array\n  | typeof Float32Array\n  | typeof Float64Array;\n\nfunction systemIsLittleEndian() {\n  const a = new Uint32Array([0x12345678]);\n  const b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n  return !(b[0] === 0x12);\n}\n\nconst LITTLE_ENDIAN_OS = systemIsLittleEndian();\n\n// The basic string format consists of 3 characters:\n// 1. a character describing the byteorder of the data (<: little-endian, >: big-endian, |: not-relevant)\n// 2. a character code giving the basic type of the array\n// 3. an integer providing the number of bytes the type uses.\n// https://numpy.org/doc/stable/reference/arrays.interface.html\n//\n// Here I only include the second and third characters, and check endianness\n// separately\nconst DTYPES: Record<string, TypedArrayConstructor> = {\n  u1: Uint8Array,\n  i1: Int8Array,\n  u2: Uint16Array,\n  i2: Int16Array,\n  u4: Uint32Array,\n  i4: Int32Array,\n  f4: Float32Array,\n  f8: Float64Array\n};\n\nexport function parseNPY(arrayBuffer: ArrayBuffer, options?: unknown) {\n  if (!arrayBuffer) {\n    return null;\n  }\n\n  const view = new DataView(arrayBuffer);\n  const {header, headerEndOffset} = parseHeader(view);\n\n  const numpyType = header.descr;\n  const ArrayType = DTYPES[numpyType.slice(1, 3)];\n  if (!ArrayType) {\n    throw new Error(`Unimplemented type ${numpyType}`);\n  }\n\n  const nArrayElements = header.shape?.reduce((a: number, b: number): number => a * b);\n  const arrayByteLength = nArrayElements * ArrayType.BYTES_PER_ELEMENT;\n\n  if (arrayBuffer.byteLength < headerEndOffset + arrayByteLength) {\n    throw new Error('Buffer overflow');\n  }\n  const data = new ArrayType(arrayBuffer.slice(headerEndOffset, headerEndOffset + arrayByteLength));\n\n  // Swap endianness if needed\n  if ((numpyType[0] === '>' && LITTLE_ENDIAN_OS) || (numpyType[0] === '<' && !LITTLE_ENDIAN_OS)) {\n    throw new Error('Incorrect endianness');\n  }\n\n  return {\n    data,\n    header\n  };\n}\n\n/**\n * Parse NPY header\n *\n * @param  view\n * @return\n */\nfunction parseHeader(view: DataView): {header: NumpyHeader; headerEndOffset: number} {\n  const majorVersion = view.getUint8(6);\n  // const minorVersion = view.getUint8(7);\n\n  let offset = 8;\n  let headerLength: number;\n  if (majorVersion >= 2) {\n    headerLength = view.getUint32(offset, true);\n    offset += 4;\n  } else {\n    headerLength = view.getUint16(offset, true);\n    offset += 2;\n  }\n\n  const encoding = majorVersion <= 2 ? 'latin1' : 'utf-8';\n  const decoder = new TextDecoder(encoding);\n  const headerArray = new Uint8Array(view.buffer, offset, headerLength);\n  const headerText = decoder.decode(headerArray);\n  offset += headerLength;\n\n  const header = JSON.parse(\n    headerText\n      .replace(/'/g, '\"')\n      .replace('False', 'false')\n      .replace('(', '[')\n      .replace(/,*\\),*/g, ']')\n  );\n\n  return {header, headerEndOffset: offset};\n}\n", "import type {Loader, LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseNPY} from './lib/parsers/parse-npy';\n\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n\n/**\n * Worker loader for numpy \"tiles\"\n */\nexport const NPYWorkerLoader = {\n  name: 'NPY',\n  id: 'npy',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {}\n  }\n};\n\n/**\n * Loader for numpy \"tiles\"\n */\nexport const NPYLoader = {\n  ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer: ArrayBuffer, options?: LoaderOptions) => parseNPY(arrayBuffer, options)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckNPYWorkerLoader: Loader = NPYWorkerLoader;\nexport const _TypecheckNPYLoader: LoaderWithParser = NPYLoader;\n", "// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'assert failed: gltf');\n  }\n}\n", "// Resolves a relative url against a baseUrl\n// If url is absolute, return it unchanged\nexport function resolveUrl(url, options) {\n  // TODO: Use better logic to handle all protocols plus not delay on data\n  const absolute = url.startsWith('data:') || url.startsWith('http:') || url.startsWith('https:');\n  if (absolute) {\n    return url;\n  }\n  const baseUrl = options.baseUri || options.uri;\n  if (!baseUrl) {\n    throw new Error(`'baseUri' must be provided to resolve relative url ${url}`);\n  }\n  return baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1) + url;\n}\n", "// TODO - GLTFScenegraph should use these\nimport {assert} from '../utils/assert';\n\n// accepts buffer view index or buffer view object\n// returns a `Uint8Array`\nexport function getTypedArrayForBufferView(json, buffers, bufferViewIndex) {\n  const bufferView = json.bufferViews[bufferViewIndex];\n  assert(bufferView);\n\n  // Get hold of the arrayBuffer\n  const bufferIndex = bufferView.buffer;\n  const binChunk = buffers[bufferIndex];\n  assert(binChunk);\n\n  const byteOffset = (bufferView.byteOffset || 0) + binChunk.byteOffset;\n  return new Uint8Array(binChunk.arrayBuffer, byteOffset, bufferView.byteLength);\n}\n\n// accepts accessor index or accessor object\n// returns a `Uint8Array`\nexport function getTypedArrayForImageData(json, buffers, imageIndex) {\n  const image = json.images[imageIndex];\n  const bufferViewIndex = json.bufferViews[image.bufferView];\n  return getTypedArrayForBufferView(json, buffers, bufferViewIndex);\n}\n\n/*\n// accepts accessor index or accessor object\n// returns a typed array with type that matches the types\nexport function getTypedArrayForAccessor(accessor) {\n  accessor = this.getAccessor(accessor);\n  const bufferView = this.getBufferView(accessor.bufferView);\n  const buffer = this.getBuffer(bufferView.buffer);\n  const arrayBuffer = buffer.data;\n\n  // Create a new typed array as a view into the combined buffer\n  const {ArrayType, length} = getAccessorArrayTypeAndLength(accessor, bufferView);\n  const byteOffset = bufferView.byteOffset + accessor.byteOffset;\n  return new ArrayType(arrayBuffer, byteOffset, length);\n}\n*/\n", "/* eslint-disable camelcase */\nimport type {GLTF, GLTFBufferView, GLTF_EXT_meshopt_compression} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {meshoptDecodeGltfBuffer} from '../../meshopt/meshopt-decoder';\n\n// @ts-ignore\n// eslint-disable-next-line\nconst DEFAULT_MESHOPT_OPTIONS = {\n  byteOffset: 0,\n  filter: 'NONE'\n};\n\n/** Extension name */\nconst EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\n\nexport const name = EXT_MESHOPT_COMPRESSION;\n\nexport async function decode(gltfData: {json: GLTF}, options: GLTFLoaderOptions) {\n  const scenegraph = new GLTFScenegraph(gltfData);\n\n  if (!options?.gltf?.decompressMeshes) {\n    return;\n  }\n\n  const promises: Promise<any>[] = [];\n  for (const bufferViewIndex of gltfData.json.bufferViews || []) {\n    promises.push(decodeMeshoptBufferView(scenegraph, bufferViewIndex));\n  }\n\n  // Decompress meshes in parallel\n  await Promise.all(promises);\n\n  // We have now decompressed all primitives, so remove the top-level extension\n  scenegraph.removeExtension(EXT_MESHOPT_COMPRESSION);\n}\n\n/** Decode one meshopt buffer view */\nasync function decodeMeshoptBufferView(\n  scenegraph: GLTFScenegraph,\n  bufferView: GLTFBufferView\n): Promise<ArrayBuffer | null> {\n  const meshoptExtension = scenegraph.getObjectExtension<GLTF_EXT_meshopt_compression>(\n    bufferView,\n    EXT_MESHOPT_COMPRESSION\n  );\n  if (meshoptExtension) {\n    const {\n      byteOffset = 0,\n      byteLength = 0,\n      byteStride,\n      count,\n      mode,\n      filter = 'NONE',\n      buffer: bufferIndex\n    } = meshoptExtension;\n    const buffer = scenegraph.gltf.buffers[bufferIndex];\n\n    const source = new Uint8Array(buffer.arrayBuffer, buffer.byteOffset + byteOffset, byteLength);\n    const result = new Uint8Array(\n      scenegraph.gltf.buffers[bufferView.buffer].arrayBuffer,\n      bufferView.byteOffset,\n      bufferView.byteLength\n    );\n    await meshoptDecodeGltfBuffer(result, count, byteStride, source, mode, filter);\n    return result;\n  }\n\n  return null;\n}\n", "import {assert} from '../utils/assert';\nimport {GLTF} from '../types/gltf-types';\n\nconst TYPES = ['SCALAR', 'VEC2', 'VEC3', 'VEC4'];\n\ntype TypedArrayConstructor =\n  | Int8ArrayConstructor\n  | Uint8ArrayConstructor\n  | Int16ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int32ArrayConstructor\n  | Uint32ArrayConstructor\n  | Int32ArrayConstructor\n  | Uint32ArrayConstructor\n  | Float32ArrayConstructor\n  | Float64ArrayConstructor;\n\nconst ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT: [TypedArrayConstructor, number][] = [\n  [Int8Array, 5120],\n  [Uint8Array, 5121],\n  [Int16Array, 5122],\n  [Uint16Array, 5123],\n  [Uint32Array, 5125],\n  [Float32Array, 5126],\n  [Float64Array, 5130]\n];\nconst ARRAY_TO_COMPONENT_TYPE = new Map<TypedArrayConstructor, number>(\n  ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT\n);\n\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE = {\n  5120: 1,\n  5121: 1,\n  5122: 2,\n  5123: 2,\n  5125: 4,\n  5126: 4\n};\n\nconst ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n\nexport function getAccessorTypeFromSize(size) {\n  const type = TYPES[size - 1];\n  return type || TYPES[0];\n}\n\nexport function getComponentTypeFromArray(typedArray) {\n  const componentType = ARRAY_TO_COMPONENT_TYPE.get(typedArray.constructor);\n  if (!componentType) {\n    throw new Error('Illegal typed array');\n  }\n  return componentType;\n}\n\nexport function getAccessorArrayTypeAndLength(accessor, bufferView) {\n  const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n  const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n  const bytesPerComponent = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[accessor.componentType];\n  const length = accessor.count * components;\n  const byteLength = accessor.count * components * bytesPerComponent;\n  assert(byteLength >= 0 && byteLength <= bufferView.byteLength);\n  return {ArrayType, length, byteLength};\n}\n\n/**\n * Calculate the GPU memory used by a GLTF tile, for both buffer and texture memory\n * @param gltf - the gltf content of a GLTF tile\n * @returns - total memory usage in bytes\n */\nexport function getMemoryUsageGLTF(gltf: GLTF): number {\n  let {images, bufferViews} = gltf;\n  images = images || [];\n  bufferViews = bufferViews || [];\n  const imageBufferViews = images.map((i) => i.bufferView);\n  bufferViews = bufferViews.filter((view) => !imageBufferViews.includes(view as any));\n\n  const bufferMemory = bufferViews.reduce((acc, view) => acc + view.byteLength, 0);\n\n  // Assume each pixel of the texture is 4 channel with mimmaps (which add 33%)\n  // TODO correctly handle compressed textures\n  const pixelCount = images.reduce((acc, image) => {\n    // @ts-ignore\n    const {width, height} = (image as any).image;\n    return acc + width * height;\n  }, 0);\n  return bufferMemory + Math.ceil(4 * pixelCount * 1.33);\n}\n", "import type {\n  GLTF,\n  GLTFScene,\n  GLTFNode,\n  GLTFMesh,\n  GLTFSkin,\n  GLTFMaterial,\n  GLTFAccessor,\n  GLTFSampler,\n  GLTFTexture,\n  GLTFImage,\n  GLTFBuffer,\n  GLTFBufferView,\n  GLTFWithBuffers\n} from '../types/gltf-types';\n\nimport {getBinaryImageMetadata} from '@loaders.gl/images';\nimport {padToNBytes, copyToArray} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\nimport {\n  getAccessorArrayTypeAndLength,\n  getAccessorTypeFromSize,\n  getComponentTypeFromArray\n} from '../gltf-utils/gltf-utils';\n\nconst DEFAULT_GLTF_JSON: GLTF = {\n  asset: {\n    version: '2.0',\n    generator: 'loaders.gl'\n  },\n  buffers: []\n};\n\ntype Extension = {[key: string]: any};\n/**\n * Class for structured access to GLTF data\n */\nexport default class GLTFScenegraph {\n  // internal\n  gltf: GLTFWithBuffers;\n  sourceBuffers: any[];\n  byteLength: number;\n\n  constructor(gltf?: {json: GLTF; buffers?: any[]}) {\n    // @ts-ignore\n    this.gltf = gltf || {\n      json: {...DEFAULT_GLTF_JSON},\n      buffers: []\n    };\n    this.sourceBuffers = [];\n    this.byteLength = 0;\n\n    // Initialize buffers\n    if (this.gltf.buffers && this.gltf.buffers[0]) {\n      this.byteLength = this.gltf.buffers[0].byteLength;\n      this.sourceBuffers = [this.gltf.buffers[0]];\n    }\n  }\n\n  // Accessors\n\n  get json(): GLTF {\n    return this.gltf.json;\n  }\n\n  getApplicationData(key: string): unknown {\n    // TODO - Data is already unpacked by GLBParser\n    const data = this.json[key];\n    return data;\n  }\n\n  getExtraData(key: string): {[key: string]: unknown} {\n    // TODO - Data is already unpacked by GLBParser\n    const extras = this.json.extras || {};\n    return extras[key];\n  }\n\n  getExtension<T = Extension>(extensionName: string): T | null {\n    const isExtension = this.getUsedExtensions().find((name) => name === extensionName);\n    const extensions = this.json.extensions || {};\n    return isExtension ? extensions[extensionName] || true : null;\n  }\n\n  getRequiredExtension<T = Extension>(extensionName: string): T | null {\n    const isRequired = this.getRequiredExtensions().find((name) => name === extensionName);\n    return isRequired ? this.getExtension(extensionName) : null;\n  }\n\n  getRequiredExtensions(): string[] {\n    return this.json.extensionsRequired || [];\n  }\n\n  getUsedExtensions(): string[] {\n    return this.json.extensionsUsed || [];\n  }\n\n  getRemovedExtensions(): string[] {\n    return (this.json.extensionsRemoved || []) as string[];\n  }\n\n  getObjectExtension<T = Extension>(object: {[key: string]: any}, extensionName: string): T | null {\n    const extensions = object.extensions || {};\n    return extensions[extensionName];\n  }\n\n  getScene(index: number): GLTFScene {\n    return this.getObject('scenes', index) as GLTFScene;\n  }\n\n  getNode(index: number): GLTFNode {\n    return this.getObject('nodes', index) as GLTFNode;\n  }\n\n  getSkin(index: number): GLTFSkin {\n    return this.getObject('skins', index) as GLTFSkin;\n  }\n\n  getMesh(index: number): GLTFMesh {\n    return this.getObject('meshes', index) as GLTFMesh;\n  }\n\n  getMaterial(index: number): GLTFMaterial {\n    return this.getObject('materials', index) as GLTFMaterial;\n  }\n\n  getAccessor(index: number): GLTFAccessor {\n    return this.getObject('accessors', index) as GLTFAccessor;\n  }\n\n  // getCamera(index: number): object | null {\n  //   return null; // TODO: fix thi: object  as null;\n  // }\n\n  getTexture(index: number): GLTFTexture {\n    return this.getObject('textures', index) as GLTFTexture;\n  }\n\n  getSampler(index: number): GLTFSampler {\n    return this.getObject('samplers', index) as GLTFSampler;\n  }\n\n  getImage(index: number): GLTFImage {\n    return this.getObject('images', index) as GLTFImage;\n  }\n\n  getBufferView(index: number | object): GLTFBufferView {\n    return this.getObject('bufferViews', index) as GLTFBufferView;\n  }\n\n  getBuffer(index: number): GLTFBuffer {\n    return this.getObject('buffers', index) as GLTFBuffer;\n  }\n\n  getObject(array: string, index: number | object): object {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.json[array] && (this.json[array] as {}[])[index];\n    if (!object) {\n      throw new Error(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  /**\n   * Accepts buffer view index or buffer view object\n   * @returns a `Uint8Array`\n   */\n  getTypedArrayForBufferView(bufferView: number | object): Uint8Array {\n    bufferView = this.getBufferView(bufferView);\n    // @ts-ignore\n    const bufferIndex = bufferView.buffer;\n\n    // Get hold of the arrayBuffer\n    // const buffer = this.getBuffer(bufferIndex);\n    const binChunk = this.gltf.buffers[bufferIndex];\n    assert(binChunk);\n\n    // @ts-ignore\n    const byteOffset = (bufferView.byteOffset || 0) + binChunk.byteOffset;\n    // @ts-ignore\n    return new Uint8Array(binChunk.arrayBuffer, byteOffset, bufferView.byteLength);\n  }\n\n  /** Accepts accessor index or accessor object\n   * @returns a typed array with type that matches the types\n   */\n  getTypedArrayForAccessor(accessor: number | object): any {\n    // @ts-ignore\n    accessor = this.getAccessor(accessor);\n    // @ts-ignore\n    const bufferView = this.getBufferView(accessor.bufferView);\n    const buffer = this.getBuffer(bufferView.buffer);\n    // @ts-ignore\n    const arrayBuffer = buffer.data;\n\n    // Create a new typed array as a view into the combined buffer\n    const {ArrayType, length} = getAccessorArrayTypeAndLength(accessor, bufferView);\n    // @ts-ignore\n    const byteOffset = bufferView.byteOffset + accessor.byteOffset;\n    return new ArrayType(arrayBuffer, byteOffset, length);\n  }\n\n  /** accepts accessor index or accessor object\n   * returns a `Uint8Array`\n   */\n  getTypedArrayForImageData(image: number | object): Uint8Array {\n    // @ts-ignore\n    image = this.getAccessor(image);\n    // @ts-ignore\n    const bufferView = this.getBufferView(image.bufferView);\n    const buffer = this.getBuffer(bufferView.buffer);\n    // @ts-ignore\n    const arrayBuffer = buffer.data;\n\n    const byteOffset = bufferView.byteOffset || 0;\n    return new Uint8Array(arrayBuffer, byteOffset, bufferView.byteLength);\n  }\n\n  // MODIFERS\n\n  /**\n   * Add an extra application-defined key to the top-level data structure\n   */\n  addApplicationData(key: string, data: object): GLTFScenegraph {\n    this.json[key] = data;\n    return this;\n  }\n\n  /**\n   * `extras` - Standard GLTF field for storing application specific data\n   */\n  addExtraData(key: string, data: object): GLTFScenegraph {\n    this.json.extras = this.json.extras || {};\n    (this.json.extras as Record<string, unknown>)[key] = data;\n    return this;\n  }\n\n  addObjectExtension(object: object, extensionName: string, data: object): GLTFScenegraph {\n    // @ts-ignore\n    object.extensions = object.extensions || {};\n    // TODO - clobber or merge?\n    // @ts-ignore\n    object.extensions[extensionName] = data;\n    this.registerUsedExtension(extensionName);\n    return this;\n  }\n\n  setObjectExtension(object: object, extensionName: string, data: object): void {\n    // @ts-ignore\n    const extensions = object.extensions || {};\n    extensions[extensionName] = data;\n    // TODO - add to usedExtensions...\n  }\n\n  removeObjectExtension(object: object, extensionName: string): object {\n    // @ts-ignore\n    const extensions = object.extensions || {};\n    const extension = extensions[extensionName];\n    delete extensions[extensionName];\n    return extension;\n  }\n\n  /**\n   * Add to standard GLTF top level extension object, mark as used\n   */\n  addExtension(extensionName: string, extensionData: object = {}): object {\n    assert(extensionData);\n    this.json.extensions = this.json.extensions || {};\n    (this.json.extensions as Record<string, unknown>)[extensionName] = extensionData;\n    this.registerUsedExtension(extensionName);\n    return extensionData;\n  }\n\n  /**\n   * Standard GLTF top level extension object, mark as used and required\n   */\n  addRequiredExtension(extensionName, extensionData: object = {}): object {\n    assert(extensionData);\n    this.addExtension(extensionName, extensionData);\n    this.registerRequiredExtension(extensionName);\n    return extensionData;\n  }\n\n  /**\n   * Add extensionName to list of used extensions\n   */\n  registerUsedExtension(extensionName: string): void {\n    this.json.extensionsUsed = this.json.extensionsUsed || [];\n    if (!this.json.extensionsUsed.find((ext) => ext === extensionName)) {\n      this.json.extensionsUsed.push(extensionName);\n    }\n  }\n\n  /**\n   * Add extensionName to list of required extensions\n   */\n  registerRequiredExtension(extensionName: string): void {\n    this.registerUsedExtension(extensionName);\n    this.json.extensionsRequired = this.json.extensionsRequired || [];\n    if (!this.json.extensionsRequired.find((ext) => ext === extensionName)) {\n      this.json.extensionsRequired.push(extensionName);\n    }\n  }\n\n  /**\n   * Removes an extension from the top-level list\n   */\n  removeExtension(extensionName: string): void {\n    if (!this.getExtension(extensionName)) {\n      return;\n    }\n    if (this.json.extensionsRequired) {\n      this._removeStringFromArray(this.json.extensionsRequired, extensionName);\n    }\n    if (this.json.extensionsUsed) {\n      this._removeStringFromArray(this.json.extensionsUsed, extensionName);\n    }\n    if (this.json.extensions) {\n      delete this.json.extensions[extensionName];\n    }\n    if (!Array.isArray(this.json.extensionsRemoved)) {\n      this.json.extensionsRemoved = [];\n    }\n    const extensionsRemoved = this.json.extensionsRemoved as string[];\n    if (!extensionsRemoved.includes(extensionName)) {\n      extensionsRemoved.push(extensionName);\n    }\n  }\n\n  /**\n   *  Set default scene which is to be displayed at load time\n   */\n  setDefaultScene(sceneIndex: number): void {\n    this.json.scene = sceneIndex;\n  }\n\n  /**\n   * @todo: add more properties for scene initialization:\n   *   name`, `extensions`, `extras`\n   *   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-scene\n   */\n  addScene(scene: {nodeIndices: number[]}): number {\n    const {nodeIndices} = scene;\n    this.json.scenes = this.json.scenes || [];\n    this.json.scenes.push({nodes: nodeIndices});\n    return this.json.scenes.length - 1;\n  }\n\n  /**\n   * @todo: add more properties for node initialization:\n   *   `name`, `extensions`, `extras`, `camera`, `children`, `skin`, `rotation`, `scale`, `translation`, `weights`\n   *   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#node\n   */\n  addNode(node: {meshIndex: number; matrix?: number[]}): number {\n    const {meshIndex, matrix} = node;\n    this.json.nodes = this.json.nodes || [];\n    const nodeData = {mesh: meshIndex};\n    if (matrix) {\n      // @ts-ignore\n      nodeData.matrix = matrix;\n    }\n    this.json.nodes.push(nodeData);\n    return this.json.nodes.length - 1;\n  }\n\n  /** Adds a mesh to the json part */\n  addMesh(mesh: {attributes: object; indices?: object; material?: number; mode?: number}): number {\n    const {attributes, indices, material, mode = 4} = mesh;\n    const accessors = this._addAttributes(attributes);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: accessors,\n          mode\n        }\n      ]\n    };\n\n    if (indices) {\n      const indicesAccessor = this._addIndices(indices);\n      // @ts-ignore\n      glTFMesh.primitives[0].indices = indicesAccessor;\n    }\n\n    if (Number.isFinite(material)) {\n      // @ts-ignore\n      glTFMesh.primitives[0].material = material;\n    }\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  addPointCloud(attributes: object): number {\n    // @ts-ignore\n    const accessorIndices = this._addAttributes(attributes);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: accessorIndices,\n          mode: 0 // GL.POINTS\n        }\n      ]\n    };\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  /**\n   * Adds a binary image. Builds glTF \"JSON metadata\" and saves buffer reference\n   * Buffer will be copied into BIN chunk during \"pack\"\n   * Currently encodes as glTF image\n   * @param imageData\n   * @param mimeType\n   */\n  addImage(imageData: any, mimeTypeOpt?: string): number {\n    // If image is referencing a bufferView instead of URI, mimeType must be defined:\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#images\n    //   \"a reference to a bufferView; in that case mimeType must be defined.\"\n    const metadata = getBinaryImageMetadata(imageData);\n    const mimeType = mimeTypeOpt || metadata?.mimeType;\n\n    const bufferViewIndex = this.addBufferView(imageData);\n\n    const glTFImage = {\n      bufferView: bufferViewIndex,\n      mimeType\n    };\n\n    this.json.images = this.json.images || [];\n    this.json.images.push(glTFImage);\n    return this.json.images.length - 1;\n  }\n\n  /**\n   * Add one untyped source buffer, create a matching glTF `bufferView`, and return its index\n   * @param buffer\n   */\n  addBufferView(buffer: any): number {\n    const byteLength = buffer.byteLength;\n    assert(Number.isFinite(byteLength));\n\n    // Add this buffer to the list of buffers to be written to the body.\n    this.sourceBuffers = this.sourceBuffers || [];\n    this.sourceBuffers.push(buffer);\n\n    const glTFBufferView = {\n      buffer: 0,\n      // Write offset from the start of the binary body\n      byteOffset: this.byteLength,\n      byteLength\n    };\n\n    // We've now added the contents to the body, so update the total length\n    // Every sub-chunk needs to be 4-byte align ed\n    this.byteLength += padToNBytes(byteLength, 4);\n\n    // Add a bufferView indicating start and length of this binary sub-chunk\n    this.json.bufferViews = this.json.bufferViews || [];\n    this.json.bufferViews.push(glTFBufferView);\n    return this.json.bufferViews.length - 1;\n  }\n\n  /**\n   * Adds an accessor to a bufferView\n   * @param bufferViewIndex\n   * @param accessor\n   */\n  addAccessor(bufferViewIndex: number, accessor: object): number {\n    const glTFAccessor = {\n      bufferView: bufferViewIndex,\n      // @ts-ignore\n      type: getAccessorTypeFromSize(accessor.size),\n      // @ts-ignore\n      componentType: accessor.componentType,\n      // @ts-ignore\n      count: accessor.count,\n      // @ts-ignore\n      max: accessor.max,\n      // @ts-ignore\n      min: accessor.min\n    };\n\n    this.json.accessors = this.json.accessors || [];\n    this.json.accessors.push(glTFAccessor);\n    return this.json.accessors.length - 1;\n  }\n\n  /**\n   * Add a binary buffer. Builds glTF \"JSON metadata\" and saves buffer reference\n   * Buffer will be copied into BIN chunk during \"pack\"\n   * Currently encodes buffers as glTF accessors, but this could be optimized\n   * @param sourceBuffer\n   * @param accessor\n   */\n  addBinaryBuffer(sourceBuffer: any, accessor: object = {size: 3}): number {\n    const bufferViewIndex = this.addBufferView(sourceBuffer);\n    // @ts-ignore\n    let minMax = {min: accessor.min, max: accessor.max};\n    if (!minMax.min || !minMax.max) {\n      // @ts-ignore\n      minMax = this._getAccessorMinMax(sourceBuffer, accessor.size);\n    }\n\n    const accessorDefaults = {\n      // @ts-ignore\n      size: accessor.size,\n      componentType: getComponentTypeFromArray(sourceBuffer),\n      // @ts-ignore\n      count: Math.round(sourceBuffer.length / accessor.size),\n      min: minMax.min,\n      max: minMax.max\n    };\n\n    return this.addAccessor(bufferViewIndex, Object.assign(accessorDefaults, accessor));\n  }\n\n  /**\n   * Adds a texture to the json part\n   * @todo: add more properties for texture initialization\n   * `sampler`, `name`, `extensions`, `extras`\n   * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\n   */\n  addTexture(texture: {imageIndex: number}): number {\n    const {imageIndex} = texture;\n    const glTFTexture = {\n      source: imageIndex\n    };\n\n    this.json.textures = this.json.textures || [];\n    this.json.textures.push(glTFTexture);\n    return this.json.textures.length - 1;\n  }\n\n  /** Adds a material to the json part */\n  addMaterial(pbrMaterialInfo: Object): number {\n    this.json.materials = this.json.materials || [];\n    this.json.materials.push(pbrMaterialInfo);\n    return this.json.materials.length - 1;\n  }\n\n  /** Pack the binary chunk */\n  createBinaryChunk(): void {\n    // Encoder expects this array undefined or empty\n    this.gltf.buffers = [];\n\n    // Allocate total array\n    const totalByteLength = this.byteLength;\n    const arrayBuffer = new ArrayBuffer(totalByteLength);\n    const targetArray = new Uint8Array(arrayBuffer);\n\n    // Copy each array into\n    let dstByteOffset = 0;\n    for (const sourceBuffer of this.sourceBuffers || []) {\n      dstByteOffset = copyToArray(sourceBuffer, targetArray, dstByteOffset);\n    }\n\n    // Update the glTF BIN CHUNK byte length\n    if (this.json?.buffers?.[0]) {\n      this.json.buffers[0].byteLength = totalByteLength;\n    } else {\n      this.json.buffers = [{byteLength: totalByteLength}];\n    }\n\n    // Save generated arrayBuffer\n    this.gltf.binary = arrayBuffer;\n\n    // Put arrayBuffer to sourceBuffers for possible additional writing data in the chunk\n    this.sourceBuffers = [arrayBuffer];\n  }\n\n  // PRIVATE\n\n  _removeStringFromArray(array, string) {\n    let found = true;\n    while (found) {\n      const index = array.indexOf(string);\n      if (index > -1) {\n        array.splice(index, 1);\n      } else {\n        found = false;\n      }\n    }\n  }\n\n  /**\n   * Add attributes to buffers and create `attributes` object which is part of `mesh`\n   */\n  _addAttributes(attributes = {}) {\n    const result = {};\n    for (const attributeKey in attributes) {\n      const attributeData = attributes[attributeKey];\n      const attrName = this._getGltfAttributeName(attributeKey);\n      const accessor = this.addBinaryBuffer(attributeData.value, attributeData);\n      result[attrName] = accessor;\n    }\n    return result;\n  }\n\n  /**\n   * Add indices to buffers\n   */\n  _addIndices(indices) {\n    return this.addBinaryBuffer(indices, {size: 1});\n  }\n\n  /**\n   * Deduce gltf specific attribue name from input attribute name\n   */\n  _getGltfAttributeName(attributeName) {\n    switch (attributeName.toLowerCase()) {\n      case 'position':\n      case 'positions':\n      case 'vertices':\n        return 'POSITION';\n      case 'normal':\n      case 'normals':\n        return 'NORMAL';\n      case 'color':\n      case 'colors':\n        return 'COLOR_0';\n      case 'texcoord':\n      case 'texcoords':\n        return 'TEXCOORD_0';\n      default:\n        return attributeName;\n    }\n  }\n\n  /**\n   * Calculate `min` and `max` arrays of accessor according to spec:\n   * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-accessor\n   */\n  _getAccessorMinMax(buffer, size) {\n    const result = {min: null, max: null};\n    if (buffer.length < size) {\n      return result;\n    }\n    // @ts-ignore\n    result.min = [];\n    // @ts-ignore\n    result.max = [];\n    const initValues = buffer.subarray(0, size);\n    for (const value of initValues) {\n      // @ts-ignore\n      result.min.push(value);\n      // @ts-ignore\n      result.max.push(value);\n    }\n\n    for (let index = size; index < buffer.length; index += size) {\n      for (let componentIndex = 0; componentIndex < size; componentIndex++) {\n        // @ts-ignore\n        result.min[0 + componentIndex] = Math.min(\n          // @ts-ignore\n          result.min[0 + componentIndex],\n          buffer[index + componentIndex]\n        );\n        // @ts-ignore\n        result.max[0 + componentIndex] = Math.max(\n          // @ts-ignore\n          result.max[0 + componentIndex],\n          buffer[index + componentIndex]\n        );\n      }\n    }\n    return result;\n  }\n}\n", "// This file is part of meshoptimizer library and is distributed under the terms of MIT License.\n// Copyright (C) 2016-2021, by Arseny Kapoulkine (arseny.kapoulkine@gmail.com)\n\n/* eslint-disable camelcase */\nconst isWebAssemblySupported = typeof WebAssembly !== 'object';\n\n// Built with clang version 11.0.0 (https://github.com/llvm/llvm-project.git 0160ad802e899c2922bc9b29564080c22eb0908c)\n// Built from meshoptimizer 0.16\nconst wasm_base =\n  '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';\nconst wasm_simd =\n  '';\n\n// Uses bulk-memory and simd extensions\nconst detector = new Uint8Array([\n  0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 3, 2, 0, 0, 5, 3, 1, 0, 1, 12, 1, 0, 10, 22, 2,\n  12, 0, 65, 0, 65, 0, 65, 0, 252, 10, 0, 0, 11, 7, 0, 65, 0, 253, 15, 26, 11\n]);\n\n// Used to unpack wasm\nconst wasmpack = new Uint8Array([\n  32, 0, 65, 253, 3, 1, 2, 34, 4, 106, 6, 5, 11, 8, 7, 20, 13, 33, 12, 16, 128, 9, 116, 64, 19, 113,\n  127, 15, 10, 21, 22, 14, 255, 66, 24, 54, 136, 107, 18, 23, 192, 26, 114, 118, 132, 17, 77, 101,\n  130, 144, 27, 87, 131, 44, 45, 74, 156, 154, 70, 167\n]);\n\nconst FILTERS = {\n  // legacy index-based enums for glTF\n  0: '',\n  1: 'meshopt_decodeFilterOct',\n  2: 'meshopt_decodeFilterQuat',\n  3: 'meshopt_decodeFilterExp',\n  // string-based enums for glTF\n  NONE: '',\n  OCTAHEDRAL: 'meshopt_decodeFilterOct',\n  QUATERNION: 'meshopt_decodeFilterQuat',\n  EXPONENTIAL: 'meshopt_decodeFilterExp'\n};\n\nconst DECODERS = {\n  // legacy index-based enums for glTF\n  0: 'meshopt_decodeVertexBuffer',\n  1: 'meshopt_decodeIndexBuffer',\n  2: 'meshopt_decodeIndexSequence',\n  // string-based enums for glTF\n  ATTRIBUTES: 'meshopt_decodeVertexBuffer',\n  TRIANGLES: 'meshopt_decodeIndexBuffer',\n  INDICES: 'meshopt_decodeIndexSequence'\n};\n\nexport function isMeshoptSupported(): boolean {\n  return isWebAssemblySupported;\n}\n\nexport async function meshoptDecodeVertexBuffer(\n  target: Uint8Array,\n  count: number,\n  size: number,\n  source: Uint8Array,\n  filter: string | number = 'NONE'\n): Promise<void> {\n  const instance = await loadWasmInstance();\n  decode(\n    instance,\n    instance.exports.meshopt_decodeVertexBuffer,\n    target,\n    count,\n    size,\n    source,\n    instance.exports[FILTERS[filter]]\n  );\n}\n\nexport async function meshoptDecodeIndexBuffer(\n  target: Uint8Array,\n  count: number,\n  size: number,\n  source: Uint8Array\n): Promise<void> {\n  const instance = await loadWasmInstance();\n  decode(instance, instance.exports.meshopt_decodeIndexBuffer, target, count, size, source);\n}\n\nexport async function meshoptDecodeIndexSequence(\n  target: Uint8Array,\n  count: number,\n  size: number,\n  source: Uint8Array\n): Promise<void> {\n  const instance = await loadWasmInstance();\n  decode(instance, instance.exports.meshopt_decodeIndexSequence, target, count, size, source);\n}\n\n// eslint-disable-next-line max-params\nexport async function meshoptDecodeGltfBuffer(\n  target: Uint8Array,\n  count: number,\n  size: number,\n  source: Uint8Array,\n  mode: string,\n  filter: string | number = 'NONE'\n): Promise<void> {\n  const instance = await loadWasmInstance();\n  decode(\n    instance,\n    instance.exports[DECODERS[mode]],\n    target,\n    count,\n    size,\n    source,\n    instance.exports[FILTERS[filter || 'NONE']]\n  );\n}\n\nlet wasmPromise: Promise<WebAssembly.Instance>;\n\nasync function loadWasmInstance(): Promise<WebAssembly.Instance> {\n  // eslint-disable-next-line\n  if (!wasmPromise) {\n    wasmPromise = loadWasmModule();\n  }\n  return wasmPromise;\n}\n\nasync function loadWasmModule(): Promise<WebAssembly.Instance> {\n  let wasm = wasm_base;\n  if (WebAssembly.validate(detector)) {\n    wasm = wasm_simd;\n\n    // eslint-disable-next-line no-console\n    console.log('Warning: meshopt_decoder is using experimental SIMD support');\n  }\n\n  const result = await WebAssembly.instantiate(unpack(wasm), {});\n  await (result.instance.exports as any).__wasm_call_ctors();\n  return result.instance;\n}\n\nfunction unpack(data) {\n  const result = new Uint8Array(data.length);\n  for (let i = 0; i < data.length; ++i) {\n    const ch = data.charCodeAt(i);\n    result[i] = ch > 96 ? ch - 71 : ch > 64 ? ch - 65 : ch > 47 ? ch + 4 : ch > 46 ? 63 : 62;\n  }\n  let write = 0;\n  for (let i = 0; i < data.length; ++i) {\n    result[write++] = result[i] < 60 ? wasmpack[result[i]] : (result[i] - 60) * 64 + result[++i];\n  }\n  return result.buffer.slice(0, write);\n}\n\n// eslint-disable-next-line max-params\nfunction decode(instance, fun, target, count, size, source, filter?) {\n  const sbrk = instance.exports.sbrk;\n  const count4 = (count + 3) & ~3; // pad for SIMD filter\n  const tp = sbrk(count4 * size);\n  const sp = sbrk(source.length);\n  const heap = new Uint8Array(instance.exports.memory.buffer);\n  heap.set(source, sp);\n  const res = fun(tp, count, size, sp, source.length);\n  if (res === 0 && filter) {\n    filter(tp, count4, size);\n  }\n  target.set(heap.subarray(tp, tp + count * size));\n  sbrk(tp - sbrk(0));\n  if (res !== 0) {\n    throw new Error(`Malformed buffer data: ${res}`);\n  }\n}\n", "// GLTF EXTENSION: EXT_TEXTURE_WEBP\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_TEXTURE_WEBP\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_EXT_texture_webp} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport {isImageFormatSupported} from '@loaders.gl/images';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst EXT_TEXTURE_WEBP = 'EXT_texture_webp';\n\n/** Extension name */\nexport const name = EXT_TEXTURE_WEBP;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scenegraph = new GLTFScenegraph(gltfData);\n\n  if (!isImageFormatSupported('image/webp')) {\n    if (scenegraph.getRequiredExtensions().includes(EXT_TEXTURE_WEBP)) {\n      throw new Error(`gltf: Required extension ${EXT_TEXTURE_WEBP} not supported by browser`);\n    }\n    return;\n  }\n\n  const {json} = scenegraph;\n\n  for (const texture of json.textures || []) {\n    const extension = scenegraph.getObjectExtension<GLTF_EXT_texture_webp>(\n      texture,\n      EXT_TEXTURE_WEBP\n    );\n    if (extension) {\n      // TODO - if multiple texture extensions are present which one wins?\n      texture.source = extension.source;\n    }\n    scenegraph.removeObjectExtension(texture, EXT_TEXTURE_WEBP);\n  }\n\n  // Remove the top-level extension\n  scenegraph.removeExtension(EXT_TEXTURE_WEBP);\n}\n", "// GLTF EXTENSION: KHR_texture_basisu\n// https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_KHR_texture_basisu} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\n\n/** Extension name */\nexport const name = KHR_TEXTURE_BASISU;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scene = new GLTFScenegraph(gltfData);\n  const {json} = scene;\n\n  for (const texture of json.textures || []) {\n    const extension = scene.getObjectExtension<GLTF_KHR_texture_basisu>(\n      texture,\n      KHR_TEXTURE_BASISU\n    );\n    if (extension) {\n      // TODO - if multiple texture extensions are present which one wins?\n      texture.source = extension.source;\n    }\n    scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n  }\n\n  // Remove the top-level extension\n  scene.removeExtension(KHR_TEXTURE_BASISU);\n}\n", "// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n// Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\n/* eslint-disable camelcase */\n\n/* eslint-disable camelcase */\nimport type {\n  GLTF,\n  GLTFAccessor,\n  GLTFMeshPrimitive,\n  GLTF_KHR_draco_mesh_compression\n} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport type {LoaderContext} from '@loaders.gl/loader-utils';\nimport {DracoLoader} from '@loaders.gl/draco';\nimport {DracoLoaderOptions, DracoMesh} from '@loaders.gl/draco';\nimport {sliceArrayBuffer} from '@loaders.gl/loader-utils';\nimport {default as Scenegraph} from '../api/gltf-scenegraph';\nimport {getGLTFAccessors, getGLTFAccessor} from '../gltf-utils/gltf-attribute-utils';\n\nconst KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\n\n/** Extension name */\nexport const name = KHR_DRACO_MESH_COMPRESSION;\n\nexport function preprocess(\n  gltfData: {json: GLTF},\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n): void {\n  const scenegraph = new Scenegraph(gltfData);\n  for (const primitive of makeMeshPrimitiveIterator(scenegraph)) {\n    if (scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION)) {\n      // TODO - Remove fallback accessors to make sure we don't load unnecessary buffers\n    }\n  }\n}\n\nexport async function decode(\n  gltfData: {json: GLTF},\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n): Promise<void> {\n  if (!options?.gltf?.decompressMeshes) {\n    return;\n  }\n\n  const scenegraph = new Scenegraph(gltfData);\n  const promises: Promise<void>[] = [];\n  for (const primitive of makeMeshPrimitiveIterator(scenegraph)) {\n    if (scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION)) {\n      promises.push(decompressPrimitive(scenegraph, primitive, options, context));\n    }\n  }\n\n  // Decompress meshes in parallel\n  await Promise.all(promises);\n\n  // We have now decompressed all primitives, so remove the top-level extension\n  scenegraph.removeExtension(KHR_DRACO_MESH_COMPRESSION);\n}\n\nexport function encode(gltfData, options: GLTFLoaderOptions = {}): void {\n  const scenegraph = new Scenegraph(gltfData);\n\n  for (const mesh of scenegraph.json.meshes || []) {\n    // eslint-disable-next-line camelcase\n    // @ts-ignore\n    compressMesh(mesh, options);\n    // NOTE: Only add the extension if something was actually compressed\n    scenegraph.addRequiredExtension(KHR_DRACO_MESH_COMPRESSION);\n  }\n}\n\n// DECODE\n\n// Unpacks one mesh primitive and removes the extension from the primitive\n// DracoDecoder needs to be imported and registered by app\n// Returns: Promise that resolves when all pending draco decoder jobs for this mesh complete\n\n// TODO - Implement fallback behavior per KHR_DRACO_MESH_COMPRESSION spec\n\nasync function decompressPrimitive(\n  scenegraph: Scenegraph,\n  primitive: GLTFMeshPrimitive,\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n): Promise<void> {\n  const dracoExtension = scenegraph.getObjectExtension<GLTF_KHR_draco_mesh_compression>(\n    primitive,\n    KHR_DRACO_MESH_COMPRESSION\n  );\n  if (!dracoExtension) {\n    return;\n  }\n\n  const buffer = scenegraph.getTypedArrayForBufferView(dracoExtension.bufferView);\n  // TODO - parse does not yet deal well with byte offsets embedded in typed arrays. Copy buffer\n  // TODO - remove when `parse` is fixed to handle `byteOffset`s\n  const bufferCopy = sliceArrayBuffer(buffer.buffer, buffer.byteOffset); // , buffer.byteLength);\n\n  const {parse} = context;\n  const dracoOptions: DracoLoaderOptions = {...options};\n\n  // TODO - remove hack: The entire tileset might be included, too expensive to serialize\n  delete dracoOptions['3d-tiles'];\n  const decodedData = (await parse(bufferCopy, DracoLoader, dracoOptions, context)) as DracoMesh;\n\n  const decodedAttributes: {[key: string]: GLTFAccessor} = getGLTFAccessors(decodedData.attributes);\n\n  // Restore min/max values\n  for (const [attributeName, decodedAttribute] of Object.entries(decodedAttributes)) {\n    if (attributeName in primitive.attributes) {\n      const accessorIndex: number = primitive.attributes[attributeName];\n      const accessor = scenegraph.getAccessor(accessorIndex);\n      if (accessor?.min && accessor?.max) {\n        decodedAttribute.min = accessor.min;\n        decodedAttribute.max = accessor.max;\n      }\n    }\n  }\n\n  // @ts-ignore\n  primitive.attributes = decodedAttributes;\n  if (decodedData.indices) {\n    // @ts-ignore\n    primitive.indices = getGLTFAccessor(decodedData.indices);\n  }\n\n  // Extension has been processed, delete it\n  // delete primitive.extensions[KHR_DRACO_MESH_COMPRESSION];\n\n  checkPrimitive(primitive);\n}\n\n// ENCODE\n\n// eslint-disable-next-line max-len\n// Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\nfunction compressMesh(attributes, indices, mode: number = 4, options, context: LoaderContext) {\n  if (!options.DracoWriter) {\n    throw new Error('options.gltf.DracoWriter not provided');\n  }\n\n  // TODO - use DracoWriter using encode w/ registered DracoWriter...\n  const compressedData = options.DracoWriter.encodeSync({attributes});\n\n  // Draco compression may change the order and number of vertices in a mesh.\n  // To satisfy the requirement that accessors properties be correct for both\n  // compressed and uncompressed data, generators should create uncompressed\n  // attributes and indices using data that has been decompressed from the Draco buffer,\n  // rather than the original source data.\n  // @ts-ignore TODO this needs to be fixed\n  const decodedData = context?.parseSync?.({attributes});\n  const fauxAccessors = options._addFauxAttributes(decodedData.attributes);\n\n  const bufferViewIndex = options.addBufferView(compressedData);\n\n  const glTFMesh = {\n    primitives: [\n      {\n        attributes: fauxAccessors, // TODO - verify with spec\n        mode, // GL.POINTS\n        extensions: {\n          [KHR_DRACO_MESH_COMPRESSION]: {\n            bufferView: bufferViewIndex,\n            attributes: fauxAccessors // TODO - verify with spec\n          }\n        }\n      }\n    ]\n  };\n\n  return glTFMesh;\n}\n\n// UTILS\n\nfunction checkPrimitive(primitive: GLTFMeshPrimitive) {\n  if (!primitive.attributes && Object.keys(primitive.attributes).length > 0) {\n    throw new Error('glTF: Empty primitive detected: Draco decompression failure?');\n  }\n}\n\nfunction* makeMeshPrimitiveIterator(scenegraph) {\n  for (const mesh of scenegraph.json.meshes || []) {\n    for (const primitive of mesh.primitives) {\n      yield primitive;\n    }\n  }\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n", "import type {Loader, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {isBrowser} from '@loaders.gl/worker-utils';\nimport type {DracoParseOptions} from './lib/draco-parser';\n// import type {DracoMeshData} from './types';\nimport {VERSION} from './lib/utils/version';\n\nexport type DracoLoaderOptions = LoaderOptions & {\n  draco?: DracoParseOptions & {\n    decoderType?: 'wasm' | 'js';\n    libraryPath?: string;\n    extraAttributes?;\n    attributeNameEntry?: string;\n    workerUrl?: string;\n  };\n};\n\nconst DEFAULT_DRACO_OPTIONS: DracoLoaderOptions = {\n  draco: {\n    decoderType: typeof WebAssembly === 'object' ? 'wasm' : 'js', // 'js' for IE11\n    libraryPath: 'libs/',\n    extraAttributes: {},\n    attributeNameEntry: undefined\n  }\n};\n\n/**\n * Worker loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n  name: 'Draco',\n  id: isBrowser ? 'draco' : 'draco-nodejs',\n  module: 'draco',\n  shapes: ['mesh'],\n  version: VERSION,\n  worker: true,\n  extensions: ['drc'],\n  mimeTypes: ['application/octet-stream'],\n  binary: true,\n  tests: ['DRACO'],\n  options: DEFAULT_DRACO_OPTIONS\n};\n\nexport const _TypecheckDracoLoader: Loader = DracoLoader;\n", "import {deduceMeshField, MeshAttribute} from '@loaders.gl/schema';\nimport {Schema, Field} from '@loaders.gl/schema';\nimport type {DracoAttribute, DracoLoaderData, DracoMetadataEntry} from '../draco-types';\n\n/** Extract an arrow-like schema from a Draco mesh */\nexport function getDracoSchema(\n  attributes: {[attributeName: string]: MeshAttribute},\n  loaderData: DracoLoaderData,\n  indices?: MeshAttribute\n): Schema {\n  const metadataMap = makeMetadata(loaderData.metadata);\n  const fields: Field[] = [];\n  const namedLoaderDataAttributes = transformAttributesLoaderData(loaderData.attributes);\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    const field = getArrowFieldFromAttribute(\n      attributeName,\n      attribute,\n      namedLoaderDataAttributes[attributeName]\n    );\n    fields.push(field);\n  }\n  if (indices) {\n    const indicesField = getArrowFieldFromAttribute('indices', indices);\n    fields.push(indicesField);\n  }\n  return new Schema(fields, metadataMap);\n}\n\nfunction transformAttributesLoaderData(loaderData: {[key: number]: DracoAttribute}): {\n  [attributeName: string]: DracoAttribute;\n} {\n  const result: {[attributeName: string]: DracoAttribute} = {};\n  for (const key in loaderData) {\n    const dracoAttribute = loaderData[key];\n    result[dracoAttribute.name || 'undefined'] = dracoAttribute;\n  }\n  return result;\n}\n\nfunction getArrowFieldFromAttribute(\n  attributeName: string,\n  attribute: MeshAttribute,\n  loaderData?: DracoAttribute\n): Field {\n  const metadataMap = loaderData ? makeMetadata(loaderData.metadata) : undefined;\n  const field = deduceMeshField(attributeName, attribute, metadataMap);\n  return field;\n}\n\nfunction makeMetadata(metadata: {[key: string]: DracoMetadataEntry}): Map<string, string> {\n  const metadataMap = new Map();\n  for (const key in metadata) {\n    metadataMap.set(`${key}.string`, JSON.stringify(metadata[key]));\n  }\n  return metadataMap;\n}\n", "/* eslint-disable camelcase */\n\nimport type {TypedArray, MeshAttribute, MeshGeometry} from '@loaders.gl/schema';\n\n// Draco types (input)\nimport type {\n  Draco3D,\n  Decoder,\n  Mesh,\n  PointCloud,\n  PointAttribute,\n  Metadata,\n  MetadataQuerier,\n  DracoInt32Array,\n  draco_DataType\n} from '../draco3d/draco3d-types';\n\n// Parsed data types (output)\nimport type {\n  DracoMesh,\n  DracoLoaderData,\n  DracoAttribute,\n  DracoMetadataEntry,\n  DracoQuantizationTransform,\n  DracoOctahedronTransform\n} from './draco-types';\n\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\nimport {getDracoSchema} from './utils/get-draco-schema';\n\n/**\n * @param topology - How triangle indices should be generated (mesh only)\n * @param attributeNameEntry\n * @param extraAttributes\n * @param quantizedAttributes\n * @param octahedronAttributes\n */\nexport type DracoParseOptions = {\n  topology?: 'triangle-list' | 'triangle-strip';\n  attributeNameEntry?: string;\n  extraAttributes?: {[uniqueId: string]: number};\n  quantizedAttributes?: ('POSITION' | 'NORMAL' | 'COLOR' | 'TEX_COORD' | 'GENERIC')[];\n  octahedronAttributes?: ('POSITION' | 'NORMAL' | 'COLOR' | 'TEX_COORD' | 'GENERIC')[];\n};\n\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst GEOMETRY_TYPE = {\n  TRIANGULAR_MESH: 0,\n  POINT_CLOUD: 1\n};\n\n// Native Draco attribute names to GLTF attribute names.\nconst DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP = {\n  POSITION: 'POSITION',\n  NORMAL: 'NORMAL',\n  COLOR: 'COLOR_0',\n  TEX_COORD: 'TEXCOORD_0'\n};\n\nconst DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP = {\n  1: Int8Array,\n  2: Uint8Array,\n  3: Int16Array,\n  4: Uint16Array,\n  5: Int32Array,\n  6: Uint32Array,\n  9: Float32Array\n};\n\nconst INDEX_ITEM_SIZE = 4;\n\nexport default class DracoParser {\n  draco: Draco3D;\n  decoder: Decoder;\n  metadataQuerier: MetadataQuerier;\n\n  // draco - the draco decoder, either import `draco3d` or load dynamically\n  constructor(draco: Draco3D) {\n    this.draco = draco;\n    this.decoder = new this.draco.Decoder();\n    this.metadataQuerier = new this.draco.MetadataQuerier();\n  }\n\n  /**\n   * Destroy draco resources\n   */\n  destroy(): void {\n    this.draco.destroy(this.decoder);\n    this.draco.destroy(this.metadataQuerier);\n  }\n\n  /**\n   * NOTE: caller must call `destroyGeometry` on the return value after using it\n   * @param arrayBuffer\n   * @param options\n   */\n  parseSync(arrayBuffer: ArrayBuffer, options: DracoParseOptions = {}): DracoMesh {\n    const buffer = new this.draco.DecoderBuffer();\n    buffer.Init(new Int8Array(arrayBuffer), arrayBuffer.byteLength);\n\n    this._disableAttributeTransforms(options);\n\n    const geometry_type = this.decoder.GetEncodedGeometryType(buffer);\n    const dracoGeometry =\n      geometry_type === this.draco.TRIANGULAR_MESH\n        ? new this.draco.Mesh()\n        : new this.draco.PointCloud();\n\n    try {\n      let dracoStatus;\n      switch (geometry_type) {\n        case this.draco.TRIANGULAR_MESH:\n          dracoStatus = this.decoder.DecodeBufferToMesh(buffer, dracoGeometry as Mesh);\n          break;\n\n        case this.draco.POINT_CLOUD:\n          dracoStatus = this.decoder.DecodeBufferToPointCloud(buffer, dracoGeometry);\n          break;\n\n        default:\n          throw new Error('DRACO: Unknown geometry type.');\n      }\n\n      if (!dracoStatus.ok() || !dracoGeometry.ptr) {\n        const message = `DRACO decompression failed: ${dracoStatus.error_msg()}`;\n        // console.error(message);\n        throw new Error(message);\n      }\n\n      const loaderData = this._getDracoLoaderData(dracoGeometry, geometry_type, options);\n\n      const geometry = this._getMeshData(dracoGeometry, loaderData, options);\n\n      const boundingBox = getMeshBoundingBox(geometry.attributes);\n\n      const schema = getDracoSchema(geometry.attributes, loaderData, geometry.indices);\n\n      const data: DracoMesh = {\n        loader: 'draco',\n        loaderData,\n        header: {\n          vertexCount: dracoGeometry.num_points(),\n          boundingBox\n        },\n        ...geometry,\n        schema\n      };\n      return data;\n    } finally {\n      this.draco.destroy(buffer);\n      if (dracoGeometry) {\n        this.draco.destroy(dracoGeometry);\n      }\n    }\n  }\n\n  // Draco specific \"loader data\"\n\n  /**\n   * Extract\n   * @param dracoGeometry\n   * @param geometry_type\n   * @param options\n   * @returns\n   */\n  _getDracoLoaderData(\n    dracoGeometry: Mesh | PointCloud,\n    geometry_type,\n    options: DracoParseOptions\n  ): DracoLoaderData {\n    const metadata = this._getTopLevelMetadata(dracoGeometry);\n    const attributes = this._getDracoAttributes(dracoGeometry, options);\n\n    return {\n      geometry_type,\n      num_attributes: dracoGeometry.num_attributes(),\n      num_points: dracoGeometry.num_points(),\n      num_faces: dracoGeometry instanceof this.draco.Mesh ? dracoGeometry.num_faces() : 0,\n      metadata,\n      attributes\n    };\n  }\n\n  /**\n   * Extract all draco provided information and metadata for each attribute\n   * @param dracoGeometry\n   * @param options\n   * @returns\n   */\n  _getDracoAttributes(\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[unique_id: number]: DracoAttribute} {\n    const dracoAttributes: {[unique_id: number]: DracoAttribute} = {};\n\n    for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n      // Note: Draco docs do not seem clear on `GetAttribute` ids just being a zero-based index,\n      // but it does seems to work this way\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n\n      const metadata = this._getAttributeMetadata(dracoGeometry, attributeId);\n\n      dracoAttributes[dracoAttribute.unique_id()] = {\n        unique_id: dracoAttribute.unique_id(),\n        attribute_type: dracoAttribute.attribute_type(),\n        data_type: dracoAttribute.data_type(),\n        num_components: dracoAttribute.num_components(),\n\n        byte_offset: dracoAttribute.byte_offset(),\n        byte_stride: dracoAttribute.byte_stride(),\n        normalized: dracoAttribute.normalized(),\n        attribute_index: attributeId,\n\n        metadata\n      };\n\n      // Add transformation parameters for any attributes app wants untransformed\n      const quantization = this._getQuantizationTransform(dracoAttribute, options);\n      if (quantization) {\n        dracoAttributes[dracoAttribute.unique_id()].quantization_transform = quantization;\n      }\n\n      const octahedron = this._getOctahedronTransform(dracoAttribute, options);\n      if (octahedron) {\n        dracoAttributes[dracoAttribute.unique_id()].octahedron_transform = octahedron;\n      }\n    }\n\n    return dracoAttributes;\n  }\n\n  /**\n   * Get standard loaders.gl mesh category data\n   * Extracts the geometry from draco\n   * @param dracoGeometry\n   * @param options\n   */\n  _getMeshData(\n    dracoGeometry: Mesh | PointCloud,\n    loaderData: DracoLoaderData,\n    options: DracoParseOptions\n  ): MeshGeometry {\n    const attributes = this._getMeshAttributes(loaderData, dracoGeometry, options);\n\n    const positionAttribute = attributes.POSITION;\n    if (!positionAttribute) {\n      throw new Error('DRACO: No position attribute found.');\n    }\n\n    // For meshes, we need indices to define the faces.\n    if (dracoGeometry instanceof this.draco.Mesh) {\n      switch (options.topology) {\n        case 'triangle-strip':\n          return {\n            topology: 'triangle-strip',\n            mode: 4, // GL.TRIANGLES\n            attributes,\n            indices: {\n              value: this._getTriangleStripIndices(dracoGeometry),\n              size: 1\n            }\n          };\n        case 'triangle-list':\n        default:\n          return {\n            topology: 'triangle-list',\n            mode: 5, // GL.TRIANGLE_STRIP\n            attributes,\n            indices: {\n              value: this._getTriangleListIndices(dracoGeometry),\n              size: 1\n            }\n          };\n      }\n    }\n\n    // PointCloud - must come last as Mesh inherits from PointCloud\n    return {\n      topology: 'point-list',\n      mode: 0, // GL.POINTS\n      attributes\n    };\n  }\n\n  _getMeshAttributes(\n    loaderData: DracoLoaderData,\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[attributeName: string]: MeshAttribute} {\n    const attributes: {[key: string]: MeshAttribute} = {};\n\n    for (const loaderAttribute of Object.values(loaderData.attributes)) {\n      const attributeName = this._deduceAttributeName(loaderAttribute, options);\n      loaderAttribute.name = attributeName;\n      const {value, size} = this._getAttributeValues(dracoGeometry, loaderAttribute);\n      attributes[attributeName] = {\n        value,\n        size,\n        byteOffset: loaderAttribute.byte_offset,\n        byteStride: loaderAttribute.byte_stride,\n        normalized: loaderAttribute.normalized\n      };\n    }\n\n    return attributes;\n  }\n\n  // MESH INDICES EXTRACTION\n\n  /**\n   * For meshes, we need indices to define the faces.\n   * @param dracoGeometry\n   */\n  _getTriangleListIndices(dracoGeometry: Mesh) {\n    // Example on how to retrieve mesh and attributes.\n    const numFaces = dracoGeometry.num_faces();\n    const numIndices = numFaces * 3;\n    const byteLength = numIndices * INDEX_ITEM_SIZE;\n\n    const ptr = this.draco._malloc(byteLength);\n    try {\n      this.decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n      return new Uint32Array(this.draco.HEAPF32.buffer, ptr, numIndices).slice();\n    } finally {\n      this.draco._free(ptr);\n    }\n  }\n\n  /**\n   * For meshes, we need indices to define the faces.\n   * @param dracoGeometry\n   */\n  _getTriangleStripIndices(dracoGeometry: Mesh) {\n    const dracoArray = new this.draco.DracoInt32Array();\n    try {\n      /* const numStrips = */ this.decoder.GetTriangleStripsFromMesh(dracoGeometry, dracoArray);\n      return getUint32Array(dracoArray);\n    } finally {\n      this.draco.destroy(dracoArray);\n    }\n  }\n\n  /**\n   *\n   * @param dracoGeometry\n   * @param dracoAttribute\n   * @param attributeName\n   */\n  _getAttributeValues(\n    dracoGeometry: Mesh | PointCloud,\n    attribute: DracoAttribute\n  ): {value: TypedArray; size: number} {\n    const TypedArrayCtor = DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP[attribute.data_type];\n    const numComponents = attribute.num_components;\n    const numPoints = dracoGeometry.num_points();\n    const numValues = numPoints * numComponents;\n\n    const byteLength = numValues * TypedArrayCtor.BYTES_PER_ELEMENT;\n    const dataType = getDracoDataType(this.draco, TypedArrayCtor);\n\n    let value: TypedArray;\n\n    const ptr = this.draco._malloc(byteLength);\n    try {\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attribute.attribute_index);\n      this.decoder.GetAttributeDataArrayForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dataType,\n        byteLength,\n        ptr\n      );\n      value = new TypedArrayCtor(this.draco.HEAPF32.buffer, ptr, numValues).slice();\n    } finally {\n      this.draco._free(ptr);\n    }\n\n    return {value, size: numComponents};\n  }\n\n  // Attribute names\n\n  /** \n   * DRACO does not store attribute names - We need to deduce an attribute name\n   * for each attribute\n  _getAttributeNames(\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[unique_id: number]: string} {\n    const attributeNames: {[unique_id: number]: string} = {};\n    for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n      const attributeName = this._deduceAttributeName(dracoAttribute, options);\n      attributeNames[attributeName] = attributeName;\n    }\n    return attributeNames;\n  }\n   */\n\n  /**\n   * Deduce an attribute name.\n   * @note DRACO does not save attribute names, just general type (POSITION, COLOR)\n   * to help optimize compression. We generate GLTF compatible names for the Draco-recognized\n   * types\n   * @param attributeData\n   */\n  _deduceAttributeName(attribute: DracoAttribute, options: DracoParseOptions): string {\n    // Deduce name based on application provided map\n    const uniqueId = attribute.unique_id;\n    for (const [attributeName, attributeUniqueId] of Object.entries(\n      options.extraAttributes || {}\n    )) {\n      if (attributeUniqueId === uniqueId) {\n        return attributeName;\n      }\n    }\n\n    // Deduce name based on attribute type\n    const thisAttributeType = attribute.attribute_type;\n    for (const dracoAttributeConstant in DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP) {\n      const attributeType = this.draco[dracoAttributeConstant];\n      if (attributeType === thisAttributeType) {\n        // TODO - Return unique names if there multiple attributes per type\n        // (e.g. multiple TEX_COORDS or COLORS)\n        return DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP[dracoAttributeConstant];\n      }\n    }\n\n    // Look up in metadata\n    // TODO - shouldn't this have priority?\n    const entryName = options.attributeNameEntry || 'name';\n    if (attribute.metadata[entryName]) {\n      return attribute.metadata[entryName].string;\n    }\n\n    // Attribute of \"GENERIC\" type, we need to assign some name\n    return `CUSTOM_ATTRIBUTE_${uniqueId}`;\n  }\n\n  // METADATA EXTRACTION\n\n  /** Get top level metadata */\n  _getTopLevelMetadata(dracoGeometry: Mesh | PointCloud) {\n    const dracoMetadata = this.decoder.GetMetadata(dracoGeometry);\n    return this._getDracoMetadata(dracoMetadata);\n  }\n\n  /** Get per attribute metadata */\n  _getAttributeMetadata(dracoGeometry: Mesh | PointCloud, attributeId: number) {\n    const dracoMetadata = this.decoder.GetAttributeMetadata(dracoGeometry, attributeId);\n    return this._getDracoMetadata(dracoMetadata);\n  }\n\n  /**\n   * Extract metadata field values\n   * @param dracoMetadata\n   * @returns\n   */\n  _getDracoMetadata(dracoMetadata: Metadata): {[entry: string]: DracoMetadataEntry} {\n    // The not so wonderful world of undocumented Draco APIs :(\n    if (!dracoMetadata || !dracoMetadata.ptr) {\n      return {};\n    }\n    const result = {};\n    const numEntries = this.metadataQuerier.NumEntries(dracoMetadata);\n    for (let entryIndex = 0; entryIndex < numEntries; entryIndex++) {\n      const entryName = this.metadataQuerier.GetEntryName(dracoMetadata, entryIndex);\n      result[entryName] = this._getDracoMetadataField(dracoMetadata, entryName);\n    }\n    return result;\n  }\n\n  /**\n   * Extracts possible values for one metadata entry by name\n   * @param dracoMetadata\n   * @param entryName\n   */\n  _getDracoMetadataField(dracoMetadata: Metadata, entryName: string): DracoMetadataEntry {\n    const dracoArray = new this.draco.DracoInt32Array();\n    try {\n      // Draco metadata fields can hold int32 arrays\n      this.metadataQuerier.GetIntEntryArray(dracoMetadata, entryName, dracoArray);\n      const intArray = getInt32Array(dracoArray);\n      return {\n        int: this.metadataQuerier.GetIntEntry(dracoMetadata, entryName),\n        string: this.metadataQuerier.GetStringEntry(dracoMetadata, entryName),\n        double: this.metadataQuerier.GetDoubleEntry(dracoMetadata, entryName),\n        intArray\n      };\n    } finally {\n      this.draco.destroy(dracoArray);\n    }\n  }\n\n  // QUANTIZED ATTRIBUTE SUPPORT (NO DECOMPRESSION)\n\n  /** Skip transforms for specific attribute types */\n  _disableAttributeTransforms(options: DracoParseOptions) {\n    const {quantizedAttributes = [], octahedronAttributes = []} = options;\n    const skipAttributes = [...quantizedAttributes, ...octahedronAttributes];\n    for (const dracoAttributeName of skipAttributes) {\n      this.decoder.SkipAttributeTransform(this.draco[dracoAttributeName]);\n    }\n  }\n\n  /**\n   * Extract (and apply?) Position Transform\n   * @todo not used\n   */\n  _getQuantizationTransform(\n    dracoAttribute: PointAttribute,\n    options: DracoParseOptions\n  ): DracoQuantizationTransform | null {\n    const {quantizedAttributes = []} = options;\n    const attribute_type = dracoAttribute.attribute_type();\n    const skip = quantizedAttributes.map((type) => this.decoder[type]).includes(attribute_type);\n    if (skip) {\n      const transform = new this.draco.AttributeQuantizationTransform();\n      try {\n        if (transform.InitFromAttribute(dracoAttribute)) {\n          return {\n            quantization_bits: transform.quantization_bits(),\n            range: transform.range(),\n            min_values: new Float32Array([1, 2, 3]).map((i) => transform.min_value(i))\n          };\n        }\n      } finally {\n        this.draco.destroy(transform);\n      }\n    }\n    return null;\n  }\n\n  _getOctahedronTransform(\n    dracoAttribute: PointAttribute,\n    options: DracoParseOptions\n  ): DracoOctahedronTransform | null {\n    const {octahedronAttributes = []} = options;\n    const attribute_type = dracoAttribute.attribute_type();\n    const octahedron = octahedronAttributes\n      .map((type) => this.decoder[type])\n      .includes(attribute_type);\n    if (octahedron) {\n      const transform = new this.draco.AttributeQuantizationTransform();\n      try {\n        if (transform.InitFromAttribute(dracoAttribute)) {\n          return {\n            quantization_bits: transform.quantization_bits()\n          };\n        }\n      } finally {\n        this.draco.destroy(transform);\n      }\n    }\n    return null;\n  }\n\n  // HELPERS\n}\n\n/**\n * Get draco specific data type by TypedArray constructor type\n * @param attributeType\n * @returns draco specific data type\n */\nfunction getDracoDataType(draco: Draco3D, attributeType: any): draco_DataType {\n  switch (attributeType) {\n    case Float32Array:\n      return draco.DT_FLOAT32;\n    case Int8Array:\n      return draco.DT_INT8;\n    case Int16Array:\n      return draco.DT_INT16;\n    case Int32Array:\n      return draco.DT_INT32;\n    case Uint8Array:\n      return draco.DT_UINT8;\n    case Uint16Array:\n      return draco.DT_UINT16;\n    case Uint32Array:\n      return draco.DT_UINT32;\n    default:\n      return draco.DT_INVALID;\n  }\n}\n\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getInt32Array(dracoArray: DracoInt32Array): Int32Array {\n  const numValues = dracoArray.size();\n  const intArray = new Int32Array(numValues);\n  for (let i = 0; i < numValues; i++) {\n    intArray[i] = dracoArray.GetValue(i);\n  }\n  return intArray;\n}\n\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getUint32Array(dracoArray: DracoInt32Array): Int32Array {\n  const numValues = dracoArray.size();\n  const intArray = new Int32Array(numValues);\n  for (let i = 0; i < numValues; i++) {\n    intArray[i] = dracoArray.GetValue(i);\n  }\n  return intArray;\n}\n", "// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst DRACO_DECODER_VERSION = '1.5.5';\nconst DRACO_ENCODER_VERSION = '1.4.1';\n\nconst STATIC_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_DECODER_VERSION}`;\n\nconst DRACO_JS_DECODER_URL = `${STATIC_DECODER_URL}/draco_decoder.js`;\nconst DRACO_WASM_WRAPPER_URL = `${STATIC_DECODER_URL}/draco_wasm_wrapper.js`;\nconst DRACO_WASM_DECODER_URL = `${STATIC_DECODER_URL}/draco_decoder.wasm`;\n\nconst DRACO_ENCODER_URL = `https://raw.githubusercontent.com/google/draco/${DRACO_ENCODER_VERSION}/javascript/draco_encoder.js`;\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadDecoderPromise =\n      loadDecoderPromise ||\n      modules.draco3d.createDecoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  }\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadEncoderPromise =\n      loadEncoderPromise ||\n      modules.draco3d.createEncoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  }\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary(DRACO_JS_DECODER_URL, 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary(DRACO_WASM_WRAPPER_URL, 'draco', options),\n        await loadLibrary(DRACO_WASM_DECODER_URL, 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || globalThis.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options: {wasmBinary?: any} = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary(DRACO_ENCODER_URL, 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || globalThis.DracoEncoderModule;\n\n  return new Promise((resolve) => {\n    DracoEncoderModule({\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n", "import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {DracoMesh, DracoLoaderData} from './lib/draco-types';\nimport type {DracoLoaderOptions} from './draco-loader';\nimport {DracoLoader as DracoWorkerLoader} from './draco-loader';\nimport DracoParser from './lib/draco-parser';\nimport {loadDracoDecoderModule} from './lib/draco-module-loader';\nimport {VERSION} from './lib/utils/version';\nimport {isBrowser} from '@loaders.gl/worker-utils';\n\n// Draco data types\n\nexport type {DracoMesh, DracoLoaderData};\n\n// Draco Writer\n\nexport type {DracoWriterOptions} from './draco-writer';\nexport {DracoWriter} from './draco-writer';\n\n/**\n * Browser worker doesn't work because of issue during \"draco_encoder.js\" loading.\n * Refused to execute script from 'https://raw.githubusercontent.com/google/draco/1.4.1/javascript/draco_encoder.js' because its MIME type ('') is not executable.\n */\nexport const DracoWriterWorker = {\n  id: isBrowser ? 'draco-writer' : 'draco-writer-nodejs',\n  name: 'Draco compressed geometry writer',\n  module: 'draco',\n  version: VERSION,\n  worker: true,\n  options: {\n    draco: {},\n    source: null\n  }\n};\n\n// Draco Loader\n\nexport type {DracoLoaderOptions};\nexport {DracoWorkerLoader};\n\n/**\n * Loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n  ...DracoWorkerLoader,\n  parse\n};\n\nasync function parse(arrayBuffer: ArrayBuffer, options?: DracoLoaderOptions): Promise<DracoMesh> {\n  const {draco} = await loadDracoDecoderModule(options);\n  const dracoParser = new DracoParser(draco);\n  try {\n    return dracoParser.parseSync(arrayBuffer, options?.draco);\n  } finally {\n    dracoParser.destroy();\n  }\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckDracoLoader: LoaderWithParser = DracoLoader;\n", "// import type {TypedArray} from '../types/loader-utils';\nimport type {GLTFAccessor} from '../types/gltf-types';\n// TODO - remove\nimport {getAccessorTypeFromSize, getComponentTypeFromArray} from './gltf-utils';\n\n// Returns a fresh attributes object with glTF-standardized attributes names\n// Attributes that cannot be identified will not be included\n// Removes `indices` if present, as it should be stored separately from the attributes\nexport function getGLTFAccessors(attributes): {[key: string]: GLTFAccessor} {\n  const accessors = {};\n  for (const name in attributes) {\n    const attribute = attributes[name];\n    if (name !== 'indices') {\n      const glTFAccessor = getGLTFAccessor(attribute);\n      accessors[name] = glTFAccessor;\n    }\n  }\n  return accessors;\n}\n\n// Fix up a single accessor.\n// Input: typed array or a partial accessor object\n// Return: accessor object\nexport function getGLTFAccessor(attribute) {\n  const {buffer, size, count} = getAccessorData(attribute);\n\n  const glTFAccessor: GLTFAccessor = {\n    // glTF Accessor values\n    // TODO: Instead of a bufferView index we could have an actual buffer (typed array)\n    // bufferView: null,\n    // TODO: Deprecate `value` in favor of bufferView?\n    // @ts-ignore\n    value: buffer,\n    size, // Decoded `type` (e.g. SCALAR)\n\n    byteOffset: 0,\n    count,\n    type: getAccessorTypeFromSize(size),\n    componentType: getComponentTypeFromArray(buffer)\n  };\n\n  return glTFAccessor;\n}\n\n// export function getGLTFAttribute(data, gltfAttributeName): GLTFAccessor {\n//   return data.attributes[data.glTFAttributeMap[gltfAttributeName]];\n// }\n\nfunction getAccessorData(attribute) {\n  let buffer = attribute;\n  let size = 1;\n  let count = 0;\n\n  if (attribute && attribute.value) {\n    buffer = attribute.value;\n    size = attribute.size || 1;\n  }\n\n  if (buffer) {\n    if (!ArrayBuffer.isView(buffer)) {\n      buffer = toTypedArray(buffer, Float32Array);\n    }\n    count = buffer.length / size;\n  }\n\n  return {buffer, size, count};\n}\n\n// Convert non-typed arrays to arrays of specified format\nfunction toTypedArray(array, ArrayType, convertTypedArrays = false) {\n  if (!array) {\n    return null;\n  }\n  if (Array.isArray(array)) {\n    return new ArrayType(array);\n  }\n  if (convertTypedArrays && !(array instanceof ArrayType)) {\n    return new ArrayType(array);\n  }\n  return array;\n}\n", "/**\n * https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_transform/README.md\n */\n\nimport {Vector3, Matrix3} from '@math.gl/core';\nimport type {GLTFMeshPrimitive, GLTFWithBuffers} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\nimport {getAccessorArrayTypeAndLength} from '../gltf-utils/gltf-utils';\nimport {BYTES, COMPONENTS} from '../gltf-utils/gltf-constants';\nimport {\n  Accessor,\n  BufferView,\n  MaterialNormalTextureInfo,\n  MaterialOcclusionTextureInfo,\n  TextureInfo as GLTFTextureInfo\n} from '../types/gltf-json-schema';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\n/** Extension name */\nconst EXT_MESHOPT_TRANSFORM = 'KHR_texture_transform';\n\nexport const name = EXT_MESHOPT_TRANSFORM;\n\nconst scratchVector = new Vector3();\nconst scratchRotationMatrix = new Matrix3();\nconst scratchScaleMatrix = new Matrix3();\n\n/** Extension textureInfo https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_transform#gltf-schema-updates */\ntype TextureInfo = {\n  /** The offset of the UV coordinate origin as a factor of the texture dimensions. */\n  offset?: [number, number];\n  /** Rotate the UVs by this many radians counter-clockwise around the origin. This is equivalent to a similar rotation of the image clockwise. */\n  rotation?: number;\n  /** The scale factor applied to the components of the UV coordinates. */\n  scale?: [number, number];\n  /** Overrides the textureInfo texCoord value if supplied, and if this extension is supported. */\n  texCoord?: number;\n};\n/** Intersection of all GLTF textures */\ntype CompoundGLTFTextureInfo = GLTFTextureInfo &\n  MaterialNormalTextureInfo &\n  MaterialOcclusionTextureInfo;\n/** Parameters for TEXCOORD transformation */\ntype TransformParameters = {\n  /** Original texCoord value https://www.khronos.org/registry/glTF/specs/2.0/glTF-2.0.html#_textureinfo_texcoord */\n  originalTexCoord: number;\n  /** New texCoord value from extension https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_transform#gltf-schema-updates */\n  texCoord: number;\n  /** Transformation matrix */\n  matrix: Matrix3;\n};\n\n/**\n * The extension entry to process the transformation\n * @param gltfData gltf buffers and json\n * @param options GLTFLoader options\n */\nexport async function decode(gltfData: GLTFWithBuffers, options: GLTFLoaderOptions) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const extension = gltfScenegraph.getExtension(EXT_MESHOPT_TRANSFORM);\n  if (!extension) {\n    return;\n  }\n  const materials = gltfData.json.materials || [];\n  for (let i = 0; i < materials.length; i++) {\n    transformTexCoords(i, gltfData);\n  }\n}\n\n/**\n * Transform TEXCOORD by material\n * @param materialIndex processing material index\n * @param gltfData gltf buffers and json\n */\nfunction transformTexCoords(materialIndex: number, gltfData: GLTFWithBuffers): void {\n  // Save processed texCoords in order no to process the same twice\n  const processedTexCoords: [number, number][] = [];\n  const material = gltfData.json.materials?.[materialIndex];\n  const baseColorTexture = material?.pbrMetallicRoughness?.baseColorTexture;\n  if (baseColorTexture) {\n    transformPrimitives(gltfData, materialIndex, baseColorTexture, processedTexCoords);\n  }\n  const emisiveTexture = material?.emissiveTexture;\n  if (emisiveTexture) {\n    transformPrimitives(gltfData, materialIndex, emisiveTexture, processedTexCoords);\n  }\n  const normalTexture = material?.normalTexture;\n  if (normalTexture) {\n    transformPrimitives(gltfData, materialIndex, normalTexture, processedTexCoords);\n  }\n  const occlusionTexture = material?.occlusionTexture;\n  if (occlusionTexture) {\n    transformPrimitives(gltfData, materialIndex, occlusionTexture, processedTexCoords);\n  }\n  const metallicRoughnessTexture = material?.pbrMetallicRoughness?.metallicRoughnessTexture;\n  if (metallicRoughnessTexture) {\n    transformPrimitives(gltfData, materialIndex, metallicRoughnessTexture, processedTexCoords);\n  }\n}\n\n/**\n * Transform primitives of the particular material\n * @param gltfData gltf data\n * @param materialIndex primitives with this material will be transformed\n * @param texture texture object\n * @param processedTexCoords storage to save already processed texCoords\n */\nfunction transformPrimitives(\n  gltfData: GLTFWithBuffers,\n  materialIndex: number,\n  texture: CompoundGLTFTextureInfo,\n  processedTexCoords: [number, number][]\n) {\n  const transformParameters = getTransformParameters(texture, processedTexCoords);\n  if (!transformParameters) {\n    return;\n  }\n  const meshes = gltfData.json.meshes || [];\n  for (const mesh of meshes) {\n    for (const primitive of mesh.primitives) {\n      const material = primitive.material;\n      if (Number.isFinite(material) && materialIndex === material) {\n        transformPrimitive(gltfData, primitive, transformParameters);\n      }\n    }\n  }\n}\n\n/**\n * Get parameters for TEXCOORD transformation\n * @param texture texture object\n * @param processedTexCoords storage to save already processed texCoords\n * @returns texCoord couple and transformation matrix\n */\nfunction getTransformParameters(\n  texture: CompoundGLTFTextureInfo,\n  processedTexCoords: [number, number][]\n): TransformParameters | null {\n  const textureInfo = texture.extensions?.[EXT_MESHOPT_TRANSFORM];\n  const {texCoord: originalTexCoord = 0} = texture;\n  // If texCoord is not set in the extension, original attribute data will be replaced\n  const {texCoord = originalTexCoord} = textureInfo;\n  // Make sure that couple [originalTexCoord, extensionTexCoord] is not processed twice\n  const isProcessed =\n    processedTexCoords.findIndex(\n      ([original, newTexCoord]) => original === originalTexCoord && newTexCoord === texCoord\n    ) !== -1;\n  if (!isProcessed) {\n    const matrix = makeTransformationMatrix(textureInfo);\n    if (originalTexCoord !== texCoord) {\n      texture.texCoord = texCoord;\n    }\n    processedTexCoords.push([originalTexCoord, texCoord]);\n    return {originalTexCoord, texCoord, matrix};\n  }\n  return null;\n}\n\n/**\n * Transform `TEXCOORD_0` attribute in the primitive\n * @param gltfData gltf data\n * @param primitive primitive object\n * @param transformParameters texCoord couple and transformation matrix\n */\nfunction transformPrimitive(\n  gltfData: GLTFWithBuffers,\n  primitive: GLTFMeshPrimitive,\n  transformParameters: TransformParameters\n) {\n  const {originalTexCoord, texCoord, matrix} = transformParameters;\n  const texCoordAccessor = primitive.attributes[`TEXCOORD_${originalTexCoord}`];\n  if (Number.isFinite(texCoordAccessor)) {\n    // Get accessor of the `TEXCOORD_0` attribute\n    const accessor = gltfData.json.accessors?.[texCoordAccessor];\n    if (accessor && accessor.bufferView) {\n      // Get `bufferView` of the `accessor`\n      const bufferView = gltfData.json.bufferViews?.[accessor.bufferView];\n      if (bufferView) {\n        // Get `arrayBuffer` the `bufferView` look at\n        const {arrayBuffer, byteOffset: bufferByteOffset} = gltfData.buffers[bufferView.buffer];\n        // Resulting byteOffset is sum of the buffer, accessor and bufferView byte offsets\n        const byteOffset =\n          (bufferByteOffset || 0) + (accessor.byteOffset || 0) + (bufferView.byteOffset || 0);\n        // Deduce TypedArray type and its length from `accessor` and `bufferView` data\n        const {ArrayType, length} = getAccessorArrayTypeAndLength(accessor, bufferView);\n        // Number of bytes each component occupies\n        const bytes = BYTES[accessor.componentType];\n        // Number of components. For the `TEXCOORD_0` with `VEC2` type, it must return 2\n        const components = COMPONENTS[accessor.type];\n        // Multiplier to calculate the address of the `TEXCOORD_0` element in the arrayBuffer\n        const elementAddressScale = bufferView.byteStride || bytes * components;\n        // Data transform to Float32Array\n        const result = new Float32Array(length);\n        for (let i = 0; i < accessor.count; i++) {\n          // Take [u, v] couple from the arrayBuffer\n          const uv = new ArrayType(arrayBuffer, byteOffset + i * elementAddressScale, 2);\n          // Set and transform Vector3 per https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_transform#overview\n          scratchVector.set(uv[0], uv[1], 1);\n          scratchVector.transformByMatrix3(matrix);\n          // Save result in Float32Array\n          result.set([scratchVector[0], scratchVector[1]], i * components);\n        }\n        // If texCoord the same, replace gltf structural data\n        if (originalTexCoord === texCoord) {\n          updateGltf(accessor, bufferView, gltfData.buffers, result);\n        } else {\n          // If texCoord change, create new attribute\n          createAttribute(texCoord, accessor, primitive, gltfData, result);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Update GLTF structural objects with new data as we create new `Float32Array` for `TEXCOORD_0`.\n * @param accessor accessor to change\n * @param bufferView bufferView to change\n * @param buffers binary buffers\n * @param newTexcoordArray typed array with data after transformation\n */\nfunction updateGltf(\n  accessor: Accessor,\n  bufferView: BufferView,\n  buffers: {arrayBuffer: ArrayBuffer; byteOffset: number; byteLength: number}[],\n  newTexCoordArray: Float32Array\n): void {\n  accessor.componentType = 5126;\n  buffers.push({\n    arrayBuffer: newTexCoordArray.buffer,\n    byteOffset: 0,\n    byteLength: newTexCoordArray.buffer.byteLength\n  });\n  bufferView.buffer = buffers.length - 1;\n  bufferView.byteLength = newTexCoordArray.buffer.byteLength;\n  bufferView.byteOffset = 0;\n  delete bufferView.byteStride;\n}\n\n/**\n *\n * @param newTexCoord new `texCoord` value\n * @param originalAccessor original accessor object, that store data before transformation\n * @param primitive primitive object\n * @param gltfData gltf data\n * @param newTexCoordArray typed array with data after transformation\n * @returns\n */\nfunction createAttribute(\n  newTexCoord: number,\n  originalAccessor: Accessor,\n  primitive: GLTFMeshPrimitive,\n  gltfData: GLTFWithBuffers,\n  newTexCoordArray: Float32Array\n) {\n  gltfData.buffers.push({\n    arrayBuffer: newTexCoordArray.buffer,\n    byteOffset: 0,\n    byteLength: newTexCoordArray.buffer.byteLength\n  });\n  const bufferViews = gltfData.json.bufferViews;\n  if (!bufferViews) {\n    return;\n  }\n  bufferViews.push({\n    buffer: gltfData.buffers.length - 1,\n    byteLength: newTexCoordArray.buffer.byteLength,\n    byteOffset: 0\n  });\n  const accessors = gltfData.json.accessors;\n  if (!accessors) {\n    return;\n  }\n  accessors.push({\n    bufferView: bufferViews?.length - 1,\n    byteOffset: 0,\n    componentType: 5126,\n    count: originalAccessor.count,\n    type: 'VEC2'\n  });\n  primitive.attributes[`TEXCOORD_${newTexCoord}`] = accessors.length - 1;\n}\n\n/**\n * Construct transformation matrix from the extension data (transition, rotation, scale)\n * @param extensionData extension data\n * @returns transformation matrix\n */\nfunction makeTransformationMatrix(extensionData: TextureInfo): Matrix3 {\n  const {offset = [0, 0], rotation = 0, scale = [1, 1]} = extensionData;\n  const translationMatirx = new Matrix3().set(1, 0, 0, 0, 1, 0, offset[0], offset[1], 1);\n  const rotationMatirx = scratchRotationMatrix.set(\n    Math.cos(rotation),\n    Math.sin(rotation),\n    0,\n    -Math.sin(rotation),\n    Math.cos(rotation),\n    0,\n    0,\n    0,\n    1\n  );\n  const scaleMatrix = scratchScaleMatrix.set(scale[0], 0, 0, 0, scale[1], 0, 0, 0, 1);\n  return translationMatirx.multiplyRight(rotationMatirx).multiplyRight(scaleMatrix);\n}\n", "export const COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nexport const BYTES = {\n  5120: 1, // BYTE\n  5121: 1, // UNSIGNED_BYTE\n  5122: 2, // SHORT\n  5123: 2, // UNSIGNED_SHORT\n  5125: 4, // UNSIGNED_INT\n  5126: 4 // FLOAT\n};\n\n// ENUM LOOKUP\n\nexport function getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\n\nexport function getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\n\nexport function getGLEnumFromSamplerParameter(parameter) {\n  const GL_TEXTURE_MAG_FILTER = 0x2800;\n  const GL_TEXTURE_MIN_FILTER = 0x2801;\n  const GL_TEXTURE_WRAP_S = 0x2802;\n  const GL_TEXTURE_WRAP_T = 0x2803;\n\n  const PARAMETER_MAP = {\n    magFilter: GL_TEXTURE_MAG_FILTER,\n    minFilter: GL_TEXTURE_MIN_FILTER,\n    wrapS: GL_TEXTURE_WRAP_S,\n    wrapT: GL_TEXTURE_WRAP_T\n  };\n\n  return PARAMETER_MAP[parameter];\n}\n", "// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport {assert} from '../../utils/assert';\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\n\nexport const name = KHR_LIGHTS_PUNCTUAL;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n", "// GLTF EXTENSION: KHR_materials_unlit\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\n\nexport const name = KHR_MATERIALS_UNLIT;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const material of json.materials || []) {\n    const extension = material.extensions && material.extensions.KHR_materials_unlit;\n    if (extension) {\n      // @ts-ignore TODO\n      material.unlit = true;\n    }\n    gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n  }\n\n  // Remove the top-level extension\n  gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n}\n\nexport function encode(gltfData) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.materials) {\n    for (const material of json.materials || []) {\n      // @ts-ignore\n      if (material.unlit) {\n        // @ts-ignore\n        delete material.unlit;\n        gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n        gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n      }\n    }\n  }\n}\n", "// GLTF EXTENSION: KHR_techniques_webgl\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_techniques_webgl\n\nimport type {GLTF} from '../../types/gltf-types';\n\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\n\nconst KHR_TECHNIQUES_WEBGL = 'KHR_techniques_webgl';\n\nexport const name = KHR_TECHNIQUES_WEBGL;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  const extension = gltfScenegraph.getExtension(KHR_TECHNIQUES_WEBGL);\n  if (extension) {\n    const techniques = resolveTechniques(extension, gltfScenegraph);\n\n    for (const material of json.materials || []) {\n      const materialExtension = gltfScenegraph.getObjectExtension(material, KHR_TECHNIQUES_WEBGL);\n      if (materialExtension) {\n        // @ts-ignore TODO\n        material.technique = Object.assign(\n          {},\n          materialExtension,\n          // @ts-ignore\n          techniques[materialExtension.technique]\n        );\n        // @ts-ignore TODO\n        material.technique.values = resolveValues(material.technique, gltfScenegraph);\n      }\n      gltfScenegraph.removeObjectExtension(material, KHR_TECHNIQUES_WEBGL);\n    }\n\n    // Remove the top-level extension\n    gltfScenegraph.removeExtension(KHR_TECHNIQUES_WEBGL);\n  }\n}\n// eslint-disable-next-line\nexport async function encode(gltfData, options): Promise<void> {\n  // TODO\n}\n\nfunction resolveTechniques(\n  techniquesExtension: {[key: string]: any},\n  // programs: {[key: string]: any}[],\n  // shaders: {[key: string]: any}[],\n  // techniques: {[key: string]: any}[]\n  gltfScenegraph\n) {\n  const {programs = [], shaders = [], techniques = []} = techniquesExtension;\n  const textDecoder = new TextDecoder();\n\n  shaders.forEach((shader) => {\n    if (Number.isFinite(shader.bufferView)) {\n      shader.code = textDecoder.decode(\n        gltfScenegraph.getTypedArrayForBufferView(shader.bufferView)\n      );\n    } else {\n      // TODO: handle URI shader\n      throw new Error('KHR_techniques_webgl: no shader code');\n    }\n  });\n\n  programs.forEach((program) => {\n    program.fragmentShader = shaders[program.fragmentShader];\n    program.vertexShader = shaders[program.vertexShader];\n  });\n\n  techniques.forEach((technique) => {\n    technique.program = programs[technique.program];\n  });\n\n  return techniques;\n}\n\nfunction resolveValues(technique, gltfScenegraph) {\n  const values = Object.assign({}, technique.values);\n\n  // merge values from uniforms\n  Object.keys(technique.uniforms || {}).forEach((uniform) => {\n    if (technique.uniforms[uniform].value && !(uniform in values)) {\n      values[uniform] = technique.uniforms[uniform].value;\n    }\n  });\n\n  // resolve textures\n  Object.keys(values).forEach((uniform) => {\n    if (typeof values[uniform] === 'object' && values[uniform].index !== undefined) {\n      // Assume this is a texture\n      // TODO: find if there are any other types that can be referenced\n      values[uniform].texture = gltfScenegraph.getTexture(values[uniform].index);\n    }\n  });\n\n  return values;\n}\n", "/* eslint-disable camelcase */\nimport type {GLTF} from '../../types/gltf-types';\n\nimport GLTFScenegraph from '../../api/gltf-scenegraph';\nimport {\n  ClassProperty,\n  EXT_feature_metadata_class_object,\n  EXT_feature_metadata_feature_table,\n  FeatureTableProperty,\n  GLTF_EXT_feature_metadata\n} from '../../types/gltf-json-schema';\n\n/** Extension name */\nconst EXT_FEATURE_METADATA = 'EXT_feature_metadata';\n\nexport const name = EXT_FEATURE_METADATA;\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const scenegraph = new GLTFScenegraph(gltfData);\n  decodeExtFeatureMetadata(scenegraph);\n}\n\n/**\n * Decodes feature metadata from extension\n * @param scenegraph\n */\nfunction decodeExtFeatureMetadata(scenegraph: GLTFScenegraph): void {\n  const extension: GLTF_EXT_feature_metadata | null = scenegraph.getExtension(EXT_FEATURE_METADATA);\n  const schemaClasses = extension?.schema?.classes;\n  const featureTables = extension?.featureTables;\n  const featureTextures = extension?.featureTextures;\n\n  if (featureTextures) {\n    /*\n     * TODO add support for featureTextures\n     * Spec - https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_feature_metadata#feature-textures\n     */\n    // eslint-disable-next-line no-console\n    console.warn('featureTextures is not yet supported in the \"EXT_feature_metadata\" extension.');\n  }\n\n  if (schemaClasses && featureTables) {\n    for (const schemaName in schemaClasses) {\n      const schemaClass = schemaClasses[schemaName];\n      const featureTable = findFeatureTableByName(featureTables, schemaName);\n\n      if (featureTable) {\n        handleFeatureTableProperties(scenegraph, featureTable, schemaClass);\n      }\n    }\n  }\n}\n\n/**\n * Navigate throw all properies in feature table and gets properties data.\n * @param scenegraph\n * @param featureTable\n * @param schemaClass\n */\nfunction handleFeatureTableProperties(\n  scenegraph: GLTFScenegraph,\n  featureTable: EXT_feature_metadata_feature_table,\n  schemaClass: EXT_feature_metadata_class_object\n): void {\n  for (const propertyName in schemaClass.properties) {\n    const schemaProperty = schemaClass.properties[propertyName];\n    const featureTableProperty = featureTable?.properties?.[propertyName];\n    const numberOfFeatures = featureTable.count;\n\n    if (featureTableProperty) {\n      const data = getPropertyDataFromBinarySource(\n        scenegraph,\n        schemaProperty,\n        numberOfFeatures,\n        featureTableProperty\n      );\n      featureTableProperty.data = data;\n    }\n  }\n}\n\n/**\n * Decode properties from binary sourse based on property type.\n * @param scenegraph\n * @param schemaProperty\n * @param numberOfFeatures\n * @param featureTableProperty\n */\nfunction getPropertyDataFromBinarySource(\n  scenegraph: GLTFScenegraph,\n  schemaProperty: ClassProperty,\n  numberOfFeatures: number,\n  featureTableProperty: FeatureTableProperty\n): Uint8Array | string[] {\n  const bufferView = featureTableProperty.bufferView;\n  // TODO think maybe we shouldn't get data only in Uint8Array format.\n  let data: Uint8Array | string[] = scenegraph.getTypedArrayForBufferView(bufferView);\n\n  switch (schemaProperty.type) {\n    case 'STRING': {\n      // stringOffsetBufferView should be available for string type.\n      const stringOffsetBufferView = featureTableProperty.stringOffsetBufferView!;\n      const offsetsData = scenegraph.getTypedArrayForBufferView(stringOffsetBufferView);\n      data = getStringAttributes(data, offsetsData, numberOfFeatures);\n      break;\n    }\n    default:\n  }\n\n  return data;\n}\n\n/**\n * Find the feature table by class name.\n * @param featureTables\n * @param schemaClassName\n */\nfunction findFeatureTableByName(\n  featureTables: {[key: string]: EXT_feature_metadata_feature_table},\n  schemaClassName: string\n): EXT_feature_metadata_feature_table | null {\n  for (const featureTableName in featureTables) {\n    const featureTable = featureTables[featureTableName];\n\n    if (featureTable.class === schemaClassName) {\n      return featureTable;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Getting string attributes from binary data.\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/specification/Metadata#strings\n * @param data\n * @param offsetsData\n * @param stringsCount\n */\nfunction getStringAttributes(\n  data: Uint8Array,\n  offsetsData: Uint8Array,\n  stringsCount: number\n): string[] {\n  const stringsArray: string[] = [];\n  const textDecoder = new TextDecoder('utf8');\n\n  let stringOffset = 0;\n  const bytesPerStringSize = 4;\n\n  for (let index = 0; index < stringsCount; index++) {\n    // TODO check if it is multiplication on bytesPerStringSize is valid operation?\n    const stringByteSize =\n      offsetsData[(index + 1) * bytesPerStringSize] - offsetsData[index * bytesPerStringSize];\n    const stringData = data.subarray(stringOffset, stringByteSize + stringOffset);\n    const stringAttribute = textDecoder.decode(stringData);\n\n    stringsArray.push(stringAttribute);\n    stringOffset += stringByteSize;\n  }\n\n  return stringsArray;\n}\n", "/* eslint-disable camelcase */\nimport {GLTF} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\n// GLTF 1.0 extensions (decode only)\n// import * as KHR_binary_gltf from './KHR_draco_mesh_compression';\n\n// GLTF 2.0 Khronos extensions (decode/encode)\nimport * as EXT_meshopt_compression from '../extensions/EXT_meshopt_compression';\nimport * as EXT_texture_webp from '../extensions/EXT_texture_webp';\nimport * as KHR_texture_basisu from '../extensions/KHR_texture_basisu';\nimport * as KHR_draco_mesh_compression from '../extensions/KHR_draco_mesh_compression';\nimport * as KHR_texture_transform from '../extensions/KHR_texture_transform';\n\n// Deprecated. These should be handled by rendering library (e.g. luma.gl), not the loader.\nimport * as KHR_lights_punctual from '../extensions/deprecated/KHR_lights_punctual';\nimport * as KHR_materials_unlit from '../extensions/deprecated/KHR_materials_unlit';\nimport * as KHR_techniques_webgl from '../extensions/deprecated/KHR_techniques_webgl';\nimport * as EXT_feature_metadata from '../extensions/deprecated/EXT_feature_metadata';\n\n// Vendor extensions\n\ntype GLTFExtensionPlugin = {\n  name: string;\n  preprocess?: (gltfData: {json: GLTF}, options: GLTFLoaderOptions, context) => void;\n  decode?: (\n    gltfData: {\n      json: GLTF;\n      buffers: {arrayBuffer: ArrayBuffer; byteOffset: number; byteLength: number}[];\n    },\n    options: GLTFLoaderOptions,\n    context\n  ) => Promise<void>;\n  encode?: (gltfData: {json: GLTF}, options: GLTFLoaderOptions) => void;\n};\n\n/**\n * List of extensions processed by the GLTFLoader\n * Note that may extensions can only be handled on the rendering stage and are left out here\n * These are just extensions that can be handled fully or partially during loading.\n */\nexport const EXTENSIONS: GLTFExtensionPlugin[] = [\n  // 1.0\n  // KHR_binary_gltf is handled separately - must be processed before other parsing starts\n  // KHR_binary_gltf,\n\n  // 2.0\n  EXT_meshopt_compression,\n  EXT_texture_webp,\n  // Basisu should come after webp, we want basisu to be preferred if both are provided\n  KHR_texture_basisu,\n  KHR_draco_mesh_compression,\n  KHR_lights_punctual,\n  KHR_materials_unlit,\n  KHR_techniques_webgl,\n  KHR_texture_transform,\n  EXT_feature_metadata\n];\n\n/** Call before any resource loading starts */\nexport function preprocessExtensions(gltf, options: GLTFLoaderOptions = {}, context?) {\n  const extensions = EXTENSIONS.filter((extension) => useExtension(extension.name, options));\n  for (const extension of extensions) {\n    extension.preprocess?.(gltf, options, context);\n  }\n}\n\n/** Call after resource loading */\nexport async function decodeExtensions(gltf, options: GLTFLoaderOptions = {}, context?) {\n  const extensions = EXTENSIONS.filter((extension) => useExtension(extension.name, options));\n  for (const extension of extensions) {\n    // Note: We decode async extensions sequentially, this might not be necessary\n    // Currently we only have Draco, but when we add Basis we may revisit\n    await extension.decode?.(gltf, options, context);\n  }\n}\n\nfunction useExtension(extensionName: string, options: GLTFLoaderOptions) {\n  const excludes = options?.gltf?.excludeExtensions || {};\n  const exclude = extensionName in excludes && !excludes[extensionName];\n  return !exclude;\n}\n", "// GLTF 1.0 EXTENSION: KHR_binary_glTF\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_KHR_binary_glTF} from '../types/gltf-types';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst KHR_BINARY_GLTF = 'KHR_binary_glTF';\n\n/** Extension name */\nexport const name = KHR_BINARY_GLTF;\n\nexport function preprocess(gltfData: {json: GLTF}): void {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Note: json.buffers.binary_glTF also needs to be replaced\n  // This is currently done during gltf normalization\n\n  // Image and shader nodes can have the extension\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/image.KHR_binary_glTF.schema.json\n  for (const image of json.images || []) {\n    const extension = gltfScenegraph.getObjectExtension<GLTF_KHR_binary_glTF>(\n      image,\n      KHR_BINARY_GLTF\n    );\n    // The data in the extension is valid as glTF 2.0 data inside the object, so just copy it in\n    if (extension) {\n      Object.assign(image, extension);\n    }\n    gltfScenegraph.removeObjectExtension(image, KHR_BINARY_GLTF);\n  }\n\n  // TODO shaders - At least traverse and throw error if used?\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/shader.KHR_binary_glTF.schema.json\n\n  // glTF v1 one files have a partially formed URI field that is not expected in (and causes problems in) 2.0\n  if (json.buffers && json.buffers[0]) {\n    delete json.buffers[0].uri;\n  }\n\n  // Remove the top-level extension as it has now been processed\n  gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}\n\n// KHR_binary_gltf is a 1.0 extension that is supported natively by 2.0\n// export function encode() {\n//   throw new Error(KHR_BINARY_GLTF);\n// }\n", "/* eslint-disable camelcase */\nimport * as KHR_binary_glTF from '../extensions/KHR_binary_gltf';\n\n// Binary format changes (mainly implemented by GLBLoader)\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n\n// JSON format changes:\n// https://github.com/khronosgroup/gltf/issues/605\n\n// - [x] Top-level JSON objects are arrays now\n// - [ ] Removed indirection from animation: sampler now refers directly to accessors, #712\n// - [ ] material.parameter.value and technique.parameter.value must be an array, #690\n// - [ ] Node can have only one mesh #821\n// - [ ] Added reqs on JSON encoding\n// - [ ] Added reqs on binary data alignment #802 (comment)\n\n// Additions:\n// - [ ] Added accessor.normalized, #691, #706\n// - [ ] Added glExtensionsUsed property and 5125 (UNSIGNED_INT) accessor.componentType value, #619\n// - [ ] Added extensionsRequired property, #720, #721\n// - [ ] Added \"STEP\" as valid animation.sampler.interpolation value, #712\n\n// Removals:\n// - [x] Removed buffer.type, #786, #629\n// - [ ] Removed revision number from profile.version, #709\n// - [ ] Removed technique.functions.scissor and removed 3089 (SCISSOR_TEST) as a valid value for technique.states.enable, #681\n// - [ ] Techniques, programs, and shaders were moved out to KHR_technique_webgl extension.\n\n// Other edits:\n// - [x] asset is now required, #642\n// - [ ] buffer.byteLength and bufferView.byteLength are now required, #560.\n// - [ ] accessor.min and accessor.max are now required, #593, and clarified that the JSON value and binary data must be the same, #628.\n// - [ ] Clarified animation.sampler and animation.channel restrictions, #712\n// - [ ] skin.inverseBindMatrices is now optional, #461.\n// - [ ] Attribute parameters can't have a value defined in the technique or parameter, #563 (comment).\n// - [ ] Only TEXCOORD and COLOR attribute semantics can be written in the form [semantic]_[set_index], #563 (comment).\n// - [ ] TEXCOORD and COLOR attribute semantics must be written in the form [semantic]_[set_index], e.g., just TEXCOORD should be TEXCOORD_0, and just COLOR should be COLOR_0, #649\n// - [ ] camera.perspective.aspectRatio and camera.perspective.yfov must now be > 0, not >= 0, #563 (comment).\n// - [ ] Application-specific parameter semantics must start with an underscore, e.g., _TEMPERATURE and _SIMULATION_TIME, #563 (comment).\n// - [ ] Properties in technique.parameters must be defined in technique.uniforms or technique.attributes,\n\n// #563 (comment).\n// - [ ] technique.parameter.count can only be defined when the semantic is JOINTMATRIX or an application-specific semantic is used. It can never be defined for attribute parameters; only uniforms, d2f6945\n// - [ ] technique.parameter.semantic is required when the parameter is an attribute, 28e113d\n// - [ ] Mesh-only models are allowed, e.g., without materials, #642\n// - [ ] Skeleton hierarchies (nodes containing jointName) must be separated from non-skeleton hierarchies., #647\n// - [ ] technique.states.functions.blendColor and technique.states.functions.depthRange parameters now must match WebGL function min/max, #707\n\nconst GLTF_ARRAYS = {\n  accessors: 'accessor',\n  animations: 'animation',\n  buffers: 'buffer',\n  bufferViews: 'bufferView',\n  images: 'image',\n  materials: 'material',\n  meshes: 'mesh',\n  nodes: 'node',\n  samplers: 'sampler',\n  scenes: 'scene',\n  skins: 'skin',\n  textures: 'texture'\n};\n\nconst GLTF_KEYS = {\n  accessor: 'accessors',\n  animations: 'animation',\n  buffer: 'buffers',\n  bufferView: 'bufferViews',\n  image: 'images',\n  material: 'materials',\n  mesh: 'meshes',\n  node: 'nodes',\n  sampler: 'samplers',\n  scene: 'scenes',\n  skin: 'skins',\n  texture: 'textures'\n};\n\n/**\n * Converts (normalizes) glTF v1 to v2\n */\nclass GLTFV1Normalizer {\n  idToIndexMap = {\n    animations: {},\n    accessors: {},\n    buffers: {},\n    bufferViews: {},\n    images: {},\n    materials: {},\n    meshes: {},\n    nodes: {},\n    samplers: {},\n    scenes: {},\n    skins: {},\n    textures: {}\n  };\n\n  json;\n\n  // constructor() {}\n\n  /**\n   * Convert (normalize) glTF < 2.0 to glTF 2.0\n   * @param gltf - object with json and binChunks\n   * @param options\n   * @param options normalize Whether to actually normalize\n   */\n  normalize(gltf, options) {\n    this.json = gltf.json;\n    const json = gltf.json;\n\n    // Check version\n    switch (json.asset && json.asset.version) {\n      // We are converting to v2 format. Return if there is nothing to do\n      case '2.0':\n        return;\n\n      // This class is written to convert 1.0\n      case undefined:\n      case '1.0':\n        break;\n\n      default:\n        // eslint-disable-next-line no-undef, no-console\n        console.warn(`glTF: Unknown version ${json.asset.version}`);\n        return;\n    }\n\n    if (!options.normalize) {\n      // We are still missing a few conversion tricks, remove once addressed\n      throw new Error('glTF v1 is not supported.');\n    }\n\n    // eslint-disable-next-line no-undef, no-console\n    console.warn('Converting glTF v1 to glTF v2 format. This is experimental and may fail.');\n\n    this._addAsset(json);\n\n    // In glTF2 top-level fields are Arrays not Object maps\n    this._convertTopLevelObjectsToArrays(json);\n\n    // Extract bufferView indices for images\n    // (this extension needs to be invoked early in the normalization process)\n    // TODO can this be handled by standard extension processing instead of called explicitly?\n    KHR_binary_glTF.preprocess(gltf);\n\n    // Convert object references from ids to indices\n    this._convertObjectIdsToArrayIndices(json);\n\n    this._updateObjects(json);\n\n    this._updateMaterial(json);\n  }\n\n  // asset is now required, #642 https://github.com/KhronosGroup/glTF/issues/639\n  _addAsset(json) {\n    json.asset = json.asset || {};\n    // We are normalizing to glTF v2, so change version to \"2.0\"\n    json.asset.version = '2.0';\n    json.asset.generator = json.asset.generator || 'Normalized to glTF 2.0 by loaders.gl';\n  }\n\n  _convertTopLevelObjectsToArrays(json) {\n    // TODO check that all arrays are covered\n    for (const arrayName in GLTF_ARRAYS) {\n      this._convertTopLevelObjectToArray(json, arrayName);\n    }\n  }\n\n  /** Convert one top level object to array */\n  _convertTopLevelObjectToArray(json, mapName) {\n    const objectMap = json[mapName];\n    if (!objectMap || Array.isArray(objectMap)) {\n      return;\n    }\n\n    // Rewrite the top-level field as an array\n    json[mapName] = [];\n    // Copy the map key into object.id\n    for (const id in objectMap) {\n      const object = objectMap[id];\n      object.id = object.id || id; // Mutates the loaded object\n      const index = json[mapName].length;\n      json[mapName].push(object);\n      this.idToIndexMap[mapName][id] = index;\n    }\n  }\n\n  /** Go through all objects in all top-level arrays and replace ids with indices */\n  _convertObjectIdsToArrayIndices(json) {\n    for (const arrayName in GLTF_ARRAYS) {\n      this._convertIdsToIndices(json, arrayName);\n    }\n    if ('scene' in json) {\n      json.scene = this._convertIdToIndex(json.scene, 'scene');\n    }\n\n    // Convert any index references that are not using array names\n\n    // texture.source (image)\n    for (const texture of json.textures) {\n      this._convertTextureIds(texture);\n    }\n    for (const mesh of json.meshes) {\n      this._convertMeshIds(mesh);\n    }\n    for (const node of json.nodes) {\n      this._convertNodeIds(node);\n    }\n    for (const node of json.scenes) {\n      this._convertSceneIds(node);\n    }\n  }\n\n  _convertTextureIds(texture) {\n    if (texture.source) {\n      texture.source = this._convertIdToIndex(texture.source, 'image');\n    }\n  }\n\n  _convertMeshIds(mesh) {\n    for (const primitive of mesh.primitives) {\n      const {attributes, indices, material} = primitive;\n      for (const attributeName in attributes) {\n        attributes[attributeName] = this._convertIdToIndex(attributes[attributeName], 'accessor');\n      }\n      if (indices) {\n        primitive.indices = this._convertIdToIndex(indices, 'accessor');\n      }\n      if (material) {\n        primitive.material = this._convertIdToIndex(material, 'material');\n      }\n    }\n  }\n\n  _convertNodeIds(node) {\n    if (node.children) {\n      node.children = node.children.map((child) => this._convertIdToIndex(child, 'node'));\n    }\n    if (node.meshes) {\n      node.meshes = node.meshes.map((mesh) => this._convertIdToIndex(mesh, 'mesh'));\n    }\n  }\n\n  _convertSceneIds(scene) {\n    if (scene.nodes) {\n      scene.nodes = scene.nodes.map((node) => this._convertIdToIndex(node, 'node'));\n    }\n  }\n\n  /** Go through all objects in a top-level array and replace ids with indices */\n  _convertIdsToIndices(json, topLevelArrayName) {\n    if (!json[topLevelArrayName]) {\n      console.warn(`gltf v1: json doesn't contain attribute ${topLevelArrayName}`); // eslint-disable-line no-console, no-undef\n      json[topLevelArrayName] = [];\n    }\n    for (const object of json[topLevelArrayName]) {\n      for (const key in object) {\n        const id = object[key];\n        const index = this._convertIdToIndex(id, key);\n        object[key] = index;\n      }\n    }\n  }\n\n  _convertIdToIndex(id, key) {\n    const arrayName = GLTF_KEYS[key];\n    if (arrayName in this.idToIndexMap) {\n      const index = this.idToIndexMap[arrayName][id];\n      if (!Number.isFinite(index)) {\n        throw new Error(`gltf v1: failed to resolve ${key} with id ${id}`);\n      }\n      return index;\n    }\n    return id;\n  }\n\n  /**\n   *\n   * @param {*} json\n   */\n  _updateObjects(json) {\n    for (const buffer of this.json.buffers) {\n      // - [x] Removed buffer.type, #786, #629\n      delete buffer.type;\n    }\n  }\n\n  /**\n   * Update material (set pbrMetallicRoughness)\n   * @param {*} json\n   */\n  _updateMaterial(json) {\n    for (const material of json.materials) {\n      material.pbrMetallicRoughness = {\n        baseColorFactor: [1, 1, 1, 1],\n        metallicFactor: 1,\n        roughnessFactor: 1\n      };\n\n      const textureId =\n        material.values?.tex || material.values?.texture2d_0 || material.values?.diffuseTex;\n      const textureIndex = json.textures.findIndex((texture) => texture.id === textureId);\n      if (textureIndex !== -1) {\n        material.pbrMetallicRoughness.baseColorTexture = {index: textureIndex};\n      }\n    }\n  }\n}\n\nexport function normalizeGLTFV1(gltf, options = {}) {\n  return new GLTFV1Normalizer().normalize(gltf, options);\n}\n", "import {assert} from '../utils/assert';\nimport {getAccessorArrayTypeAndLength} from '../gltf-utils/gltf-utils';\nimport {BufferView} from '../types/gltf-json-schema';\nimport {BufferView as BufferViewPostprocessed} from '../types/gltf-postprocessed-schema';\n\n// This is a post processor for loaded glTF files\n// The goal is to make the loaded data easier to use in WebGL applications\n//\n// Functions:\n// * Resolve indexed arrays structure of glTF into a linked tree.\n// * Translate stringified enum keys and values into WebGL constants.\n// * Load images (optional)\n\n// ENUM LOOKUP\n\nconst COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst BYTES = {\n  5120: 1, // BYTE\n  5121: 1, // UNSIGNED_BYTE\n  5122: 2, // SHORT\n  5123: 2, // UNSIGNED_SHORT\n  5125: 4, // UNSIGNED_INT\n  5126: 4 // FLOAT\n};\n\nconst GL_SAMPLER = {\n  // Sampler parameters\n  TEXTURE_MAG_FILTER: 0x2800,\n  TEXTURE_MIN_FILTER: 0x2801,\n  TEXTURE_WRAP_S: 0x2802,\n  TEXTURE_WRAP_T: 0x2803,\n\n  // Sampler default values\n  REPEAT: 0x2901,\n  LINEAR: 0x2601,\n  NEAREST_MIPMAP_LINEAR: 0x2702\n};\n\nconst SAMPLER_PARAMETER_GLTF_TO_GL = {\n  magFilter: GL_SAMPLER.TEXTURE_MAG_FILTER,\n  minFilter: GL_SAMPLER.TEXTURE_MIN_FILTER,\n  wrapS: GL_SAMPLER.TEXTURE_WRAP_S,\n  wrapT: GL_SAMPLER.TEXTURE_WRAP_T\n};\n\n// When undefined, a sampler with repeat wrapping and auto filtering should be used.\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\nconst DEFAULT_SAMPLER = {\n  [GL_SAMPLER.TEXTURE_MAG_FILTER]: GL_SAMPLER.LINEAR,\n  [GL_SAMPLER.TEXTURE_MIN_FILTER]: GL_SAMPLER.NEAREST_MIPMAP_LINEAR,\n  [GL_SAMPLER.TEXTURE_WRAP_S]: GL_SAMPLER.REPEAT,\n  [GL_SAMPLER.TEXTURE_WRAP_T]: GL_SAMPLER.REPEAT\n};\n\nfunction getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\n\nfunction getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\n\nclass GLTFPostProcessor {\n  baseUri: string = '';\n  json: Record<string, any> = {};\n  buffers: [] = [];\n  images: [] = [];\n\n  postProcess(gltf, options = {}) {\n    const {json, buffers = [], images = [], baseUri = ''} = gltf;\n    assert(json);\n\n    this.baseUri = baseUri;\n    this.json = json;\n    this.buffers = buffers;\n    this.images = images;\n\n    this._resolveTree(this.json, options);\n\n    return this.json;\n  }\n\n  // Convert indexed glTF structure into tree structure\n  // cross-link index resolution, enum lookup, convenience calculations\n  // eslint-disable-next-line complexity\n  _resolveTree(json, options = {}) {\n    if (json.bufferViews) {\n      json.bufferViews = json.bufferViews.map((bufView, i) => this._resolveBufferView(bufView, i));\n    }\n    if (json.images) {\n      json.images = json.images.map((image, i) => this._resolveImage(image, i));\n    }\n    if (json.samplers) {\n      json.samplers = json.samplers.map((sampler, i) => this._resolveSampler(sampler, i));\n    }\n    if (json.textures) {\n      json.textures = json.textures.map((texture, i) => this._resolveTexture(texture, i));\n    }\n    if (json.accessors) {\n      json.accessors = json.accessors.map((accessor, i) => this._resolveAccessor(accessor, i));\n    }\n    if (json.materials) {\n      json.materials = json.materials.map((material, i) => this._resolveMaterial(material, i));\n    }\n    if (json.meshes) {\n      json.meshes = json.meshes.map((mesh, i) => this._resolveMesh(mesh, i));\n    }\n    if (json.nodes) {\n      json.nodes = json.nodes.map((node, i) => this._resolveNode(node, i));\n    }\n    if (json.skins) {\n      json.skins = json.skins.map((skin, i) => this._resolveSkin(skin, i));\n    }\n    if (json.scenes) {\n      json.scenes = json.scenes.map((scene, i) => this._resolveScene(scene, i));\n    }\n    if (json.scene !== undefined) {\n      json.scene = json.scenes[this.json.scene];\n    }\n  }\n\n  getScene(index) {\n    return this._get('scenes', index);\n  }\n\n  getNode(index) {\n    return this._get('nodes', index);\n  }\n\n  getSkin(index) {\n    return this._get('skins', index);\n  }\n\n  getMesh(index) {\n    return this._get('meshes', index);\n  }\n\n  getMaterial(index) {\n    return this._get('materials', index);\n  }\n\n  getAccessor(index) {\n    return this._get('accessors', index);\n  }\n\n  getCamera(index) {\n    return null; // TODO: fix this\n  }\n\n  getTexture(index) {\n    return this._get('textures', index);\n  }\n\n  getSampler(index) {\n    return this._get('samplers', index);\n  }\n\n  getImage(index) {\n    return this._get('images', index);\n  }\n\n  getBufferView(index) {\n    return this._get('bufferViews', index);\n  }\n\n  getBuffer(index) {\n    return this._get('buffers', index);\n  }\n\n  _get(array, index) {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.json[array] && this.json[array][index];\n    if (!object) {\n      console.warn(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  // PARSING HELPERS\n\n  _resolveScene(scene, index) {\n    // scene = {...scene};\n    scene.id = scene.id || `scene-${index}`;\n    scene.nodes = (scene.nodes || []).map((node) => this.getNode(node));\n    return scene;\n  }\n\n  _resolveNode(node, index) {\n    // node = {...node};\n    node.id = node.id || `node-${index}`;\n    if (node.children) {\n      node.children = node.children.map((child) => this.getNode(child));\n    }\n    if (node.mesh !== undefined) {\n      node.mesh = this.getMesh(node.mesh);\n    } else if (node.meshes !== undefined && node.meshes.length) {\n      node.mesh = node.meshes.reduce(\n        (accum, meshIndex) => {\n          const mesh = this.getMesh(meshIndex);\n          accum.id = mesh.id;\n          accum.primitives = accum.primitives.concat(mesh.primitives);\n          return accum;\n        },\n        {primitives: []}\n      );\n    }\n    if (node.camera !== undefined) {\n      node.camera = this.getCamera(node.camera);\n    }\n    if (node.skin !== undefined) {\n      node.skin = this.getSkin(node.skin);\n    }\n    return node;\n  }\n\n  _resolveSkin(skin, index) {\n    // skin = {...skin};\n    skin.id = skin.id || `skin-${index}`;\n    skin.inverseBindMatrices = this.getAccessor(skin.inverseBindMatrices);\n    return skin;\n  }\n\n  _resolveMesh(mesh, index) {\n    // mesh = {...mesh};\n    mesh.id = mesh.id || `mesh-${index}`;\n    if (mesh.primitives) {\n      mesh.primitives = mesh.primitives.map((primitive) => {\n        primitive = {...primitive};\n        const attributes = primitive.attributes;\n        primitive.attributes = {};\n        for (const attribute in attributes) {\n          primitive.attributes[attribute] = this.getAccessor(attributes[attribute]);\n        }\n        if (primitive.indices !== undefined) {\n          primitive.indices = this.getAccessor(primitive.indices);\n        }\n        if (primitive.material !== undefined) {\n          primitive.material = this.getMaterial(primitive.material);\n        }\n        return primitive;\n      });\n    }\n    return mesh;\n  }\n\n  _resolveMaterial(material, index) {\n    // material = {...material};\n    material.id = material.id || `material-${index}`;\n    if (material.normalTexture) {\n      material.normalTexture = {...material.normalTexture};\n      material.normalTexture.texture = this.getTexture(material.normalTexture.index);\n    }\n    if (material.occlusionTexture) {\n      material.occlustionTexture = {...material.occlustionTexture};\n      material.occlusionTexture.texture = this.getTexture(material.occlusionTexture.index);\n    }\n    if (material.emissiveTexture) {\n      material.emmisiveTexture = {...material.emmisiveTexture};\n      material.emissiveTexture.texture = this.getTexture(material.emissiveTexture.index);\n    }\n    if (!material.emissiveFactor) {\n      material.emissiveFactor = material.emmisiveTexture ? [1, 1, 1] : [0, 0, 0];\n    }\n\n    if (material.pbrMetallicRoughness) {\n      material.pbrMetallicRoughness = {...material.pbrMetallicRoughness};\n      const mr = material.pbrMetallicRoughness;\n      if (mr.baseColorTexture) {\n        mr.baseColorTexture = {...mr.baseColorTexture};\n        mr.baseColorTexture.texture = this.getTexture(mr.baseColorTexture.index);\n      }\n      if (mr.metallicRoughnessTexture) {\n        mr.metallicRoughnessTexture = {...mr.metallicRoughnessTexture};\n        mr.metallicRoughnessTexture.texture = this.getTexture(mr.metallicRoughnessTexture.index);\n      }\n    }\n    return material;\n  }\n\n  _resolveAccessor(accessor, index) {\n    // accessor = {...accessor};\n    accessor.id = accessor.id || `accessor-${index}`;\n    if (accessor.bufferView !== undefined) {\n      // Draco encoded meshes don't have bufferView\n      accessor.bufferView = this.getBufferView(accessor.bufferView);\n    }\n\n    // Look up enums\n    accessor.bytesPerComponent = getBytesFromComponentType(accessor.componentType);\n    accessor.components = getSizeFromAccessorType(accessor.type);\n    accessor.bytesPerElement = accessor.bytesPerComponent * accessor.components;\n\n    // Create TypedArray for the accessor\n    // Note: The canonical way to instantiate is to ignore this array and create\n    // WebGLBuffer's using the bufferViews.\n    if (accessor.bufferView) {\n      const buffer = accessor.bufferView.buffer;\n      const {ArrayType, byteLength} = getAccessorArrayTypeAndLength(accessor, accessor.bufferView);\n      const byteOffset =\n        (accessor.bufferView.byteOffset || 0) + (accessor.byteOffset || 0) + buffer.byteOffset;\n      let cutBuffer = buffer.arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n      if (accessor.bufferView.byteStride) {\n        cutBuffer = this._getValueFromInterleavedBuffer(\n          buffer,\n          byteOffset,\n          accessor.bufferView.byteStride,\n          accessor.bytesPerElement,\n          accessor.count\n        );\n      }\n      accessor.value = new ArrayType(cutBuffer);\n    }\n\n    return accessor;\n  }\n\n  /**\n   * Take values of particular accessor from interleaved buffer\n   * various parts of the buffer\n   * @param buffer\n   * @param byteOffset\n   * @param byteStride\n   * @param bytesPerElement\n   * @param count\n   * @returns\n   */\n  _getValueFromInterleavedBuffer(buffer, byteOffset, byteStride, bytesPerElement, count) {\n    const result = new Uint8Array(count * bytesPerElement);\n    for (let i = 0; i < count; i++) {\n      const elementOffset = byteOffset + i * byteStride;\n      result.set(\n        new Uint8Array(buffer.arrayBuffer.slice(elementOffset, elementOffset + bytesPerElement)),\n        i * bytesPerElement\n      );\n    }\n    return result.buffer;\n  }\n\n  _resolveTexture(texture, index) {\n    // texture = {...texture};\n    texture.id = texture.id || `texture-${index}`;\n    texture.sampler = 'sampler' in texture ? this.getSampler(texture.sampler) : DEFAULT_SAMPLER;\n    texture.source = this.getImage(texture.source);\n    return texture;\n  }\n\n  _resolveSampler(sampler, index) {\n    // sampler = {...sampler};\n    sampler.id = sampler.id || `sampler-${index}`;\n    // Map textual parameters to GL parameter values\n    sampler.parameters = {};\n    for (const key in sampler) {\n      const glEnum = this._enumSamplerParameter(key);\n      if (glEnum !== undefined) {\n        sampler.parameters[glEnum] = sampler[key];\n      }\n    }\n    return sampler;\n  }\n\n  _enumSamplerParameter(key) {\n    return SAMPLER_PARAMETER_GLTF_TO_GL[key];\n  }\n\n  _resolveImage(image, index) {\n    // image = {...image};\n    image.id = image.id || `image-${index}`;\n    if (image.bufferView !== undefined) {\n      image.bufferView = this.getBufferView(image.bufferView);\n    }\n\n    // Check if image has been preloaded by the GLTFLoader\n    // If so, link it into the JSON and drop the URI\n    const preloadedImage = this.images[index];\n    if (preloadedImage) {\n      image.image = preloadedImage;\n    }\n\n    return image;\n  }\n\n  _resolveBufferView(bufferView: BufferView, index: number): BufferViewPostprocessed {\n    // bufferView = {...bufferView};\n    const bufferIndex = bufferView.buffer;\n    const result: BufferViewPostprocessed = {\n      id: `bufferView-${index}`,\n      ...bufferView,\n      buffer: this.buffers[bufferIndex]\n    };\n\n    // @ts-expect-error\n    const arrayBuffer = this.buffers[bufferIndex].arrayBuffer;\n    // @ts-expect-error\n    let byteOffset = this.buffers[bufferIndex].byteOffset || 0;\n\n    if ('byteOffset' in bufferView) {\n      byteOffset += bufferView.byteOffset;\n    }\n\n    result.data = new Uint8Array(arrayBuffer, byteOffset, bufferView.byteLength);\n    return result;\n  }\n\n  _resolveCamera(camera, index) {\n    camera.id = camera.id || `camera-${index}`;\n    // TODO - create 4x4 matrices\n    if (camera.perspective) {\n      // camera.matrix = createPerspectiveMatrix(camera.perspective);\n    }\n    if (camera.orthographic) {\n      // camera.matrix = createOrthographicMatrix(camera.orthographic);\n    }\n    return camera;\n  }\n}\n\nexport function postProcessGLTF(gltf, options?) {\n  return new GLTFPostProcessor().postProcess(gltf, options);\n}\n", "/* eslint-disable camelcase, max-statements */\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#glb-file-format-specification\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\nimport type {GLB} from '../types/glb-types';\nimport {padToNBytes, assert} from '@loaders.gl/loader-utils';\n\nexport type GLBParseOptions = {\n  magic?: number;\n  strict?: boolean;\n};\n\nconst MAGIC_glTF = 0x676c5446; // glTF in Big-Endian ASCII\n\nconst GLB_FILE_HEADER_SIZE = 12;\nconst GLB_CHUNK_HEADER_SIZE = 8;\n\nconst GLB_CHUNK_TYPE_JSON = 0x4e4f534a;\nconst GLB_CHUNK_TYPE_BIN = 0x004e4942;\nconst GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED = 0; // DEPRECATED - Backward compatibility for old xviz files\nconst GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED = 1; // DEPRECATED - Backward compatibility for old xviz files\n\nconst GLB_V1_CONTENT_FORMAT_JSON = 0x0;\n\nconst LE = true; // Binary GLTF is little endian.\n\nfunction getMagicString(dataView, byteOffset = 0) {\n  return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n\n// Check if a data view is a GLB\nexport function isGLB(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number = 0,\n  options: GLBParseOptions = {}\n): boolean {\n  const dataView = new DataView(arrayBuffer);\n  // Check that GLB Header starts with the magic number\n  const {magic = MAGIC_glTF} = options;\n  const magic1 = dataView.getUint32(byteOffset, false);\n  return magic1 === magic || magic1 === MAGIC_glTF;\n}\n\nexport default function parseGLBSync(\n  glb: GLB,\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number = 0,\n  options: GLBParseOptions = {}\n) {\n  // Check that GLB Header starts with the magic number\n  const dataView = new DataView(arrayBuffer);\n\n  // Compare format with GLBLoader documentation\n  const type = getMagicString(dataView, byteOffset + 0);\n  const version = dataView.getUint32(byteOffset + 4, LE); // Version 2 of binary glTF container format\n  const byteLength = dataView.getUint32(byteOffset + 8, LE); // Total byte length of binary file\n\n  Object.assign(glb, {\n    // Put less important stuff in a header, to avoid clutter\n    header: {\n      byteOffset, // Byte offset into the initial arrayBuffer\n      byteLength,\n      hasBinChunk: false\n    },\n\n    type,\n    version,\n\n    json: {},\n    binChunks: []\n  } as GLB);\n\n  byteOffset += GLB_FILE_HEADER_SIZE;\n\n  switch (glb.version) {\n    case 1:\n      // eslint-disable-next-line\n      return parseGLBV1(glb, dataView, byteOffset);\n    case 2:\n      // eslint-disable-next-line\n      return parseGLBV2(glb, dataView, byteOffset, (options = {}));\n    default:\n      throw new Error(`Invalid GLB version ${glb.version}. Only supports v1 and v2.`);\n  }\n}\n\nfunction parseGLBV1(glb: GLB, dataView: DataView, byteOffset: number): number {\n  // Sanity: ensure file is big enough to hold at least the headers\n  assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n\n  // Explanation of GLB structure:\n  // https://cloud.githubusercontent.com/assets/3479527/22600725/36b87122-ea55-11e6-9d40-6fd42819fcab.png\n  const contentLength = dataView.getUint32(byteOffset + 0, LE); // Byte length of chunk\n  const contentFormat = dataView.getUint32(byteOffset + 4, LE); // Chunk format as uint32\n  byteOffset += GLB_CHUNK_HEADER_SIZE;\n\n  // GLB v1 only supports a single chunk type\n  assert(contentFormat === GLB_V1_CONTENT_FORMAT_JSON);\n\n  parseJSONChunk(glb, dataView, byteOffset, contentLength);\n  // No need to call the function padToBytes() from parseJSONChunk()\n  byteOffset += contentLength;\n  byteOffset += parseBINChunk(glb, dataView, byteOffset, glb.header.byteLength);\n\n  return byteOffset;\n}\n\nfunction parseGLBV2(\n  glb: GLB,\n  dataView: DataView,\n  byteOffset: number,\n  options: GLBParseOptions\n): number {\n  // Sanity: ensure file is big enough to hold at least the first chunk header\n  assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n\n  parseGLBChunksSync(glb, dataView, byteOffset, options);\n\n  return byteOffset + glb.header.byteLength;\n}\n\nfunction parseGLBChunksSync(\n  glb: GLB,\n  dataView: DataView,\n  byteOffset: number,\n  options: GLBParseOptions\n) {\n  // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n  // Iterate as long as there is space left for another chunk header\n  while (byteOffset + 8 <= glb.header.byteLength) {\n    const chunkLength = dataView.getUint32(byteOffset + 0, LE); // Byte length of chunk\n    const chunkFormat = dataView.getUint32(byteOffset + 4, LE); // Chunk format as uint32\n    byteOffset += GLB_CHUNK_HEADER_SIZE;\n\n    // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n    switch (chunkFormat) {\n      case GLB_CHUNK_TYPE_JSON:\n        parseJSONChunk(glb, dataView, byteOffset, chunkLength);\n        break;\n      case GLB_CHUNK_TYPE_BIN:\n        parseBINChunk(glb, dataView, byteOffset, chunkLength);\n        break;\n\n      // Backward compatibility for very old xviz files\n      case GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED:\n        if (!options.strict) {\n          parseJSONChunk(glb, dataView, byteOffset, chunkLength);\n        }\n        break;\n      case GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED:\n        if (!options.strict) {\n          parseBINChunk(glb, dataView, byteOffset, chunkLength);\n        }\n        break;\n\n      default:\n        // Ignore, per spec\n        // console.warn(`Unknown GLB chunk type`); // eslint-disable-line\n        break;\n    }\n\n    byteOffset += padToNBytes(chunkLength, 4);\n  }\n\n  return byteOffset;\n}\n\n// Parse a GLB JSON chunk\nfunction parseJSONChunk(glb: GLB, dataView: DataView, byteOffset: number, chunkLength: number) {\n  // 1. Create a \"view\" of the binary encoded JSON data inside the GLB\n  const jsonChunk = new Uint8Array(dataView.buffer, byteOffset, chunkLength);\n\n  // 2. Decode the JSON binary array into clear text\n  const textDecoder = new TextDecoder('utf8');\n  const jsonText = textDecoder.decode(jsonChunk);\n\n  // 3. Parse the JSON text into a JavaScript data structure\n  glb.json = JSON.parse(jsonText);\n\n  return padToNBytes(chunkLength, 4);\n}\n\n// Parse a GLB BIN chunk\nfunction parseBINChunk(glb: GLB, dataView, byteOffset, chunkLength) {\n  // Note: BIN chunk can be optional\n  glb.header.hasBinChunk = true;\n  glb.binChunks.push({\n    byteOffset,\n    byteLength: chunkLength,\n    arrayBuffer: dataView.buffer\n    // TODO - copy, or create typed array view?\n  });\n\n  return padToNBytes(chunkLength, 4);\n}\n", "/* eslint-disable camelcase, max-statements, no-restricted-globals */\nimport type {LoaderContext} from '@loaders.gl/loader-utils';\nimport {BasisLoader, selectSupportedBasisFormat} from '@loaders.gl/textures';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\nimport type {GLB} from '../types/glb-types';\nimport type {GLTFWithBuffers} from '../types/gltf-types';\n\nimport {ImageLoader} from '@loaders.gl/images';\nimport {parseJSON, sliceArrayBuffer} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\nimport {resolveUrl} from '../gltf-utils/resolve-url';\nimport {getTypedArrayForBufferView} from '../gltf-utils/get-typed-array';\nimport {preprocessExtensions, decodeExtensions} from '../api/gltf-extensions';\nimport {normalizeGLTFV1} from '../api/normalize-gltf-v1';\nimport {postProcessGLTF} from '../api/post-process-gltf';\nimport parseGLBSync, {isGLB} from './parse-glb';\n\nexport type GLTFParseOptions = {\n  normalize?: boolean;\n  loadImages?: boolean;\n  loadBuffers?: boolean;\n  decompressMeshes?: boolean;\n  postProcess?: boolean;\n  excludeExtensions?: string[];\n};\n\n// export type GLTFOptions = {\n//   gltf?: GLTFParseOptions;\n// };\n\nexport function isGLTF(arrayBuffer, options?): boolean {\n  const byteOffset = 0;\n  return isGLB(arrayBuffer, byteOffset, options);\n}\n\nexport async function parseGLTF(\n  gltf: GLTFWithBuffers,\n  arrayBufferOrString,\n  byteOffset = 0,\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n) {\n  parseGLTFContainerSync(gltf, arrayBufferOrString, byteOffset, options);\n\n  normalizeGLTFV1(gltf, {normalize: options?.gltf?.normalize});\n\n  preprocessExtensions(gltf, options, context);\n\n  const promises: Promise<any>[] = [];\n\n  // Load linked buffers asynchronously and decodes base64 buffers in parallel\n  if (options?.gltf?.loadBuffers && gltf.json.buffers) {\n    await loadBuffers(gltf, options, context);\n  }\n\n  if (options?.gltf?.loadImages) {\n    const promise = loadImages(gltf, options, context);\n    promises.push(promise);\n  }\n\n  const promise = decodeExtensions(gltf, options, context);\n  promises.push(promise);\n\n  // Parallelize image loading and buffer loading/extension decoding\n  await Promise.all(promises);\n\n  // Post processing resolves indices to objects, buffers\n  return options?.gltf?.postProcess ? postProcessGLTF(gltf, options) : gltf;\n}\n\n// `data` - can be ArrayBuffer (GLB), ArrayBuffer (Binary JSON), String (JSON), or Object (parsed JSON)\nfunction parseGLTFContainerSync(gltf, data, byteOffset, options) {\n  // Initialize gltf container\n  if (options.uri) {\n    gltf.baseUri = options.uri;\n  }\n\n  // If data is binary and starting with magic bytes, assume binary JSON text, convert to string\n  if (data instanceof ArrayBuffer && !isGLB(data, byteOffset, options)) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(data);\n  }\n\n  if (typeof data === 'string') {\n    // If string, try to parse as JSON\n    gltf.json = parseJSON(data);\n  } else if (data instanceof ArrayBuffer) {\n    // If still ArrayBuffer, parse as GLB container\n    const glb: GLB = {} as GLB;\n    byteOffset = parseGLBSync(glb, data, byteOffset, options.glb);\n\n    assert(glb.type === 'glTF', `Invalid GLB magic string ${glb.type}`);\n\n    gltf._glb = glb;\n    gltf.json = glb.json;\n  } else {\n    assert(false, 'GLTF: must be ArrayBuffer or string');\n  }\n\n  // Populate buffers\n  // Create an external buffers array to hold binary data\n  const buffers = gltf.json.buffers || [];\n  gltf.buffers = new Array(buffers.length).fill(null);\n\n  // Populates JSON and some bin chunk info\n  if (gltf._glb && gltf._glb.header.hasBinChunk) {\n    const {binChunks} = gltf._glb;\n    gltf.buffers[0] = {\n      arrayBuffer: binChunks[0].arrayBuffer,\n      byteOffset: binChunks[0].byteOffset,\n      byteLength: binChunks[0].byteLength\n    };\n\n    // TODO - this modifies JSON and is a post processing thing\n    // gltf.json.buffers[0].data = gltf.buffers[0].arrayBuffer;\n    // gltf.json.buffers[0].byteOffset = gltf.buffers[0].byteOffset;\n  }\n\n  // Populate images\n  const images = gltf.json.images || [];\n  gltf.images = new Array(images.length).fill({});\n}\n\n/** Asynchronously fetch and parse buffers, store in buffers array outside of json\n * TODO - traverse gltf and determine which buffers are actually needed\n */\nasync function loadBuffers(gltf: GLTFWithBuffers, options, context: LoaderContext) {\n  // TODO\n  const buffers = gltf.json.buffers || [];\n  for (let i = 0; i < buffers.length; ++i) {\n    const buffer = buffers[i];\n    if (buffer.uri) {\n      const {fetch} = context;\n      assert(fetch);\n\n      const uri = resolveUrl(buffer.uri, options);\n      const response = await context?.fetch?.(uri);\n      const arrayBuffer = await response?.arrayBuffer?.();\n\n      gltf.buffers[i] = {\n        arrayBuffer,\n        byteOffset: 0,\n        byteLength: arrayBuffer.byteLength\n      };\n\n      delete buffer.uri;\n    } else if (gltf.buffers[i] === null) {\n      gltf.buffers[i] = {\n        arrayBuffer: new ArrayBuffer(buffer.byteLength),\n        byteOffset: 0,\n        byteLength: buffer.byteLength\n      };\n    }\n  }\n}\n\n/**\n * Loads all images\n * TODO - traverse gltf and determine which images are actually needed\n * @param gltf\n * @param options\n * @param context\n * @returns\n */\nasync function loadImages(gltf: GLTFWithBuffers, options, context: LoaderContext) {\n  const imageIndices = getReferencesImageIndices(gltf);\n\n  const images = gltf.json.images || [];\n\n  const promises: Promise<any>[] = [];\n  for (const imageIndex of imageIndices) {\n    promises.push(loadImage(gltf, images[imageIndex], imageIndex, options, context));\n  }\n\n  return await Promise.all(promises);\n}\n\n/** Make sure we only load images that are actually referenced by textures */\nfunction getReferencesImageIndices(gltf: GLTFWithBuffers): number[] {\n  const imageIndices = new Set<number>();\n\n  const textures = gltf.json.textures || [];\n  for (const texture of textures) {\n    if (texture.source !== undefined) {\n      imageIndices.add(texture.source);\n    }\n  }\n\n  return Array.from(imageIndices).sort();\n}\n\n/** Asynchronously fetches and parses one image, store in images array outside of json */\nasync function loadImage(\n  gltf: GLTFWithBuffers,\n  image,\n  index: number,\n  options,\n  context: LoaderContext\n) {\n  const {fetch, parse} = context;\n\n  let arrayBuffer;\n\n  if (image.uri && !image.hasOwnProperty('bufferView')) {\n    const uri = resolveUrl(image.uri, options);\n    const response = await fetch(uri);\n    arrayBuffer = await response.arrayBuffer();\n    image.bufferView = {\n      data: arrayBuffer\n    };\n  }\n\n  if (Number.isFinite(image.bufferView)) {\n    const array = getTypedArrayForBufferView(gltf.json, gltf.buffers, image.bufferView);\n    arrayBuffer = sliceArrayBuffer(array.buffer, array.byteOffset, array.byteLength);\n  }\n\n  assert(arrayBuffer, 'glTF image has no data');\n\n  // Call `parse`\n  let parsedImage = await parse(\n    arrayBuffer,\n    [ImageLoader, BasisLoader],\n    {mimeType: image.mimeType, basis: options.basis || {format: selectSupportedBasisFormat()}},\n    context\n  );\n\n  if (parsedImage && parsedImage[0]) {\n    parsedImage = {\n      compressed: true,\n      mipmaps: false,\n      width: parsedImage[0].width,\n      height: parsedImage[0].height,\n      data: parsedImage[0]\n    };\n  }\n  // TODO making sure ImageLoader is overridable by using array of loaders\n  // const parsedImage = await parse(arrayBuffer, [ImageLoader]);\n\n  // Store the loaded image\n  gltf.images = gltf.images || [];\n  gltf.images[index] = parsedImage;\n}\n", "import type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {DracoLoaderOptions} from '@loaders.gl/draco';\nimport {VERSION} from './lib/utils/version';\nimport type {ImageLoaderOptions} from '@loaders.gl/images';\nimport type {TextureLoaderOptions} from '@loaders.gl/textures';\nimport type {GLTFParseOptions} from './lib/parsers/parse-gltf';\nimport type {GLTFWithBuffers} from './lib/types/gltf-types';\nimport {parseGLTF} from './lib/parsers/parse-gltf';\nimport {GLBLoaderOptions} from './glb-loader';\n\n/**\n * GLTF loader options\n */\nexport type GLTFLoaderOptions = LoaderOptions &\n  ImageLoaderOptions &\n  TextureLoaderOptions &\n  GLBLoaderOptions &\n  DracoLoaderOptions & {\n    gltf?: GLTFParseOptions;\n  };\n\n/**\n * GLTF loader\n */\nexport const GLTFLoader: LoaderWithParser = {\n  name: 'glTF',\n  id: 'gltf',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['gltf', 'glb'],\n  mimeTypes: ['model/gltf+json', 'model/gltf-binary'],\n\n  text: true,\n  binary: true,\n  tests: ['glTF'],\n  parse,\n\n  options: {\n    gltf: {\n      normalize: true, // Normalize glTF v1 to glTF v2 format (not yet stable)\n      loadBuffers: true, // Fetch any linked .BIN buffers, decode base64\n      loadImages: true, // Create image objects\n      decompressMeshes: true, // Decompress Draco encoded meshes\n      postProcess: true // Postprocess glTF and return json structure directly\n    },\n\n    // common?\n    log: console // eslint-disable-line\n  },\n  deprecatedOptions: {\n    fetchImages: 'gltf.loadImages',\n    createImages: 'gltf.loadImages',\n    decompress: 'gltf.decompressMeshes',\n    postProcess: 'gltf.postProcess',\n    gltf: {\n      decompress: 'gltf.decompressMeshes'\n    }\n  }\n};\n\nexport async function parse(arrayBuffer, options: GLTFLoaderOptions = {}, context) {\n  // Apps can call the parse method directly, we so apply default options here\n  options = {...GLTFLoader.options, ...options};\n  // @ts-ignore\n  options.gltf = {...GLTFLoader.options.gltf, ...options.gltf};\n\n  const {byteOffset = 0} = options;\n  const gltf = {};\n  return await parseGLTF(gltf as GLTFWithBuffers, arrayBuffer, byteOffset, options, context);\n}\n", "/* global requestAnimationFrame */\nimport type {GroupNode, ModelNode} from '@luma.gl/experimental';\n\nexport async function waitForGLTFAssets(gltfObjects: {scenes: GroupNode[]}): Promise<void> {\n  const remaining: any[] = [];\n\n  gltfObjects.scenes.forEach(scene => {\n    scene.traverse((model: ModelNode) => {\n      Object.values(model.model.getUniforms()).forEach((uniform: any) => {\n        if (uniform.loaded === false) {\n          remaining.push(uniform);\n        }\n      });\n    });\n  });\n\n  return await waitWhileCondition(() => remaining.some(uniform => !uniform.loaded));\n}\n\nasync function waitWhileCondition(condition: () => boolean): Promise<void> {\n  while (condition()) {\n    await new Promise(resolve => requestAnimationFrame(resolve));\n  }\n}\n", "export default `\\\n#version 300 es\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Uniforms\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform mat4 sceneModelMatrix;\nuniform bool composeModelMatrix;\n\n// Attributes\nin vec4 POSITION;\n\n#ifdef HAS_UV\n  in vec2 TEXCOORD_0;\n#endif\n\n#ifdef MODULE_PBR\n  #ifdef HAS_NORMALS\n    in vec4 NORMAL;\n  #endif\n#endif\n\n// Varying\nout vec4 vColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #ifdef HAS_UV\n    out vec2 vTEXCOORD_0;\n  #endif\n#endif\n\n// Main\nvoid main(void) {\n  #if defined(HAS_UV) && !defined(MODULE_PBR)\n    vTEXCOORD_0 = TEXCOORD_0;\n    geometry.uv = vTEXCOORD_0;\n  #endif\n\n  geometry.worldPosition = instancePositions;\n  geometry.pickingColor = instancePickingColors;\n\n  vec3 normal = vec3(0.0, 0.0, 1.0);\n  #ifdef MODULE_PBR\n    #ifdef HAS_NORMALS\n      normal = instanceModelMatrix * (sceneModelMatrix * vec4(NORMAL.xyz, 0.0)).xyz;\n    #endif\n  #endif\n\n  float originalSize = project_size_to_pixel(sizeScale);\n  float clampedSize = clamp(originalSize, sizeMinPixels, sizeMaxPixels);\n\n  vec3 pos = (instanceModelMatrix * (sceneModelMatrix * POSITION).xyz) * sizeScale * (clampedSize / originalSize) + instanceTranslation;\n  if(composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    // using instancePositions as world coordinates\n    // when using globe mode, this branch does not re-orient the model to align with the surface of the earth\n    // call project_normal before setting position to avoid rotation\n    geometry.normal = project_normal(normal);\n    geometry.worldPosition += pos;\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);\n    geometry.normal = project_normal(normal);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n    #ifdef HAS_NORMALS\n      pbr_vNormal = geometry.normal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = TEXCOORD_0;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "export default `\\\n#version 300 es\n\n// Uniforms\nuniform float opacity;\n\n// Varying\nin vec4 vColor;\n\nout vec4 fragmentColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n    in vec2 vTEXCOORD_0;\n    uniform sampler2D u_BaseColorSampler;\n  #endif\n#endif\n\nvoid main(void) {\n  #ifdef MODULE_PBR\n    fragmentColor = vColor * pbr_filterColor(vec4(0));\n    geometry.uv = pbr_vUV;\n  #else\n    #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n      fragmentColor = vColor * texture2D(u_BaseColorSampler, vTEXCOORD_0);\n      geometry.uv = vTEXCOORD_0;\n    #else\n      fragmentColor = vColor;\n    #endif\n  #endif\n\n  fragmentColor.a *= opacity;\n  DECKGL_FILTER_COLOR(fragmentColor, geometry);\n}\n`;\n", "// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport {isWebGL2} from '@luma.gl/core';\nimport {pbr} from '@luma.gl/shadertools';\nimport {\n  ScenegraphNode,\n  GroupNode,\n  GLTFAnimator,\n  GLTFEnvironment,\n  createGLTFObjects\n} from '@luma.gl/experimental';\nimport GL from '@luma.gl/constants';\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nimport type {\n  UpdateParameters,\n  LayerContext,\n  LayerProps,\n  LayerDataSource,\n  Position,\n  Color,\n  Accessor,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [255, 255, 255, 255];\n\nexport type ScenegraphLayerProps<DataT = any> = _ScenegraphLayerProps<DataT> & LayerProps;\n\ntype _ScenegraphLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  // TODO - define in luma.gl\n  /**\n   * A url for a glTF model or scenegraph loaded via a [scenegraph loader](https://loaders.gl/docs/specifications/category-scenegraph)\n   */\n  scenegraph: any;\n  /**\n   * Create a luma.gl GroupNode from the resolved scenegraph prop\n   */\n  getScene?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GroupNode;\n  /**\n   * Create a luma.gl GLTFAnimator from the resolved scenegraph prop\n   */\n  getAnimator?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GLTFAnimator;\n  /**\n   * (Experimental) animation configurations. Requires `_animate` on deck object.\n   */\n  _animations?: {\n    [name: number | string | '*']: {\n      /** If the animation is playing */\n      playing?: boolean;\n      /** Start time of the animation, default `0` */\n      startTime?: number;\n      /** Speed multiplier of the animation, default `1` */\n      speed?: number;\n    };\n  } | null;\n  /**\n   * (Experimental) lighting mode\n   * @default 'flat'\n   */\n  _lighting?: 'flat' | 'pbr';\n  /**\n   * (Experimental) lighting environment. Requires `_lighting` to be `'pbr'`.\n   */\n  _imageBasedLightingEnvironment?:\n    | null\n    | GLTFEnvironment\n    | ((context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}) => GLTFEnvironment);\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * @default [255, 255, 255, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The minimum size in pixels for one unit of the scene.\n   * @default 0\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels for one unit of the scene.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  sizeMaxPixels?: number;\n};\n\nconst defaultProps: DefaultProps<ScenegraphLayerProps> = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  sizeMinPixels: {type: 'number', min: 0, value: 0},\n  sizeMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  loaders: [GLTFLoader]\n};\n\n/** Render a number of instances of a complete glTF scenegraph. */\nexport default class ScenegraphLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ScenegraphLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'ScenegraphLayer';\n\n  state!: {\n    scenegraph: GroupNode;\n    animator: GLTFAnimator;\n    attributesAvailable?: boolean;\n  };\n\n  getShaders() {\n    const modules = [project32, picking];\n\n    if (this.props._lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    return super.getShaders({vs, fs, modules});\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined for primitive layers\n    attributeManager!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph();\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this._deleteScenegraph();\n  }\n\n  private _updateScenegraph(): void {\n    const props = this.props;\n    const {gl} = this.context;\n    let scenegraphData: any = null;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/experimental function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n      scenegraphData = {gltf, ...gltfObjects};\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw()); // eslint-disable-line @typescript-eslint/no-floating-promises\n    } else if (props.scenegraph) {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      )();\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  private _applyAllAttributes(scenegraph: GroupNode): void {\n    if (this.state.attributesAvailable) {\n      // attributeManager is always defined for primitive layers\n      const allAttributes = this.getAttributeManager()!.getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  private _applyAnimationsProp(\n    scenegraph: GroupNode,\n    animator: GLTFAnimator,\n    animationsProp: any\n  ): void {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  private _deleteScenegraph(): void {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  private _getModelOptions(): any {\n    const {_imageBasedLightingEnvironment} = this.props;\n\n    let env: GLTFEnvironment | null = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        isInstanced: true,\n        transpileToGLSL100: !isWebGL2(this.context.gl),\n        ...this.getShaders()\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.timeline.getTime());\n      this.setNeedsRedraw();\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, sizeMinPixels, sizeMaxPixels, opacity, coordinateSystem} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          sizeMinPixels,\n          sizeMaxPixels,\n          composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          // eslint-disable-next-line camelcase\n          u_Camera: model.model.getUniforms().project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nuniform bool pickFeatureIds;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec4 uvRegions;\nin vec3 featureIdsPickingColors;\n\n// Instance attributes\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvec2 applyUVRegion(vec2 uv) {\n  #ifdef HAS_UV_REGIONS\n    // https://github.com/Esri/i3s-spec/blob/master/docs/1.7/geometryUVRegion.cmn.md\n    return fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;\n  #else\n    return uv;\n  #endif\n}\n\nvoid main(void) {\n  vec2 uv = applyUVRegion(texCoords);\n  geometry.uv = uv;\n\n  if (pickFeatureIds) {\n    geometry.pickingColor = featureIdsPickingColors;\n  } else {\n    geometry.pickingColor = instancePickingColors;\n  }\n\n  vTexCoord = uv;\n  cameraPosition = project_uCameraPosition;\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale;\n  vec3 projectedPosition = project_position(positions);\n  position_commonspace = vec4(projectedPosition, 1.0);\n  gl_Position = project_common_position_to_clipspace(position_commonspace);\n\n  geometry.position = position_commonspace;\n  normals_commonspace = project_normal(instanceModelMatrix * normals);\n  geometry.normal = normals_commonspace;\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n    #ifdef HAS_NORMALS\n      pbr_vNormal = geometry.normal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = uv;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n", "export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  \n#ifdef MODULE_PBR\n\n  fragColor = vColor * pbr_filterColor(vec4(0));\n  geometry.uv = pbr_vUV;\n  fragColor.a *= opacity;\n\n#else\n\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n#endif\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n", "import type {NumericArray} from '@math.gl/core';\nimport {GLTFMaterialParser} from '@luma.gl/experimental';\nimport {Model, pbr} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport type {MeshAttribute, MeshAttributes} from '@loaders.gl/schema';\nimport type {UpdateParameters, DefaultProps, LayerContext} from '@deck.gl/core';\nimport {SimpleMeshLayer, SimpleMeshLayerProps} from '@deck.gl/mesh-layers';\n\nimport vs from './mesh-layer-vertex.glsl';\nimport fs from './mesh-layer-fragment.glsl';\n\nexport type Mesh = {\n  attributes: MeshAttributes;\n  indices?: MeshAttribute;\n};\n\nfunction validateGeometryAttributes(attributes) {\n  const hasColorAttribute = attributes.COLOR_0 || attributes.colors;\n  if (!hasColorAttribute) {\n    attributes.colors = {constant: true, value: new Float32Array([1, 1, 1])};\n  }\n}\n\nconst defaultProps: DefaultProps<MeshLayerProps> = {\n  pbrMaterial: {type: 'object', value: null},\n  featureIds: {type: 'array', value: null, optional: true}\n};\n\n/** All properties supported by MeshLayer. */\nexport type MeshLayerProps<DataT = any> = _MeshLayerProps & SimpleMeshLayerProps<DataT>;\n\n/** Properties added by MeshLayer. */\ntype _MeshLayerProps = {\n  /**\n   * PBR material object. _lighting must be pbr for this to work\n   */\n  pbrMaterial?: any; // TODO add type when converting Tile3DLayer\n\n  /**\n   * List of feature ids.\n   */\n  featureIds?: NumericArray | null;\n};\n\nexport default class MeshLayer<DataT = any, ExtraProps extends {} = {}> extends SimpleMeshLayer<\n  DataT,\n  Required<_MeshLayerProps> & ExtraProps\n> {\n  static layerName = 'MeshLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    const shaders = super.getShaders();\n    const modules = shaders.modules;\n    modules.push(pbr);\n    return {...shaders, vs, fs};\n  }\n\n  initializeState() {\n    const {featureIds} = this.props;\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    if (featureIds) {\n      // attributeManager is always defined in a primitive layer\n      attributeManager!.add({\n        featureIdsPickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          noAlloc: true,\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          update: this.calculateFeatureIdsPickingColors\n        }\n      });\n    }\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n\n    const {props, oldProps} = params;\n    if (props.pbrMaterial !== oldProps.pbrMaterial) {\n      this.updatePbrMaterialUniforms(props.pbrMaterial);\n    }\n  }\n\n  draw(opts) {\n    const {featureIds} = this.props;\n    if (!this.state.model) {\n      return;\n    }\n    this.state.model.setUniforms({\n      // Needed for PBR (TODO: find better way to get it)\n      // eslint-disable-next-line camelcase\n      u_Camera: this.state.model.getUniforms().project_uCameraPosition,\n      pickFeatureIds: Boolean(featureIds)\n    });\n\n    super.draw(opts);\n  }\n\n  protected getModel(mesh: Mesh): Model {\n    const {id, pbrMaterial} = this.props;\n    const materialParser = this.parseMaterial(pbrMaterial, mesh);\n    // Keep material parser to explicitly remove textures\n    this.setState({materialParser});\n    const shaders = this.getShaders();\n    validateGeometryAttributes(mesh.attributes);\n    const model = new Model(this.context.gl, {\n      ...this.getShaders(),\n      id,\n      geometry: mesh,\n      defines: {\n        ...shaders.defines,\n        ...materialParser?.defines,\n        HAS_UV_REGIONS: mesh.attributes.uvRegions\n      },\n      parameters: materialParser?.parameters,\n      isInstanced: true\n    });\n\n    return model;\n  }\n\n  updatePbrMaterialUniforms(pbrMaterial) {\n    const {model} = this.state;\n    if (model) {\n      const {mesh} = this.props;\n      const materialParser = this.parseMaterial(pbrMaterial, mesh);\n      // Keep material parser to explicitly remove textures\n      this.setState({materialParser});\n      model.setUniforms(materialParser.uniforms);\n    }\n  }\n\n  parseMaterial(pbrMaterial, mesh) {\n    const unlit = Boolean(\n      pbrMaterial.pbrMetallicRoughness && pbrMaterial.pbrMetallicRoughness.baseColorTexture\n    );\n\n    this.state.materialParser?.delete();\n\n    return new GLTFMaterialParser(this.context.gl, {\n      attributes: {NORMAL: mesh.attributes.normals, TEXCOORD_0: mesh.attributes.texCoords},\n      material: {unlit, ...pbrMaterial},\n      pbrDebug: false,\n      imageBasedLightingEnvironment: null,\n      lights: true,\n      useTangents: false\n    });\n  }\n\n  calculateFeatureIdsPickingColors(attribute) {\n    // This updater is only called if featureIds is not null\n    const featureIds = this.props.featureIds!;\n    const value = new Uint8ClampedArray(featureIds.length * attribute.size);\n\n    const pickingColor = [];\n    for (let index = 0; index < featureIds.length; index++) {\n      this.encodePickingColor(featureIds[index], pickingColor);\n\n      value[index * 3] = pickingColor[0];\n      value[index * 3 + 1] = pickingColor[1];\n      value[index * 3 + 2] = pickingColor[2];\n    }\n\n    attribute.value = value;\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this.state.materialParser?.delete();\n    this.setState({materialParser: null});\n  }\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport const WGS84_RADIUS_X = 6378137.0;\nexport const WGS84_RADIUS_Y = 6378137.0;\nexport const WGS84_RADIUS_Z = 6356752.3142451793;\n\n// Pre-calculated ellipsoid defaults to avoid utils depending on `ellipsoid.js`\n\nexport const WGS84_CONSTANTS = {\n  radii: [WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z],\n  radiiSquared: [\n    WGS84_RADIUS_X * WGS84_RADIUS_X,\n    WGS84_RADIUS_Y * WGS84_RADIUS_Y,\n    WGS84_RADIUS_Z * WGS84_RADIUS_Z\n  ],\n  oneOverRadii: [1.0 / WGS84_RADIUS_X, 1.0 / WGS84_RADIUS_Y, 1.0 / WGS84_RADIUS_Z],\n  oneOverRadiiSquared: [\n    1.0 / (WGS84_RADIUS_X * WGS84_RADIUS_X),\n    1.0 / (WGS84_RADIUS_Y * WGS84_RADIUS_Y),\n    1.0 / (WGS84_RADIUS_Z * WGS84_RADIUS_Z)\n  ],\n  maximumRadius: Math.max(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z),\n  centerToleranceSquared: 1e-1 // EPSILON1;\n};\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport type {NumericArray} from '@math.gl/core';\nimport {Vector3, toRadians, toDegrees, config} from '@math.gl/core';\nimport {WGS84_CONSTANTS} from './constants';\n\ntype LngLatHeightObject = {\n  longitude: number;\n  latitude: number;\n  height: number;\n};\n\ntype XYZObject = {\n  x: number;\n  y: number;\n  z: number;\n};\n\ntype Cartographic = LngLatHeightObject | XYZObject | NumericArray;\n\nfunction identity(x: number): number {\n  return x;\n}\n\nconst scratchVector = new Vector3();\n\nexport function fromCartographic(cartographic: Cartographic): number[];\nexport function fromCartographic<NumArrayT>(\n  cartographic: Cartographic,\n  result: NumArrayT,\n  map?: (x: number) => number\n): NumArrayT;\nexport function fromCartographic(\n  cartographic: Cartographic,\n  result = [] as number[],\n  map = identity\n): number[] {\n  if ('longitude' in cartographic) {\n    result[0] = map(cartographic.longitude);\n    result[1] = map(cartographic.latitude);\n    result[2] = cartographic.height;\n  } else if ('x' in cartographic) {\n    result[0] = map(cartographic.x);\n    result[1] = map(cartographic.y);\n    result[2] = cartographic.z;\n  } else {\n    result[0] = map(cartographic[0]);\n    result[1] = map(cartographic[1]);\n    result[2] = cartographic[2];\n  }\n  return result;\n}\n\nexport function fromCartographicToRadians(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographicToRadians<TArray>(\n  cartographic: Cartographic,\n  result: TArray\n): TArray;\nexport function fromCartographicToRadians(\n  cartographic: Cartographic,\n  vector = [] as number[]\n): number[] {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? identity : toRadians);\n}\n\nexport function fromCartographicToDegrees(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographicToDegrees<TArray>(\n  cartographic: Cartographic,\n  result: TArray\n): TArray;\nexport function fromCartographicToDegrees(\n  cartographic: Cartographic,\n  vector = [] as number[]\n): number[] {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? toDegrees : identity);\n}\n\nexport function toCartographic<T extends Cartographic>(\n  vector: Readonly<NumericArray>,\n  cartographic: T,\n  map: (x: number) => number = identity\n): T {\n  if ('longitude' in cartographic) {\n    cartographic.longitude = map(vector[0]);\n    cartographic.latitude = map(vector[1]);\n    cartographic.height = vector[2];\n  } else if ('x' in cartographic) {\n    cartographic.x = map(vector[0]);\n    cartographic.y = map(vector[1]);\n    cartographic.z = vector[2];\n  } else {\n    cartographic[0] = map(vector[0]);\n    cartographic[1] = map(vector[1]);\n    cartographic[2] = vector[2];\n  }\n  return cartographic;\n}\n\nexport function toCartographicFromRadians<T extends Cartographic>(\n  vector: Readonly<NumericArray>,\n  cartographic: T\n): T {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? identity : toDegrees);\n}\n\nexport function toCartographicFromDegrees<T extends Cartographic>(\n  vector: Readonly<NumericArray>,\n  cartographic: T\n): T {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? toRadians : identity);\n}\n\n// Estimates if a vector is close to the surface of the WGS84 Ellipsoid\nexport function isWGS84(vector: Readonly<NumericArray>): boolean {\n  if (!vector) {\n    return false;\n  }\n  scratchVector.from(vector);\n  const {oneOverRadiiSquared, centerToleranceSquared} = WGS84_CONSTANTS;\n  const x2 = vector[0] * vector[0] * oneOverRadiiSquared[0];\n  const y2 = vector[1] * vector[1] * oneOverRadiiSquared[1];\n  const z2 = vector[2] * vector[2] * oneOverRadiiSquared[2];\n  return Math.abs(x2 + y2 + z2 - 1) < centerToleranceSquared;\n}\n\n/*\n\nexport function fromCartographic(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographic(cartographic: Cartographic, result: TypedArray): TypedArray;\nexport function fromCartographicToRadians(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographicToRadians(\n  cartographic: Cartographic,\n  result: TypedArray\n): TypedArray;\nexport function fromCartographicToDegrees(cartographic: Cartographic, result?: number[]): number[];\nexport function fromCartographicToDegrees(\n  cartographic: Cartographic,\n  result: TypedArray\n): TypedArray;\n\nexport function toCartographic(vector: number[] | TypedArray, result: Cartographic): number[];\nexport function toCartographicFromRadians(\n  vector: number[] | TypedArray,\n  result: Cartographic\n): number[];\nexport function toCartographicFromDegrees(\n  vector: number[] | TypedArray,\n  result: Cartographic\n): number[];\n\n// Estimates if a vector is close to the surface of the WGS84 Ellipsoid\nexport function isWGS84(vector: number[] | TypedArray): boolean;\n*/\n", "/* eslint-disable */\nimport {Vector3, _MathUtils} from '@math.gl/core';\nimport type Ellipsoid from '../ellipsoid';\n\nconst scratchVector = new Vector3();\nconst scaleToGeodeticSurfaceIntersection = new Vector3();\nconst scaleToGeodeticSurfaceGradient = new Vector3();\n\n// Scales the provided Cartesian position along the geodetic surface normal\n// so that it is on the surface of this ellipsoid.  If the position is\n// at the center of the ellipsoid, this function returns undefined.\nexport default function scaleToGeodeticSurface(\n  cartesian: number[],\n  ellipsoid: Ellipsoid,\n  result: number[] = []\n): number[] {\n  const {oneOverRadii, oneOverRadiiSquared, centerToleranceSquared} = ellipsoid;\n\n  scratchVector.from(cartesian);\n\n  const positionX = scratchVector.x;\n  const positionY = scratchVector.y;\n  const positionZ = scratchVector.z;\n\n  const oneOverRadiiX = oneOverRadii.x;\n  const oneOverRadiiY = oneOverRadii.y;\n  const oneOverRadiiZ = oneOverRadii.z;\n\n  const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n  const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n  const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n\n  // Compute the squared ellipsoid norm.\n  const squaredNorm = x2 + y2 + z2;\n  const ratio = Math.sqrt(1.0 / squaredNorm);\n\n  // When very close to center or at center\n  if (!Number.isFinite(ratio)) {\n    return undefined;\n  }\n\n  // As an initial approximation, assume that the radial intersection is the projection point.\n  const intersection = scaleToGeodeticSurfaceIntersection;\n  intersection.copy(cartesian).scale(ratio);\n\n  // If the position is near the center, the iteration will not converge.\n  if (squaredNorm < centerToleranceSquared) {\n    return intersection.to(result);\n  }\n\n  const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n  const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n  const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n\n  // Use the gradient at the intersection point in place of the true unit normal.\n  // The difference in magnitude will be absorbed in the multiplier.\n  const gradient = scaleToGeodeticSurfaceGradient;\n  gradient.set(\n    intersection.x * oneOverRadiiSquaredX * 2.0,\n    intersection.y * oneOverRadiiSquaredY * 2.0,\n    intersection.z * oneOverRadiiSquaredZ * 2.0\n  );\n\n  // Compute the initial guess at the normal vector multiplier, lambda.\n  let lambda = ((1.0 - ratio) * scratchVector.len()) / (0.5 * gradient.len());\n  let correction = 0.0;\n\n  let xMultiplier;\n  let yMultiplier;\n  let zMultiplier;\n  let func;\n\n  do {\n    lambda -= correction;\n\n    xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n    yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n    zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n\n    const xMultiplier2 = xMultiplier * xMultiplier;\n    const yMultiplier2 = yMultiplier * yMultiplier;\n    const zMultiplier2 = zMultiplier * zMultiplier;\n\n    const xMultiplier3 = xMultiplier2 * xMultiplier;\n    const yMultiplier3 = yMultiplier2 * yMultiplier;\n    const zMultiplier3 = zMultiplier2 * zMultiplier;\n\n    func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n\n    // \"denominator\" here refers to the use of this expression in the velocity and acceleration\n    // computations in the sections to follow.\n    const denominator =\n      x2 * xMultiplier3 * oneOverRadiiSquaredX +\n      y2 * yMultiplier3 * oneOverRadiiSquaredY +\n      z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n\n    const derivative = -2.0 * denominator;\n\n    correction = func / derivative;\n  } while (Math.abs(func) > _MathUtils.EPSILON12);\n\n  return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n", "import {Vector3, assert, equals as equalsEpsilon} from '@math.gl/core';\n\nimport type Ellipsoid from '../ellipsoid';\n\nconst EPSILON14 = 1e-14;\n\nconst scratchOrigin = new Vector3();\n\n// Caclulate third axis from given two axii\nconst VECTOR_PRODUCT_LOCAL_FRAME = {\n  up: {\n    south: 'east',\n    north: 'west',\n    west: 'south',\n    east: 'north'\n  },\n  down: {\n    south: 'west',\n    north: 'east',\n    west: 'north',\n    east: 'south'\n  },\n  south: {\n    up: 'west',\n    down: 'east',\n    west: 'down',\n    east: 'up'\n  },\n  north: {\n    up: 'east',\n    down: 'west',\n    west: 'up',\n    east: 'down'\n  },\n  west: {\n    up: 'north',\n    down: 'south',\n    north: 'down',\n    south: 'up'\n  },\n  east: {\n    up: 'south',\n    down: 'north',\n    north: 'up',\n    south: 'down'\n  }\n} as const;\n\nconst degeneratePositionLocalFrame = {\n  north: [-1, 0, 0],\n  east: [0, 1, 0],\n  up: [0, 0, 1],\n  south: [1, 0, 0],\n  west: [0, -1, 0],\n  down: [0, 0, -1]\n} as const;\n\nconst scratchAxisVectors = {\n  east: new Vector3(),\n  north: new Vector3(),\n  up: new Vector3(),\n  west: new Vector3(),\n  south: new Vector3(),\n  down: new Vector3()\n};\n\nconst scratchVector1 = new Vector3();\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\n\ntype Axis = 'up' | 'down' | 'north' | 'east' | 'south' | 'west';\n\n// Computes a 4x4 transformation matrix from a reference frame\n// centered at the provided origin to the provided ellipsoid's fixed reference frame.\n// eslint-disable-next-line max-statements, max-params, complexity\nexport default function localFrameToFixedFrame(\n  ellipsoid: Ellipsoid,\n  firstAxis: Axis,\n  secondAxis: Axis,\n  thirdAxis: Axis,\n  cartesianOrigin: number[],\n  result: number[]\n): number[] {\n  const thirdAxisInferred =\n    VECTOR_PRODUCT_LOCAL_FRAME[firstAxis] &&\n    (VECTOR_PRODUCT_LOCAL_FRAME[firstAxis][secondAxis] as Axis);\n  // firstAxis and secondAxis must be east, north, up, west, south or down.');\n  assert(thirdAxisInferred && (!thirdAxis || thirdAxis === thirdAxisInferred));\n\n  let firstAxisVector: Vector3;\n  let secondAxisVector: Vector3;\n  let thirdAxisVector: Vector3;\n\n  const origin = scratchOrigin.copy(cartesianOrigin);\n\n  // If x and y are zero, assume origin is at a pole, which is a special case.\n  const atPole = equalsEpsilon(origin.x, 0.0, EPSILON14) && equalsEpsilon(origin.y, 0.0, EPSILON14);\n\n  if (atPole) {\n    // Look up axis value and adjust\n    const sign = Math.sign(origin.z);\n\n    firstAxisVector = scratchVector1.fromArray(degeneratePositionLocalFrame[firstAxis]);\n    if (firstAxis !== 'east' && firstAxis !== 'west') {\n      firstAxisVector.scale(sign);\n    }\n\n    secondAxisVector = scratchVector2.fromArray(degeneratePositionLocalFrame[secondAxis]);\n    if (secondAxis !== 'east' && secondAxis !== 'west') {\n      secondAxisVector.scale(sign);\n    }\n\n    thirdAxisVector = scratchVector3.fromArray(degeneratePositionLocalFrame[thirdAxis]);\n    if (thirdAxis !== 'east' && thirdAxis !== 'west') {\n      thirdAxisVector.scale(sign);\n    }\n  } else {\n    // Calculate all axis\n    const {up, east, north} = scratchAxisVectors;\n\n    east.set(-origin.y, origin.x, 0.0).normalize();\n    ellipsoid.geodeticSurfaceNormal(origin, up);\n    north.copy(up).cross(east);\n\n    const {down, west, south} = scratchAxisVectors;\n\n    down.copy(up).scale(-1);\n    west.copy(east).scale(-1);\n    south.copy(north).scale(-1);\n\n    // Pick three axis based on desired orientation\n    firstAxisVector = scratchAxisVectors[firstAxis];\n    secondAxisVector = scratchAxisVectors[secondAxis];\n    thirdAxisVector = scratchAxisVectors[thirdAxis];\n  }\n\n  // TODO - assuming the result is column-major\n  result[0] = firstAxisVector.x;\n  result[1] = firstAxisVector.y;\n  result[2] = firstAxisVector.z;\n  result[3] = 0.0;\n  result[4] = secondAxisVector.x;\n  result[5] = secondAxisVector.y;\n  result[6] = secondAxisVector.z;\n  result[7] = 0.0;\n  result[8] = thirdAxisVector.x;\n  result[9] = thirdAxisVector.y;\n  result[10] = thirdAxisVector.z;\n  result[11] = 0.0;\n  result[12] = origin.x;\n  result[13] = origin.y;\n  result[14] = origin.z;\n  result[15] = 1.0;\n  return result;\n}\n", "// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {\n  Vector3,\n  Matrix4,\n  toRadians,\n  toDegrees,\n  assert,\n  equals,\n  _MathUtils,\n  NumericArray\n} from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\n\nimport {WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z} from '../constants';\nimport {fromCartographicToRadians, toCartographicFromRadians} from '../type-utils';\n\nimport scaleToGeodeticSurface from './helpers/scale-to-geodetic-surface';\nimport localFrameToFixedFrame from './helpers/ellipsoid-transform';\n\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nconst scratchK = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchHeight = new Vector3();\nconst scratchCartesian = new Vector3();\n\nlet wgs84;\n\n/**\n * A quadratic surface defined in Cartesian coordinates by the equation\n * `(x / a)^2 + (y / b)^2 + (z / c)^2 = 1`.  Primarily used\n * to represent the shape of planetary bodies.\n */\nexport default class Ellipsoid {\n  /** An Ellipsoid instance initialized to the WGS84 standard. */\n  static readonly WGS84: Ellipsoid = new Ellipsoid(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z);\n\n  readonly radii: Vector3;\n  readonly radiiSquared: Vector3;\n  readonly radiiToTheFourth: Vector3;\n  readonly oneOverRadii: Vector3;\n  readonly oneOverRadiiSquared: Vector3;\n  readonly minimumRadius: number;\n  readonly maximumRadius: number;\n  readonly centerToleranceSquared: number = _MathUtils.EPSILON1;\n  readonly squaredXOverSquaredZ: number;\n\n  /** Creates an Ellipsoid from a Cartesian specifying the radii in x, y, and z directions. */\n  constructor(x: number, y: number, z: number);\n  constructor();\n\n  constructor(x = 0.0, y = 0.0, z = 0.0) {\n    assert(x >= 0.0);\n    assert(y >= 0.0);\n    assert(z >= 0.0);\n\n    this.radii = new Vector3(x, y, z);\n\n    this.radiiSquared = new Vector3(x * x, y * y, z * z);\n\n    this.radiiToTheFourth = new Vector3(x * x * x * x, y * y * y * y, z * z * z * z);\n\n    this.oneOverRadii = new Vector3(\n      x === 0.0 ? 0.0 : 1.0 / x,\n      y === 0.0 ? 0.0 : 1.0 / y,\n      z === 0.0 ? 0.0 : 1.0 / z\n    );\n\n    this.oneOverRadiiSquared = new Vector3(\n      x === 0.0 ? 0.0 : 1.0 / (x * x),\n      y === 0.0 ? 0.0 : 1.0 / (y * y),\n      z === 0.0 ? 0.0 : 1.0 / (z * z)\n    );\n\n    this.minimumRadius = Math.min(x, y, z);\n\n    this.maximumRadius = Math.max(x, y, z);\n\n    if (this.radiiSquared.z !== 0) {\n      this.squaredXOverSquaredZ = this.radiiSquared.x / this.radiiSquared.z;\n    }\n\n    Object.freeze(this);\n  }\n\n  /** Compares this Ellipsoid against the provided Ellipsoid componentwise */\n  equals(right: Ellipsoid): boolean {\n    return this === right || Boolean(right && this.radii.equals(right.radii));\n  }\n\n  /** Creates a string representing this Ellipsoid in the format '(radii.x, radii.y, radii.z)'. */\n  toString(): string {\n    return this.radii.toString();\n  }\n\n  /** Converts the provided cartographic to Cartesian representation. */\n  cartographicToCartesian(cartographic: number[], result: Vector3): Vector3;\n  cartographicToCartesian(cartographic: number[], result?: number[]): number[];\n\n  cartographicToCartesian(cartographic, result = [0, 0, 0]) {\n    const normal = scratchNormal;\n    const k = scratchK;\n\n    const [, , height] = cartographic;\n    this.geodeticSurfaceNormalCartographic(cartographic, normal);\n    k.copy(this.radiiSquared).scale(normal);\n\n    const gamma = Math.sqrt(normal.dot(k));\n    k.scale(1 / gamma);\n\n    normal.scale(height);\n\n    k.add(normal);\n\n    return k.to(result);\n  }\n\n  /** Converts the provided cartesian to cartographic (lng/lat/z) representation.\n   * The cartesian is undefined at the center of the ellipsoid. */\n  cartesianToCartographic(cartesian: number[], result: Vector3): Vector3;\n  cartesianToCartographic(cartesian: number[], result?: number[]): number[];\n\n  cartesianToCartographic(cartesian, result = [0, 0, 0]) {\n    scratchCartesian.from(cartesian);\n    const point = this.scaleToGeodeticSurface(scratchCartesian, scratchPosition);\n\n    if (!point) {\n      return undefined;\n    }\n\n    const normal = this.geodeticSurfaceNormal(point, scratchNormal);\n\n    const h = scratchHeight;\n    h.copy(scratchCartesian).subtract(point);\n\n    const longitude = Math.atan2(normal.y, normal.x);\n    const latitude = Math.asin(normal.z);\n    const height = Math.sign(vec3.dot(h, scratchCartesian)) * vec3.length(h);\n\n    return toCartographicFromRadians([longitude, latitude, height], result);\n  }\n\n  /** Computes a 4x4 transformation matrix from a reference frame with an east-north-up axes\n   * centered at the provided origin to the provided ellipsoid's fixed reference frame. */\n  eastNorthUpToFixedFrame(origin: number[], result?: Matrix4): Matrix4;\n  eastNorthUpToFixedFrame(origin: number[], result: number[]): number[];\n\n  eastNorthUpToFixedFrame(origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, 'east', 'north', 'up', origin, result);\n  }\n\n  /** Computes a 4x4 transformation matrix from a reference frame centered at\n   * the provided origin to the ellipsoid's fixed reference frame.\n   */\n  localFrameToFixedFrame(\n    firstAxis: string,\n    secondAxis: string,\n    thirdAxis: string,\n    origin: Readonly<NumericArray>,\n    result?: Matrix4\n  ): Matrix4;\n  localFrameToFixedFrame<Matrix4T>(\n    firstAxis: string,\n    secondAxis: string,\n    thirdAxis: string,\n    origin: Readonly<NumericArray>,\n    result: number[]\n  ): number[];\n\n  // Computes a 4x4 transformation matrix from a reference frame centered at\n  // the provided origin to the ellipsoid's fixed reference frame.\n  localFrameToFixedFrame(firstAxis, secondAxis, thirdAxis, origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, firstAxis, secondAxis, thirdAxis, origin, result);\n  }\n\n  /** Computes the unit vector directed from the center of this ellipsoid toward\n   * the provided Cartesian position. */\n  geocentricSurfaceNormal(cartesian: number[], result?: number[]): number[];\n  geocentricSurfaceNormal<NumArray>(cartesian: number[], result: NumArray): NumArray;\n  geocentricSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).normalize().to(result);\n  }\n\n  /** Computes the normal of the plane tangent to the surface of the ellipsoid at provided position. */\n  geodeticSurfaceNormalCartographic<NumArray>(cartographic: number[], result: NumArray): NumArray;\n  geodeticSurfaceNormalCartographic(cartographic: number[]): number[];\n  geodeticSurfaceNormalCartographic(cartographic, result = [0, 0, 0]) {\n    const cartographicVectorRadians = fromCartographicToRadians(cartographic);\n\n    const longitude = cartographicVectorRadians[0];\n    const latitude = cartographicVectorRadians[1];\n\n    const cosLatitude = Math.cos(latitude);\n\n    scratchVector\n      .set(cosLatitude * Math.cos(longitude), cosLatitude * Math.sin(longitude), Math.sin(latitude))\n      .normalize();\n\n    return scratchVector.to(result);\n  }\n\n  /** Computes the normal of the plane tangent to the surface of the ellipsoid at the provided position. */\n  geodeticSurfaceNormal<NumArrayT>(cartesian: number[], result: NumArrayT): NumArrayT;\n  geodeticSurfaceNormal(cartesian: number[]): number[];\n  geodeticSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).scale(this.oneOverRadiiSquared).normalize().to(result);\n  }\n\n  /** Scales the provided Cartesian position along the geodetic surface normal\n   * so that it is on the surface of this ellipsoid.  If the position is\n   * at the center of the ellipsoid, this function returns undefined. */\n  scaleToGeodeticSurface(cartesian: number[], result?: number[]): number[] {\n    return scaleToGeodeticSurface(cartesian, this, result);\n  }\n\n  /** Scales the provided Cartesian position along the geocentric surface normal\n   * so that it is on the surface of this ellipsoid. */\n  scaleToGeocentricSurface(cartesian: number[], result: number[] = [0, 0, 0]): number[] {\n    scratchPosition.from(cartesian);\n\n    const positionX = scratchPosition.x;\n    const positionY = scratchPosition.y;\n    const positionZ = scratchPosition.z;\n    const oneOverRadiiSquared = this.oneOverRadiiSquared;\n\n    const beta =\n      1.0 /\n      Math.sqrt(\n        positionX * positionX * oneOverRadiiSquared.x +\n          positionY * positionY * oneOverRadiiSquared.y +\n          positionZ * positionZ * oneOverRadiiSquared.z\n      );\n\n    return scratchPosition.multiplyScalar(beta).to(result);\n  }\n\n  /** Transforms a Cartesian X, Y, Z position to the ellipsoid-scaled space by multiplying\n   * its components by the result of `Ellipsoid#oneOverRadii` */\n  transformPositionToScaledSpace(position: number[], result: number[] = [0, 0, 0]): number[] {\n    return scratchPosition.from(position).scale(this.oneOverRadii).to(result);\n  }\n\n  /** Transforms a Cartesian X, Y, Z position from the ellipsoid-scaled space by multiplying\n   * its components by the result of `Ellipsoid#radii`. */\n  transformPositionFromScaledSpace(position: number[], result: number[] = [0, 0, 0]): number[] {\n    return scratchPosition.from(position).scale(this.radii).to(result);\n  }\n\n  /** Computes a point which is the intersection of the surface normal with the z-axis. */\n  getSurfaceNormalIntersectionWithZAxis(\n    position: number[],\n    buffer: number = 0,\n    result: number[] = [0, 0, 0]\n  ): number[] {\n    // Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)\n    assert(equals(this.radii.x, this.radii.y, _MathUtils.EPSILON15));\n    assert(this.radii.z > 0);\n\n    scratchPosition.from(position);\n    const z = scratchPosition.z * (1 - this.squaredXOverSquaredZ);\n\n    if (Math.abs(z) >= this.radii.z - buffer) {\n      return undefined;\n    }\n\n    return scratchPosition.set(0.0, 0.0, z).to(result);\n  }\n}\n", "// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default function getHiResTimestamp(): number {\n  let timestamp;\n  // Get best timer available.\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n", "import getHiResTimestamp from '../utils/hi-res-timestamp';\n\nexport default class Stat {\n  readonly name: string;\n  readonly type: string | undefined;\n  sampleSize: number = 1;\n  time: number = 0;\n  count: number = 0;\n  samples: number = 0;\n  lastTiming: number = 0;\n  lastSampleTime: number = 0;\n  lastSampleCount: number = 0;\n\n  _count: number = 0;\n  _time: number = 0;\n  _samples: number = 0;\n  _startTime: number = 0;\n  _timerPending: boolean = false;\n\n  constructor(name: string, type?: string) {\n    this.name = name;\n    this.type = type;\n    this.reset();\n  }\n\n  reset(): this {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n\n    return this;\n  }\n\n  setSampleSize(samples: number): this {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  /** Call to increment count (+1) */\n  incrementCount(): this {\n    this.addCount(1);\n\n    return this;\n  }\n\n  /** Call to decrement count (-1) */\n  decrementCount(): this {\n    this.subtractCount(1);\n\n    return this;\n  }\n\n  /** Increase count */\n  addCount(value: number): this {\n    this._count += value;\n    this._samples++;\n    this._checkSampling();\n\n    return this;\n  }\n\n  /** Decrease count */\n  subtractCount(value: number): this {\n    this._count -= value;\n    this._samples++;\n    this._checkSampling();\n\n    return this;\n  }\n\n  /** Add an arbitrary timing and bump the count */\n  addTime(time: number): this {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n    this._checkSampling();\n\n    return this;\n  }\n\n  /** Start a timer */\n  timeStart(): this {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n\n    return this;\n  }\n\n  /** End a timer. Adds to time and bumps the timing count. */\n  timeEnd(): this {\n    if (!this._timerPending) {\n      return this;\n    }\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount(): number {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  /** Calculate average time / count for the previous window */\n  getSampleAverageTime(): number {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  /** Calculate counts per second for the previous window */\n  getSampleHz(): number {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount(): number {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  /** Calculate average time / count */\n  getAverageTime(): number {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  /** Calculate counts per second */\n  getHz(): number {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  _checkSampling(): void {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n}\n", "// probe.gl, MIT license\n\nimport Stat from './stat';\n\ntype TableEntry = {\n  time: number;\n  count: number;\n  average: number;\n  hz: number;\n};\n\n/** A \"bag\" of `Stat` objects, can be visualized using `StatsWidget` */\nexport default class Stats {\n  readonly id: string;\n  readonly stats: Record<string, Stat> = {};\n\n  constructor(options: {id: string; stats?: Stats | Stat[] | {name: string; type?: string}[]}) {\n    this.id = options.id;\n    this.stats = {};\n\n    this._initializeStats(options.stats);\n\n    Object.seal(this);\n  }\n\n  /** Acquire a stat. Create if it doesn't exist. */\n  get(name: string, type: string = 'count'): Stat {\n    return this._getOrCreate({name, type});\n  }\n\n  get size(): number {\n    return Object.keys(this.stats).length;\n  }\n\n  /** Reset all stats */\n  reset(): this {\n    for (const stat of Object.values(this.stats)) {\n      stat.reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn: (stat: Stat) => void): void {\n    for (const stat of Object.values(this.stats)) {\n      fn(stat);\n    }\n  }\n\n  getTable(): Record<string, TableEntry> {\n    const table: Record<string, TableEntry> = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n\n    return table;\n  }\n\n  _initializeStats(stats: Stats | Stat[] | {name: string; type?: string}[] = []): void {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat: Stat | {name: string, type?: string}): Stat {\n    const {name, type} = stat;\n    let result = this.stats[name];\n    if (!result) {\n      if (stat instanceof Stat) {\n        result = stat;\n      } else {\n        result = new Stat(name, type);\n      }\n      this.stats[name] = result;\n    }\n    return result;\n  }\n}\n", "// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/**\n * Doubly linked list node\n * @private\n */\nexport class DoublyLinkedListNode {\n  item;\n  previous;\n  next;\n\n  constructor(item, previous, next) {\n    this.item = item;\n    this.previous = previous;\n    this.next = next;\n  }\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {DoublyLinkedListNode} from './doubly-linked-list-node';\n\n/**\n * Doubly linked list\n * @private\n */\nexport class DoublyLinkedList {\n  head: DoublyLinkedListNode | null = null;\n  tail: DoublyLinkedListNode | null = null;\n  _length = 0;\n\n  get length() {\n    return this._length;\n  }\n\n  /**\n   * Adds the item to the end of the list\n   * @param {*} [item]\n   * @return {DoublyLinkedListNode}\n   */\n  add(item) {\n    const node = new DoublyLinkedListNode(item, this.tail, null);\n\n    if (this.tail) {\n      this.tail.next = node;\n      this.tail = node;\n    } else {\n      this.head = node;\n      this.tail = node;\n    }\n\n    ++this._length;\n\n    return node;\n  }\n\n  /**\n   * Removes the given node from the list\n   * @param {DoublyLinkedListNode} node\n   */\n  remove(node) {\n    if (!node) {\n      return;\n    }\n\n    if (node.previous && node.next) {\n      node.previous.next = node.next;\n      node.next.previous = node.previous;\n    } else if (node.previous) {\n      // Remove last node\n      node.previous.next = null;\n      this.tail = node.previous;\n    } else if (node.next) {\n      // Remove first node\n      node.next.previous = null;\n      this.head = node.next;\n    } else {\n      // Remove last node in the linked list\n      this.head = null;\n      this.tail = null;\n    }\n\n    node.next = null;\n    node.previous = null;\n\n    --this._length;\n  }\n\n  /**\n   * Moves nextNode after node\n   * @param {DoublyLinkedListNode} node\n   * @param {DoublyLinkedListNode} nextNode\n   */\n  splice(node, nextNode) {\n    if (node === nextNode) {\n      return;\n    }\n\n    // Remove nextNode, then insert after node\n    this.remove(nextNode);\n    this._insert(node, nextNode);\n  }\n\n  _insert(node, nextNode) {\n    const oldNodeNext = node.next;\n    node.next = nextNode;\n\n    // nextNode is the new tail\n    if (this.tail === node) {\n      this.tail = nextNode;\n    } else {\n      oldNodeNext.previous = nextNode;\n    }\n\n    nextNode.next = oldNodeNext;\n    nextNode.previous = node;\n\n    ++this._length;\n  }\n}\n", "// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport type {Tileset3D} from './tileset-3d';\nimport type {Tile3D} from './tile-3d';\nimport {DoublyLinkedList} from '../utils/doubly-linked-list';\n\n/**\n * Stores tiles with content loaded.\n * @private\n */\nexport class TilesetCache {\n  private _list: DoublyLinkedList;\n  private _sentinel: any;\n  private _trimTiles: boolean;\n\n  constructor() {\n    // [head, sentinel) -> tiles that weren't selected this frame and may be removed from the cache\n    // (sentinel, tail] -> tiles that were selected this frame\n    this._list = new DoublyLinkedList();\n    this._sentinel = this._list.add('sentinel');\n    this._trimTiles = false;\n  }\n\n  reset(): void {\n    // Move sentinel node to the tail so, at the start of the frame, all tiles\n    // may be potentially replaced.  Tiles are moved to the right of the sentinel\n    // when they are selected so they will not be replaced.\n    this._list.splice(this._list.tail, this._sentinel);\n  }\n\n  touch(tile: Tile3D): void {\n    const node = tile._cacheNode;\n    if (node) {\n      this._list.splice(this._sentinel, node);\n    }\n  }\n\n  add(\n    tileset: Tileset3D,\n    tile: Tile3D,\n    addCallback?: (tileset: Tileset3D, tile: Tile3D) => void\n  ): void {\n    if (!tile._cacheNode) {\n      tile._cacheNode = this._list.add(tile);\n\n      if (addCallback) {\n        addCallback(tileset, tile);\n      }\n    }\n  }\n\n  unloadTile(\n    tileset: Tileset3D,\n    tile: Tile3D,\n    unloadCallback?: (tileset: Tileset3D, tile: Tile3D) => void\n  ): void {\n    const node = tile._cacheNode;\n    if (!node) {\n      return;\n    }\n\n    this._list.remove(node);\n    tile._cacheNode = null;\n    if (unloadCallback) {\n      unloadCallback(tileset, tile);\n    }\n  }\n\n  unloadTiles(tileset, unloadCallback): void {\n    const trimTiles = this._trimTiles;\n    this._trimTiles = false;\n\n    const list = this._list;\n\n    const maximumMemoryUsageInBytes = tileset.maximumMemoryUsage * 1024 * 1024;\n\n    // Traverse the list only to the sentinel since tiles/nodes to the\n    // right of the sentinel were used this frame.\n    // The sub-list to the left of the sentinel is ordered from LRU to MRU.\n    const sentinel = this._sentinel;\n    let node = list.head;\n\n    while (\n      node !== sentinel &&\n      (tileset.gpuMemoryUsageInBytes > maximumMemoryUsageInBytes || trimTiles)\n    ) {\n      // @ts-expect-error\n      const tile = node.item;\n      // @ts-expect-error\n      node = node.next;\n      this.unloadTile(tileset, tile, unloadCallback);\n    }\n  }\n\n  trim(): void {\n    this._trimTiles = true;\n  }\n}\n", "// loaders.gl, MIT license\n\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function calculateTransformProps(tileHeader, tile) {\n  assert(tileHeader);\n  assert(tile);\n\n  const {rtcCenter, gltfUpAxis} = tile;\n  const {\n    computedTransform,\n    boundingVolume: {center}\n  } = tileHeader;\n\n  let modelMatrix = new Matrix4(computedTransform);\n\n  // Translate if appropriate\n  if (rtcCenter) {\n    modelMatrix.translate(rtcCenter);\n  }\n\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  switch (gltfUpAxis) {\n    case 'Z':\n      break;\n    case 'Y':\n      const rotationY = new Matrix4().rotateX(Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationY);\n      break;\n    case 'X':\n      const rotationX = new Matrix4().rotateY(-Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationX);\n      break;\n    default:\n      break;\n  }\n\n  // Scale/offset positions if normalized integers\n  if (tile.isQuantized) {\n    modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n  }\n\n  // Option 1: Cartesian matrix and origin\n  const cartesianOrigin = new Vector3(center);\n\n  tile.cartesianModelMatrix = modelMatrix;\n  tile.cartesianOrigin = cartesianOrigin;\n\n  // Option 2: Cartographic matrix and origin\n  const cartographicOrigin = Ellipsoid.WGS84.cartesianToCartographic(\n    cartesianOrigin,\n    new Vector3()\n  );\n  const fromFixedFrameMatrix = Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n  const toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n\n  tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n  tile.cartographicOrigin = cartographicOrigin;\n\n  // Deprecated, drop\n  if (!tile.coordinateSystem) {\n    tile.modelMatrix = tile.cartographicModelMatrix;\n  }\n}\n", "import {Tile3D} from '@loaders.gl/tiles';\nimport {Vector3} from '@math.gl/core';\nimport {CullingVolume, Plane} from '@math.gl/culling';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {GeospatialViewport, Viewport} from '../../types';\n\nexport type FrameState = {\n  camera: {\n    position: number[];\n    direction: number[];\n    up: number[];\n  };\n  viewport: GeospatialViewport;\n  topDownViewport: GeospatialViewport; // Use it to calculate projected radius for a tile\n  height: number;\n  cullingVolume: CullingVolume;\n  frameNumber: number; // TODO: This can be the same between updates, what number is unique for between updates?\n  sseDenominator: number; // Assumes fovy = 60 degrees\n};\n\nconst scratchVector = new Vector3();\nconst scratchPosition = new Vector3();\nconst cullingVolume = new CullingVolume([\n  new Plane(),\n  new Plane(),\n  new Plane(),\n  new Plane(),\n  new Plane(),\n  new Plane()\n]);\n\n// Extracts a frame state appropriate for tile culling from a deck.gl viewport\n// TODO - this could likely be generalized and merged back into deck.gl for other culling scenarios\nexport function getFrameState(viewport: GeospatialViewport, frameNumber: number): FrameState {\n  // Traverse and and request. Update _selectedTiles so that we know what to render.\n  // Traverse and and request. Update _selectedTiles so that we know what to render.\n  const {cameraDirection, cameraUp, height} = viewport;\n  const {metersPerUnit} = viewport.distanceScales;\n\n  // TODO - Ellipsoid.eastNorthUpToFixedFrame() breaks on raw array, create a Vector.\n  // TODO - Ellipsoid.eastNorthUpToFixedFrame() takes a cartesian, is that intuitive?\n  const viewportCenterCartesian = worldToCartesian(viewport, viewport.center);\n  const enuToFixedTransform = Ellipsoid.WGS84.eastNorthUpToFixedFrame(viewportCenterCartesian);\n\n  const cameraPositionCartographic = viewport.unprojectPosition(viewport.cameraPosition);\n  const cameraPositionCartesian = Ellipsoid.WGS84.cartographicToCartesian(\n    cameraPositionCartographic,\n    new Vector3()\n  );\n\n  // These should still be normalized as the transform has scale 1 (goes from meters to meters)\n  const cameraDirectionCartesian = new Vector3(\n    // @ts-ignore\n    enuToFixedTransform.transformAsVector(new Vector3(cameraDirection).scale(metersPerUnit))\n  ).normalize();\n  const cameraUpCartesian = new Vector3(\n    // @ts-ignore\n    enuToFixedTransform.transformAsVector(new Vector3(cameraUp).scale(metersPerUnit))\n  ).normalize();\n\n  commonSpacePlanesToWGS84(viewport);\n\n  const ViewportClass = viewport.constructor;\n  const {longitude, latitude, width, bearing, zoom} = viewport;\n  // @ts-ignore\n  const topDownViewport = new ViewportClass({\n    longitude,\n    latitude,\n    height,\n    width,\n    bearing,\n    zoom,\n    pitch: 0\n  });\n\n  // TODO: make a file/class for frameState and document what needs to be attached to this so that traversal can function\n  return {\n    camera: {\n      position: cameraPositionCartesian,\n      direction: cameraDirectionCartesian,\n      up: cameraUpCartesian\n    },\n    viewport,\n    topDownViewport,\n    height,\n    cullingVolume,\n    frameNumber, // TODO: This can be the same between updates, what number is unique for between updates?\n    sseDenominator: 1.15 // Assumes fovy = 60 degrees\n  };\n}\n\n/**\n * Limit `tiles` array length with `maximumTilesSelected` number.\n * The criteria for this filtering is distance of a tile center\n * to the `frameState.viewport`'s longitude and latitude\n * @param tiles - tiles array to filter\n * @param frameState - frameState to calculate distances\n * @param maximumTilesSelected - maximal amount of tiles in the output array\n * @returns new tiles array\n */\nexport function limitSelectedTiles(\n  tiles: Tile3D[],\n  frameState: FrameState,\n  maximumTilesSelected: number\n): [Tile3D[], Tile3D[]] {\n  if (maximumTilesSelected === 0 || tiles.length <= maximumTilesSelected) {\n    return [tiles, []];\n  }\n  // Accumulate distances in couples array: [tileIndex: number, distanceToViewport: number]\n  const tuples: [number, number][] = [];\n  const {longitude: viewportLongitude, latitude: viewportLatitude} = frameState.viewport;\n  for (const [index, tile] of tiles.entries()) {\n    const [longitude, latitude] = tile.header.mbs;\n    const deltaLon = Math.abs(viewportLongitude - longitude);\n    const deltaLat = Math.abs(viewportLatitude - latitude);\n    const distance = Math.sqrt(deltaLat * deltaLat + deltaLon * deltaLon);\n    tuples.push([index, distance]);\n  }\n  const tuplesSorted = tuples.sort((a, b) => a[1] - b[1]);\n  const selectedTiles: Tile3D[] = [];\n  for (let i = 0; i < maximumTilesSelected; i++) {\n    selectedTiles.push(tiles[tuplesSorted[i][0]]);\n  }\n  const unselectedTiles: Tile3D[] = [];\n  for (let i = maximumTilesSelected; i < tuplesSorted.length; i++) {\n    unselectedTiles.push(tiles[tuplesSorted[i][0]]);\n  }\n\n  return [selectedTiles, unselectedTiles];\n}\n\nfunction commonSpacePlanesToWGS84(viewport) {\n  // Extract frustum planes based on current view.\n  const frustumPlanes = viewport.getFrustumPlanes();\n\n  // Get the near/far plane centers\n  const nearCenterCommon = closestPointOnPlane(frustumPlanes.near, viewport.cameraPosition);\n  const nearCenterCartesian = worldToCartesian(viewport, nearCenterCommon);\n  const cameraCartesian = worldToCartesian(viewport, viewport.cameraPosition, scratchPosition);\n\n  let i = 0;\n  cullingVolume.planes[i++].fromPointNormal(\n    nearCenterCartesian,\n    scratchVector.copy(nearCenterCartesian).subtract(cameraCartesian)\n  );\n\n  for (const dir in frustumPlanes) {\n    if (dir === 'near') {\n      continue; // eslint-disable-line no-continue\n    }\n    const plane = frustumPlanes[dir];\n    const posCommon = closestPointOnPlane(plane, nearCenterCommon, scratchPosition);\n    const cartesianPos = worldToCartesian(viewport, posCommon, scratchPosition);\n\n    cullingVolume.planes[i++].fromPointNormal(\n      cartesianPos,\n      // Want the normal to point into the frustum since that's what culling expects\n      scratchVector.copy(nearCenterCartesian).subtract(cartesianPos)\n    );\n  }\n}\n\nfunction closestPointOnPlane(\n  plane: {distance: number; normal: Vector3},\n  refPoint: [number, number, number] | Vector3,\n  out: Vector3 = new Vector3()\n): Vector3 {\n  const distanceToRef = plane.normal.dot(refPoint);\n  out\n    .copy(plane.normal)\n    .scale(plane.distance - distanceToRef)\n    .add(refPoint);\n  return out;\n}\n\nfunction worldToCartesian(\n  viewport: Viewport,\n  point: number[] | Vector3,\n  out: Vector3 = new Vector3()\n): Vector3 {\n  const cartographicPos = viewport.unprojectPosition(point);\n  return Ellipsoid.WGS84.cartographicToCartesian(cartographicPos, out);\n}\n", "// loaders.gl, MIT license\n\nimport {Vector3} from '@math.gl/core';\nimport {BoundingSphere, OrientedBoundingBox} from '@math.gl/culling';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {BoundingRectangle} from '../../types';\n\nconst WGS84_RADIUS_X = 6378137.0;\nconst WGS84_RADIUS_Y = 6378137.0;\nconst WGS84_RADIUS_Z = 6356752.3142451793;\n\nconst scratchVector = new Vector3();\n\n/**\n * Calculate appropriate zoom value for a particular boundingVolume\n * @param boundingVolume - the instance of bounding volume\n * @param cartorgraphicCenter - cartographic center of the bounding volume\n * @returns {number} - zoom value\n */\nexport function getZoomFromBoundingVolume(\n  boundingVolume: BoundingSphere | OrientedBoundingBox | BoundingRectangle,\n  cartorgraphicCenter: Vector3\n) {\n  if (boundingVolume instanceof OrientedBoundingBox) {\n    // OrientedBoundingBox\n    const {halfAxes} = boundingVolume;\n    const obbSize = getObbSize(halfAxes);\n    // Use WGS84_RADIUS_Z to allign with BoundingSphere algorithm\n    // Add the tile elevation value for correct zooming to elevated tiles\n    return Math.log2(WGS84_RADIUS_Z / (obbSize + cartorgraphicCenter[2]));\n  } else if (boundingVolume instanceof BoundingSphere) {\n    // BoundingSphere\n    const {radius} = boundingVolume;\n    // Add the tile elevation value for correct zooming to elevated tiles\n    return Math.log2(WGS84_RADIUS_Z / (radius + cartorgraphicCenter[2]));\n  } else if (boundingVolume.width && boundingVolume.height) {\n    // BoundingRectangle\n    const {width, height} = boundingVolume;\n    const zoomX = Math.log2(WGS84_RADIUS_X / width);\n    const zoomY = Math.log2(WGS84_RADIUS_Y / height);\n\n    return (zoomX + zoomY) / 2;\n  }\n\n  return 1;\n}\n\n/**\n * Calculate initial zoom for the tileset from 3D `fullExtent` defined in\n * the tileset metadata\n * @param fullExtent - 3D extent of the tileset\n * @param fullExtent.xmin - minimal longitude in decimal degrees\n * @param fullExtent.xmax - maximal longitude in decimal degrees\n * @param fullExtent.ymin - minimal latitude in decimal degrees\n * @param fullExtent.ymax - maximal latitude in decimal degrees\n * @param fullExtent.zmin - minimal elevation in meters\n * @param fullExtent.zmax - maximal elevation in meters\n * @param cartorgraphicCenter - tileset center in cartographic coordinate system\n * @param cartesianCenter - tileset center in cartesian coordinate system\n * @returns - initial zoom for the tileset\n */\nexport function getZoomFromFullExtent(\n  fullExtent: {\n    xmin: number;\n    xmax: number;\n    ymin: number;\n    ymax: number;\n    zmin: number;\n    zmax: number;\n  },\n  cartorgraphicCenter: Vector3,\n  cartesianCenter: Vector3\n) {\n  const extentVertex = Ellipsoid.WGS84.cartographicToCartesian(\n    [fullExtent.xmax, fullExtent.ymax, fullExtent.zmax],\n    new Vector3()\n  );\n  const extentSize = Math.sqrt(\n    Math.pow(extentVertex[0] - cartesianCenter[0], 2) +\n      Math.pow(extentVertex[1] - cartesianCenter[1], 2) +\n      Math.pow(extentVertex[2] - cartesianCenter[2], 2)\n  );\n  return Math.log2(WGS84_RADIUS_Z / (extentSize + cartorgraphicCenter[2]));\n}\n\n/**\n * Calculate initial zoom for the tileset from 2D `extent` defined in\n * the tileset metadata\n * @param extent - 2D extent of the tileset. It is array of 4 elements [xmin, ymin, xmax, ymax]\n * @param extent[0] - minimal longitude in decimal degrees\n * @param extent[1] - minimal latitude in decimal degrees\n * @param extent[2] - maximal longitude in decimal degrees\n * @param extent[3] - maximal latitude in decimal degrees\n * @param cartorgraphicCenter - tileset center in cartographic coordinate system\n * @param cartesianCenter - tileset center in cartesian coordinate system\n * @returns - initial zoom for the tileset\n */\nexport function getZoomFromExtent(\n  extent: [number, number, number, number],\n  cartorgraphicCenter: Vector3,\n  cartesianCenter: Vector3\n) {\n  const [xmin, ymin, xmax, ymax] = extent;\n  return getZoomFromFullExtent(\n    {xmin, xmax, ymin, ymax, zmin: 0, zmax: 0},\n    cartorgraphicCenter,\n    cartesianCenter\n  );\n}\n\nfunction getObbSize(halfAxes) {\n  halfAxes.getColumn(0, scratchVector);\n  const axeY = halfAxes.getColumn(1);\n  const axeZ = halfAxes.getColumn(2);\n  const farthestVertex = scratchVector.add(axeY).add(axeZ);\n  const size = farthestVertex.len();\n  return size;\n}\n", "// loaders.gl, MIT license\n\nexport type TileContentState =\n  | 'unloaded' // Has never been requested\n  | 'loading' // Is waiting on a pending request\n  | 'processing' // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n  | 'ready' // Ready to render.\n  | 'expired' // Is expired and will be unloaded once new content is loaded.\n  | 'failed'; // Request failed.\n\nexport const TILE_CONTENT_STATE = {\n  UNLOADED: 0, // Has never been requested\n  LOADING: 1, // Is waiting on a pending request\n  PROCESSING: 2, // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n  READY: 3, // Ready to render.\n  EXPIRED: 4, // Is expired and will be unloaded once new content is loaded.\n  FAILED: 5 // Request failed.\n};\n\nexport type TileRefinement = 'add' | 'replace';\n\nexport const TILE_REFINEMENT = {\n  ADD: 1, // Render tile and, if screen space error exceeded, also refine to its children.\n  REPLACE: 2 // Render tile or, if screen space error exceeded, refine to its descendants instead.\n};\n\nexport type TileType = 'empty' | 'scenegraph' | 'pointcloud' | 'mesh';\n\nexport const TILE_TYPE = {\n  EMPTY: 'empty',\n  SCENEGRAPH: 'scenegraph',\n  POINTCLOUD: 'pointcloud',\n  MESH: 'mesh'\n};\n\nexport type TilesetType = 'I3S' | 'TILES3D';\n\nexport const TILESET_TYPE = {\n  I3S: 'I3S',\n  TILES3D: 'TILES3D'\n};\n\nexport type LODMetricType = 'geometricError' | 'maxScreenThreshold';\n\nexport const LOD_METRIC_TYPE = {\n  GEOMETRIC_ERROR: 'geometricError',\n  MAX_SCREEN_THRESHOLD: 'maxScreenThreshold'\n};\n\n// Cesium 3D Tiles Specific\nexport type Tile3DOptimizationHint = 'NOT_COMPUTED' | 'USE_OPTIMIZATION' | 'SKIP_OPTIMIZATION';\n\nexport const TILE3D_OPTIMIZATION_HINT = {\n  NOT_COMPUTED: -1,\n  USE_OPTIMIZATION: 1,\n  SKIP_OPTIMIZATION: 0\n};\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Quaternion, Vector3, Matrix3, Matrix4, degrees} from '@math.gl/core';\nimport {BoundingSphere, OrientedBoundingBox} from '@math.gl/culling';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {assert} from '@loaders.gl/loader-utils';\n\n// const scratchProjectedBoundingSphere = new BoundingSphere();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n// const scratchMatrix = new Matrix3();\nconst scratchPoint = new Vector3();\nconst scratchScale = new Vector3();\nconst scratchNorthWest = new Vector3();\nconst scratchSouthEast = new Vector3();\n// const scratchRectangle = new Rectangle();\n// const scratchOrientedBoundingBox = new OrientedBoundingBox();\n// const scratchTransform = new Matrix4();\n\n/**\n * Create a bounding volume from the tile's bounding volume header.\n * @param {Object} boundingVolumeHeader The tile's bounding volume header.\n * @param {Matrix4} transform The transform to apply to the bounding volume.\n * @param [result] The object onto which to store the result.\n * @returns The modified result parameter or a new TileBoundingVolume instance if none was provided.\n */\nexport function createBoundingVolume(boundingVolumeHeader, transform, result) {\n  assert(boundingVolumeHeader, '3D Tile: boundingVolume must be defined');\n\n  // boundingVolume schema:\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/schema/boundingVolume.schema.json\n  if (boundingVolumeHeader.box) {\n    return createBox(boundingVolumeHeader.box, transform, result);\n  }\n  if (boundingVolumeHeader.region) {\n    // [west, south, east, north, minimum height, maximum height]\n    // Latitudes and longitudes are in the WGS 84 datum as defined in EPSG 4979 and are in radians.\n    // Heights are in meters above (or below) the WGS 84 ellipsoid.\n    const [west, south, east, north, minHeight, maxHeight] = boundingVolumeHeader.region;\n\n    const northWest = Ellipsoid.WGS84.cartographicToCartesian(\n      [degrees(west), degrees(north), minHeight],\n      scratchNorthWest\n    );\n    const southEast = Ellipsoid.WGS84.cartographicToCartesian(\n      [degrees(east), degrees(south), maxHeight],\n      scratchSouthEast\n    );\n    const centerInCartesian = new Vector3().addVectors(northWest, southEast).multiplyScalar(0.5);\n    const radius = new Vector3().subVectors(northWest, southEast).len() / 2.0;\n\n    // TODO improve region boundingVolume\n    // for now, create a sphere as the boundingVolume instead of box\n    return createSphere(\n      [centerInCartesian[0], centerInCartesian[1], centerInCartesian[2], radius],\n      new Matrix4()\n    );\n  }\n\n  if (boundingVolumeHeader.sphere) {\n    return createSphere(boundingVolumeHeader.sphere, transform, result);\n  }\n\n  throw new Error('3D Tile: boundingVolume must contain a sphere, region, or box');\n}\n\n/** [min, max] each in [longitude, latitude, altitude] */\nexport type CartographicBounds = [min: number[], max: number[]];\n\n/**\n * Calculate the cartographic bounding box the tile's bounding volume.\n * @param {Object} boundingVolumeHeader The tile's bounding volume header.\n * @param {BoundingVolume} boundingVolume The bounding volume.\n * @returns {CartographicBounds}\n */\nexport function getCartographicBounds(\n  boundingVolumeHeader,\n  boundingVolume: OrientedBoundingBox | BoundingSphere\n): CartographicBounds {\n  // boundingVolume schema:\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/schema/boundingVolume.schema.json\n  if (boundingVolumeHeader.box) {\n    return orientedBoundingBoxToCartographicBounds(boundingVolume as OrientedBoundingBox);\n  }\n  if (boundingVolumeHeader.region) {\n    // [west, south, east, north, minimum height, maximum height]\n    // Latitudes and longitudes are in the WGS 84 datum as defined in EPSG 4979 and are in radians.\n    // Heights are in meters above (or below) the WGS 84 ellipsoid.\n    const [west, south, east, north, minHeight, maxHeight] = boundingVolumeHeader.region;\n\n    return [\n      [degrees(west), degrees(south), minHeight],\n      [degrees(east), degrees(north), maxHeight]\n    ];\n  }\n\n  if (boundingVolumeHeader.sphere) {\n    return boundingSphereToCartographicBounds(boundingVolume as BoundingSphere);\n  }\n\n  throw new Error('Unkown boundingVolume type');\n}\n\nfunction createBox(box, transform, result) {\n  // https://math.gl/modules/culling/docs/api-reference/oriented-bounding-box\n  // 1. A half-axes based representation.\n  // box: An array of 12 numbers that define an oriented bounding box.\n  // The first three elements define the x, y, and z values for the center of the box.\n  // The next three elements (with indices 3, 4, and 5) define the x axis direction and half-length.\n  // The next three elements (indices 6, 7, and 8) define the y axis direction and half-length.\n  // The last three elements (indices 9, 10, and 11) define the z axis direction and half-length.\n  // 2. A half-size-quaternion based representation.\n  // box: An array of 10 numbers that define an oriented bounding box.\n  // The first three elements define the x, y, and z values for the center of the box in a right-handed 3-axis (x, y, z) Cartesian coordinate system where the z-axis is up.\n  // The next three elements (with indices 3, 4, and 5) define the halfSize.\n  // The last four elements (indices 6, 7, 8 and 10) define the quaternion.\n  const center = new Vector3(box[0], box[1], box[2]);\n  transform.transform(center, center);\n  let origin: number[] = [];\n  if (box.length === 10) {\n    const halfSize = box.slice(3, 6);\n    const quaternion = new Quaternion();\n    quaternion.fromArray(box, 6);\n    const x = new Vector3([1, 0, 0]);\n    const y = new Vector3([0, 1, 0]);\n    const z = new Vector3([0, 0, 1]);\n    x.transformByQuaternion(quaternion);\n    x.scale(halfSize[0]);\n    y.transformByQuaternion(quaternion);\n    y.scale(halfSize[1]);\n    z.transformByQuaternion(quaternion);\n    z.scale(halfSize[2]);\n    origin = [...x.toArray(), ...y.toArray(), ...z.toArray()];\n  } else {\n    origin = [...box.slice(3, 6), ...box.slice(6, 9), ...box.slice(9, 12)];\n  }\n  const xAxis = transform.transformAsVector(origin.slice(0, 3));\n  const yAxis = transform.transformAsVector(origin.slice(3, 6));\n  const zAxis = transform.transformAsVector(origin.slice(6, 9));\n  const halfAxes = new Matrix3([\n    xAxis[0],\n    xAxis[1],\n    xAxis[2],\n    yAxis[0],\n    yAxis[1],\n    yAxis[2],\n    zAxis[0],\n    zAxis[1],\n    zAxis[2]\n  ]);\n\n  if (defined(result)) {\n    result.center = center;\n    result.halfAxes = halfAxes;\n    return result;\n  }\n\n  return new OrientedBoundingBox(center, halfAxes);\n}\n\n/*\nfunction createBoxFromTransformedRegion(region, transform, initialTransform, result) {\n  const rectangle = Rectangle.unpack(region, 0, scratchRectangle);\n  const minimumHeight = region[4];\n  const maximumHeight = region[5];\n\n  const orientedBoundingBox = OrientedBoundingBox.fromRectangle(\n    rectangle,\n    minimumHeight,\n    maximumHeight,\n    Ellipsoid.WGS84,\n    scratchOrientedBoundingBox\n  );\n  const center = orientedBoundingBox.center;\n  const halfAxes = orientedBoundingBox.halfAxes;\n\n  // A region bounding volume is not transformed by the transform in the tileset JSON,\n  // but may be transformed by additional transforms applied in Cesium.\n  // This is why the transform is calculated as the difference between the initial transform and the current transform.\n  transform = Matrix4.multiplyTransformation(\n    transform,\n    Matrix4.inverseTransformation(initialTransform, scratchTransform),\n    scratchTransform\n  );\n  center = Matrix4.multiplyByPoint(transform, center, center);\n  const rotationScale = Matrix4.getRotation(transform, scratchMatrix);\n  halfAxes = Matrix3.multiply(rotationScale, halfAxes, halfAxes);\n\n  if (defined(result) && result instanceof TileOrientedBoundingBox) {\n    result.update(center, halfAxes);\n    return result;\n  }\n\n  return new TileOrientedBoundingBox(center, halfAxes);\n}\n\nfunction createRegion(region, transform, initialTransform, result) {\n  if (!Matrix4.equalsEpsilon(transform, initialTransform, CesiumMath.EPSILON8)) {\n    return createBoxFromTransformedRegion(region, transform, initialTransform, result);\n  }\n\n  if (defined(result)) {\n    return result;\n  }\n\n  const rectangleRegion = Rectangle.unpack(region, 0, scratchRectangle);\n\n  return new TileBoundingRegion({\n    rectangle: rectangleRegion,\n    minimumHeight: region[4],\n    maximumHeight: region[5]\n  });\n}\n*/\n\nfunction createSphere(sphere, transform, result?) {\n  // Find the transformed center\n  const center = new Vector3(sphere[0], sphere[1], sphere[2]);\n  transform.transform(center, center);\n  const scale = transform.getScale(scratchScale);\n\n  const uniformScale = Math.max(Math.max(scale[0], scale[1]), scale[2]);\n  const radius = sphere[3] * uniformScale;\n\n  if (defined(result)) {\n    result.center = center;\n    result.radius = radius;\n    return result;\n  }\n\n  return new BoundingSphere(center, radius);\n}\n\n/**\n * Convert a bounding volume defined by OrientedBoundingBox to cartographic bounds\n * @returns {CartographicBounds}\n */\nfunction orientedBoundingBoxToCartographicBounds(\n  boundingVolume: OrientedBoundingBox\n): CartographicBounds {\n  const result = emptyCartographicBounds();\n\n  const {halfAxes} = boundingVolume as OrientedBoundingBox;\n  const xAxis = new Vector3(halfAxes.getColumn(0));\n  const yAxis = new Vector3(halfAxes.getColumn(1));\n  const zAxis = new Vector3(halfAxes.getColumn(2));\n\n  // Test all 8 corners of the box\n  for (let x = 0; x < 2; x++) {\n    for (let y = 0; y < 2; y++) {\n      for (let z = 0; z < 2; z++) {\n        scratchPoint.copy(boundingVolume.center);\n        scratchPoint.add(xAxis);\n        scratchPoint.add(yAxis);\n        scratchPoint.add(zAxis);\n\n        addToCartographicBounds(result, scratchPoint);\n        zAxis.negate();\n      }\n      yAxis.negate();\n    }\n    xAxis.negate();\n  }\n  return result;\n}\n\n/**\n * Convert a bounding volume defined by BoundingSphere to cartographic bounds\n * @returns {CartographicBounds}\n */\nfunction boundingSphereToCartographicBounds(boundingVolume: BoundingSphere): CartographicBounds {\n  const result = emptyCartographicBounds();\n\n  const {center, radius} = boundingVolume as BoundingSphere;\n  const point = Ellipsoid.WGS84.scaleToGeodeticSurface(center, scratchPoint);\n\n  let zAxis: Vector3;\n  if (point) {\n    zAxis = Ellipsoid.WGS84.geodeticSurfaceNormal(point) as Vector3;\n  } else {\n    zAxis = new Vector3(0, 0, 1);\n  }\n  let xAxis = new Vector3(zAxis[2], -zAxis[1], 0);\n  if (xAxis.len() > 0) {\n    xAxis.normalize();\n  } else {\n    xAxis = new Vector3(0, 1, 0);\n  }\n  const yAxis = xAxis.clone().cross(zAxis);\n\n  // Test 6 end points of the 3 axes\n  for (const axis of [xAxis, yAxis, zAxis]) {\n    scratchScale.copy(axis).scale(radius);\n    for (let dir = 0; dir < 2; dir++) {\n      scratchPoint.copy(center);\n      scratchPoint.add(scratchScale);\n      addToCartographicBounds(result, scratchPoint);\n      // Flip the axis\n      scratchScale.negate();\n    }\n  }\n  return result;\n}\n\n/**\n * Create a new cartographic bounds that contains no points\n * @returns {CartographicBounds}\n */\nfunction emptyCartographicBounds(): CartographicBounds {\n  return [\n    [Infinity, Infinity, Infinity],\n    [-Infinity, -Infinity, -Infinity]\n  ];\n}\n\n/**\n * Add a point to the target cartographic bounds\n * @param {CartographicBounds} target\n * @param {Vector3} cartesian coordinates of the point to add\n */\nfunction addToCartographicBounds(target: CartographicBounds, cartesian: Readonly<Vector3>) {\n  Ellipsoid.WGS84.cartesianToCartographic(cartesian, scratchPoint);\n  target[0][0] = Math.min(target[0][0], scratchPoint[0]);\n  target[0][1] = Math.min(target[0][1], scratchPoint[1]);\n  target[0][2] = Math.min(target[0][2], scratchPoint[2]);\n\n  target[1][0] = Math.max(target[1][0], scratchPoint[0]);\n  target[1][1] = Math.max(target[1][1], scratchPoint[1]);\n  target[1][2] = Math.max(target[1][2], scratchPoint[2]);\n}\n", "// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - Dynamic screen space error provides an optimization when looking at\n// tilesets from above\n\n/* eslint-disable */\n// @ts-nocheck\nimport {Matrix4, Vector3, clamp} from '@math.gl/core';\n\nconst scratchPositionNormal = new Vector3();\nconst scratchCartographic = new Vector3();\nconst scratchMatrix = new Matrix4();\nconst scratchCenter = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchDirection = new Vector3();\n\n// eslint-disable-next-line max-statements, complexity\nexport function calculateDynamicScreenSpaceError(root, {camera, mapProjection}, options = {}) {\n  const {dynamicScreenSpaceErrorHeightFalloff = 0.25, dynamicScreenSpaceErrorDensity = 0.00278} =\n    options;\n\n  let up;\n  let direction;\n  let height;\n  let minimumHeight;\n  let maximumHeight;\n\n  const tileBoundingVolume = root.contentBoundingVolume;\n\n  if (tileBoundingVolume instanceof TileBoundingRegion) {\n    up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n    direction = camera.directionWC;\n    height = camera.positionCartographic.height;\n    minimumHeight = tileBoundingVolume.minimumHeight;\n    maximumHeight = tileBoundingVolume.maximumHeight;\n  } else {\n    // Transform camera position and direction into the local coordinate system of the tileset\n    const transformLocal = Matrix4.inverseTransformation(root.computedTransform, scratchMatrix);\n    const ellipsoid = mapProjection.ellipsoid;\n    const boundingVolume = tileBoundingVolume.boundingVolume;\n    const centerLocal = Matrix4.multiplyByPoint(\n      transformLocal,\n      boundingVolume.center,\n      scratchCenter\n    );\n    if (Cartesian3.magnitude(centerLocal) > ellipsoid.minimumRadius) {\n      // The tileset is defined in WGS84. Approximate the minimum and maximum height.\n      const centerCartographic = Cartographic.fromCartesian(\n        centerLocal,\n        ellipsoid,\n        scratchCartographic\n      );\n      up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n      direction = camera.directionWC;\n      height = camera.positionCartographic.height;\n      minimumHeight = 0.0;\n      maximumHeight = centerCartographic.height * 2.0;\n    } else {\n      // The tileset is defined in local coordinates (z-up)\n      const positionLocal = Matrix4.multiplyByPoint(\n        transformLocal,\n        camera.positionWC,\n        scratchPosition\n      );\n      up = Cartesian3.UNIT_Z;\n      direction = Matrix4.multiplyByPointAsVector(\n        transformLocal,\n        camera.directionWC,\n        scratchDirection\n      );\n      direction = Cartesian3.normalize(direction, direction);\n      height = positionLocal.z;\n      if (tileBoundingVolume instanceof TileOrientedBoundingBox) {\n        // Assuming z-up, the last component stores the half-height of the box\n        const boxHeight = root._header.boundingVolume.box[11];\n        minimumHeight = centerLocal.z - boxHeight;\n        maximumHeight = centerLocal.z + boxHeight;\n      } else if (tileBoundingVolume instanceof TileBoundingSphere) {\n        const radius = boundingVolume.radius;\n        minimumHeight = centerLocal.z - radius;\n        maximumHeight = centerLocal.z + radius;\n      }\n    }\n  }\n\n  // The range where the density starts to lessen. Start at the quarter height of the tileset.\n  const heightFalloff = dynamicScreenSpaceErrorHeightFalloff;\n  const heightClose = minimumHeight + (maximumHeight - minimumHeight) * heightFalloff;\n  const heightFar = maximumHeight;\n\n  const t = clamp((height - heightClose) / (heightFar - heightClose), 0.0, 1.0);\n\n  // Increase density as the camera tilts towards the horizon\n  const dot = Math.abs(Cartesian3.dot(direction, up));\n\n  let horizonFactor = 1.0 - dot;\n\n  // Weaken the horizon factor as the camera height increases, implying the camera is further away from the tileset.\n  // The goal is to increase density for the \"street view\", not when viewing the tileset from a distance.\n  horizonFactor = horizonFactor * (1.0 - t);\n\n  return dynamicScreenSpaceErrorDensity * horizonFactor;\n}\n\nexport function fog(distanceToCamera, density) {\n  const scalar = distanceToCamera * density;\n  return 1.0 - Math.exp(-(scalar * scalar));\n}\n\nexport function getDynamicScreenSpaceError(tileset, distanceToCamera) {\n  if (tileset.dynamicScreenSpaceError && tileset.dynamicScreenSpaceErrorComputedDensity) {\n    const density = tileset.dynamicScreenSpaceErrorComputedDensity;\n    const factor = tileset.dynamicScreenSpaceErrorFactor;\n    // TODO: Refined screen space error that minimizes tiles in non-first-person\n    const dynamicError = fog(distanceToCamera, density) * factor;\n    return dynamicError;\n  }\n\n  return 0;\n}\n\nexport function getTiles3DScreenSpaceError(tile, frameState, useParentLodMetric) {\n  const tileset = tile.tileset;\n  const parentLodMetricValue = (tile.parent && tile.parent.lodMetricValue) || tile.lodMetricValue;\n  const lodMetricValue = useParentLodMetric ? parentLodMetricValue : tile.lodMetricValue;\n\n  // Leaf tiles do not have any error so save the computation\n  if (lodMetricValue === 0.0) {\n    return 0.0;\n  }\n\n  // TODO: Orthographic Frustum needs special treatment?\n  // this._getOrthograhicScreenSpaceError();\n\n  // Avoid divide by zero when viewer is inside the tile\n  const distance = Math.max(tile._distanceToCamera, 1e-7);\n  const {height, sseDenominator} = frameState;\n  const {viewDistanceScale} = tileset.options;\n  let error = (lodMetricValue * height * (viewDistanceScale || 1.0)) / (distance * sseDenominator);\n\n  error -= getDynamicScreenSpaceError(tileset, distance);\n\n  return error;\n}\n", "// loaders.gl, MIT license\n\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {Tile3D} from '../tile-3d';\nimport {FrameState} from './frame-state';\n\nconst cameraPositionCartesian = new Vector3();\nconst toEye = new Vector3();\nconst cameraPositionEnu = new Vector3();\nconst extraVertexEnu = new Vector3();\nconst projectedOriginVector = new Vector3();\nconst enuToCartesianMatrix = new Matrix4();\nconst cartesianToEnuMatrix = new Matrix4();\n\n/**\n * For the maxScreenThreshold error metric, maxError means that you should replace the node with it's children\n   as soon as the nodes bounding sphere has a screen radius larger than maxError pixels.\n   In this sense a value of 0 means you should always load it's children,\n   or if it's a leaf node, you should always display it.\n * @param tile \n * @param frameState \n * @returns \n */\nexport function getLodStatus(tile: Tile3D, frameState: FrameState): 'DIG' | 'OUT' | 'DRAW' {\n  if (tile.lodMetricValue === 0 || isNaN(tile.lodMetricValue)) {\n    return 'DIG';\n  }\n  const screenSize = 2 * getProjectedRadius(tile, frameState);\n  if (screenSize < 2) {\n    return 'OUT';\n  }\n  if (!tile.header.children || screenSize <= tile.lodMetricValue) {\n    return 'DRAW';\n  } else if (tile.header.children) {\n    return 'DIG';\n  }\n  return 'OUT';\n}\n\n/**\n * Calculate size of MBS radius projected on the screen plane\n * @param tile\n * @param frameState\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport function getProjectedRadius(tile: Tile3D, frameState: FrameState): number {\n  const {topDownViewport: viewport} = frameState;\n  const mbsLat = tile.header.mbs[1];\n  const mbsLon = tile.header.mbs[0];\n  const mbsZ = tile.header.mbs[2];\n  const mbsR = tile.header.mbs[3];\n  const mbsCenterCartesian = [...tile.boundingVolume.center];\n  const cameraPositionCartographic = viewport.unprojectPosition(viewport.cameraPosition);\n  Ellipsoid.WGS84.cartographicToCartesian(cameraPositionCartographic, cameraPositionCartesian);\n\n  // ---------------------------\n  // Calculate mbs border vertex\n  // ---------------------------\n  toEye.copy(cameraPositionCartesian).subtract(mbsCenterCartesian).normalize();\n  // Add extra vector to form plane\n  Ellipsoid.WGS84.eastNorthUpToFixedFrame(mbsCenterCartesian, enuToCartesianMatrix);\n  cartesianToEnuMatrix.copy(enuToCartesianMatrix).invert();\n  cameraPositionEnu.copy(cameraPositionCartesian).transform(cartesianToEnuMatrix);\n  // Mean Proportionals in Right Triangles - Altitude rule\n  // https://mathbitsnotebook.com/Geometry/RightTriangles/RTmeanRight.html\n  const projection = Math.sqrt(\n    cameraPositionEnu[0] * cameraPositionEnu[0] + cameraPositionEnu[1] * cameraPositionEnu[1]\n  );\n  const extraZ = (projection * projection) / cameraPositionEnu[2];\n  extraVertexEnu.copy([cameraPositionEnu[0], cameraPositionEnu[1], extraZ]);\n  const extraVertexCartesian = extraVertexEnu.transform(enuToCartesianMatrix);\n  const extraVectorCartesian = extraVertexCartesian.subtract(mbsCenterCartesian).normalize();\n  // We need radius vector orthogonal to toEye vector\n  const radiusVector = toEye.cross(extraVectorCartesian).normalize().scale(mbsR);\n  const sphereMbsBorderVertexCartesian = radiusVector.add(mbsCenterCartesian);\n  const sphereMbsBorderVertexCartographic = Ellipsoid.WGS84.cartesianToCartographic(\n    sphereMbsBorderVertexCartesian\n  );\n  // ---------------------------\n\n  // Project center vertex and border vertex and calculate projected radius of MBS\n  const projectedOrigin = viewport.project([mbsLon, mbsLat, mbsZ]);\n  const projectedMbsBorderVertex = viewport.project(\n    sphereMbsBorderVertexCartographic as [number, number, number]\n  );\n  const projectedRadius = projectedOriginVector\n    .copy(projectedOrigin)\n    .subtract(projectedMbsBorderVertex)\n    .magnitude();\n  return projectedRadius;\n}\n", "import type {Tileset3D} from '../tileset-3d';\n\nexport function get3dTilesOptions(tileset: Tileset3D): {assetGltfUpAxis: 'X' | 'Y' | 'Z'} {\n  return {\n    assetGltfUpAxis: (tileset.asset && tileset.asset.gltfUpAxis) || 'Y'\n  };\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport class ManagedArray {\n  _map = new Map();\n  _array: any[];\n  _length: number;\n\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n", "// loaders.gl, MIT license\n\nimport type {Tile3D} from './tile-3d';\nimport {ManagedArray} from '../utils/managed-array';\nimport {TILE_REFINEMENT} from '../constants';\nimport {FrameState} from './helpers/frame-state';\n\nexport type TilesetTraverserProps = {\n  loadSiblings?: boolean;\n  skipLevelOfDetail?: boolean;\n  updateTransforms?: boolean;\n  maximumScreenSpaceError?: number;\n  onTraversalEnd?: (frameState) => any;\n  viewportTraversersMap?: Record<string, any>;\n  basePath?: string;\n};\n\nexport const DEFAULT_PROPS: Required<TilesetTraverserProps> = {\n  loadSiblings: false,\n  skipLevelOfDetail: false,\n  maximumScreenSpaceError: 2,\n  updateTransforms: true,\n  onTraversalEnd: () => {},\n  viewportTraversersMap: {},\n  basePath: ''\n};\n\nexport class TilesetTraverser {\n  options: Required<TilesetTraverserProps>;\n\n  // fulfill in traverse call\n  root: any = null;\n\n  // tiles should be rendered\n  selectedTiles: Record<string, Tile3D> = {};\n  // tiles should be loaded from server\n  requestedTiles: Record<string, Tile3D> = {};\n  // tiles does not have render content\n  emptyTiles: Record<string, Tile3D> = {};\n\n  protected lastUpdate: number = new Date().getTime();\n  protected readonly updateDebounceTime = 1000;\n  /** temporary storage to hold the traversed tiles during a traversal */\n  protected _traversalStack = new ManagedArray();\n  protected _emptyTraversalStack = new ManagedArray();\n  /** set in every traverse cycle */\n  protected _frameNumber: number | null = null;\n\n  // RESULT\n  protected traversalFinished(frameState: FrameState): boolean {\n    return true;\n  }\n\n  // TODO nested props\n  constructor(options: TilesetTraverserProps) {\n    this.options = {...DEFAULT_PROPS, ...options};\n  }\n\n  // tiles should be visible\n  traverse(root, frameState, options) {\n    this.root = root; // for root screen space error\n    this.options = {...this.options, ...options};\n\n    // reset result\n    this.reset();\n\n    // update tile (visibility and expiration)\n    this.updateTile(root, frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.executeTraversal(root, frameState);\n  }\n\n  reset() {\n    this.requestedTiles = {};\n    this.selectedTiles = {};\n    this.emptyTiles = {};\n    this._traversalStack.reset();\n    this._emptyTraversalStack.reset();\n  }\n\n  /**\n   * Execute traverse\n   * Depth-first traversal that traverses all visible tiles and marks tiles for selection.\n   * If skipLevelOfDetail is off then a tile does not refine until all children are loaded.\n   * This is the traditional replacement refinement approach and is called the base traversal.\n   * Tiles that have a greater screen space error than the base screen space error are part of the base traversal,\n   * all other tiles are part of the skip traversal. The skip traversal allows for skipping levels of the tree\n   * and rendering children and parent tiles simultaneously.\n   */\n  /* eslint-disable-next-line complexity, max-statements */\n  executeTraversal(root, frameState: FrameState): void {\n    // stack to store traversed tiles, only visible tiles should be added to stack\n    // visible: visible in the current view frustum\n    const stack = this._traversalStack;\n    root._selectionDepth = 1;\n\n    stack.push(root);\n    while (stack.length > 0) {\n      // 1. pop tile\n      const tile = stack.pop();\n\n      // 2. check if tile needs to be refine, needs refine if a tile's LoD is not sufficient and tile has available children (available content)\n      let shouldRefine = false;\n      if (this.canTraverse(tile, frameState)) {\n        this.updateChildTiles(tile, frameState);\n        shouldRefine = this.updateAndPushChildren(\n          tile,\n          frameState,\n          stack,\n          tile.hasRenderContent ? tile._selectionDepth + 1 : tile._selectionDepth\n        );\n      }\n\n      // 3. decide if should render (select) this tile\n      //   - tile does not have render content\n      //   - tile has render content and tile is `add` type (pointcloud)\n      //   - tile has render content and tile is `replace` type (photogrammetry) and can't refine any further\n      const parent = tile.parent;\n      const parentRefines = Boolean(!parent || parent._shouldRefine);\n      const stoppedRefining = !shouldRefine;\n\n      if (!tile.hasRenderContent) {\n        this.emptyTiles[tile.id] = tile;\n        this.loadTile(tile, frameState);\n        if (stoppedRefining) {\n          this.selectTile(tile, frameState);\n        }\n        // additive tiles\n      } else if (tile.refine === TILE_REFINEMENT.ADD) {\n        // Additive tiles are always loaded and selected\n        this.loadTile(tile, frameState);\n        this.selectTile(tile, frameState);\n\n        // replace tiles\n      } else if (tile.refine === TILE_REFINEMENT.REPLACE) {\n        // Always load tiles in the base traversal\n        // Select tiles that can't refine further\n        this.loadTile(tile, frameState);\n        if (stoppedRefining) {\n          this.selectTile(tile, frameState);\n        }\n      }\n\n      // 3. update cache, most recent touched tiles have higher priority to be fetched from server\n      this.touchTile(tile, frameState);\n\n      // 4. update tile refine prop and parent refinement status to trickle down to the descendants\n      tile._shouldRefine = shouldRefine && parentRefines;\n    }\n\n    const newTime = new Date().getTime();\n    if (this.traversalFinished(frameState) || newTime - this.lastUpdate > this.updateDebounceTime) {\n      this.lastUpdate = newTime;\n      this.options.onTraversalEnd(frameState);\n    }\n  }\n\n  updateChildTiles(tile: Tile3D, frameState: FrameState): void {\n    const children = tile.children;\n    for (const child of children) {\n      this.updateTile(child, frameState);\n    }\n  }\n\n  /* eslint-disable complexity, max-statements */\n  updateAndPushChildren(tile: Tile3D, frameState: FrameState, stack, depth): boolean {\n    const {loadSiblings, skipLevelOfDetail} = this.options;\n\n    const children = tile.children;\n\n    // sort children tiles\n    children.sort(this.compareDistanceToCamera.bind(this));\n\n    // For traditional replacement refinement only refine if all children are loaded.\n    // Empty tiles are exempt since it looks better if children stream in as they are loaded to fill the empty space.\n    const checkRefines =\n      tile.refine === TILE_REFINEMENT.REPLACE && tile.hasRenderContent && !skipLevelOfDetail;\n\n    let hasVisibleChild = false;\n    let refines = true;\n\n    for (const child of children) {\n      child._selectionDepth = depth;\n      if (child.isVisibleAndInRequestVolume) {\n        if (stack.find(child)) {\n          stack.delete(child);\n        }\n        stack.push(child);\n        hasVisibleChild = true;\n      } else if (checkRefines || loadSiblings) {\n        // Keep non-visible children loaded since they are still needed before the parent can refine.\n        // Or loadSiblings is true so always load tiles regardless of visibility.\n        this.loadTile(child, frameState);\n        this.touchTile(child, frameState);\n      }\n\n      if (checkRefines) {\n        let childRefines;\n        if (!child._inRequestVolume) {\n          childRefines = false;\n        } else if (!child.hasRenderContent) {\n          childRefines = this.executeEmptyTraversal(child, frameState);\n        } else {\n          childRefines = child.contentAvailable;\n        }\n        refines = refines && childRefines;\n\n        if (!refines) {\n          return false;\n        }\n      }\n    }\n\n    if (!hasVisibleChild) {\n      refines = false;\n    }\n    return refines;\n  }\n  /* eslint-enable complexity, max-statements */\n\n  updateTile(tile: Tile3D, frameState: FrameState): void {\n    this.updateTileVisibility(tile, frameState);\n  }\n\n  // tile to render in the browser\n  selectTile(tile: Tile3D, frameState: FrameState): void {\n    if (this.shouldSelectTile(tile)) {\n      // The tile can be selected right away and does not require traverseAndSelect\n      tile._selectedFrame = frameState.frameNumber;\n      this.selectedTiles[tile.id] = tile;\n    }\n  }\n\n  // tile to load from server\n  loadTile(tile: Tile3D, frameState: FrameState): void {\n    if (this.shouldLoadTile(tile)) {\n      tile._requestedFrame = frameState.frameNumber;\n      tile._priority = tile._getPriority();\n      this.requestedTiles[tile.id] = tile;\n    }\n  }\n\n  // cache tile\n  touchTile(tile: Tile3D, frameState: FrameState): void {\n    tile.tileset._cache.touch(tile);\n    tile._touchedFrame = frameState.frameNumber;\n  }\n\n  // tile should be visible\n  // tile should have children\n  // tile LoD (level of detail) is not sufficient under current viewport\n  canTraverse(\n    tile: Tile3D,\n    frameState: FrameState,\n    useParentMetric: boolean = false,\n    ignoreVisibility: boolean = false\n  ): boolean {\n    if (!tile.hasChildren) {\n      return false;\n    }\n\n    // cesium specific\n    if (tile.hasTilesetContent) {\n      // Traverse external this to visit its root tile\n      // Don't traverse if the subtree is expired because it will be destroyed\n      return !tile.contentExpired;\n    }\n\n    if (!ignoreVisibility && !tile.isVisibleAndInRequestVolume) {\n      return false;\n    }\n\n    return this.shouldRefine(tile, frameState, useParentMetric);\n  }\n\n  shouldLoadTile(tile: Tile3D): boolean {\n    // if request tile is in current frame\n    // and has unexpired render content\n    return tile.hasUnloadedContent || tile.contentExpired;\n  }\n\n  shouldSelectTile(tile: Tile3D): boolean {\n    // if select tile is in current frame\n    // and content available\n    return tile.contentAvailable && !this.options.skipLevelOfDetail;\n  }\n\n  /** Decide if tile LoD (level of detail) is not sufficient under current viewport */\n  shouldRefine(tile: Tile3D, frameState: FrameState, useParentMetric: boolean = false): boolean {\n    let screenSpaceError = tile._screenSpaceError;\n    if (useParentMetric) {\n      screenSpaceError = tile.getScreenSpaceError(frameState, true);\n    }\n\n    return screenSpaceError > this.options.maximumScreenSpaceError;\n  }\n\n  updateTileVisibility(tile: Tile3D, frameState: FrameState): void {\n    const viewportIds: string[] = [];\n    if (this.options.viewportTraversersMap) {\n      for (const key in this.options.viewportTraversersMap) {\n        const value = this.options.viewportTraversersMap[key];\n        if (value === frameState.viewport.id) {\n          viewportIds.push(key);\n        }\n      }\n    } else {\n      viewportIds.push(frameState.viewport.id);\n    }\n    tile.updateVisibility(frameState, viewportIds);\n  }\n\n  // UTILITIES\n\n  compareDistanceToCamera(b: Tile3D, a: Tile3D): number {\n    return b._distanceToCamera - a._distanceToCamera;\n  }\n\n  anyChildrenVisible(tile: Tile3D, frameState: FrameState): boolean {\n    let anyVisible = false;\n    for (const child of tile.children) {\n      // @ts-expect-error\n      child.updateVisibility(frameState);\n      // @ts-expect-error\n      anyVisible = anyVisible || child.isVisibleAndInRequestVolume;\n    }\n    return anyVisible;\n  }\n\n  // Depth-first traversal that checks if all nearest descendants with content are loaded.\n  // Ignores visibility.\n  executeEmptyTraversal(root: Tile3D, frameState: FrameState): boolean {\n    let allDescendantsLoaded = true;\n    const stack = this._emptyTraversalStack;\n\n    stack.push(root);\n\n    while (stack.length > 0 && allDescendantsLoaded) {\n      const tile = stack.pop();\n\n      this.updateTile(tile, frameState);\n\n      if (!tile.isVisibleAndInRequestVolume) {\n        // Load tiles that aren't visible since they are still needed for the parent to refine\n        this.loadTile(tile, frameState);\n      }\n\n      this.touchTile(tile, frameState);\n\n      // Only traverse if the tile is empty - traversal stop at descendants with content\n      const traverse = !tile.hasRenderContent && this.canTraverse(tile, frameState, false, true);\n\n      if (traverse) {\n        const children = tile.children;\n        for (const child of children) {\n          // eslint-disable-next-line max-depth\n          if (stack.find(child)) {\n            stack.delete(child);\n          }\n          stack.push(child);\n        }\n      } else if (!tile.contentAvailable) {\n        allDescendantsLoaded = false;\n      }\n    }\n\n    return allDescendantsLoaded;\n  }\n}\n", "// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\n\n// Note: circular dependency\nimport type {Tileset3D} from './tileset-3d';\nimport type {DoublyLinkedListNode} from '../utils/doubly-linked-list-node';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {\n  createBoundingVolume,\n  getCartographicBounds,\n  CartographicBounds\n} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getProjectedRadius} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport {TilesetTraverser} from './tileset-traverser';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent Tile3D instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type Tile3DProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: Tile3D;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: Tile3D;\n  /* Specifies the type of refine that is used when traversing this tile for rendering. */\n  refine: number;\n  type: string;\n  contentUrl: string;\n  /** Different refinement algorithms used by I3S and 3D tiles */\n  lodMetricType: 'geometricError' | 'maxScreenThreshold' = 'geometricError';\n  /** The error, in meters, introduced if this tile is rendered and its children are not. */\n  lodMetricValue: number = 0;\n\n  /** @todo math.gl is not exporting BoundingVolume base type? */\n  boundingVolume: any = null;\n\n  /**\n   * The tile's content.  This represents the actual tile's payload,\n   * not the content's metadata in the tileset JSON file.\n   */\n  content: any = null;\n  contentState: number = TILE_CONTENT_STATE.UNLOADED;\n  gpuMemoryUsageInBytes: number = 0;\n\n  /** The tile's children - an array of Tile3D objects. */\n  children: Tile3D[] = [];\n  depth: number = 0;\n  viewportIds: any[] = [];\n  transform = new Matrix4();\n  extensions: any = null;\n  /** TODO Cesium 3d tiles specific */\n  implicitTiling?: any = null;\n\n  /** Container to store application specific data */\n  userData: Record<string, any> = {};\n\n  computedTransform: any;\n  hasEmptyContent: boolean = false;\n  hasTilesetContent: boolean = false;\n\n  traverser = new TilesetTraverser({});\n\n  /** Used by TilesetCache */\n  _cacheNode: DoublyLinkedListNode | null = null;\n\n  private _frameNumber: any = null;\n\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any = null;\n  private _expiredContent: any = null;\n\n  private _boundingBox?: CartographicBounds;\n\n  /** updated every frame for tree traversal and rendering optimizations: */\n  public _distanceToCamera: number = 0;\n  _screenSpaceError: number = 0;\n  private _visibilityPlaneMask: any;\n  private _visible: boolean | undefined = undefined;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4 = new Matrix4();\n\n  // Used by traverser, cannot be marked private\n  _priority: number = 0;\n  _selectedFrame: number = 0;\n  _requestedFrame: number = 0;\n  _selectionDepth: number = 0;\n  _touchedFrame: number = 0;\n  _centerZDepth: number = 0;\n  _shouldRefine: boolean = false;\n  _stackLength: number = 0;\n  _visitedFrame: number = 0;\n  _inRequestVolume: boolean = false;\n  _lodJudge: any = null; // TODO i3s specific, needs to remove\n\n  /**\n   * @constructs\n   * Create a Tile3D instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent Tile3D instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: Tile3D,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /**\n   * Distance from the tile's bounding volume center to the camera\n   */\n  get distanceToCamera(): number {\n    return this._distanceToCamera;\n  }\n\n  /**\n   * Screen space error for LOD selection\n   */\n  get screenSpaceError(): number {\n    return this._screenSpaceError;\n  }\n\n  /**\n   * Get bounding box in cartographic coordinates\n   * @returns [min, max] each in [longitude, latitude, altitude]\n   */\n  get boundingBox(): CartographicBounds {\n    if (!this._boundingBox) {\n      this._boundingBox = getCartographicBounds(this.header.boundingVolume, this.boundingVolume);\n    }\n    return this._boundingBox;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getProjectedRadius(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /**\n   * Make tile unselected than means it won't be shown\n   * but it can be still loaded in memory\n   */\n  unselect(): void {\n    this._selectedFrame = 0;\n  }\n\n  /**\n   * Memory usage of tile on GPU\n   */\n  _getGpuMemoryUsageInBytes(): number {\n    return this.content.gpuMemoryUsageInBytes || this.content.byteLength || 0;\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  // eslint-disable-next-line complexity\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          // @ts-expect-error\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    } else {\n      this.gpuMemoryUsageInBytes = this._getGpuMemoryUsageInBytes();\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          _tileOptions: {\n            attributeUrls: this.header.attributeUrls,\n            textureUrl: this.header.textureUrl,\n            textureFormat: this.header.textureFormat,\n            textureLoaderOptions: this.header.textureLoaderOptions,\n            materialDefinition: this.header.materialDefinition,\n            isDracoGeometry: this.header.isDracoGeometry,\n            mbs: this.header.mbs\n          },\n          _tilesetOptions: {\n            store: this.tileset.tileset.store,\n            attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n            fields: this.tileset.tileset.fields\n          },\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n", "// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT} from '../../constants';\nimport {TilesetTraverser} from '../tileset-traverser';\n\nexport class Tileset3DTraverser extends TilesetTraverser {\n  compareDistanceToCamera(a, b) {\n    // Sort by farthest child first since this is going on a stack\n    return b._distanceToCamera === 0 && a._distanceToCamera === 0\n      ? b._centerZDepth - a._centerZDepth\n      : b._distanceToCamera - a._distanceToCamera;\n  }\n\n  updateTileVisibility(tile, frameState) {\n    super.updateTileVisibility(tile, frameState);\n\n    //  Optimization - if none of the tile's children are visible then this tile isn't visible\n    if (!tile.isVisibleAndInRequestVolume) {\n      return;\n    }\n\n    const hasChildren = tile.children.length > 0;\n    if (tile.hasTilesetContent && hasChildren) {\n      // Use the root tile's visibility instead of this tile's visibility.\n      // The root tile may be culled by the children bounds optimization in which\n      // case this tile should also be culled.\n      const firstChild = tile.children[0];\n      this.updateTileVisibility(firstChild, frameState);\n      tile._visible = firstChild._visible;\n      return;\n    }\n\n    if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n      tile._visible = false;\n      return;\n    }\n\n    const replace = tile.refine === TILE_REFINEMENT.REPLACE;\n    const useOptimization =\n      tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n    if (replace && useOptimization && hasChildren) {\n      if (!this.anyChildrenVisible(tile, frameState)) {\n        tile._visible = false;\n        return;\n      }\n    }\n  }\n\n  meetsScreenSpaceErrorEarly(tile, frameState) {\n    const {parent} = tile;\n    if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n      return false;\n    }\n\n    // Use parent's geometric error with child's box to see if the tile already meet the SSE\n    return !this.shouldRefine(tile, frameState, true);\n  }\n}\n", "/**\n * Counter to register pending tile headers for the particular frameNumber\n * Until all tiles are loaded we won't call `onTraversalEnd` callback\n */\nexport class I3SPendingTilesRegister {\n  private frameNumberMap: Map<string, Map<number, number>> = new Map();\n\n  /**\n   * Register a new pending tile header for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   */\n  register(viewportId: string, frameNumber: number) {\n    const viewportMap = this.frameNumberMap.get(viewportId) || new Map();\n    const oldCount = viewportMap.get(frameNumber) || 0;\n    viewportMap.set(frameNumber, oldCount + 1);\n    this.frameNumberMap.set(viewportId, viewportMap);\n  }\n\n  /**\n   * Deregister a pending tile header for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   */\n  deregister(viewportId: string, frameNumber: number) {\n    const viewportMap = this.frameNumberMap.get(viewportId);\n    if (!viewportMap) {\n      return;\n    }\n    const oldCount = viewportMap.get(frameNumber) || 1;\n    viewportMap.set(frameNumber, oldCount - 1);\n  }\n\n  /**\n   * Check is there are no pending tile headers registered for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   * @returns\n   */\n  isZero(viewportId: string, frameNumber: number) {\n    const count = this.frameNumberMap.get(viewportId)?.get(frameNumber) || 0;\n    return count === 0;\n  }\n}\n", "import {FrameState} from '../helpers/frame-state';\nimport {I3SPendingTilesRegister} from './i3s-pending-tiles-register';\n\nconst STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport class I3STileManager {\n  private _statusMap: object;\n  private pendingTilesRegister = new I3SPendingTilesRegister();\n\n  constructor() {\n    this._statusMap = {};\n  }\n\n  /**\n   * Add request to map\n   * @param request - node metadata request\n   * @param key - unique key\n   * @param callback - callback after request completed\n   * @param frameState - frameState data\n   */\n  add(request, key, callback, frameState: FrameState) {\n    if (!this._statusMap[key]) {\n      const {\n        frameNumber,\n        viewport: {id}\n      } = frameState;\n      this._statusMap[key] = {request, callback, key, frameState, status: STATUS.REQUESTED};\n      // Register pending request for the frameNumber\n      this.pendingTilesRegister.register(id, frameNumber);\n      request()\n        .then((data) => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          const {\n            frameNumber: actualFrameNumber,\n            viewport: {id}\n          } = this._statusMap[key].frameState;\n          // Deregister pending request for the frameNumber\n          this.pendingTilesRegister.deregister(id, actualFrameNumber);\n          this._statusMap[key].callback(data, frameState);\n        })\n        .catch((error) => {\n          this._statusMap[key].status = STATUS.ERROR;\n          const {\n            frameNumber: actualFrameNumber,\n            viewport: {id}\n          } = this._statusMap[key].frameState;\n          // Deregister pending request for the frameNumber\n          this.pendingTilesRegister.deregister(id, actualFrameNumber);\n          callback(error);\n        });\n    }\n  }\n\n  /**\n   * Update request if it is still actual for the new frameState\n   * @param key - unique key\n   * @param frameState - frameState data\n   */\n  update(key, frameState: FrameState) {\n    if (this._statusMap[key]) {\n      // Deregister pending request for the old frameNumber\n      const {\n        frameNumber,\n        viewport: {id}\n      } = this._statusMap[key].frameState;\n      this.pendingTilesRegister.deregister(id, frameNumber);\n\n      // Register pending request for the new frameNumber\n      const {\n        frameNumber: newFrameNumber,\n        viewport: {id: newViewportId}\n      } = frameState;\n      this.pendingTilesRegister.register(newViewportId, newFrameNumber);\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  /**\n   * Find request in the map\n   * @param key - unique key\n   * @returns\n   */\n  find(key) {\n    return this._statusMap[key];\n  }\n\n  /**\n   * Check it there are pending tile headers for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   * @returns\n   */\n  hasPendingTiles(viewportId: string, frameNumber: number): boolean {\n    return !this.pendingTilesRegister.isZero(viewportId, frameNumber);\n  }\n}\n", "import {load} from '@loaders.gl/core';\nimport {TilesetTraverser} from '../tileset-traverser';\n\nimport {getLodStatus} from '../helpers/i3s-lod';\nimport {Tile3D} from '../tile-3d';\nimport {I3STileManager} from './i3s-tile-manager';\nimport {FrameState} from '../helpers/frame-state';\n\nexport class I3STilesetTraverser extends TilesetTraverser {\n  private _tileManager: I3STileManager;\n\n  constructor(options) {\n    super(options);\n    this._tileManager = new I3STileManager();\n  }\n\n  /**\n   * Check if there are no penging tile header requests,\n   * that means the traversal is finished and we can call\n   * following-up callbacks.\n   */\n  traversalFinished(frameState: FrameState): boolean {\n    return !this._tileManager.hasPendingTiles(frameState.viewport.id, this._frameNumber || 0);\n  }\n\n  shouldRefine(tile, frameState: FrameState) {\n    tile._lodJudge = getLodStatus(tile, frameState);\n    return tile._lodJudge === 'DIG';\n  }\n\n  updateChildTiles(tile, frameState: FrameState): boolean {\n    const children = tile.header.children || [];\n    // children which are already fetched and constructed as Tile3D instances\n    const childTiles = tile.children;\n    const tileset = tile.tileset;\n\n    for (const child of children) {\n      const extendedId = `${child.id}-${frameState.viewport.id}`;\n      // if child tile is not fetched\n      const childTile = childTiles && childTiles.find((t) => t.id === extendedId);\n      if (!childTile) {\n        let request = () => this._loadTile(child.id, tileset);\n        const cachedRequest = this._tileManager.find(extendedId);\n        if (!cachedRequest) {\n          // eslint-disable-next-line max-depth\n          if (tileset.tileset.nodePages) {\n            request = () => tileset.tileset.nodePagesTile.formTileFromNodePages(child.id);\n          }\n          this._tileManager.add(\n            request,\n            extendedId,\n            (header) => this._onTileLoad(header, tile, extendedId),\n            frameState\n          );\n        } else {\n          // update frameNumber since it is still needed in current frame\n          this._tileManager.update(extendedId, frameState);\n        }\n      } else if (childTile) {\n        // if child tile is fetched and available\n        this.updateTile(childTile, frameState);\n      }\n    }\n    return false;\n  }\n\n  async _loadTile(nodeId, tileset) {\n    const {loader} = tileset;\n    const nodeUrl = tileset.getTileUrl(`${tileset.url}/nodes/${nodeId}`);\n    // load metadata\n    const options = {\n      ...tileset.loadOptions,\n      i3s: {\n        ...tileset.loadOptions.i3s,\n        isTileHeader: true\n      }\n    };\n\n    return await load(nodeUrl, loader, options);\n  }\n\n  /**\n   * The callback to init Tile3D instance after loading the tile JSON\n   * @param {Object} header - the tile JSON from a dataset\n   * @param {Tile3D} tile - the parent Tile3D instance\n   * @param {string} extendedId - optional ID to separate copies of a tile for different viewports.\n   *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   * @return {void}\n   */\n  _onTileLoad(header, tile, extendedId) {\n    // after child tile is fetched\n    const childTile = new Tile3D(tile.tileset, header, tile, extendedId);\n    tile.children.push(childTile);\n    const frameState = this._tileManager.find(childTile.id).frameState;\n    this.updateTile(childTile, frameState);\n\n    // after tile fetched, resume traversal if still in current update/traversal frame\n    if (\n      this._frameNumber === frameState.frameNumber &&\n      (this.traversalFinished(frameState) ||\n        new Date().getTime() - this.lastUpdate > this.updateDebounceTime)\n    ) {\n      this.executeTraversal(childTile, frameState);\n    }\n  }\n}\n", "// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {Stats} from '@probe.gl/stats';\nimport {RequestScheduler, path, LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {TilesetCache} from './tileset-cache';\nimport {calculateTransformProps} from './helpers/transform-utils';\nimport {FrameState, getFrameState, limitSelectedTiles} from './helpers/frame-state';\nimport {getZoomFromBoundingVolume, getZoomFromExtent, getZoomFromFullExtent} from './helpers/zoom';\n\nimport type {GeospatialViewport, Viewport} from '../types';\nimport {Tile3D} from './tile-3d';\nimport {TILESET_TYPE} from '../constants';\n\nimport {TilesetTraverser} from './tileset-traverser';\n\n// TODO - these should be moved into their respective modules\nimport {Tileset3DTraverser} from './format-3d-tiles/tileset-3d-traverser';\nimport {I3STilesetTraverser} from './format-i3s/i3s-tileset-traverser';\n\nexport type TilesetJSON = any;\n\n/*\nexport type TilesetJSON = {\n    loader;\n    // could be  3d tiles, i3s\n    type: 'I3S' | '3DTILES';\n    /** The url to the top level tileset JSON file. *\n    url: string;\n    basePath?: string;\n    // Geometric error when the tree is not rendered at all\n    lodMetricType: string;\n    lodMetricValue: number;\n    root: {\n      refine: string;\n      [key: string]: unknown;\n    },\n    [key: string]: unknown;\n};\n*/\n\nexport type Tileset3DProps = {\n  // loading\n  throttleRequests?: boolean;\n  maxRequests?: number;\n  loadOptions?: LoaderOptions;\n  loadTiles?: boolean;\n  basePath?: string;\n  maximumMemoryUsage?: number;\n  maximumTilesSelected?: number;\n  debounceTime?: number;\n\n  // Metadata\n  description?: string;\n  attributions?: string[];\n\n  // Transforms\n  ellipsoid?: object;\n  modelMatrix?: Matrix4;\n\n  // Traversal\n  maximumScreenSpaceError?: number;\n  viewportTraversersMap?: any;\n  updateTransforms?: boolean;\n  viewDistanceScale?: number;\n\n  // Callbacks\n  onTileLoad?: (tile: Tile3D) => any;\n  onTileUnload?: (tile: Tile3D) => any;\n  onTileError?: (tile: Tile3D, message: string, url: string) => any;\n  contentLoader?: (tile: Tile3D) => Promise<void>;\n  onTraversalComplete?: (selectedTiles: Tile3D[]) => Tile3D[];\n};\n\ntype Props = {\n  description: string;\n  ellipsoid: object;\n  /** A 4x4 transformation matrix this transforms the entire tileset. */\n  modelMatrix: Matrix4;\n  /** Set to false to disable network request throttling */\n  throttleRequests: boolean;\n  /** Number of simultaneous requsts, if throttleRequests is true */\n  maxRequests: number;\n  maximumMemoryUsage: number;\n  /** Maximum number limit of tiles selected for show. 0 means no limit */\n  maximumTilesSelected: number;\n  /** Delay time before the tileset traversal. It prevents traversal requests spam.*/\n  debounceTime: number;\n  /** Callback. Indicates this a tile's content was loaded */\n  onTileLoad: (tile: Tile3D) => void;\n  /** Callback. Indicates this a tile's content was unloaded (cache full) */\n  onTileUnload: (tile: Tile3D) => void;\n  /** Callback. Indicates this a tile's content failed to load */\n  onTileError: (tile: Tile3D, message: string, url: string) => void;\n  /** Callback. Allows post-process selectedTiles right after traversal. */\n  onTraversalComplete: (selectedTiles: Tile3D[]) => Tile3D[];\n  /** The maximum screen space error used to drive level of detail refinement. */\n  maximumScreenSpaceError: number;\n  viewportTraversersMap: Record<string, any> | null;\n  attributions: string[];\n  loadTiles: boolean;\n  loadOptions: LoaderOptions;\n  updateTransforms: boolean;\n  /** View distance scale modifier */\n  viewDistanceScale: number;\n  basePath: string;\n  /** Optional async tile content loader */\n  contentLoader?: (tile: Tile3D) => Promise<void>;\n  /** @todo I3S specific knowledge should be moved to I3S module */\n  i3s: Record<string, any>;\n};\n\nconst DEFAULT_PROPS: Props = {\n  description: '',\n  ellipsoid: Ellipsoid.WGS84,\n  modelMatrix: new Matrix4(),\n  throttleRequests: true,\n  maxRequests: 64,\n  maximumMemoryUsage: 32,\n  maximumTilesSelected: 0,\n  debounceTime: 0,\n  onTileLoad: () => {},\n  onTileUnload: () => {},\n  onTileError: () => {},\n  onTraversalComplete: (selectedTiles: Tile3D[]) => selectedTiles,\n  contentLoader: undefined,\n  viewDistanceScale: 1.0,\n  maximumScreenSpaceError: 8,\n  loadTiles: true,\n  updateTransforms: true,\n  viewportTraversersMap: null,\n  loadOptions: {fetch: {}},\n  attributions: [],\n  basePath: '',\n  i3s: {}\n};\n\n// Tracked Stats\nconst TILES_TOTAL = 'Tiles In Tileset(s)';\nconst TILES_IN_MEMORY = 'Tiles In Memory';\nconst TILES_IN_VIEW = 'Tiles In View';\nconst TILES_RENDERABLE = 'Tiles To Render';\nconst TILES_LOADED = 'Tiles Loaded';\nconst TILES_LOADING = 'Tiles Loading';\nconst TILES_UNLOADED = 'Tiles Unloaded';\nconst TILES_LOAD_FAILED = 'Failed Tile Loads';\nconst POINTS_COUNT = 'Points/Vertices';\nconst TILES_GPU_MEMORY = 'Tile Memory Use';\n\n/**\n * The Tileset loading and rendering flow is as below,\n * A rendered (i.e. deck.gl `Tile3DLayer`) triggers `tileset.update()` after a `tileset` is loaded\n * `tileset` starts traversing the tile tree and update `requestTiles` (tiles of which content need\n * to be fetched) and `selectedTiles` (tiles ready for rendering under the current viewport).\n * `Tile3DLayer` will update rendering based on `selectedTiles`.\n * `Tile3DLayer` also listens to `onTileLoad` callback and trigger another round of `update and then traversal`\n * when new tiles are loaded.\n\n * As I3S tileset have stored `tileHeader` file (metadata) and tile content files (geometry, texture, ...) separately.\n * During each traversal, it issues `tilHeader` requests if that `tileHeader` is not yet fetched,\n * after the tile header is fulfilled, it will resume the traversal starting from the tile just fetched (not root).\n\n * Tile3DLayer\n *      |\n *  await load(tileset)\n *      |\n *  tileset.update()\n *      |                async load tileHeader\n *  tileset.traverse() -------------------------- Queued\n *      |        resume traversal after fetched  |\n *      |----------------------------------------|\n *      |\n *      |                     async load tile content\n * tilset.requestedTiles  ----------------------------- RequestScheduler\n *                                                             |\n * tilset.selectedTiles (ready for rendering)                  |\n *      |         Listen to                                    |\n *   Tile3DLayer ----------- onTileLoad  ----------------------|\n *      |                         |   notify new tile is available\n *   updateLayers                 |\n *                       tileset.update // trigger another round of update\n*/\nexport class Tileset3D {\n  // props: Tileset3DProps;\n  options: Props;\n  loadOptions: LoaderOptions;\n\n  type: string;\n  tileset: TilesetJSON;\n  loader: LoaderWithParser;\n  url: string;\n  basePath: string;\n  modelMatrix: Matrix4;\n  ellipsoid: any;\n  lodMetricType: string;\n  lodMetricValue: number;\n  refine: string;\n  root: Tile3D | null = null;\n  roots: Record<string, Tile3D> = {};\n  /** @todo any->unknown */\n  asset: Record<string, any> = {};\n\n  // Metadata for the entire tileset\n  description: string = '';\n  properties: any;\n\n  extras: any = null;\n  attributions: any = {};\n  credits: any = {};\n\n  stats: Stats;\n\n  /** flags that contain information about data types in nested tiles */\n  contentFormats = {draco: false, meshopt: false, dds: false, ktx2: false};\n\n  // view props\n  cartographicCenter: Vector3 | null = null;\n  cartesianCenter: Vector3 | null = null;\n  zoom: number = 1;\n  boundingVolume: any = null;\n\n  /** Updated based on the camera position and direction */\n  dynamicScreenSpaceErrorComputedDensity: number = 0.0;\n\n  // METRICS\n\n  /**\n   * The maximum amount of GPU memory (in MB) that may be used to cache tiles\n   * Tiles not in view are unloaded to enforce private\n   */\n  maximumMemoryUsage: number = 32;\n\n  /** The total amount of GPU memory in bytes used by the tileset. */\n  gpuMemoryUsageInBytes: number = 0;\n\n  /** Update tracker. increase in each update cycle. */\n  _frameNumber: number = 0;\n  private _queryParams: Record<string, string> = {};\n  private _extensionsUsed: string[] = [];\n  private _tiles: Record<string, Tile3D> = {};\n\n  /** counter for tracking tiles requests */\n  private _pendingCount: number = 0;\n\n  /** Hold traversal results */\n  selectedTiles: Tile3D[] = [];\n\n  // TRAVERSAL\n  traverseCounter: number = 0;\n  geometricError: number = 0;\n  private lastUpdatedVieports: Viewport[] | Viewport | null = null;\n  private _requestedTiles: Tile3D[] = [];\n  private _emptyTiles: Tile3D[] = [];\n  private frameStateData: any = {};\n\n  _traverser: TilesetTraverser;\n  _cache = new TilesetCache();\n  _requestScheduler: RequestScheduler;\n\n  // Promise tracking\n  private updatePromise: Promise<number> | null = null;\n  tilesetInitializationPromise: Promise<void>;\n\n  /**\n   * Create a new Tileset3D\n   * @param json\n   * @param props\n   */\n  // eslint-disable-next-line max-statements\n  constructor(tileset: TilesetJSON, options?: Tileset3DProps) {\n    // PUBLIC MEMBERS\n    this.options = {...DEFAULT_PROPS, ...options};\n    // raw data\n    this.tileset = tileset;\n    this.loader = tileset.loader;\n    // could be  3d tiles, i3s\n    this.type = tileset.type;\n    // The url to a tileset JSON file.\n    this.url = tileset.url;\n    this.basePath = tileset.basePath || path.dirname(this.url);\n    this.modelMatrix = this.options.modelMatrix;\n    this.ellipsoid = this.options.ellipsoid;\n\n    // Geometric error when the tree is not rendered at all\n    this.lodMetricType = tileset.lodMetricType;\n    this.lodMetricValue = tileset.lodMetricValue;\n    this.refine = tileset.root.refine;\n\n    this.loadOptions = this.options.loadOptions || {};\n\n    // TRAVERSAL\n    this._traverser = this._initializeTraverser();\n    this._requestScheduler = new RequestScheduler({\n      throttleRequests: this.options.throttleRequests,\n      maxRequests: this.options.maxRequests\n    });\n\n    // METRICS\n    // The total amount of GPU memory in bytes used by the tileset.\n    this.stats = new Stats({id: this.url});\n    this._initializeStats();\n\n    this.tilesetInitializationPromise = this._initializeTileSet(tileset);\n  }\n\n  /** Release resources */\n  destroy(): void {\n    this._destroy();\n  }\n\n  /** Is the tileset loaded (update needs to have been called at least once) */\n  isLoaded(): boolean {\n    // Check that `_frameNumber !== 0` which means that update was called at least once\n    return this._pendingCount === 0 && this._frameNumber !== 0 && this._requestedTiles.length === 0;\n  }\n\n  get tiles(): object[] {\n    return Object.values(this._tiles);\n  }\n\n  get frameNumber(): number {\n    return this._frameNumber;\n  }\n\n  get queryParams(): string {\n    return new URLSearchParams(this._queryParams).toString();\n  }\n\n  setProps(props: Tileset3DProps): void {\n    this.options = {...this.options, ...props};\n  }\n\n  /** @deprecated */\n  setOptions(options: Tileset3DProps): void {\n    this.options = {...this.options, ...options};\n  }\n\n  /**\n   * Return a loadable tile url for a specific tile subpath\n   * @param tilePath a tile subpath\n   */\n  getTileUrl(tilePath: string): string {\n    const isDataUrl = tilePath.startsWith('data:');\n    if (isDataUrl) {\n      return tilePath;\n    }\n    return `${tilePath}${tilePath.includes('?') ? '&' : '?'}${this.queryParams}`;\n  }\n\n  // TODO CESIUM specific\n  hasExtension(extensionName: string): boolean {\n    return Boolean(this._extensionsUsed.indexOf(extensionName) > -1);\n  }\n\n  /**\n   * Update visible tiles relying on a list of viewports\n   * @param viewports - list of viewports\n   * @deprecated\n   */\n  update(viewports: Viewport[] | Viewport | null = null) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.tilesetInitializationPromise.then(() => {\n      if (!viewports && this.lastUpdatedVieports) {\n        viewports = this.lastUpdatedVieports;\n      } else {\n        this.lastUpdatedVieports = viewports;\n      }\n      if (viewports) {\n        this.doUpdate(viewports);\n      }\n    });\n  }\n\n  /**\n   * Update visible tiles relying on a list of viewports.\n   * Do it with debounce delay to prevent update spam\n   * @param viewports viewports\n   * @returns Promise of new frameNumber\n   */\n  async selectTiles(viewports: Viewport[] | Viewport | null = null): Promise<number> {\n    await this.tilesetInitializationPromise;\n    if (viewports) {\n      this.lastUpdatedVieports = viewports;\n    }\n    if (!this.updatePromise) {\n      this.updatePromise = new Promise<number>((resolve) => {\n        setTimeout(() => {\n          if (this.lastUpdatedVieports) {\n            this.doUpdate(this.lastUpdatedVieports);\n          }\n          resolve(this._frameNumber);\n          this.updatePromise = null;\n        }, this.options.debounceTime);\n      });\n    }\n    return this.updatePromise;\n  }\n\n  /**\n   * Update visible tiles relying on a list of viewports\n   * @param viewports viewports\n   */\n  // eslint-disable-next-line max-statements, complexity\n  private doUpdate(viewports: Viewport[] | Viewport): void {\n    if ('loadTiles' in this.options && !this.options.loadTiles) {\n      return;\n    }\n    if (this.traverseCounter > 0) {\n      return;\n    }\n    const preparedViewports = viewports instanceof Array ? viewports : [viewports];\n\n    this._cache.reset();\n    this._frameNumber++;\n    this.traverseCounter = preparedViewports.length;\n    const viewportsToTraverse: string[] = [];\n    // First loop to decrement traverseCounter\n    for (const viewport of preparedViewports) {\n      const id = viewport.id;\n      if (this._needTraverse(id)) {\n        viewportsToTraverse.push(id);\n      } else {\n        this.traverseCounter--;\n      }\n    }\n\n    // Second loop to traverse\n    for (const viewport of preparedViewports) {\n      const id = viewport.id;\n      if (!this.roots[id]) {\n        this.roots[id] = this._initializeTileHeaders(this.tileset, null);\n      }\n\n      if (!viewportsToTraverse.includes(id)) {\n        continue; // eslint-disable-line no-continue\n      }\n      const frameState = getFrameState(viewport as GeospatialViewport, this._frameNumber);\n      this._traverser.traverse(this.roots[id], frameState, this.options);\n    }\n  }\n\n  /**\n   * Check if traversal is needed for particular viewport\n   * @param {string} viewportId - id of a viewport\n   * @return {boolean}\n   */\n  _needTraverse(viewportId: string): boolean {\n    let traverserId = viewportId;\n    if (this.options.viewportTraversersMap) {\n      traverserId = this.options.viewportTraversersMap[viewportId];\n    }\n    if (traverserId !== viewportId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * The callback to post-process tiles after traversal procedure\n   * @param frameState - frame state for tile culling\n   */\n  _onTraversalEnd(frameState: FrameState): void {\n    const id = frameState.viewport.id;\n    if (!this.frameStateData[id]) {\n      this.frameStateData[id] = {selectedTiles: [], _requestedTiles: [], _emptyTiles: []};\n    }\n    const currentFrameStateData = this.frameStateData[id];\n    const selectedTiles = Object.values(this._traverser.selectedTiles);\n    const [filteredSelectedTiles, unselectedTiles] = limitSelectedTiles(\n      selectedTiles,\n      frameState,\n      this.options.maximumTilesSelected\n    );\n    currentFrameStateData.selectedTiles = filteredSelectedTiles;\n    for (const tile of unselectedTiles) {\n      tile.unselect();\n    }\n\n    currentFrameStateData._requestedTiles = Object.values(this._traverser.requestedTiles);\n    currentFrameStateData._emptyTiles = Object.values(this._traverser.emptyTiles);\n\n    this.traverseCounter--;\n    if (this.traverseCounter > 0) {\n      return;\n    }\n\n    this._updateTiles();\n  }\n\n  /**\n   * Update tiles relying on data from all traversers\n   */\n  _updateTiles(): void {\n    this.selectedTiles = [];\n    this._requestedTiles = [];\n    this._emptyTiles = [];\n\n    for (const frameStateKey in this.frameStateData) {\n      const frameStateDataValue = this.frameStateData[frameStateKey];\n      this.selectedTiles = this.selectedTiles.concat(frameStateDataValue.selectedTiles);\n      this._requestedTiles = this._requestedTiles.concat(frameStateDataValue._requestedTiles);\n      this._emptyTiles = this._emptyTiles.concat(frameStateDataValue._emptyTiles);\n    }\n\n    this.selectedTiles = this.options.onTraversalComplete(this.selectedTiles);\n\n    for (const tile of this.selectedTiles) {\n      this._tiles[tile.id] = tile;\n    }\n\n    this._loadTiles();\n    this._unloadTiles();\n    this._updateStats();\n  }\n\n  _tilesChanged(oldSelectedTiles: Tile3D[], selectedTiles: Tile3D[]): boolean {\n    if (oldSelectedTiles.length !== selectedTiles.length) {\n      return true;\n    }\n    const set1 = new Set(oldSelectedTiles.map((t) => t.id));\n    const set2 = new Set(selectedTiles.map((t) => t.id));\n    let changed = oldSelectedTiles.filter((x) => !set2.has(x.id)).length > 0;\n    changed = changed || selectedTiles.filter((x) => !set1.has(x.id)).length > 0;\n    return changed;\n  }\n\n  _loadTiles(): void {\n    // Sort requests by priority before making any requests.\n    // This makes it less likely this requests will be cancelled after being issued.\n    // requestedTiles.sort((a, b) => a._priority - b._priority);\n    for (const tile of this._requestedTiles) {\n      if (tile.contentUnloaded) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this._loadTile(tile);\n      }\n    }\n  }\n\n  _unloadTiles(): void {\n    // unload tiles from cache when hit maximumMemoryUsage\n    this._cache.unloadTiles(this, (tileset, tile) => tileset._unloadTile(tile));\n  }\n\n  _updateStats(): void {\n    let tilesRenderable = 0;\n    let pointsRenderable = 0;\n    for (const tile of this.selectedTiles) {\n      if (tile.contentAvailable && tile.content) {\n        tilesRenderable++;\n        if (tile.content.pointCount) {\n          pointsRenderable += tile.content.pointCount;\n        } else {\n          // Calculate vertices for non point cloud tiles.\n          pointsRenderable += tile.content.vertexCount;\n        }\n      }\n    }\n\n    this.stats.get(TILES_IN_VIEW).count = this.selectedTiles.length;\n    this.stats.get(TILES_RENDERABLE).count = tilesRenderable;\n    this.stats.get(POINTS_COUNT).count = pointsRenderable;\n  }\n\n  async _initializeTileSet(tilesetJson: TilesetJSON): Promise<void> {\n    if (this.type === TILESET_TYPE.I3S) {\n      this.calculateViewPropsI3S();\n      tilesetJson.root = await tilesetJson.root;\n    }\n    this.root = this._initializeTileHeaders(tilesetJson, null);\n\n    if (this.type === TILESET_TYPE.TILES3D) {\n      this._initializeTiles3DTileset(tilesetJson);\n      this.calculateViewPropsTiles3D();\n    }\n\n    if (this.type === TILESET_TYPE.I3S) {\n      this._initializeI3STileset();\n    }\n  }\n\n  /**\n   * Called during initialize Tileset to initialize the tileset's cartographic center (longitude, latitude) and zoom.\n   * These metrics help apps center view on tileset\n   * For I3S there is extent (<1.8 version) or fullExtent (>=1.8 version) to calculate view props\n   * @returns\n   */\n  private calculateViewPropsI3S(): void {\n    // for I3S 1.8 try to calculate with fullExtent\n    const fullExtent = this.tileset.fullExtent;\n    if (fullExtent) {\n      const {xmin, xmax, ymin, ymax, zmin, zmax} = fullExtent;\n      this.cartographicCenter = new Vector3(\n        xmin + (xmax - xmin) / 2,\n        ymin + (ymax - ymin) / 2,\n        zmin + (zmax - zmin) / 2\n      );\n      this.cartesianCenter = Ellipsoid.WGS84.cartographicToCartesian(\n        this.cartographicCenter,\n        new Vector3()\n      );\n      this.zoom = getZoomFromFullExtent(fullExtent, this.cartographicCenter, this.cartesianCenter);\n      return;\n    }\n    // for I3S 1.6-1.7 try to calculate with extent\n    const extent = this.tileset.store?.extent;\n    if (extent) {\n      const [xmin, ymin, xmax, ymax] = extent;\n      this.cartographicCenter = new Vector3(xmin + (xmax - xmin) / 2, ymin + (ymax - ymin) / 2, 0);\n      this.cartesianCenter = Ellipsoid.WGS84.cartographicToCartesian(\n        this.cartographicCenter,\n        new Vector3()\n      );\n      this.zoom = getZoomFromExtent(extent, this.cartographicCenter, this.cartesianCenter);\n      return;\n    }\n    // eslint-disable-next-line no-console\n    console.warn('Extent is not defined in the tileset header');\n    this.cartographicCenter = new Vector3();\n    this.zoom = 1;\n    return;\n  }\n\n  /**\n   * Called during initialize Tileset to initialize the tileset's cartographic center (longitude, latitude) and zoom.\n   * These metrics help apps center view on tileset.\n   * For 3DTiles the root tile data is used to calculate view props.\n   * @returns\n   */\n  private calculateViewPropsTiles3D() {\n    const root = this.root as Tile3D;\n    const {center} = root.boundingVolume;\n    // TODO - handle all cases\n    if (!center) {\n      // eslint-disable-next-line no-console\n      console.warn('center was not pre-calculated for the root tile');\n      this.cartographicCenter = new Vector3();\n      this.zoom = 1;\n      return;\n    }\n\n    // cartographic coordinates are undefined at the center of the ellipsoid\n    if (center[0] !== 0 || center[1] !== 0 || center[2] !== 0) {\n      this.cartographicCenter = Ellipsoid.WGS84.cartesianToCartographic(center, new Vector3());\n    } else {\n      this.cartographicCenter = new Vector3(0, 0, -Ellipsoid.WGS84.radii[0]);\n    }\n    this.cartesianCenter = center;\n    this.zoom = getZoomFromBoundingVolume(root.boundingVolume, this.cartographicCenter);\n  }\n\n  _initializeStats() {\n    this.stats.get(TILES_TOTAL);\n    this.stats.get(TILES_LOADING);\n    this.stats.get(TILES_IN_MEMORY);\n    this.stats.get(TILES_IN_VIEW);\n    this.stats.get(TILES_RENDERABLE);\n    this.stats.get(TILES_LOADED);\n    this.stats.get(TILES_UNLOADED);\n    this.stats.get(TILES_LOAD_FAILED);\n    this.stats.get(POINTS_COUNT);\n    this.stats.get(TILES_GPU_MEMORY, 'memory');\n  }\n\n  // Installs the main tileset JSON file or a tileset JSON file referenced from a tile.\n  // eslint-disable-next-line max-statements\n  _initializeTileHeaders(tilesetJson: TilesetJSON, parentTileHeader?: any) {\n    // A tileset JSON file referenced from a tile may exist in a different directory than the root tileset.\n    // Get the basePath relative to the external tileset.\n    const rootTile = new Tile3D(this, tilesetJson.root, parentTileHeader); // resource\n\n    // If there is a parentTileHeader, add the root of the currently loading tileset\n    // to parentTileHeader's children, and update its depth.\n    if (parentTileHeader) {\n      parentTileHeader.children.push(rootTile);\n      rootTile.depth = parentTileHeader.depth + 1;\n    }\n\n    // 3DTiles knows the hierarchy beforehand\n    if (this.type === TILESET_TYPE.TILES3D) {\n      const stack: Tile3D[] = [];\n      stack.push(rootTile);\n\n      while (stack.length > 0) {\n        const tile = stack.pop() as Tile3D;\n        this.stats.get(TILES_TOTAL).incrementCount();\n        const children = tile.header.children || [];\n        for (const childHeader of children) {\n          const childTile = new Tile3D(this, childHeader, tile);\n\n          // Special handling for Google\n          // A session key must be used for all tile requests\n          if (childTile.contentUrl?.includes('?session=')) {\n            const url = new URL(childTile.contentUrl);\n            const session = url.searchParams.get('session');\n            if (session) {\n              this._queryParams.session = session;\n            }\n          }\n\n          tile.children.push(childTile);\n          childTile.depth = tile.depth + 1;\n          stack.push(childTile);\n        }\n      }\n    }\n\n    return rootTile;\n  }\n\n  _initializeTraverser(): TilesetTraverser {\n    let TraverserClass;\n    const type = this.type;\n    switch (type) {\n      case TILESET_TYPE.TILES3D:\n        TraverserClass = Tileset3DTraverser;\n        break;\n      case TILESET_TYPE.I3S:\n        TraverserClass = I3STilesetTraverser;\n        break;\n      default:\n        TraverserClass = TilesetTraverser;\n    }\n\n    return new TraverserClass({\n      basePath: this.basePath,\n      onTraversalEnd: this._onTraversalEnd.bind(this)\n    });\n  }\n\n  _destroyTileHeaders(parentTile: Tile3D): void {\n    this._destroySubtree(parentTile);\n  }\n\n  async _loadTile(tile: Tile3D): Promise<void> {\n    let loaded;\n    try {\n      this._onStartTileLoading();\n      loaded = await tile.loadContent();\n    } catch (error: unknown) {\n      this._onTileLoadError(tile, error instanceof Error ? error : new Error('load failed'));\n    } finally {\n      this._onEndTileLoading();\n      this._onTileLoad(tile, loaded);\n    }\n  }\n\n  _onTileLoadError(tile: Tile3D, error: Error): void {\n    this.stats.get(TILES_LOAD_FAILED).incrementCount();\n\n    const message = error.message || error.toString();\n    const url = tile.url;\n    // TODO - Allow for probe log to be injected instead of console?\n    console.error(`A 3D tile failed to load: ${tile.url} ${message}`); // eslint-disable-line\n    this.options.onTileError(tile, message, url);\n  }\n\n  _onTileLoad(tile: Tile3D, loaded: boolean): void {\n    if (!loaded) {\n      return;\n    }\n\n    if (this.type === TILESET_TYPE.I3S) {\n      // We can't calculate tiles total in I3S in advance so we calculate it dynamically.\n      const nodesInNodePages = this.tileset?.nodePagesTile?.nodesInNodePages || 0;\n      this.stats.get(TILES_TOTAL).reset();\n      this.stats.get(TILES_TOTAL).addCount(nodesInNodePages);\n    }\n\n    // add coordinateOrigin and modelMatrix to tile\n    if (tile && tile.content) {\n      calculateTransformProps(tile, tile.content);\n    }\n\n    this.updateContentTypes(tile);\n    this._addTileToCache(tile);\n    this.options.onTileLoad(tile);\n  }\n\n  /**\n   * Update information about data types in nested tiles\n   * @param tile instance of a nested Tile3D\n   */\n  private updateContentTypes(tile: Tile3D) {\n    if (this.type === TILESET_TYPE.I3S) {\n      if (tile.header.isDracoGeometry) {\n        this.contentFormats.draco = true;\n      }\n      switch (tile.header.textureFormat) {\n        case 'dds':\n          this.contentFormats.dds = true;\n          break;\n        case 'ktx2':\n          this.contentFormats.ktx2 = true;\n          break;\n        default:\n      }\n    } else if (this.type === TILESET_TYPE.TILES3D) {\n      const {extensionsRemoved = []} = tile.content?.gltf || {};\n      if (extensionsRemoved.includes('KHR_draco_mesh_compression')) {\n        this.contentFormats.draco = true;\n      }\n      if (extensionsRemoved.includes('EXT_meshopt_compression')) {\n        this.contentFormats.meshopt = true;\n      }\n      if (extensionsRemoved.includes('KHR_texture_basisu')) {\n        this.contentFormats.ktx2 = true;\n      }\n    }\n  }\n\n  _onStartTileLoading() {\n    this._pendingCount++;\n    this.stats.get(TILES_LOADING).incrementCount();\n  }\n\n  _onEndTileLoading() {\n    this._pendingCount--;\n    this.stats.get(TILES_LOADING).decrementCount();\n  }\n\n  _addTileToCache(tile: Tile3D) {\n    this._cache.add(this, tile, (tileset) => tileset._updateCacheStats(tile));\n  }\n\n  _updateCacheStats(tile) {\n    this.stats.get(TILES_LOADED).incrementCount();\n    this.stats.get(TILES_IN_MEMORY).incrementCount();\n\n    // Good enough? Just use the raw binary ArrayBuffer's byte length.\n    this.gpuMemoryUsageInBytes += tile.gpuMemoryUsageInBytes || 0;\n    this.stats.get(TILES_GPU_MEMORY).count = this.gpuMemoryUsageInBytes;\n  }\n\n  _unloadTile(tile) {\n    this.gpuMemoryUsageInBytes -= tile.gpuMemoryUsageInBytes || 0;\n\n    this.stats.get(TILES_IN_MEMORY).decrementCount();\n    this.stats.get(TILES_UNLOADED).incrementCount();\n    this.stats.get(TILES_GPU_MEMORY).count = this.gpuMemoryUsageInBytes;\n\n    this.options.onTileUnload(tile);\n    tile.unloadContent();\n  }\n\n  // Traverse the tree and destroy all tiles\n  _destroy() {\n    const stack: Tile3D[] = [];\n\n    if (this.root) {\n      stack.push(this.root);\n    }\n\n    while (stack.length > 0) {\n      const tile: Tile3D = stack.pop() as Tile3D;\n\n      for (const child of tile.children) {\n        stack.push(child);\n      }\n\n      this._destroyTile(tile);\n    }\n    this.root = null;\n  }\n\n  // Traverse the tree and destroy all sub tiles\n  _destroySubtree(tile) {\n    const root = tile;\n    const stack: Tile3D[] = [];\n    stack.push(root);\n    while (stack.length > 0) {\n      tile = stack.pop();\n      for (const child of tile.children) {\n        stack.push(child);\n      }\n      if (tile !== root) {\n        this._destroyTile(tile);\n      }\n    }\n    root.children = [];\n  }\n\n  _destroyTile(tile) {\n    this._cache.unloadTile(this, tile);\n    this._unloadTile(tile);\n    tile.destroy();\n  }\n\n  _initializeTiles3DTileset(tilesetJson) {\n    if (tilesetJson.queryString) {\n      const searchParams = new URLSearchParams(tilesetJson.queryString);\n      const queryParams = Object.fromEntries(searchParams.entries());\n      this._queryParams = {...this._queryParams, ...queryParams};\n    }\n\n    this.asset = tilesetJson.asset;\n    if (!this.asset) {\n      throw new Error('Tileset must have an asset property.');\n    }\n    if (this.asset.version !== '0.0' && this.asset.version !== '1.0') {\n      throw new Error('The tileset must be 3D Tiles version 0.0 or 1.0.');\n    }\n\n    // Note: `asset.tilesetVersion` is version of the tileset itself (not the version of the 3D TILES standard)\n    // We add this version as a `v=1.0` query param to fetch the right version and not get an older cached version\n    if ('tilesetVersion' in this.asset) {\n      this._queryParams.v = this.asset.tilesetVersion;\n    }\n\n    // TODO - ion resources have a credits property we can use for additional attribution.\n    this.credits = {\n      attributions: this.options.attributions || []\n    };\n    this.description = this.options.description || '';\n\n    // Gets the tileset's properties dictionary object, which contains metadata about per-feature properties.\n    this.properties = tilesetJson.properties;\n    this.geometricError = tilesetJson.geometricError;\n    this._extensionsUsed = tilesetJson.extensionsUsed || [];\n    // Returns the extras property at the top of the tileset JSON (application specific metadata).\n    this.extras = tilesetJson.extras;\n  }\n\n  _initializeI3STileset() {\n    // @ts-expect-error\n    if (this.loadOptions.i3s && 'token' in this.loadOptions.i3s) {\n      this._queryParams.token = this.loadOptions.i3s.token as string;\n    }\n  }\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n", "// TILE TYPES\n\nexport const TILE3D_TYPE = {\n  COMPOSITE: 'cmpt',\n  POINT_CLOUD: 'pnts',\n  BATCHED_3D_MODEL: 'b3dm',\n  INSTANCED_3D_MODEL: 'i3dm',\n  GEOMETRY: 'geom',\n  VECTOR: 'vect',\n  GLTF: 'glTF'\n};\n\nexport const TILE3D_TYPES = Object.keys(TILE3D_TYPE);\n\nexport const MAGIC_ARRAY = {\n  BATCHED_MODEL: [98, 51, 100, 109],\n  INSTANCED_MODEL: [105, 51, 100, 109],\n  POINT_CLOUD: [112, 110, 116, 115],\n  COMPOSITE: [99, 109, 112, 116]\n};\n\n// TILE CONSTANTS\nexport const TILE3D_OPTIMIZATION_HINT = {\n  NOT_COMPUTED: -1,\n  USE_OPTIMIZATION: 1,\n  SKIP_OPTIMIZATION: 0\n};\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n// Decode the JSON binary array into clear text\nexport function getStringFromArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n  assert(arrayBuffer instanceof ArrayBuffer);\n  const textDecoder = new TextDecoder('utf8');\n  const typedArray = new Uint8Array(arrayBuffer, byteOffset, byteLength);\n  const string = textDecoder.decode(typedArray);\n  return string;\n}\n\n// Decode the JSON binary array into clear text\nexport function getStringFromTypedArray(typedArray) {\n  assert(ArrayBuffer.isView(typedArray));\n  const textDecoder = new TextDecoder('utf8');\n  const string = textDecoder.decode(typedArray);\n  return string;\n}\n\nexport function getMagicString(arrayBuffer, byteOffset = 0) {\n  const dataView = new DataView(arrayBuffer);\n  return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n", "// Subset of WebGL constants\n\nexport const GL_PRIMITIVE = {\n  POINTS: 0x0000, // Points. single points.\n  LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n  TRIANGLES: 0x0004 // Triangles. Each set of three vertices creates a separate triangle.\n};\n\n// Primitive modes\nexport const GL_PRIMITIVE_MODE = {\n  POINTS: 0x0000, // Points. single points.\n  LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // Lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // Lines/ a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // Triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // Triangles. A connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // Triangles. A connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\ntype glType = {\n  BYTE: number;\n  UNSIGNED_BYTE: number;\n  SHORT: number;\n  UNSIGNED_SHORT: number;\n  INT: number;\n  UNSIGNED_INT: number;\n  FLOAT: number;\n  DOUBLE: number;\n};\n\nexport const GL_TYPE: glType = {\n  BYTE: 5120,\n  UNSIGNED_BYTE: 5121,\n  SHORT: 5122,\n  UNSIGNED_SHORT: 5123,\n  INT: 5124,\n  UNSIGNED_INT: 5125,\n  FLOAT: 5126,\n  DOUBLE: 5130\n};\n\nexport const GL = {\n  ...GL_PRIMITIVE_MODE,\n  ...GL_TYPE\n};\n", "import type {TypedArray} from '@math.gl/core';\nimport {GL_TYPE as GL} from '../constants';\n\nconst GL_TYPE_TO_ARRAY_TYPE = {\n  [GL.DOUBLE]: Float64Array,\n  [GL.FLOAT]: Float32Array,\n  [GL.UNSIGNED_SHORT]: Uint16Array,\n  [GL.UNSIGNED_INT]: Uint32Array,\n  [GL.UNSIGNED_BYTE]: Uint8Array,\n  [GL.BYTE]: Int8Array,\n  [GL.SHORT]: Int16Array,\n  [GL.INT]: Int32Array\n};\ntype GlTypeMap = {\n  [index: string]: number;\n};\nconst NAME_TO_GL_TYPE: GlTypeMap = {\n  DOUBLE: GL.DOUBLE,\n  FLOAT: GL.FLOAT,\n  UNSIGNED_SHORT: GL.UNSIGNED_SHORT,\n  UNSIGNED_INT: GL.UNSIGNED_INT,\n  UNSIGNED_BYTE: GL.UNSIGNED_BYTE,\n  BYTE: GL.BYTE,\n  SHORT: GL.SHORT,\n  INT: GL.INT\n};\nconst ERR_TYPE_CONVERSION = 'Failed to convert GL type';\n// Converts TYPED ARRAYS to corresponding GL constant\n// Used to auto deduce gl parameter types\nexport default class GLType {\n  // Signature: fromTypedArray(new Uint8Array())\n  // Signature: fromTypedArray(Uint8Array)\n  /**\n   * Returns the size, in bytes, of the corresponding datatype\n   * @param arrayOrType\n   * @returns glType a a string\n   */\n  static fromTypedArray(arrayOrType: TypedArray | Function): string {\n    // If typed array, look up constructor\n    arrayOrType = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n    for (const glType in GL_TYPE_TO_ARRAY_TYPE) {\n      const ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n      if (ArrayType === arrayOrType) {\n        return glType;\n      }\n    }\n    throw new Error(ERR_TYPE_CONVERSION);\n  }\n  /**\n   * Extracts name for glType from array NAME_TO_GL_TYPE\n   * @param name\n   * @returns glType as a number\n   */\n  static fromName(name: string): number {\n    const glType = NAME_TO_GL_TYPE[name];\n    if (!glType) {\n      throw new Error(ERR_TYPE_CONVERSION);\n    }\n    return glType;\n  }\n  // Converts GL constant to corresponding typed array type\n  // eslint-disable-next-line complexity\n  static getArrayType(glType: number) {\n    switch (glType) {\n      /*eslint-disable*/\n      // @ts-ignore\n      case GL.UNSIGNED_SHORT_5_6_5:\n      // @ts-ignore\n      case GL.UNSIGNED_SHORT_4_4_4_4:\n      // @ts-ignore\n      case GL.UNSIGNED_SHORT_5_5_5_1:\n        /* eslint-enable*/\n        return Uint16Array;\n      default:\n        const ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n        if (!ArrayType) {\n          throw new Error(ERR_TYPE_CONVERSION);\n        }\n        return ArrayType;\n    }\n  }\n  /**\n   * Returns the size in bytes of one element of the provided WebGL type\n   * @param glType\n   * @returns size of glType\n   */\n  static getByteSize(glType: number): number {\n    const ArrayType = GLType.getArrayType(glType);\n    return ArrayType.BYTES_PER_ELEMENT;\n  }\n  /**\n   * Returns `true` if `glType` is a valid WebGL data type.\n   * @param glType\n   * @returns boolean\n   */\n  static validate(glType: number): boolean {\n    return Boolean(GLType.getArrayType(glType));\n  }\n  /**\n   * Creates a typed view of an array of bytes\n   * @param glType The type of typed array (ArrayBuffer view) to create\n   * @param buffer The buffer storage to use for the view.\n   * @param byteOffset The offset, in bytes, to the first element in the view\n   * @param length The number of elements in the view. Defaults to buffer length\n   * @returns A typed array view of the buffer\n   */\n  static createTypedArray(\n    glType: number,\n    buffer: TypedArray,\n    byteOffset: number = 0,\n    length?: number\n  ): TypedArray {\n    if (length === undefined) {\n      length = (buffer.byteLength - byteOffset) / GLType.getByteSize(glType);\n    }\n    const ArrayType = GLType.getArrayType(glType);\n    return new ArrayType(buffer, byteOffset, length);\n  }\n}\n", "/**\n * Throws error message\n * @param condition checks if an attribute equal to condition\n * @param message error message\n */\nexport function assert(condition: any, message?: any): void {\n  if (!condition) {\n    throw new Error(`math.gl assertion failed. ${message}`);\n  }\n}\n", "/**\n * Decode color values\n * @param rgb565\n * @param target\n * @returns target\n */\nexport function decodeRGB565(rgb565: number, target: number[] = [0, 0, 0]): number[] {\n  const r5 = (rgb565 >> 11) & 31;\n  const g6 = (rgb565 >> 5) & 63;\n  const b5 = rgb565 & 31;\n\n  target[0] = r5 << 3;\n  target[1] = g6 << 2;\n  target[2] = b5 << 3;\n\n  return target;\n}\n\n/**\n * Encode color values\n * @param rgb\n * @returns color\n */\nexport function encodeRGB565(rgb: number[]): number {\n  const r5 = Math.floor(rgb[0] / 8) + 4;\n  const g6 = Math.floor(rgb[1] / 4) + 2;\n  const b5 = Math.floor(rgb[2] / 8) + 4;\n  return r5 + (g6 << 5) + (b5 << 11);\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Attribute compression and decompression functions.\n\nimport {Vector2, Vector3, clamp, _MathUtils} from '@math.gl/core';\nimport {assert} from '../utils/assert';\n\ntype Vector4 = {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n};\n\nconst RIGHT_SHIFT = 1.0 / 256.0;\nconst LEFT_SHIFT = 256.0;\n\nconst scratchVector2 = new Vector2();\nconst scratchVector3 = new Vector3();\nconst scratchEncodeVector2 = new Vector2();\nconst octEncodeScratch = new Vector2();\n\nconst uint8ForceArray = new Uint8Array(1);\n\n/**\n * Force a value to Uint8\n *\n * @param value\n * @returns\n */\nfunction forceUint8(value: number): number {\n  uint8ForceArray[0] = value;\n  return uint8ForceArray[0];\n}\n\n/**\n * Converts a SNORM value in the range [0, rangeMaximum] to a scalar in the range [-1.0, 1.0].\n *\n * @param value SNORM value in the range [0, rangeMaximum]\n * @param [rangeMaximum=255] The maximum value in the SNORM range, 255 by default.\n * @returns Scalar in the range [-1.0, 1.0].\n *\n * @see CesiumMath.toSNorm\n */\nfunction fromSNorm(value: number, rangeMaximum = 255): number {\n  return (clamp(value, 0.0, rangeMaximum) / rangeMaximum) * 2.0 - 1.0;\n}\n\n/**\n * Converts a scalar value in the range [-1.0, 1.0] to a SNORM in the range [0, rangeMaximum].\n *\n * @param value The scalar value in the range [-1.0, 1.0]\n * @param [rangeMaximum=255] The maximum value in the mapped range, 255 by default.\n * @returns A SNORM value, where 0 maps to -1.0 and rangeMaximum maps to 1.0.\n *\n * @see CesiumMath.fromSNorm\n */\nfunction toSNorm(value: number, rangeMaximum = 255): number {\n  return Math.round((clamp(value, -1.0, 1.0) * 0.5 + 0.5) * rangeMaximum);\n}\n\n/**\n * Returns 1.0 if the given value is positive or zero, and -1.0 if it is negative.\n * This is similar to `Math.sign` except that returns 1.0 instead of\n * 0.0 when the input value is 0.0.\n *\n * @param value The value to return the sign of.\n * @returns The sign of value.\n */\nfunction signNotZero(value: number): number {\n  return value < 0.0 ? -1.0 : 1.0;\n}\n\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-rangeMax] following the 'oct' encoding.\n *\n * Oct encoding is a compact representation of unit length vectors.\n * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n * Cigolle et al 2014: {@link http://jcgt.org/published/0003/02/01/}\n *\n * @param vector The normalized vector to be compressed into 2 component 'oct' encoding.\n * @param result The 2 component oct-encoded unit length vector.\n * @param rangeMax The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n * @returns The 2 component oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octDecodeInRange\n */\nexport function octEncodeInRange(vector: Vector3, rangeMax: number, result: Vector2): Vector2 {\n  assert(vector);\n  assert(result);\n\n  const vector3 = scratchVector3.from(vector);\n\n  assert(Math.abs(vector3.magnitudeSquared() - 1.0) <= _MathUtils.EPSILON6);\n\n  result.x = vector.x / (Math.abs(vector.x) + Math.abs(vector.y) + Math.abs(vector.z));\n  result.y = vector.y / (Math.abs(vector.x) + Math.abs(vector.y) + Math.abs(vector.z));\n\n  if (vector.z < 0) {\n    const x = result.x;\n    const y = result.y;\n    result.x = (1.0 - Math.abs(y)) * signNotZero(x);\n    result.y = (1.0 - Math.abs(x)) * signNotZero(y);\n  }\n\n  result.x = toSNorm(result.x, rangeMax);\n  result.y = toSNorm(result.y, rangeMax);\n\n  return result;\n}\n\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-255] following the 'oct' encoding.\n *\n * @param vector The normalized vector to be compressed into 2 byte 'oct' encoding.\n * @param result The 2 byte oct-encoded unit length vector.\n * @returns he 2 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octEncodeInRange\n * @see octDecode\n */\nexport function octEncode(vector: Vector3, result: Vector2): Vector2 {\n  return octEncodeInRange(vector, 255, result);\n}\n\n/**\n * Encodes a normalized vector into 4-byte vector\n * @param vector The normalized vector to be compressed into 4 byte 'oct' encoding.\n * @param result The 4 byte oct-encoded unit length vector.\n * @returns The 4 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octEncodeInRange\n * @see octDecodeFromVector4\n */\nexport function octEncodeToVector4(vector: Vector3, result: Vector4): Vector4 {\n  octEncodeInRange(vector, 65535, octEncodeScratch);\n  result.x = forceUint8(octEncodeScratch.x * RIGHT_SHIFT);\n  result.y = forceUint8(octEncodeScratch.x);\n  result.z = forceUint8(octEncodeScratch.y * RIGHT_SHIFT);\n  result.w = forceUint8(octEncodeScratch.y);\n  return result;\n}\n\n/**\n * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component vector.\n *\n * @param x The x component of the oct-encoded unit length vector.\n * @param y The y component of the oct-encoded unit length vector.\n * @param rangeMax The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n * @param result The decoded and normalized vector\n * @returns The decoded and normalized vector.\n *\n * @exception x and y must be unsigned normalized integers between 0 and rangeMax.\n *\n * @see octEncodeInRange\n */\nexport function octDecodeInRange(x: number, y: number, rangeMax: number, result: Vector3): Vector3 {\n  assert(result);\n  if (x < 0 || x > rangeMax || y < 0 || y > rangeMax) {\n    throw new Error(`x and y must be unsigned normalized integers between 0 and ${rangeMax}`);\n  }\n\n  result.x = fromSNorm(x, rangeMax);\n  result.y = fromSNorm(y, rangeMax);\n  result.z = 1.0 - (Math.abs(result.x) + Math.abs(result.y));\n\n  if (result.z < 0.0) {\n    const oldVX = result.x;\n    result.x = (1.0 - Math.abs(result.y)) * signNotZero(oldVX);\n    result.y = (1.0 - Math.abs(oldVX)) * signNotZero(result.y);\n  }\n\n  return result.normalize();\n}\n\n/**\n * Decodes a unit-length vector in 2 byte 'oct' encoding to a normalized 3-component vector.\n *\n * @param x The x component of the oct-encoded unit length vector.\n * @param y The y component of the oct-encoded unit length vector.\n * @param result The decoded and normalized vector.\n * @returns he decoded and normalized vector.\n *\n * @exception x and y must be an unsigned normalized integer between 0 and 255.\n *\n * @see octDecodeInRange\n */\nexport function octDecode(x: number, y: number, result: Vector3): Vector3 {\n  return octDecodeInRange(x, y, 255, result);\n}\n\n/**\n * Decodes a unit-length vector in 4 byte 'oct' encoding to a normalized 3-component vector.\n *\n * @param encoded The oct-encoded unit length vector.\n * @param esult The decoded and normalized vector.\n * @returns The decoded and normalized vector.\n *\n * @exception x, y, z, and w must be unsigned normalized integers between 0 and 255.\n *\n * @see octDecodeInRange\n * @see octEncodeToVector4\n */\nexport function octDecodeFromVector4(encoded: Vector4, result: Vector3): Vector3 {\n  assert(encoded);\n  assert(result);\n  const x = encoded.x;\n  const y = encoded.y;\n  const z = encoded.z;\n  const w = encoded.w;\n\n  if (x < 0 || x > 255 || y < 0 || y > 255 || z < 0 || z > 255 || w < 0 || w > 255) {\n    throw new Error('x, y, z, and w must be unsigned normalized integers between 0 and 255');\n  }\n\n  const xOct16 = x * LEFT_SHIFT + y;\n  const yOct16 = z * LEFT_SHIFT + w;\n  return octDecodeInRange(xOct16, yOct16, 65535, result);\n}\n\n/**\n * Packs an oct encoded vector into a single floating-point number.\n *\n * @param encoded The oct encoded vector.\n * @returns The oct encoded vector packed into a single float.\n *\n */\nexport function octPackFloat(encoded: Vector2): number {\n  const vector2 = scratchVector2.from(encoded);\n  return 256.0 * vector2.x + vector2.y;\n}\n\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-255] following the 'oct' encoding and\n * stores those values in a single float-point number.\n *\n * @param vector The normalized vector to be compressed into 2 byte 'oct' encoding.\n * @returns The 2 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n */\nexport function octEncodeFloat(vector: Vector3): number {\n  octEncode(vector, scratchEncodeVector2);\n  return octPackFloat(scratchEncodeVector2);\n}\n\n/**\n * Decodes a unit-length vector in 'oct' encoding packed in a floating-point number to a normalized 3-component vector.\n *\n * @param value The oct-encoded unit length vector stored as a single floating-point number.\n * @param result The decoded and normalized vector\n * @returns The decoded and normalized vector.\n *\n */\nexport function octDecodeFloat(value: number, result: Vector3): Vector3 {\n  assert(Number.isFinite(value));\n\n  const temp = value / 256.0;\n  const x = Math.floor(temp);\n  const y = (temp - x) * 256.0;\n\n  return octDecode(x, y, result);\n}\n\n/**\n * Encodes three normalized vectors into 6 SNORM values in the range of [0-255] following the 'oct' encoding and\n * packs those into two floating-point numbers.\n *\n * @param v1 A normalized vector to be compressed.\n * @param v2 A normalized vector to be compressed.\n * @param v3 A normalized vector to be compressed.\n * @param result The 'oct' encoded vectors packed into two floating-point numbers.\n * @returns The 'oct' encoded vectors packed into two floating-point numbers.\n *\n */\nexport function octPack(v1: Vector3, v2: Vector3, v3: Vector3, result: Vector2): Vector2 {\n  assert(v1);\n  assert(v2);\n  assert(v3);\n  assert(result);\n\n  const encoded1 = octEncodeFloat(v1);\n  const encoded2 = octEncodeFloat(v2);\n\n  const encoded3 = octEncode(v3, scratchEncodeVector2);\n  result.x = 65536.0 * encoded3.x + encoded1;\n  result.y = 65536.0 * encoded3.y + encoded2;\n  return result;\n}\n\n/**\n * Decodes three unit-length vectors in 'oct' encoding packed into a floating-point number to a normalized 3-component vector.\n *\n * @param packed The three oct-encoded unit length vectors stored as two floating-point number.\n * @param v1 One decoded and normalized vector.\n * @param v2 One decoded and normalized vector.\n * @param v3 One decoded and normalized vector.\n */\nexport function octUnpack(packed: Vector2, v1: Vector3, v2: Vector3, v3: Vector3): void {\n  let temp = packed.x / 65536.0;\n  const x = Math.floor(temp);\n  const encodedFloat1 = (temp - x) * 65536.0;\n\n  temp = packed.y / 65536.0;\n  const y = Math.floor(temp);\n  const encodedFloat2 = (temp - y) * 65536.0;\n\n  octDecodeFloat(encodedFloat1, v1);\n  octDecodeFloat(encodedFloat2, v2);\n  octDecode(x, y, v3);\n}\n\n/**\n * Pack texture coordinates into a single float. The texture coordinates will only preserve 12 bits of precision.\n *\n * @param textureCoordinates The texture coordinates to compress.  Both coordinates must be in the range 0.0-1.0.\n * @returns The packed texture coordinates.\n *\n */\nexport function compressTextureCoordinates(textureCoordinates: Vector2): number {\n  // Move x and y to the range 0-4095;\n  const x = (textureCoordinates.x * 4095.0) | 0;\n  const y = (textureCoordinates.y * 4095.0) | 0;\n  return 4096.0 * x + y;\n}\n\n/**\n * Decompresses texture coordinates that were packed into a single float.\n *\n * @param compressed The compressed texture coordinates.\n * @param result The decompressed texture coordinates.\n * @returns The modified result parameter.\n *\n */\nexport function decompressTextureCoordinates(compressed: number, result: Vector2): Vector2 {\n  const temp = compressed / 4096.0;\n  const xZeroTo4095 = Math.floor(temp);\n  result.x = xZeroTo4095 / 4095.0;\n  result.y = (compressed - xZeroTo4095 * 4096) / 4095;\n  return result;\n}\n\n/**\n * Decodes delta and ZigZag encoded vertices. This modifies the buffers in place.\n *\n * @param uBuffer The buffer view of u values.\n * @param vBuffer The buffer view of v values.\n * @param [heightBuffer] The buffer view of height values.\n *\n * @link https://github.com/AnalyticalGraphicsInc/quantized-mesh|quantized-mesh-1.0 terrain format\n */\nexport function zigZagDeltaDecode(\n  uBuffer: Uint16Array,\n  vBuffer: Uint16Array,\n  heightBuffer?: Uint16Array | number[]\n) {\n  assert(uBuffer);\n  assert(vBuffer);\n  assert(uBuffer.length === vBuffer.length);\n  if (heightBuffer) {\n    assert(uBuffer.length === heightBuffer.length);\n  }\n\n  function zigZagDecode(value: number) {\n    return (value >> 1) ^ -(value & 1);\n  }\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < uBuffer.length; ++i) {\n    u += zigZagDecode(uBuffer[i]);\n    v += zigZagDecode(vBuffer[i]);\n\n    uBuffer[i] = u;\n    vBuffer[i] = v;\n\n    if (heightBuffer) {\n      height += zigZagDecode(heightBuffer[i]);\n      heightBuffer[i] = height;\n    }\n  }\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL, GLType} from '@loaders.gl/math';\n\n// Reference:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/1de96d087f0b17575eb1a3f736407b348c765d59/Source/Scene/Cesium3DTileFeatureTable.js\nexport default class Tile3DFeatureTable {\n  json;\n  buffer;\n  featuresLength = 0;\n  _cachedTypedArrays = {};\n\n  constructor(featureTableJson, featureTableBinary) {\n    this.json = featureTableJson;\n    this.buffer = featureTableBinary;\n  }\n\n  getExtension(extensionName) {\n    return this.json.extensions && this.json.extensions[extensionName];\n  }\n\n  hasProperty(propertyName) {\n    return Boolean(this.json[propertyName]);\n  }\n\n  getGlobalProperty(propertyName, componentType = GL.UNSIGNED_INT, componentLength = 1) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        1,\n        jsonValue.byteOffset\n      );\n    }\n\n    return jsonValue;\n  }\n\n  getPropertyArray(propertyName, componentType, componentLength) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      if ('componentType' in jsonValue) {\n        componentType = GLType.fromName(jsonValue.componentType);\n      }\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        this.featuresLength,\n        jsonValue.byteOffset\n      );\n    }\n\n    return this._getTypedArrayFromArray(propertyName, componentType, jsonValue);\n  }\n\n  getProperty(propertyName, componentType, componentLength, featureId, result) {\n    const jsonValue = this.json[propertyName];\n    if (!jsonValue) {\n      return jsonValue;\n    }\n\n    const typedArray = this.getPropertyArray(propertyName, componentType, componentLength);\n\n    if (componentLength === 1) {\n      return typedArray[featureId];\n    }\n\n    for (let i = 0; i < componentLength; ++i) {\n      result[i] = typedArray[componentLength * featureId + i];\n    }\n\n    return result;\n  }\n\n  // HELPERS\n\n  _getTypedArrayFromBinary(propertyName, componentType, componentLength, count, byteOffset) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(\n        componentType,\n        this.buffer.buffer,\n        this.buffer.byteOffset + byteOffset,\n        count * componentLength\n      );\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n\n  _getTypedArrayFromArray(propertyName, componentType, array) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(componentType, array);\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n}\n", "import {GLType} from '@loaders.gl/math'; // '@math.gl/geometry';\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst COMPONENTS_PER_ATTRIBUTE = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\n// TODO - could just return typed array views...\n// prettier-ignore\nconst UNPACKER = {\n  SCALAR: (values, i) => values[i],\n  VEC2: (values, i) => [values[2 * i + 0], values[2 * i + 1]],\n  VEC3: (values, i) => [values[3 * i + 0], values[3 * i + 1], values[3 * i + 2]],\n  VEC4: (values, i) => [values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]],\n  // TODO: check column major\n  MAT2: (values, i) => [\n    values[4 * i + 0], values[4 * i + 1],\n    values[4 * i + 2], values[4 * i + 3]\n  ],\n  MAT3: (values, i) => [\n    values[9 * i + 0], values[9 * i + 1], values[9 * i + 2],\n    values[9 * i + 3], values[9 * i + 4], values[9 * i + 5],\n    values[9 * i + 6], values[9 * i + 7], values[9 * i + 8]\n  ],\n  MAT4: (values, i) => [\n    values[16 * i + 0], values[16 * i + 1], values[16 * i + 2], values[16 * i + 3],\n    values[16 * i + 4], values[16 * i + 5], values[16 * i + 6], values[16 * i + 7],\n    values[16 * i + 8], values[16 * i + 9], values[16 * i + 10], values[16 * i + 11],\n    values[16 * i + 12], values[16 * i + 13], values[16 * i + 14], values[16 * i + 15]\n  ]\n};\n\nconst PACKER = {\n  SCALAR: (x, values, i) => {\n    values[i] = x;\n  },\n  VEC2: (x, values, i) => {\n    values[2 * i + 0] = x[0];\n    values[2 * i + 1] = x[1];\n  },\n  VEC3: (x, values, i) => {\n    values[3 * i + 0] = x[0];\n    values[3 * i + 1] = x[1];\n    values[3 * i + 2] = x[2];\n  },\n  VEC4: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  // TODO: check column major correctness\n  MAT2: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  MAT3: (x, values, i) => {\n    values[9 * i + 0] = x[0];\n    values[9 * i + 1] = x[1];\n    values[9 * i + 2] = x[2];\n    values[9 * i + 3] = x[3];\n    values[9 * i + 4] = x[4];\n    values[9 * i + 5] = x[5];\n    values[9 * i + 6] = x[6];\n    values[9 * i + 7] = x[7];\n    values[9 * i + 8] = x[8];\n    values[9 * i + 9] = x[9];\n  },\n  MAT4: (x, values, i) => {\n    values[16 * i + 0] = x[0];\n    values[16 * i + 1] = x[1];\n    values[16 * i + 2] = x[2];\n    values[16 * i + 3] = x[3];\n    values[16 * i + 4] = x[4];\n    values[16 * i + 5] = x[5];\n    values[16 * i + 6] = x[6];\n    values[16 * i + 7] = x[7];\n    values[16 * i + 8] = x[8];\n    values[16 * i + 9] = x[9];\n    values[16 * i + 10] = x[10];\n    values[16 * i + 11] = x[11];\n    values[16 * i + 12] = x[12];\n    values[16 * i + 13] = x[13];\n    values[16 * i + 14] = x[14];\n    values[16 * i + 15] = x[15];\n  }\n};\n\nexport function createTypedArrayFromAccessor(tile3DAccessor, buffer, byteOffset, length) {\n  const {componentType} = tile3DAccessor;\n  assert(tile3DAccessor.componentType);\n  const type = typeof componentType === 'string' ? GLType.fromName(componentType) : componentType;\n  const size = COMPONENTS_PER_ATTRIBUTE[tile3DAccessor.type];\n  const unpacker = UNPACKER[tile3DAccessor.type];\n  const packer = PACKER[tile3DAccessor.type];\n\n  byteOffset += tile3DAccessor.byteOffset;\n  const values = GLType.createTypedArray(type, buffer, byteOffset, size * length);\n\n  return {\n    values,\n    type,\n    size,\n    unpacker,\n    packer\n  };\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - Finish hierarchy suypport: this file is only half ported\n/* eslint-disable */\n// @ts-nocheck\nconst defined = (x) => x !== undefined;\n\nexport function initializeHierarchy(batchTable, jsonHeader, binaryBody) {\n  if (!jsonHeader) {\n    return null;\n  }\n\n  let hierarchy = batchTable.getExtension('3DTILES_batch_table_hierarchy');\n\n  const legacyHierarchy = jsonHeader.HIERARCHY;\n  if (legacyHierarchy) {\n    // eslint-disable-next-line\n    console.warn('3D Tile Parser: HIERARCHY is deprecated. Use 3DTILES_batch_table_hierarchy.');\n    jsonHeader.extensions = jsonHeader.extensions || {};\n    jsonHeader.extensions['3DTILES_batch_table_hierarchy'] = legacyHierarchy;\n    hierarchy = legacyHierarchy;\n  }\n\n  if (!hierarchy) {\n    return null;\n  }\n\n  return initializeHierarchyValues(hierarchy, binaryBody);\n}\n\n// eslint-disable-next-line max-statements\nfunction initializeHierarchyValues(hierarchyJson, binaryBody) {\n  let i;\n  let classId;\n  let binaryAccessor;\n\n  const instancesLength = hierarchyJson.instancesLength;\n  const classes = hierarchyJson.classes;\n  let classIds = hierarchyJson.classIds;\n  let parentCounts = hierarchyJson.parentCounts;\n  let parentIds = hierarchyJson.parentIds;\n  let parentIdsLength = instancesLength;\n\n  if (defined(classIds.byteOffset)) {\n    classIds.componentType = defaultValue(classIds.componentType, GL.UNSIGNED_SHORT);\n    classIds.type = AttributeType.SCALAR;\n    binaryAccessor = getBinaryAccessor(classIds);\n    classIds = binaryAccessor.createArrayBufferView(\n      binaryBody.buffer,\n      binaryBody.byteOffset + classIds.byteOffset,\n      instancesLength\n    );\n  }\n\n  let parentIndexes;\n  if (defined(parentCounts)) {\n    if (defined(parentCounts.byteOffset)) {\n      parentCounts.componentType = defaultValue(parentCounts.componentType, GL.UNSIGNED_SHORT);\n      parentCounts.type = AttributeType.SCALAR;\n      binaryAccessor = getBinaryAccessor(parentCounts);\n      parentCounts = binaryAccessor.createArrayBufferView(\n        binaryBody.buffer,\n        binaryBody.byteOffset + parentCounts.byteOffset,\n        instancesLength\n      );\n    }\n    parentIndexes = new Uint16Array(instancesLength);\n    parentIdsLength = 0;\n    for (i = 0; i < instancesLength; ++i) {\n      parentIndexes[i] = parentIdsLength;\n      parentIdsLength += parentCounts[i];\n    }\n  }\n\n  if (defined(parentIds) && defined(parentIds.byteOffset)) {\n    parentIds.componentType = defaultValue(parentIds.componentType, GL.UNSIGNED_SHORT);\n    parentIds.type = AttributeType.SCALAR;\n    binaryAccessor = getBinaryAccessor(parentIds);\n    parentIds = binaryAccessor.createArrayBufferView(\n      binaryBody.buffer,\n      binaryBody.byteOffset + parentIds.byteOffset,\n      parentIdsLength\n    );\n  }\n\n  const classesLength = classes.length;\n  for (i = 0; i < classesLength; ++i) {\n    const classInstancesLength = classes[i].length;\n    const properties = classes[i].instances;\n    const binaryProperties = getBinaryProperties(classInstancesLength, properties, binaryBody);\n    classes[i].instances = combine(binaryProperties, properties);\n  }\n\n  const classCounts = new Array(classesLength).fill(0);\n  const classIndexes = new Uint16Array(instancesLength);\n  for (i = 0; i < instancesLength; ++i) {\n    classId = classIds[i];\n    classIndexes[i] = classCounts[classId];\n    ++classCounts[classId];\n  }\n\n  const hierarchy = {\n    classes,\n    classIds,\n    classIndexes,\n    parentCounts,\n    parentIndexes,\n    parentIds\n  };\n\n  validateHierarchy(hierarchy);\n\n  return hierarchy;\n}\n\n// HELPER CODE\n\n// Traverse over the hierarchy and process each instance with the endConditionCallback.\n// When the endConditionCallback returns a value, the traversal stops and that value is returned.\nexport function traverseHierarchy(hierarchy, instanceIndex, endConditionCallback) {\n  if (!hierarchy) {\n    return;\n  }\n\n  const parentCounts = hierarchy.parentCounts;\n  const parentIds = hierarchy.parentIds;\n  if (parentIds) {\n    return endConditionCallback(hierarchy, instanceIndex);\n  }\n  if (parentCounts > 0) {\n    return traverseHierarchyMultipleParents(hierarchy, instanceIndex, endConditionCallback);\n  }\n  return traverseHierarchySingleParent(hierarchy, instanceIndex, endConditionCallback);\n}\n\n// eslint-disable-next-line max-statements\nfunction traverseHierarchyMultipleParents(hierarchy, instanceIndex, endConditionCallback) {\n  const classIds = hierarchy.classIds;\n  const parentCounts = hierarchy.parentCounts;\n  const parentIds = hierarchy.parentIds;\n  const parentIndexes = hierarchy.parentIndexes;\n  const instancesLength = classIds.length;\n\n  // Ignore instances that have already been visited. This occurs in diamond inheritance situations.\n  // Use a marker value to indicate that an instance has been visited, which increments with each run.\n  // This is more efficient than clearing the visited array every time.\n  const visited = scratchVisited;\n  visited.length = Math.max(visited.length, instancesLength);\n  const visitedMarker = ++marker;\n\n  const stack = scratchStack;\n  stack.length = 0;\n  stack.push(instanceIndex);\n\n  while (stack.length > 0) {\n    instanceIndex = stack.pop();\n    if (visited[instanceIndex] === visitedMarker) {\n      // This instance has already been visited, stop traversal\n      continue;\n    }\n    visited[instanceIndex] = visitedMarker;\n    const result = endConditionCallback(hierarchy, instanceIndex);\n    if (defined(result)) {\n      // The end condition was met, stop the traversal and return the result\n      return result;\n    }\n    const parentCount = parentCounts[instanceIndex];\n    const parentIndex = parentIndexes[instanceIndex];\n    for (let i = 0; i < parentCount; ++i) {\n      const parentId = parentIds[parentIndex + i];\n      // Stop the traversal when the instance has no parent (its parentId equals itself)\n      // else add the parent to the stack to continue the traversal.\n      if (parentId !== instanceIndex) {\n        stack.push(parentId);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction traverseHierarchySingleParent(hierarchy, instanceIndex, endConditionCallback) {\n  let hasParent = true;\n  while (hasParent) {\n    const result = endConditionCallback(hierarchy, instanceIndex);\n    if (defined(result)) {\n      // The end condition was met, stop the traversal and return the result\n      return result;\n    }\n    const parentId = hierarchy.parentIds[instanceIndex];\n    hasParent = parentId !== instanceIndex;\n    instanceIndex = parentId;\n  }\n  throw new Error('traverseHierarchySingleParent');\n}\n\n// DEBUG CODE\n\nfunction validateHierarchy(hierarchy) {\n  const scratchValidateStack = [];\n\n  const classIds = hierarchy.classIds;\n  const instancesLength = classIds.length;\n\n  for (let i = 0; i < instancesLength; ++i) {\n    validateInstance(hierarchy, i, stack);\n  }\n}\n\nfunction validateInstance(hierarchy, instanceIndex, stack) {\n  const parentCounts = hierarchy.parentCounts;\n  const parentIds = hierarchy.parentIds;\n  const parentIndexes = hierarchy.parentIndexes;\n  const classIds = hierarchy.classIds;\n  const instancesLength = classIds.length;\n\n  if (!defined(parentIds)) {\n    // No need to validate if there are no parents\n    return;\n  }\n\n  assert(\n    instanceIndex < instancesLength,\n    `Parent index ${instanceIndex} exceeds the total number of instances: ${instancesLength}`\n  );\n  assert(\n    stack.indexOf(instanceIndex) === -1,\n    'Circular dependency detected in the batch table hierarchy.'\n  );\n\n  stack.push(instanceIndex);\n  const parentCount = defined(parentCounts) ? parentCounts[instanceIndex] : 1;\n  const parentIndex = defined(parentCounts) ? parentIndexes[instanceIndex] : instanceIndex;\n  for (let i = 0; i < parentCount; ++i) {\n    const parentId = parentIds[parentIndex + i];\n    // Stop the traversal when the instance has no parent (its parentId equals itself), else continue the traversal.\n    if (parentId !== instanceIndex) {\n      validateInstance(hierarchy, parentId, stack);\n    }\n  }\n  stack.pop(instanceIndex);\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\nimport {createTypedArrayFromAccessor} from './helpers/tile-3d-accessor-utils';\nimport {initializeHierarchy, traverseHierarchy} from './tile-3d-batch-table-hierarchy';\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\nconst clone = (x, y) => x;\n\n// These top level fields in the batch table json are not properties\nconst IGNORED_PROPERTY_FIELDS = {\n  HIERARCHY: true, // Deprecated HIERARCHY property\n  extensions: true,\n  extras: true\n};\n\n// The size of this array equals the maximum instance count among all loaded tiles, which has the potential to be large.\nexport default class Tile3DBatchTableParser {\n  json;\n  binary;\n  featureCount;\n  _extensions;\n  // Copy all top-level property fields from the json object, ignoring special fields\n  _properties;\n  _binaryProperties;\n  // TODO: hierarchy support is only partially implemented and not tested\n  _hierarchy;\n\n  constructor(json, binary, featureCount, options = {}) {\n    assert(featureCount >= 0);\n    this.json = json || {};\n    this.binary = binary;\n    this.featureCount = featureCount;\n\n    this._extensions = this.json?.extensions || {};\n\n    // Copy all top-level property fields from the json object, ignoring special fields\n    this._properties = {};\n    for (const propertyName in this.json) {\n      if (!IGNORED_PROPERTY_FIELDS[propertyName]) {\n        this._properties[propertyName] = this.json[propertyName];\n      }\n    }\n\n    this._binaryProperties = this._initializeBinaryProperties();\n\n    // TODO: hierarchy support is only partially implemented and not tested\n    if (options['3DTILES_batch_table_hierarchy']) {\n      this._hierarchy = initializeHierarchy(this, this.json, this.binary);\n    }\n  }\n\n  getExtension(extensionName) {\n    return this.json && this.json.extensions && this.json.extensions[extensionName];\n  }\n\n  memorySizeInBytes(): number {\n    return 0;\n  }\n\n  isClass(batchId, className: string): boolean {\n    this._checkBatchId(batchId);\n    assert(typeof className === 'string', className);\n\n    // extension: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      // PERFORMANCE_IDEA : cache results in the ancestor classes\n      //   to speed up this check if this area becomes a hotspot\n      // PERFORMANCE_IDEA : treat class names as integers for faster comparisons\n      const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n        const classId = hierarchy.classIds[instanceIndex];\n        const instanceClass = hierarchy.classes[classId];\n        return instanceClass.name === className;\n      });\n      return defined(result);\n    }\n\n    return false;\n  }\n\n  isExactClass(batchId, className) {\n    assert(typeof className === 'string', className);\n\n    return this.getExactClassName(batchId) === className;\n  }\n\n  getExactClassName(batchId) {\n    this._checkBatchId(batchId);\n\n    // extension: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      const classId = this._hierarchy.classIds[batchId];\n      const instanceClass = this._hierarchy.classes[classId];\n      return instanceClass.name;\n    }\n\n    return undefined;\n  }\n\n  hasProperty(batchId, name) {\n    this._checkBatchId(batchId);\n    assert(typeof name === 'string', name);\n\n    return defined(this._properties[name]) || this._hasPropertyInHierarchy(batchId, name);\n  }\n\n  getPropertyNames(batchId, results) {\n    this._checkBatchId(batchId);\n\n    results = defined(results) ? results : [];\n    results.length = 0;\n\n    const propertyNames = Object.keys(this._properties);\n    results.push(...propertyNames);\n\n    if (this._hierarchy) {\n      this._getPropertyNamesInHierarchy(batchId, results);\n    }\n\n    return results;\n  }\n\n  getProperty(batchId, name) {\n    this._checkBatchId(batchId);\n    assert(typeof name === 'string', name);\n\n    if (this._binaryProperties) {\n      const binaryProperty = this._binaryProperties[name];\n      if (defined(binaryProperty)) {\n        return this._getBinaryProperty(binaryProperty, batchId);\n      }\n    }\n\n    const propertyValues = this._properties[name];\n    if (defined(propertyValues)) {\n      return clone(propertyValues[batchId], true);\n    }\n\n    // EXTENSION: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      const hierarchyProperty = this._getHierarchyProperty(batchId, name);\n      if (defined(hierarchyProperty)) {\n        return hierarchyProperty;\n      }\n    }\n\n    return undefined;\n  }\n\n  setProperty(batchId, name, value) {\n    const featureCount = this.featureCount;\n\n    this._checkBatchId(batchId);\n    assert(typeof name === 'string', name);\n\n    if (this._binaryProperties) {\n      const binaryProperty = this._binaryProperties[name];\n      if (binaryProperty) {\n        this._setBinaryProperty(binaryProperty, batchId, value);\n        return;\n      }\n    }\n\n    // EXTENSION: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      if (this._setHierarchyProperty(this, batchId, name, value)) {\n        return;\n      }\n    }\n\n    let propertyValues = this._properties[name];\n    if (!defined(propertyValues)) {\n      // Property does not exist. Create it.\n      this._properties[name] = new Array(featureCount);\n      propertyValues = this._properties[name];\n    }\n\n    propertyValues[batchId] = clone(value, true);\n  }\n\n  // PRIVATE METHODS\n\n  _checkBatchId(batchId) {\n    const valid = batchId >= 0 && batchId < this.featureCount;\n    if (!valid) {\n      throw new Error('batchId not in range [0, featureCount - 1].');\n    }\n  }\n\n  _getBinaryProperty(binaryProperty, index) {\n    return binaryProperty.unpack(binaryProperty.typedArray, index);\n  }\n\n  _setBinaryProperty(binaryProperty, index, value) {\n    binaryProperty.pack(value, binaryProperty.typedArray, index);\n  }\n\n  _initializeBinaryProperties() {\n    let binaryProperties: Record<string, any> | null = null;\n    for (const name in this._properties) {\n      const property = this._properties[name];\n      const binaryProperty = this._initializeBinaryProperty(name, property);\n      // Store any information needed to access the binary data, including the typed array,\n      // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n      if (binaryProperty) {\n        binaryProperties = binaryProperties || {};\n        binaryProperties[name] = binaryProperty;\n      }\n    }\n    return binaryProperties;\n  }\n\n  _initializeBinaryProperty(name, property) {\n    if ('byteOffset' in property) {\n      // This is a binary property\n      const tile3DAccessor = property;\n\n      assert(this.binary, `Property ${name} requires a batch table binary.`);\n      assert(tile3DAccessor.type, `Property ${name} requires a type.`);\n\n      const accessor = createTypedArrayFromAccessor(\n        tile3DAccessor,\n        this.binary.buffer,\n        this.binary.byteOffset | 0,\n        this.featureCount\n      );\n\n      // Store any information needed to access the binary data, including the typed array,\n      // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n      return {\n        typedArray: accessor.values,\n        componentCount: accessor.size,\n        unpack: accessor.unpacker,\n        pack: accessor.packer\n      };\n    }\n\n    return null;\n  }\n\n  //  EXTENSION SUPPORT: 3DTILES_batch_table_hierarchy\n\n  _hasPropertyInHierarchy(batchId, name) {\n    if (!this._hierarchy) {\n      return false;\n    }\n\n    const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instances = hierarchy.classes[classId].instances;\n      return defined(instances[name]);\n    });\n\n    return defined(result);\n  }\n\n  _getPropertyNamesInHierarchy(batchId, results) {\n    traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instances = hierarchy.classes[classId].instances;\n      for (const name in instances) {\n        if (instances.hasOwnProperty(name)) {\n          if (results.indexOf(name) === -1) {\n            results.push(name);\n          }\n        }\n      }\n    });\n  }\n\n  _getHierarchyProperty(batchId, name) {\n    return traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instanceClass = hierarchy.classes[classId];\n      const indexInClass = hierarchy.classIndexes[instanceIndex];\n      const propertyValues = instanceClass.instances[name];\n      if (defined(propertyValues)) {\n        if (defined(propertyValues.typedArray)) {\n          return this._getBinaryProperty(propertyValues, indexInClass);\n        }\n        return clone(propertyValues[indexInClass], true);\n      }\n      return null;\n    });\n  }\n\n  _setHierarchyProperty(batchTable, batchId, name, value) {\n    const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instanceClass = hierarchy.classes[classId];\n      const indexInClass = hierarchy.classIndexes[instanceIndex];\n      const propertyValues = instanceClass.instances[name];\n      if (defined(propertyValues)) {\n        assert(instanceIndex === batchId, `Inherited property \"${name}\" is read-only.`);\n        if (defined(propertyValues.typedArray)) {\n          this._setBinaryProperty(propertyValues, indexInClass, value);\n        } else {\n          propertyValues[indexInClass] = clone(value, true);\n        }\n        return true;\n      }\n      return false;\n    });\n    return defined(result);\n  }\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nconst SIZEOF_UINT32 = 4;\n\n/* PARSE FIXED HEADER:\nPopulates\n  magic, // identifies type of tile\n  type, // String version of magic\n  version,\n  byteLength\n */\nexport function parse3DTileHeaderSync(tile, arrayBuffer, byteOffset = 0) {\n  const view = new DataView(arrayBuffer);\n\n  tile.magic = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  tile.version = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  tile.byteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  // TODO - move version check into each tile parser?\n  if (tile.version !== 1) {\n    throw new Error(`3D Tile Version ${tile.version} not supported`);\n  }\n\n  return byteOffset; // Indicates where the parsing ended\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {getStringFromArrayBuffer} from './parse-utils';\n\nconst SIZEOF_UINT32 = 4;\nconst DEPRECATION_WARNING = 'b3dm tile in legacy format.';\n\n// eslint-disable-next-line max-statements\nexport function parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset) {\n  const view = new DataView(arrayBuffer);\n  let batchLength;\n\n  tile.header = tile.header || {};\n\n  let featureTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  let featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  let batchTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  let batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  // First legacy header format - [batchLength] [batchTableByteLength] ('batchTableJsonByteLength': JSON starts with a quotation mark or the glTF magic)\n  // Second legacy format - [batchTableJsonByteLength] [batchTableBinaryByteLength] [batchLength] (Second legacy format is similar as first but here we check 'batchTableBinaryByteLength' instead)\n  // Current header format - [featureTableJsonByteLength] [featureTableBinaryByteLength] [batchTableJsonByteLength] [batchTableBinaryByteLength]\n  // First byte will be 0x22 or 0x67. The minimum uint32 expected is 0x22000000 = 570425344 = 570MB.\n  if (batchTableJsonByteLength >= 570425344) {\n    byteOffset -= SIZEOF_UINT32 * 2;\n    batchLength = featureTableJsonByteLength;\n    batchTableJsonByteLength = featureTableBinaryByteLength;\n    batchTableBinaryByteLength = 0;\n    featureTableJsonByteLength = 0;\n    featureTableBinaryByteLength = 0;\n\n    console.warn(DEPRECATION_WARNING); // eslint-disable-line\n  } else if (batchTableBinaryByteLength >= 570425344) {\n    byteOffset -= SIZEOF_UINT32;\n    batchLength = batchTableJsonByteLength;\n    batchTableJsonByteLength = featureTableJsonByteLength;\n    batchTableBinaryByteLength = featureTableBinaryByteLength;\n    featureTableJsonByteLength = 0;\n    featureTableBinaryByteLength = 0;\n\n    console.warn(DEPRECATION_WARNING); // eslint-disable-line\n  }\n\n  tile.header.featureTableJsonByteLength = featureTableJsonByteLength;\n  tile.header.featureTableBinaryByteLength = featureTableBinaryByteLength;\n  tile.header.batchTableJsonByteLength = batchTableJsonByteLength;\n  tile.header.batchTableBinaryByteLength = batchTableBinaryByteLength;\n  tile.header.batchLength = batchLength;\n\n  return byteOffset;\n}\n\nexport function parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options) {\n  byteOffset = parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options);\n  byteOffset = parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options);\n  return byteOffset;\n}\n\nfunction parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options) {\n  const {featureTableJsonByteLength, featureTableBinaryByteLength, batchLength} = tile.header;\n\n  tile.featureTableJson = {\n    BATCH_LENGTH: batchLength || 0\n  };\n\n  if (featureTableJsonByteLength > 0) {\n    const featureTableString = getStringFromArrayBuffer(\n      arrayBuffer,\n      byteOffset,\n      featureTableJsonByteLength\n    );\n    tile.featureTableJson = JSON.parse(featureTableString);\n  }\n  byteOffset += featureTableJsonByteLength;\n\n  tile.featureTableBinary = new Uint8Array(arrayBuffer, byteOffset, featureTableBinaryByteLength);\n  byteOffset += featureTableBinaryByteLength;\n\n  /*\n  const featureTable = parseFeatureTable(featureTableJson, featureTableBinary);\n\n  const batchLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n  featureTable.featuresLength = batchLength;\n  */\n\n  return byteOffset;\n}\n\nfunction parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options) {\n  const {batchTableJsonByteLength, batchTableBinaryByteLength} = tile.header;\n\n  if (batchTableJsonByteLength > 0) {\n    const batchTableString = getStringFromArrayBuffer(\n      arrayBuffer,\n      byteOffset,\n      batchTableJsonByteLength\n    );\n    tile.batchTableJson = JSON.parse(batchTableString);\n    byteOffset += batchTableJsonByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      // Has a batch table binary\n      tile.batchTableBinary = new Uint8Array(arrayBuffer, byteOffset, batchTableBinaryByteLength);\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      tile.batchTableBinary = new Uint8Array(tile.batchTableBinary);\n\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  return byteOffset;\n}\n", "import {decodeRGB565, GL} from '@loaders.gl/math';\n\n/* eslint-disable complexity*/\nexport function normalize3DTileColorAttribute(tile, colors, batchTable?) {\n  // no colors defined\n  if (!colors && (!tile || !tile.batchIds || !batchTable)) {\n    return null;\n  }\n\n  const {batchIds, isRGB565, pointCount} = tile;\n  // Batch table, look up colors in table\n  if (batchIds && batchTable) {\n    const colorArray = new Uint8ClampedArray(pointCount * 3);\n    for (let i = 0; i < pointCount; i++) {\n      const batchId = batchIds[i];\n      // TODO figure out what is `dimensions` used for\n      const dimensions = batchTable.getProperty(batchId, 'dimensions');\n      const color = dimensions.map((d) => d * 255);\n      colorArray[i * 3] = color[0];\n      colorArray[i * 3 + 1] = color[1];\n      colorArray[i * 3 + 2] = color[2];\n    }\n    return {\n      type: GL.UNSIGNED_BYTE,\n      value: colorArray,\n      size: 3,\n      normalized: true\n    };\n  }\n\n  // RGB565 case, convert to RGB\n  if (isRGB565) {\n    const colorArray = new Uint8ClampedArray(pointCount * 3);\n    for (let i = 0; i < pointCount; i++) {\n      const color = decodeRGB565(colors[i]);\n      colorArray[i * 3] = color[0];\n      colorArray[i * 3 + 1] = color[1];\n      colorArray[i * 3 + 2] = color[2];\n    }\n    return {\n      type: GL.UNSIGNED_BYTE,\n      value: colorArray,\n      size: 3,\n      normalized: true\n    };\n  }\n\n  // RGB case (tile.isTranslucent)\n  if (colors && colors.length === pointCount * 3) {\n    return {\n      type: GL.UNSIGNED_BYTE,\n      value: colors,\n      size: 3,\n      normalized: true\n    };\n  }\n\n  // DEFAULT: RGBA case\n  return {\n    type: GL.UNSIGNED_BYTE,\n    value: colors,\n    size: 4,\n    normalized: true\n  };\n}\n/* eslint-enable complexity*/\n", "import {Vector3} from '@math.gl/core';\nimport {GL, octDecode} from '@loaders.gl/math';\n\nconst scratchNormal = new Vector3();\n\nexport function normalize3DTileNormalAttribute(tile, normals) {\n  if (!normals) {\n    return null;\n  }\n\n  if (tile.isOctEncoded16P) {\n    const decodedArray = new Float32Array(tile.pointsLength * 3);\n    for (let i = 0; i < tile.pointsLength; i++) {\n      octDecode(normals[i * 2], normals[i * 2 + 1], scratchNormal);\n      // @ts-ignore\n      scratchNormal.toArray(decodedArray, i * 3);\n    }\n\n    return {\n      type: GL.FLOAT,\n      size: 2,\n      value: decodedArray\n    };\n  }\n\n  return {\n    type: GL.FLOAT,\n    size: 2,\n    value: normals\n  };\n}\n", "import {Vector3} from '@math.gl/core';\nimport {GL} from '@loaders.gl/math';\n\n// Prepare attribute for positions\nexport function normalize3DTilePositionAttribute(tile, positions, options) {\n  if (!tile.isQuantized) {\n    return positions;\n  }\n\n  // For quantized posititions, either expand to Float32Array or return custom accessor\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/TileFormats/Instanced3DModel/README.md#quantized-positions\n\n  // Optionally decodes quantized positions on GPU, for simpler renderers that don't accept normalized attributes\n  if (options['3d-tiles'] && options['3d-tiles'].decodeQuantizedPositions) {\n    tile.isQuantized = false;\n    return decodeQuantizedPositions(tile, positions);\n  }\n\n  // Default: Use normalized shorts directly, no copying/processing.\n  // NOTE: The \"missing\" offset/scaling operations are automatically added to modelMatrix if `tile.isQuantized === true`\n  return {\n    type: GL.UNSIGNED_SHORT,\n    value: positions,\n    size: 3,\n    normalized: true\n  };\n}\n\n// Pre-scale quantized positions on CPU\nfunction decodeQuantizedPositions(tile, positions) {\n  const scratchPosition = new Vector3();\n  const decodedArray = new Float32Array(tile.pointCount * 3);\n\n  for (let i = 0; i < tile.pointCount; i++) {\n    // POSITION = POSITION_QUANTIZED / 65535.0 * QUANTIZED_VOLUME_SCALE + QUANTIZED_VOLUME_OFFSET\n    scratchPosition\n      .set(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2])\n      .scale(1 / tile.quantizedRange)\n      .multiply(tile.quantizedVolumeScale)\n      .add(tile.quantizedVolumeOffset)\n      .toArray(decodedArray, i * 3);\n  }\n\n  return decodedArray;\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {DracoLoader} from '@loaders.gl/draco';\nimport {GL} from '@loaders.gl/math';\nimport {Vector3} from '@math.gl/core';\n\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\nimport Tile3DBatchTable from '../classes/tile-3d-batch-table';\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {normalize3DTileColorAttribute} from './helpers/normalize-3d-tile-colors';\nimport {normalize3DTileNormalAttribute} from './helpers/normalize-3d-tile-normals';\nimport {normalize3DTilePositionAttribute} from './helpers/normalize-3d-tile-positions';\n\nexport async function parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n  initializeTile(tile);\n\n  const {featureTable, batchTable} = parsePointCloudTables(tile);\n\n  await parseDraco(tile, featureTable, batchTable, options, context);\n\n  parsePositions(tile, featureTable, options);\n  parseColors(tile, featureTable, batchTable);\n  parseNormals(tile, featureTable);\n\n  return byteOffset;\n}\n\nfunction initializeTile(tile) {\n  // Initialize point cloud tile defaults\n  tile.attributes = {\n    positions: null,\n    colors: null,\n    normals: null,\n    batchIds: null\n  };\n  tile.isQuantized = false;\n  tile.isTranslucent = false;\n  tile.isRGB565 = false;\n  tile.isOctEncoded16P = false;\n}\n\nfunction parsePointCloudTables(tile) {\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n\n  const pointsLength = featureTable.getGlobalProperty('POINTS_LENGTH');\n  if (!Number.isFinite(pointsLength)) {\n    throw new Error('POINTS_LENGTH must be defined');\n  }\n  featureTable.featuresLength = pointsLength;\n\n  tile.featuresLength = pointsLength;\n  tile.pointsLength = pointsLength;\n  tile.pointCount = pointsLength;\n\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  const batchTable = parseBatchIds(tile, featureTable);\n\n  return {featureTable, batchTable};\n}\n\nfunction parsePositions(tile, featureTable, options) {\n  if (!tile.attributes.positions) {\n    if (featureTable.hasProperty('POSITION')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      const positions = featureTable.getPropertyArray('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3);\n\n      tile.isQuantized = true;\n      tile.quantizedRange = (1 << 16) - 1;\n\n      tile.quantizedVolumeScale = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_SCALE',\n        GL.FLOAT,\n        3\n      );\n      if (!tile.quantizedVolumeScale) {\n        throw new Error('QUANTIZED_VOLUME_SCALE must be defined for quantized positions.');\n      }\n\n      tile.quantizedVolumeOffset = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_OFFSET',\n        GL.FLOAT,\n        3\n      );\n      if (!tile.quantizedVolumeOffset) {\n        throw new Error('QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.');\n      }\n\n      tile.attributes.positions = normalize3DTilePositionAttribute(tile, positions, options);\n    }\n  }\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n}\n\nfunction parseColors(tile, featureTable, batchTable) {\n  if (!tile.attributes.colors) {\n    let colors = null;\n    if (featureTable.hasProperty('RGBA')) {\n      colors = featureTable.getPropertyArray('RGBA', GL.UNSIGNED_BYTE, 4);\n      tile.isTranslucent = true;\n    } else if (featureTable.hasProperty('RGB')) {\n      colors = featureTable.getPropertyArray('RGB', GL.UNSIGNED_BYTE, 3);\n    } else if (featureTable.hasProperty('RGB565')) {\n      colors = featureTable.getPropertyArray('RGB565', GL.UNSIGNED_SHORT, 1);\n      tile.isRGB565 = true;\n    }\n\n    tile.attributes.colors = normalize3DTileColorAttribute(tile, colors, batchTable);\n  }\n\n  if (featureTable.hasProperty('CONSTANT_RGBA')) {\n    tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', GL.UNSIGNED_BYTE, 4);\n  }\n}\n\nfunction parseNormals(tile, featureTable) {\n  if (!tile.attributes.normals) {\n    let normals = null;\n    if (featureTable.hasProperty('NORMAL')) {\n      normals = featureTable.getPropertyArray('NORMAL', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('NORMAL_OCT16P')) {\n      normals = featureTable.getPropertyArray('NORMAL_OCT16P', GL.UNSIGNED_BYTE, 2);\n      tile.isOctEncoded16P = true;\n    }\n\n    tile.attributes.normals = normalize3DTileNormalAttribute(tile, normals);\n  }\n}\n\nfunction parseBatchIds(tile, featureTable) {\n  let batchTable: Tile3DBatchTable | null = null;\n  if (!tile.batchIds && featureTable.hasProperty('BATCH_ID')) {\n    tile.batchIds = featureTable.getPropertyArray('BATCH_ID', GL.UNSIGNED_SHORT, 1);\n\n    if (tile.batchIds) {\n      const batchFeatureLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n      if (!batchFeatureLength) {\n        throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n      }\n      const {batchTableJson, batchTableBinary} = tile;\n      batchTable = new Tile3DBatchTable(batchTableJson, batchTableBinary, batchFeatureLength);\n    }\n  }\n  return batchTable;\n}\n\n// eslint-disable-next-line complexity\nasync function parseDraco(tile, featureTable, batchTable, options, context) {\n  let dracoBuffer;\n  let dracoFeatureTableProperties;\n  let dracoBatchTableProperties;\n  const batchTableDraco =\n    tile.batchTableJson &&\n    tile.batchTableJson.extensions &&\n    tile.batchTableJson.extensions['3DTILES_draco_point_compression'];\n  if (batchTableDraco) {\n    dracoBatchTableProperties = batchTableDraco.properties;\n  }\n\n  const featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n  if (featureTableDraco) {\n    dracoFeatureTableProperties = featureTableDraco.properties;\n    const dracoByteOffset = featureTableDraco.byteOffset;\n    const dracoByteLength = featureTableDraco.byteLength;\n    if (!dracoFeatureTableProperties || !Number.isFinite(dracoByteOffset) || !dracoByteLength) {\n      throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n    }\n\n    dracoBuffer = tile.featureTableBinary.slice(dracoByteOffset, dracoByteOffset + dracoByteLength);\n\n    tile.hasPositions = Number.isFinite(dracoFeatureTableProperties.POSITION);\n    tile.hasColors =\n      Number.isFinite(dracoFeatureTableProperties.RGB) ||\n      Number.isFinite(dracoFeatureTableProperties.RGBA);\n    tile.hasNormals = Number.isFinite(dracoFeatureTableProperties.NORMAL);\n    tile.hasBatchIds = Number.isFinite(dracoFeatureTableProperties.BATCH_ID);\n    tile.isTranslucent = Number.isFinite(dracoFeatureTableProperties.RGBA);\n  }\n\n  if (!dracoBuffer) {\n    return true;\n  }\n\n  const dracoData = {\n    buffer: dracoBuffer,\n    properties: {...dracoFeatureTableProperties, ...dracoBatchTableProperties},\n    featureTableProperties: dracoFeatureTableProperties,\n    batchTableProperties: dracoBatchTableProperties,\n    dequantizeInShader: false\n  };\n\n  return await loadDraco(tile, dracoData, options, context);\n}\n\n// eslint-disable-next-line complexity, max-statements\nexport async function loadDraco(tile, dracoData, options, context) {\n  const {parse} = context;\n  const dracoOptions = {\n    ...options,\n    draco: {\n      ...options.draco,\n      extraAttributes: dracoData.batchTableProperties || {}\n    }\n  };\n\n  // The entire tileset might be included, too expensive to serialize\n  delete dracoOptions['3d-tiles'];\n\n  const data = await parse(dracoData.buffer, DracoLoader, dracoOptions);\n\n  const decodedPositions = data.attributes.POSITION && data.attributes.POSITION.value;\n  const decodedColors = data.attributes.COLOR_0 && data.attributes.COLOR_0.value;\n  const decodedNormals = data.attributes.NORMAL && data.attributes.NORMAL.value;\n  const decodedBatchIds = data.attributes.BATCH_ID && data.attributes.BATCH_ID.value;\n  const isQuantizedDraco = decodedPositions && data.attributes.POSITION.value.quantization;\n  const isOctEncodedDraco = decodedNormals && data.attributes.NORMAL.value.quantization;\n  if (isQuantizedDraco) {\n    // Draco quantization range == quantized volume scale - size in meters of the quantized volume\n    // Internal quantized range is the range of values of the quantized data, e.g. 255 for 8-bit, 1023 for 10-bit, etc\n    const quantization = data.POSITION.data.quantization;\n    const range = quantization.range;\n    tile.quantizedVolumeScale = new Vector3(range, range, range);\n    tile.quantizedVolumeOffset = new Vector3(quantization.minValues);\n    tile.quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n    tile.isQuantizedDraco = true;\n  }\n  if (isOctEncodedDraco) {\n    tile.octEncodedRange = (1 << data.NORMAL.data.quantization.quantizationBits) - 1.0;\n    tile.isOctEncodedDraco = true;\n  }\n\n  // Extra batch table attributes\n  const batchTableAttributes = {};\n  if (dracoData.batchTableProperties) {\n    for (const attributeName of Object.keys(dracoData.batchTableProperties)) {\n      if (data.attributes[attributeName] && data.attributes[attributeName].value) {\n        batchTableAttributes[attributeName.toLowerCase()] = data.attributes[attributeName].value;\n      }\n    }\n  }\n\n  tile.attributes = {\n    positions: decodedPositions,\n    colors: normalize3DTileColorAttribute(tile, decodedColors, undefined),\n    normals: decodedNormals,\n    batchIds: decodedBatchIds,\n    ...batchTableAttributes\n  };\n}\n\n// TODO - this is the remaining code from Cesium's parser\n/*\n  const batchTable = new Tile3DBatchTable(tile);\n\n  // parseDracoBuffer(tile, featureTable, batchTable);\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n}\n/*\n\n  if (!tile.attributes.positions) {\n    if (featureTable.hasProperty('POSITION')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3);\n\n\n  if (!tile.colors) {\n    if (featureTable.hasProperty('RGBA')) {\n      tile.colors = featureTable.getPropertyArray('RGBA', GL.UNSIGNED_BYTE, 4);\n      tile.isTranslucent = true;\n    } else if (featureTable.hasProperty('RGB')) {\n      tile.colors = featureTable.getPropertyArray('RGB', GL.UNSIGNED_BYTE, 3);\n    } else if (featureTable.hasPropertry('RGB565')) {\n      tile.colors = featureTable.getPropertyArray('RGB565', GL.UNSIGNED_SHORT, 1);\n      tile.isRGB565 = true;\n    }\n  }\n\n  if (!tile.attributes.normals) {\n    if (featureTable.getPropertry('NORMAL')) {\n      tile.attributes.normals = featureTable.getPropertyArray('NORMAL', GL.FLOAT, 3);\n    } else if (featureTable.getProperty('NORMAL_OCT16P')) {\n      tile.attributes.normals = featureTable.getPropertyArray('NORMAL_OCT16P', GL.UNSIGNED_BYTE, 2);\n      tile.isOctEncoded16P = true;\n    }\n  }\n\n  if (!tile.batchIds) {\n    if (featureTable.hasProperty('BATCH_ID')) {\n      tile.batchIds = featureTable.getPropertyArray('BATCH_ID', GL.UNSIGNED_SHORT, 1);\n    }\n  }\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n\n  if (featureTable.getPropertry('CONSTANT_RGBA')) {\n    tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', GL.UNSIGNED_BYTE, 4);\n  }\n\n  if (tile.batchIds) {\n    const batchLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n    if (!defined(batchLength)) {\n      throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n    }\n\n    if (defined(batchTableBinary)) {\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      batchTableBinary = new Uint8Array(batchTableBinary);\n    }\n\n    if (defined(pointCloud._batchTableLoaded)) {\n      pointCloud._batchTableLoaded(batchLength, batchTableJson, batchTableBinary);\n    }\n  }\n\n  // If points are not batched and there are per-point properties, use these properties for styling purposes\n  var styleableProperties;\n  if (!hasBatchIds && defined(batchTableBinary)) {\n    tile.styleableProperties = Cesium3DTileBatchTable.getBinaryProperties(\n      pointsLength,\n      batchTableJson,\n      batchTableBinary\n    );\n  }\n\n  tile.draco = draco;\n}\n\n// Separate parsing and decoding of Draco\nexport function parseDracoBuffer(tile, featureTable, batchTable) {\n  let dracoBuffer;\n  let dracoFeatureTableProperties;\n  let dracoBatchTableProperties;\n\n  const batchTableDraco = batchTable.getExtension('3DTILES_draco_point_compression');\n  if (batchTableDraco) {\n    dracoBatchTableProperties = batchTableDraco.properties;\n  }\n\n  const featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n  if (featureTableDraco) {\n    dracoFeatureTableProperties = featureTableDraco.properties;\n    const dracoByteOffset = featureTableDraco.byteOffset;\n    const dracoByteLength = featureTableDraco.byteLength;\n    if (!dracoFeatureTableProperties || !dracoByteOffset || !dracoByteLength) {\n      throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n    }\n\n    dracoBuffer = arraySlice(\n      featureTableBinary,\n      dracoByteOffset,\n      dracoByteOffset + dracoByteLength\n    );\n    tile.hasPositions = dracoFeatureTableProperties.POSITION;\n    tile.hasColors = dracoFeatureTableProperties.RGB || dracoFeatureTableProperties.RGBA;\n    tile.hasNormals = dracoFeatureTableProperties.NORMAL;\n    tile.hasBatchIds = dracoFeatureTableProperties.BATCH_ID;\n    tile.isTranslucent = dracoFeatureTableProperties.RGBA;\n  }\n\n  if (dracoBuffer) {\n    tile.draco = {\n      buffer: dracoBuffer,\n      properties: {...dracoFeatureTableProperties, ...dracoBatchTableProperties},\n      featureTableProperties: dracoFeatureTableProperties,\n      batchTableProperties: dracoBatchTableProperties,\n      dequantizeInShader: false\n    };\n\n    tile.decodingState = DECODING_STATE.NEEDS_DECODE;\n  }\n}\n\n/*\nfunction decodeDraco(tile, context) {\n  if (tile.decodingState === DECODING_STATE.READY) {\n    return false;\n  }\n  if (tile.decodingState === DECODING_STATE.NEEDS_DECODE) {\n    var parsedContent = tile._parsedContent;\n    var draco = parsedContent.draco;\n    var decodePromise = DracoLoader.decodePointCloud(draco, context);\n    if (defined(decodePromise)) {\n      tile.decodingState = DECODING_STATE.DECODING;\n      decodePromise.then(function(result) {\n        tile.decodingState = DECODING_STATE.READY;\n        var decodedPositions = defined(result.POSITION) ? result.POSITION.array : undefined;\n        var decodedRgb = defined(result.RGB) ? result.RGB.array : undefined;\n        var decodedRgba = defined(result.RGBA) ? result.RGBA.array : undefined;\n        var decodedNormals = defined(result.NORMAL) ? result.NORMAL.array : undefined;\n        var decodedBatchIds = defined(result.BATCH_ID) ? result.BATCH_ID.array : undefined;\n        var isQuantizedDraco = defined(decodedPositions) && defined(result.POSITION.data.quantization);\n        var isOctEncodedDraco = defined(decodedNormals) && defined(result.NORMAL.data.quantization);\n        if (isQuantizedDraco) {\n          // Draco quantization range == quantized volume scale - size in meters of the quantized volume\n          // Internal quantized range is the range of values of the quantized data, e.g. 255 for 8-bit, 1023 for 10-bit, etc\n          var quantization = result.POSITION.data.quantization;\n          var range = quantization.range;\n          tile._quantizedVolumeScale = Cartesian3.fromElements(range, range, range);\n          tile._quantizedVolumeOffset = Cartesian3.unpack(quantization.minValues);\n          tile._quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n          tile._isQuantizedDraco = true;\n        }\n        if (isOctEncodedDraco) {\n          tile._octEncodedRange = (1 << result.NORMAL.data.quantization.quantizationBits) - 1.0;\n          tile._isOctEncodedDraco = true;\n        }\n        var styleableProperties = parsedContent.styleableProperties;\n        var batchTableProperties = draco.batchTableProperties;\n        for (var name in batchTableProperties) {\n          if (batchTableProperties.hasOwnProperty(name)) {\n            var property = result[name];\n            if (!defined(styleableProperties)) {\n              styleableProperties = {};\n            }\n            styleableProperties[name] = {\n              typedArray : property.array,\n              componentCount : property.data.componentsPerAttribute\n            };\n          }\n        }\n        parsedContent.positions = defaultValue(decodedPositions, parsedContent.positions);\n        parsedContent.colors = defaultValue(defaultValue(decodedRgba, decodedRgb), parsedContent.colors);\n        parsedContent.normals = defaultValue(decodedNormals, parsedContent.normals);\n        parsedContent.batchIds = defaultValue(decodedBatchIds, parsedContent.batchIds);\n        parsedContent.styleableProperties = styleableProperties;\n      }).otherwise(function(error) {\n        tile.decodingState = DECODING_STATE.FAILED;\n        tile._readyPromise.reject(error);\n      });\n    }\n  }\n  return true;\n}\n*/\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - should we automatically parse the embedded glTF or leave it to the app?\n// - I.e. some apps might work directly on a GLB, in that case no need for us to decode...\n// - And if we decode, do we still keep the GLB in case it is needed?\n// - Do we add an option to control this?\n// - Also, should we have hard dependency on gltf module or use injection or auto-discovery for gltf parser?\n\nimport {_getMemoryUsageGLTF, GLTFLoader} from '@loaders.gl/gltf';\nimport {sliceArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport const GLTF_FORMAT = {\n  URI: 0,\n  EMBEDDED: 1\n};\n\nexport function parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n\n  // Assume glTF consumes rest of tile\n  const gltfByteLength = tile.byteOffset + tile.byteLength - byteOffset;\n  if (gltfByteLength === 0) {\n    throw new Error('glTF byte length must be greater than 0.');\n  }\n\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  // TODO - We can avoid copy if already 4-byte aligned...\n  // However the rest of the code may not be able to accept byteOffsets, so copy anyway\n  tile.gltfArrayBuffer = sliceArrayBuffer(arrayBuffer, byteOffset, gltfByteLength);\n  tile.gltfByteOffset = 0;\n  tile.gltfByteLength = gltfByteLength;\n\n  if (byteOffset % 4 === 0) {\n    // tile.gltfArrayBuffer = arrayBuffer;\n    // tile.gltfByteOffset = byteOffset;\n    // tile.gltfByteLength = gltfByteLength;\n  } else {\n    // Create a copy of the glb so that it is 4-byte aligned\n    // eslint-disable-next-line\n    console.warn(`${tile.type}: embedded glb is not aligned to a 4-byte boundary.`);\n  }\n\n  // Entire tile is consumed\n  return tile.byteOffset + tile.byteLength;\n}\n\nexport async function extractGLTF(tile, gltfFormat, options, context) {\n  const tile3DOptions = options['3d-tiles'] || {};\n\n  extractGLTFBufferOrURL(tile, gltfFormat, options);\n\n  if (tile3DOptions.loadGLTF) {\n    const {parse, fetch} = context;\n    if (tile.gltfUrl) {\n      tile.gltfArrayBuffer = await fetch(tile.gltfUrl, options);\n      tile.gltfByteOffset = 0;\n    }\n    if (tile.gltfArrayBuffer) {\n      // TODO - Should handle byteOffset... However, not used now...\n      tile.gltf = await parse(tile.gltfArrayBuffer, GLTFLoader, options, context);\n      tile.gpuMemoryUsageInBytes = _getMemoryUsageGLTF(tile.gltf);\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n    }\n  }\n}\n\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n  switch (gltfFormat) {\n    case GLTF_FORMAT.URI:\n      // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n      // This removes all white space and null characters from the end of the string.\n      const gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n      const textDecoder = new TextDecoder();\n      const gltfUrl = textDecoder.decode(gltfUrlBytes);\n      tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n      break;\n    case GLTF_FORMAT.EMBEDDED:\n      break;\n    default:\n      throw new Error('b3dm: Illegal glTF format field');\n  }\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL} from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n\n  const extensions = tile?.gltf?.extensions;\n  if (extensions && extensions.CESIUM_RTC) {\n    tile.rtcCenter = extensions.CESIUM_RTC.center;\n  }\n\n  return byteOffset;\n}\n\nfunction parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  return byteOffset;\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3, Matrix4, Quaternion} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {GL} from '@loaders.gl/math'; // 'math.gl/geometry';\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\nimport Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseInstancedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, tile.gltfFormat, options, context);\n  return byteOffset;\n}\n\nfunction parseInstancedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n  if (tile.version !== 1) {\n    throw new Error(`Instanced 3D Model version ${tile.version} is not supported`);\n  }\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n\n  const view = new DataView(arrayBuffer);\n\n  tile.gltfFormat = view.getUint32(byteOffset, true);\n  byteOffset += 4;\n\n  // PARSE FEATURE TABLE\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  // TODO - Is the feature table sometimes optional or can check be moved into table header parser?\n  if (tile.featureTableJsonByteLength === 0) {\n    throw new Error('i3dm parser: featureTableJsonByteLength is zero.');\n  }\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n\n  const instancesLength = featureTable.getGlobalProperty('INSTANCES_LENGTH');\n  featureTable.featuresLength = instancesLength;\n\n  if (!Number.isFinite(instancesLength)) {\n    throw new Error('i3dm parser: INSTANCES_LENGTH must be defined');\n  }\n\n  tile.eastNorthUp = featureTable.getGlobalProperty('EAST_NORTH_UP');\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  const batchTable = new Tile3DBatchTable(\n    tile.batchTableJson,\n    tile.batchTableBinary,\n    instancesLength\n  );\n\n  extractInstancedAttributes(tile, featureTable, batchTable, instancesLength);\n\n  return byteOffset;\n}\n\n// eslint-disable-next-line max-statements, complexity\nfunction extractInstancedAttributes(tile, featureTable, batchTable, instancesLength) {\n  // Create model instance collection\n  const collectionOptions = {\n    instances: new Array(instancesLength),\n    batchTable: tile._batchTable,\n    cull: false, // Already culled by 3D Tiles\n    url: undefined,\n    // requestType: RequestType.TILES3D,\n    gltf: undefined,\n    basePath: undefined,\n    incrementallyLoadTextures: false,\n    // TODO - tileset is not available at this stage, tile is parsed independently\n    // upAxis: (tileset && tileset._gltfUpAxis) || [0, 1, 0],\n    forwardAxis: [1, 0, 0]\n  };\n\n  const instances = collectionOptions.instances;\n  const instancePosition = new Vector3();\n  const instanceNormalRight = new Vector3();\n  const instanceNormalUp = new Vector3();\n  const instanceNormalForward = new Vector3();\n  const instanceRotation = new Matrix3();\n  const instanceQuaternion = new Quaternion();\n  const instanceScale = new Vector3();\n  const instanceTranslationRotationScale = {};\n  const instanceTransform = new Matrix4();\n  const scratch1 = [];\n  const scratch2 = [];\n  const scratchVector1 = new Vector3();\n  const scratchVector2 = new Vector3();\n\n  for (let i = 0; i < instancesLength; i++) {\n    let position;\n\n    // Get the instance position\n    if (featureTable.hasProperty('POSITION')) {\n      position = featureTable.getProperty('POSITION', GL.FLOAT, 3, i, instancePosition);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      position = featureTable.getProperty(\n        'POSITION_QUANTIZED',\n        GL.UNSIGNED_SHORT,\n        3,\n        i,\n        instancePosition\n      );\n\n      const quantizedVolumeOffset = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_OFFSET',\n        GL.FLOAT,\n        3,\n        scratchVector1\n      );\n      if (!quantizedVolumeOffset) {\n        throw new Error(\n          'i3dm parser: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.'\n        );\n      }\n\n      const quantizedVolumeScale = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_SCALE',\n        GL.FLOAT,\n        3,\n        scratchVector2\n      );\n      if (!quantizedVolumeScale) {\n        throw new Error(\n          'i3dm parser: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.'\n        );\n      }\n\n      const MAX_UNSIGNED_SHORT = 65535.0;\n      for (let j = 0; j < 3; j++) {\n        position[j] =\n          (position[j] / MAX_UNSIGNED_SHORT) * quantizedVolumeScale[j] + quantizedVolumeOffset[j];\n      }\n    }\n\n    if (!position) {\n      throw new Error('i3dm: POSITION or POSITION_QUANTIZED must be defined for each instance.');\n    }\n\n    instancePosition.copy(position);\n    // @ts-expect-error\n    instanceTranslationRotationScale.translation = instancePosition;\n\n    // Get the instance rotation\n    tile.normalUp = featureTable.getProperty('NORMAL_UP', GL.FLOAT, 3, i, scratch1);\n    tile.normalRight = featureTable.getProperty('NORMAL_RIGHT', GL.FLOAT, 3, i, scratch2);\n\n    const hasCustomOrientation = false;\n    if (tile.normalUp) {\n      if (!tile.normalRight) {\n        throw new Error('i3dm: Custom orientation requires both NORMAL_UP and NORMAL_RIGHT.');\n      }\n      // Vector3.unpack(normalUp, 0, instanceNormalUp);\n      // Vector3.unpack(normalRight, 0, instanceNormalRight);\n      tile.hasCustomOrientation = true;\n    } else {\n      tile.octNormalUp = featureTable.getProperty(\n        'NORMAL_UP_OCT32P',\n        GL.UNSIGNED_SHORT,\n        2,\n        scratch1\n      );\n      tile.octNormalRight = featureTable.getProperty(\n        'NORMAL_RIGHT_OCT32P',\n        GL.UNSIGNED_SHORT,\n        2,\n        scratch2\n      );\n\n      if (tile.octNormalUp) {\n        if (!tile.octNormalRight) {\n          throw new Error(\n            'i3dm: oct-encoded orientation requires NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P'\n          );\n        }\n\n        throw new Error('i3dm: oct-encoded orientation not implemented');\n        /*\n        AttributeCompression.octDecodeInRange(octNormalUp[0], octNormalUp[1], 65535, instanceNormalUp);\n        AttributeCompression.octDecodeInRange(octNormalRight[0], octNormalRight[1], 65535, instanceNormalRight);\n        hasCustomOrientation = true;\n        */\n      } else if (tile.eastNorthUp) {\n        Ellipsoid.WGS84.eastNorthUpToFixedFrame(instancePosition, instanceTransform);\n        instanceTransform.getRotationMatrix3(instanceRotation);\n      } else {\n        instanceRotation.identity();\n      }\n    }\n\n    if (hasCustomOrientation) {\n      instanceNormalForward.copy(instanceNormalRight).cross(instanceNormalUp).normalize();\n      instanceRotation.setColumn(0, instanceNormalRight);\n      instanceRotation.setColumn(1, instanceNormalUp);\n      instanceRotation.setColumn(2, instanceNormalForward);\n    }\n\n    instanceQuaternion.fromMatrix3(instanceRotation);\n    // @ts-expect-error\n    instanceTranslationRotationScale.rotation = instanceQuaternion;\n\n    // Get the instance scale\n    instanceScale.set(1.0, 1.0, 1.0);\n    const scale = featureTable.getProperty('SCALE', GL.FLOAT, 1, i);\n    if (Number.isFinite(scale)) {\n      instanceScale.multiplyByScalar(scale);\n    }\n    const nonUniformScale = featureTable.getProperty('SCALE_NON_UNIFORM', GL.FLOAT, 3, i, scratch1);\n    if (nonUniformScale) {\n      instanceScale.scale(nonUniformScale);\n    }\n\n    // @ts-expect-error\n    instanceTranslationRotationScale.scale = instanceScale;\n\n    // Get the batchId\n    let batchId = featureTable.getProperty('BATCH_ID', GL.UNSIGNED_SHORT, 1, i);\n    if (batchId === undefined) {\n      // If BATCH_ID semantic is undefined, batchId is just the instance number\n      batchId = i;\n    }\n\n    // @ts-expect-error\n    const rotationMatrix = new Matrix4().fromQuaternion(instanceTranslationRotationScale.rotation);\n\n    // Create the model matrix and the instance\n    instanceTransform.identity();\n    // @ts-expect-error\n    instanceTransform.translate(instanceTranslationRotationScale.translation);\n    instanceTransform.multiplyRight(rotationMatrix);\n    // @ts-expect-error\n    instanceTransform.scale(instanceTranslationRotationScale.scale);\n\n    const modelMatrix = instanceTransform.clone();\n    instances[i] = {\n      modelMatrix,\n      batchId\n    };\n  }\n\n  tile.instances = instances;\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Reference code:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/master/Source/Scene/Composite3DTileContent.js#L182\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\n\n// eslint-disable-next-line max-params\nexport async function parseComposite3DTile(\n  tile,\n  arrayBuffer,\n  byteOffset,\n  options,\n  context,\n  parse3DTile\n) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  const view = new DataView(arrayBuffer);\n\n  // Extract number of tiles\n  tile.tilesLength = view.getUint32(byteOffset, true);\n  byteOffset += 4;\n\n  // extract each tile from the byte stream\n  tile.tiles = [];\n  while (tile.tiles.length < tile.tilesLength && tile.byteLength - byteOffset > 12) {\n    const subtile = {};\n    tile.tiles.push(subtile);\n    byteOffset = await parse3DTile(arrayBuffer, byteOffset, options, context, subtile);\n    // TODO - do we need to add any padding in between tiles?\n  }\n\n  return byteOffset;\n}\n", "import {_getMemoryUsageGLTF, GLTFLoader} from '@loaders.gl/gltf';\n\nexport async function parseGltf3DTile(tile, arrayBuffer, options, context) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  const {parse} = context;\n  tile.gltf = await parse(arrayBuffer, GLTFLoader, options, context);\n  tile.gpuMemoryUsageInBytes = _getMemoryUsageGLTF(tile.gltf);\n}\n", "// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {getMagicString} from './helpers/parse-utils';\n\nimport {parsePointCloud3DTile} from './parse-3d-tile-point-cloud';\nimport {parseBatchedModel3DTile} from './parse-3d-tile-batched-model';\nimport {parseInstancedModel3DTile} from './parse-3d-tile-instanced-model';\nimport {parseComposite3DTile} from './parse-3d-tile-composite';\nimport {parseGltf3DTile} from './parse-3d-tile-gltf';\n\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = {}) {\n  // @ts-expect-error\n  tile.byteOffset = byteOffset;\n  // @ts-expect-error\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  // @ts-expect-error\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n      return await parseComposite3DTile(\n        tile,\n        arrayBuffer,\n        byteOffset,\n        options,\n        context,\n        parse3DTile\n      );\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.GLTF:\n      return await parseGltf3DTile(tile, arrayBuffer, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      // @ts-expect-error\n      throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n  }\n}\n", "import type {Subtree, ExplicitBitstream} from '../../../types';\nimport type {LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\n\nconst SUBTREE_FILE_MAGIC = 0x74627573;\nconst SUBTREE_FILE_VERSION = 1;\n\n/**\n * Parse subtree file\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling#subtree-file-format\n * @param data\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport default async function parse3DTilesSubtree(\n  data: ArrayBuffer,\n  options: LoaderOptions | undefined,\n  context: LoaderContext | undefined\n): Promise<Subtree> {\n  const magic = new Uint32Array(data.slice(0, 4));\n\n  if (magic[0] !== SUBTREE_FILE_MAGIC) {\n    throw new Error('Wrong subtree file magic number');\n  }\n\n  const version = new Uint32Array(data.slice(4, 8));\n\n  if (version[0] !== SUBTREE_FILE_VERSION) {\n    throw new Error('Wrong subtree file verson, must be 1');\n  }\n\n  const jsonByteLength = parseUint64Value(data.slice(8, 16));\n  const stringAttribute = new Uint8Array(data, 24, jsonByteLength);\n\n  const textDecoder = new TextDecoder('utf8');\n  const string = textDecoder.decode(stringAttribute);\n  const subtree = JSON.parse(string);\n\n  const binaryByteLength = parseUint64Value(data.slice(16, 24));\n  let internalBinaryBuffer = new ArrayBuffer(0);\n\n  if (binaryByteLength) {\n    internalBinaryBuffer = data.slice(24 + jsonByteLength);\n  }\n\n  if ('bufferView' in subtree.tileAvailability) {\n    subtree.tileAvailability.explicitBitstream = await getExplicitBitstream(\n      subtree,\n      'tileAvailability',\n      internalBinaryBuffer,\n      context\n    );\n  }\n\n  if ('bufferView' in subtree.contentAvailability) {\n    subtree.contentAvailability.explicitBitstream = await getExplicitBitstream(\n      subtree,\n      'contentAvailability',\n      internalBinaryBuffer,\n      context\n    );\n  }\n\n  if ('bufferView' in subtree.childSubtreeAvailability) {\n    subtree.childSubtreeAvailability.explicitBitstream = await getExplicitBitstream(\n      subtree,\n      'childSubtreeAvailability',\n      internalBinaryBuffer,\n      context\n    );\n  }\n\n  return subtree;\n}\n\n/**\n * Get url for bitstream downloading\n * @param bitstreamRelativeUri\n * @param basePath\n * @returns\n */\nfunction resolveBufferUri(bitstreamRelativeUri: string, basePath: string): string {\n  const hasProtocol = basePath.startsWith('http');\n\n  if (hasProtocol) {\n    const resolvedUri = new URL(bitstreamRelativeUri, basePath);\n    return decodeURI(resolvedUri.toString());\n  }\n\n  /**\n   * Adding http protocol only for new URL constructor usage.\n   * It allows to resolve relative paths like ../../example with basePath.\n   */\n  const basePathWithProtocol = `http://${basePath}`;\n  const resolvedUri = new URL(bitstreamRelativeUri, basePathWithProtocol);\n  /**\n   * Drop protocol and use just relative path.\n   */\n  return `/${resolvedUri.host}${resolvedUri.pathname}`;\n}\n\n/**\n * Get explicit bitstream for subtree availability data.\n * @param subtree\n * @param name\n * @param internalBinaryBuffer\n */\nasync function getExplicitBitstream(\n  subtree: Subtree,\n  name: string,\n  internalBinaryBuffer: ArrayBuffer,\n  context: LoaderContext | undefined\n): Promise<ExplicitBitstream> {\n  const bufferViewIndex = subtree[name].bufferView;\n  const bufferView = subtree.bufferViews[bufferViewIndex];\n  const buffer = subtree.buffers[bufferView.buffer];\n\n  if (!context?.url || !context.fetch) {\n    throw new Error('Url is not provided');\n  }\n\n  if (!context.fetch) {\n    throw new Error('fetch is not provided');\n  }\n\n  // External bitstream loading\n  if (buffer.uri) {\n    const bufferUri = resolveBufferUri(buffer.uri, context?.url);\n    const response = await context.fetch(bufferUri);\n    const data = await response.arrayBuffer();\n    // Return view of bitstream.\n    return new Uint8Array(data, bufferView.byteOffset, bufferView.byteLength);\n  }\n  // Return view of bitstream.\n  return new Uint8Array(internalBinaryBuffer, bufferView.byteOffset, bufferView.byteLength);\n}\n\n/**\n * Parse buffer to return uint64 value\n * @param buffer\n * @returns 64-bit value until precision is lost after Number.MAX_SAFE_INTEGER\n */\nfunction parseUint64Value(buffer: ArrayBuffer): number {\n  const dataView = new DataView(buffer);\n  const left = dataView.getUint32(0, true);\n  const right = dataView.getUint32(4, true);\n  // combine the two 32-bit values\n  return left + 2 ** 32 * right;\n}\n", "import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parse3DTilesSubtree from './lib/parsers/helpers/parse-3d-tile-subtree';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Loader for 3D Tiles Subtree\n *\n */\nexport const Tile3DSubtreeLoader: LoaderWithParser = {\n  id: '3d-tiles-subtree',\n  name: '3D Tiles Subtree',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['subtree'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['subtree'],\n  parse: parse3DTilesSubtree,\n  options: {}\n};\n", "/**\n * @license\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// WebAssembly optimizations to do native i64 multiplication and divide\nvar wasm = null;\ntry {\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n  ])), {}).exports;\n} catch (e) {\n  // no wasm support :(\n}\n\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nfunction Long(low, high, unsigned) {\n\n  /**\n   * The low 32 bits as a signed value.\n   * @type {number}\n   */\n  this.low = low | 0;\n\n  /**\n   * The high 32 bits as a signed value.\n   * @type {number}\n   */\n  this.high = high | 0;\n\n  /**\n   * Whether unsigned or not.\n   * @type {boolean}\n   */\n  this.unsigned = !!unsigned;\n}\n\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\n\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n  return (obj && obj[\"__isLong__\"]) === true;\n}\n\n/**\n * @function\n * @param {*} value number\n * @returns {number}\n * @inner\n */\nfunction ctz32(value) {\n  var c = Math.clz32(value & -value);\n  return value ? 31 - c : c;\n}\n\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\nLong.isLong = isLong;\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromInt(value, unsigned) {\n  var obj, cachedObj, cache;\n  if (unsigned) {\n    value >>>= 0;\n    if (cache = (0 <= value && value < 256)) {\n      cachedObj = UINT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, 0, true);\n    if (cache)\n      UINT_CACHE[value] = obj;\n    return obj;\n  } else {\n    value |= 0;\n    if (cache = (-128 <= value && value < 128)) {\n      cachedObj = INT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, value < 0 ? -1 : 0, false);\n    if (cache)\n      INT_CACHE[value] = obj;\n    return obj;\n  }\n}\n\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromInt = fromInt;\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromNumber(value, unsigned) {\n  if (isNaN(value))\n    return unsigned ? UZERO : ZERO;\n  if (unsigned) {\n    if (value < 0)\n      return UZERO;\n    if (value >= TWO_PWR_64_DBL)\n      return MAX_UNSIGNED_VALUE;\n  } else {\n    if (value <= -TWO_PWR_63_DBL)\n      return MIN_VALUE;\n    if (value + 1 >= TWO_PWR_63_DBL)\n      return MAX_VALUE;\n  }\n  if (value < 0)\n    return fromNumber(-value, unsigned).neg();\n  return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromNumber = fromNumber;\n\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromBits(lowBits, highBits, unsigned) {\n  return new Long(lowBits, highBits, unsigned);\n}\n\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromBits = fromBits;\n\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nfunction fromString(str, unsigned, radix) {\n  if (str.length === 0)\n    throw Error('empty string');\n  if (typeof unsigned === 'number') {\n    // For goog.math.long compatibility\n    radix = unsigned;\n    unsigned = false;\n  } else {\n    unsigned = !!unsigned;\n  }\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n    return unsigned ? UZERO : ZERO;\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n\n  var p;\n  if ((p = str.indexOf('-')) > 0)\n    throw Error('interior hyphen');\n  else if (p === 0) {\n    return fromString(str.substring(1), unsigned, radix).neg();\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 8));\n\n  var result = ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i),\n      value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = fromNumber(pow_dbl(radix, size));\n      result = result.mul(power).add(fromNumber(value));\n    } else {\n      result = result.mul(radixToPower);\n      result = result.add(fromNumber(value));\n    }\n  }\n  result.unsigned = unsigned;\n  return result;\n}\n\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\nLong.fromString = fromString;\n\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromValue(val, unsigned) {\n  if (typeof val === 'number')\n    return fromNumber(val, unsigned);\n  if (typeof val === 'string')\n    return fromString(val, unsigned);\n  // Throws for non-objects, converts non-instanceof Long:\n  return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\nLong.fromValue = fromValue;\n\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ZERO = fromInt(0);\n\n/**\n * Signed zero.\n * @type {!Long}\n */\nLong.ZERO = ZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UZERO = fromInt(0, true);\n\n/**\n * Unsigned zero.\n * @type {!Long}\n */\nLong.UZERO = UZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ONE = fromInt(1);\n\n/**\n * Signed one.\n * @type {!Long}\n */\nLong.ONE = ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UONE = fromInt(1, true);\n\n/**\n * Unsigned one.\n * @type {!Long}\n */\nLong.UONE = UONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar NEG_ONE = fromInt(-1);\n\n/**\n * Signed negative one.\n * @type {!Long}\n */\nLong.NEG_ONE = NEG_ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n\n/**\n * Maximum signed value.\n * @type {!Long}\n */\nLong.MAX_VALUE = MAX_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n/**\n * Minimum signed value.\n * @type {!Long}\n */\nLong.MIN_VALUE = MIN_VALUE;\n\n/**\n * @alias Long.prototype\n * @inner\n */\nvar LongPrototype = Long.prototype;\n\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toInt = function toInt() {\n  return this.unsigned ? this.low >>> 0 : this.low;\n};\n\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toNumber = function toNumber() {\n  if (this.unsigned)\n    return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\n  return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n};\n\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nLongPrototype.toString = function toString(radix) {\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n  if (this.isZero())\n    return '0';\n  if (this.isNegative()) { // Unsigned Longs are never negative\n    if (this.eq(MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = fromNumber(radix),\n        div = this.div(radixLong),\n        rem1 = div.mul(radixLong).sub(this);\n      return div.toString(radix) + rem1.toInt().toString(radix);\n    } else\n      return '-' + this.neg().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n    rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower),\n      intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n      digits = intval.toString(radix);\n    rem = remDiv;\n    if (rem.isZero())\n      return digits + result;\n    else {\n      while (digits.length < 6)\n        digits = '0' + digits;\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nLongPrototype.getHighBits = function getHighBits() {\n  return this.high;\n};\n\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n  return this.high >>> 0;\n};\n\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nLongPrototype.getLowBits = function getLowBits() {\n  return this.low;\n};\n\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n  return this.low >>> 0;\n};\n\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n  if (this.isNegative()) // Unsigned Longs are never negative\n    return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n  var val = this.high != 0 ? this.high : this.low;\n  for (var bit = 31; bit > 0; bit--)\n    if ((val & (1 << bit)) != 0)\n      break;\n  return this.high != 0 ? bit + 33 : bit + 1;\n};\n\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isZero = function isZero() {\n  return this.high === 0 && this.low === 0;\n};\n\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\nLongPrototype.eqz = LongPrototype.isZero;\n\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isNegative = function isNegative() {\n  return !this.unsigned && this.high < 0;\n};\n\n/**\n * Tests if this Long's value is positive or zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isPositive = function isPositive() {\n  return this.unsigned || this.high >= 0;\n};\n\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isOdd = function isOdd() {\n  return (this.low & 1) === 1;\n};\n\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isEven = function isEven() {\n  return (this.low & 1) === 0;\n};\n\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.equals = function equals(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n    return false;\n  return this.high === other.high && this.low === other.low;\n};\n\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.eq = LongPrototype.equals;\n\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.notEquals = function notEquals(other) {\n  return !this.eq(/* validates */ other);\n};\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.neq = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ne = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThan = function lessThan(other) {\n  return this.comp(/* validates */ other) < 0;\n};\n\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lt = LongPrototype.lessThan;\n\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n  return this.comp(/* validates */ other) <= 0;\n};\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.le = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThan = function greaterThan(other) {\n  return this.comp(/* validates */ other) > 0;\n};\n\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gt = LongPrototype.greaterThan;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n  return this.comp(/* validates */ other) >= 0;\n};\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.compare = function compare(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.eq(other))\n    return 0;\n  var thisNeg = this.isNegative(),\n    otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg)\n    return -1;\n  if (!thisNeg && otherNeg)\n    return 1;\n  // At this point the sign bits are the same\n  if (!this.unsigned)\n    return this.sub(other).isNegative() ? -1 : 1;\n  // Both are positive if at least one is unsigned\n  return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\n};\n\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.comp = LongPrototype.compare;\n\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nLongPrototype.negate = function negate() {\n  if (!this.unsigned && this.eq(MIN_VALUE))\n    return MIN_VALUE;\n  return this.not().add(ONE);\n};\n\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\nLongPrototype.neg = LongPrototype.negate;\n\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nLongPrototype.add = function add(addend) {\n  if (!isLong(addend))\n    addend = fromValue(addend);\n\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = addend.high >>> 16;\n  var b32 = addend.high & 0xFFFF;\n  var b16 = addend.low >>> 16;\n  var b00 = addend.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.subtract = function subtract(subtrahend) {\n  if (!isLong(subtrahend))\n    subtrahend = fromValue(subtrahend);\n  return this.add(subtrahend.neg());\n};\n\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.sub = LongPrototype.subtract;\n\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.multiply = function multiply(multiplier) {\n  if (this.isZero())\n    return this;\n  if (!isLong(multiplier))\n    multiplier = fromValue(multiplier);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = wasm[\"mul\"](this.low,\n      this.high,\n      multiplier.low,\n      multiplier.high);\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (multiplier.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  if (this.eq(MIN_VALUE))\n    return multiplier.isOdd() ? MIN_VALUE : ZERO;\n  if (multiplier.eq(MIN_VALUE))\n    return this.isOdd() ? MIN_VALUE : ZERO;\n\n  if (this.isNegative()) {\n    if (multiplier.isNegative())\n      return this.neg().mul(multiplier.neg());\n    else\n      return this.neg().mul(multiplier).neg();\n  } else if (multiplier.isNegative())\n    return this.mul(multiplier.neg()).neg();\n\n  // If both longs are small, use float multiplication\n  if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n    return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = multiplier.high >>> 16;\n  var b32 = multiplier.high & 0xFFFF;\n  var b16 = multiplier.low >>> 16;\n  var b00 = multiplier.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.mul = LongPrototype.multiply;\n\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.divide = function divide(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n  if (divisor.isZero())\n    throw Error('division by zero');\n\n  // use wasm support if present\n  if (wasm) {\n    // guard against signed division overflow: the largest\n    // negative number / -1 would be 1 larger than the largest\n    // positive number, due to two's complement.\n    if (!this.unsigned &&\n      this.high === -0x80000000 &&\n      divisor.low === -1 && divisor.high === -1) {\n      // be consistent with non-wasm code path\n      return this;\n    }\n    var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (this.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  var approx, rem, res;\n  if (!this.unsigned) {\n    // This section is only relevant for signed longs and is derived from the\n    // closure library as a whole.\n    if (this.eq(MIN_VALUE)) {\n      if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n        return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n      else if (divisor.eq(MIN_VALUE))\n        return ONE;\n      else {\n        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n        var halfThis = this.shr(1);\n        approx = halfThis.div(divisor).shl(1);\n        if (approx.eq(ZERO)) {\n          return divisor.isNegative() ? ONE : NEG_ONE;\n        } else {\n          rem = this.sub(divisor.mul(approx));\n          res = approx.add(rem.div(divisor));\n          return res;\n        }\n      }\n    } else if (divisor.eq(MIN_VALUE))\n      return this.unsigned ? UZERO : ZERO;\n    if (this.isNegative()) {\n      if (divisor.isNegative())\n        return this.neg().div(divisor.neg());\n      return this.neg().div(divisor).neg();\n    } else if (divisor.isNegative())\n      return this.div(divisor.neg()).neg();\n    res = ZERO;\n  } else {\n    // The algorithm below has not been made for unsigned longs. It's therefore\n    // required to take special care of the MSB prior to running it.\n    if (!divisor.unsigned)\n      divisor = divisor.toUnsigned();\n    if (divisor.gt(this))\n      return UZERO;\n    if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n      return UONE;\n    res = UZERO;\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  rem = this;\n  while (rem.gte(divisor)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n      delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\n\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n      approxRem = approxRes.mul(divisor);\n    while (approxRem.isNegative() || approxRem.gt(rem)) {\n      approx -= delta;\n      approxRes = fromNumber(approx, this.unsigned);\n      approxRem = approxRes.mul(divisor);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero())\n      approxRes = ONE;\n\n    res = res.add(approxRes);\n    rem = rem.sub(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.div = LongPrototype.divide;\n\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.modulo = function modulo(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  return this.sub(this.div(divisor).mul(divisor));\n};\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.mod = LongPrototype.modulo;\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.rem = LongPrototype.modulo;\n\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nLongPrototype.not = function not() {\n  return fromBits(~this.low, ~this.high, this.unsigned);\n};\n\n/**\n * Returns count leading zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countLeadingZeros = function countLeadingZeros() {\n  return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n};\n\n/**\n * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.clz = LongPrototype.countLeadingZeros;\n\n/**\n * Returns count trailing zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countTrailingZeros = function countTrailingZeros() {\n  return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n};\n\n/**\n * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.ctz = LongPrototype.countTrailingZeros;\n\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.and = function and(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.or = function or(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.xor = function xor(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n  else\n    return fromBits(0, this.low << (numBits - 32), this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shl = LongPrototype.shiftLeft;\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRight = function shiftRight(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n  else\n    return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n};\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr = LongPrototype.shiftRight;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits < 32) return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >>> numBits, this.unsigned);\n  if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n  return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\n};\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateLeft = function rotateLeft(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotl = LongPrototype.rotateLeft;\n\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateRight = function rotateRight(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotr = LongPrototype.rotateRight;\n\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nLongPrototype.toSigned = function toSigned() {\n  if (!this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, false);\n};\n\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nLongPrototype.toUnsigned = function toUnsigned() {\n  if (this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, true);\n};\n\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nLongPrototype.toBytes = function toBytes(le) {\n  return le ? this.toBytesLE() : this.toBytesBE();\n};\n\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nLongPrototype.toBytesLE = function toBytesLE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    lo & 0xff,\n    lo >>> 8 & 0xff,\n    lo >>> 16 & 0xff,\n    lo >>> 24,\n    hi & 0xff,\n    hi >>> 8 & 0xff,\n    hi >>> 16 & 0xff,\n    hi >>> 24\n  ];\n};\n\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nLongPrototype.toBytesBE = function toBytesBE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    hi >>> 24,\n    hi >>> 16 & 0xff,\n    hi >>> 8 & 0xff,\n    hi & 0xff,\n    lo >>> 24,\n    lo >>> 16 & 0xff,\n    lo >>> 8 & 0xff,\n    lo & 0xff\n  ];\n};\n\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\n  return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n};\n\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n  return new Long(\n    bytes[0] |\n    bytes[1] << 8 |\n    bytes[2] << 16 |\n    bytes[3] << 24,\n    bytes[4] |\n    bytes[5] << 8 |\n    bytes[6] << 16 |\n    bytes[7] << 24,\n    unsigned\n  );\n};\n\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n  return new Long(\n    bytes[4] << 24 |\n    bytes[5] << 16 |\n    bytes[6] << 8 |\n    bytes[7],\n    bytes[0] << 24 |\n    bytes[1] << 16 |\n    bytes[2] << 8 |\n    bytes[3],\n    unsigned\n  );\n};\n\nexport default Long;\n", "// loaders.gl, MIT license\n\nimport Long from 'long';\n\nconst MAXIMUM_TOKEN_LENGTH = 16;\n\n/**\n * Convert the S2 token to the S2 cell ID\n * @param token {string} A string that is the cell's hex token. Zero cell ID is represented as 'X'.\n * @returns {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * See {@link https://github.com/google/s2-geometry-library-java/blob/c04b68bf3197a9c34082327eeb3aec7ab7c85da1/src/com/google/common/geometry/S2CellId.java#L439} for more information\n */\nexport function getS2CellIdFromToken(token: string): Long {\n  if (token === 'X') {\n    token = '';\n  }\n  // pad token with zeros to make the length 16 that is defined in MAXIMUM_TOKEN_LENGTH\n  const paddedToken = token.padEnd(MAXIMUM_TOKEN_LENGTH, '0');\n  return Long.fromString(paddedToken, true, 16); // Hex base\n}\n\n/**\n * Convert the S2 cell ID to the S2 token\n * @param cellId {Long} A 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * @returns {string} A string that is the cell's hex token. Zero cell ID is represented as 'X'.\n */\nexport function getS2TokenFromCellId(cellId: Long): string {\n  if (cellId.isZero()) {\n    return 'X';\n  }\n  let numZeroDigits = cellId.countTrailingZeros();\n\n  const remainder = numZeroDigits % 4;\n  numZeroDigits = (numZeroDigits - remainder) / 4;\n  const trailingZeroHexChars = numZeroDigits;\n  numZeroDigits *= 4;\n\n  const x = cellId.shiftRightUnsigned(numZeroDigits);\n  const hexString = x.toString(16).replace(/0+$/, '');\n  const zeroString = Array(17 - trailingZeroHexChars - hexString.length).join('0');\n  return zeroString + hexString;\n}\n\n/**\n * Get one of four S2 cell's children.\n * @param cellId {Long} A 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * The cell must NOT be a leaf one. So, the cell's level is in the range [0-29].\n * @param index {number} Child index defines one of four S2 cell's children. Must be in the range [0-3].\n * @returns The ID of the cell's child.\n */\nexport function getS2ChildCellId(cellId: Long, index: number): Long {\n  // Shift sentinel bit 2 positions to the right.\n  const newLsb = lsb(cellId).shiftRightUnsigned(2);\n  // Insert child index before the sentinel bit.\n  const childCellId: Long = cellId.add(Long.fromNumber(2 * index + 1 - 4).multiply(newLsb));\n  return childCellId;\n}\n\n/**\n * Return the lowest-numbered bit that is on for this cell id.\n * @private\n * @param cellId {Long} Cell id.\n * @returns {Long} The lowest-numbered bit that is on for this cell id.\n */\nfunction lsb(cellId: Long): Long {\n  return cellId.and(cellId.not().add(1)); // eslint-disable-line\n}\n", "// math.gl, MIT license\n/*\nAdapted from s2-geometry under ISC License (ISC)\nCopyright (c) 2012-2016, Jon Atkins <github@jonatkins.com>\nCopyright (c) 2016, AJ ONeal <aj@daplie.com>\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport Long from 'long';\n\n//\n// Functional Style\n//\nconst FACE_BITS = 3;\nconst MAX_LEVEL = 30;\nconst POS_BITS = 2 * MAX_LEVEL + 1; // 61 (60 bits of data, 1 bit lsb marker)\nconst RADIAN_TO_DEGREE = 180 / Math.PI;\n\n/**\n * An object describing the S2 cell\n * @param face {number} Selects one of the six cube faces. The value is in the range [0..5]\n * @param ij {[number, number]} “i” and “j” are integers in the range [0..2**30-1] that identify the cell.\n * @param level {number} The number of times the cell has been subdivided (starting with a face cell). The value is in the range [0..30]\n */\nexport type S2Cell = {\n  face: number;\n  ij: [number, number];\n  level: number;\n};\n\n/**\n * Return the S2Cell\n * @param hilbertQuadkey {string} A string that is the Hilbert quad key (containing /)\n * @returns {@link S2Cell}\n */\n// eslint-disable-next-line max-statements\nexport function getS2CellFromQuadKey(hilbertQuadkey: string): S2Cell {\n  if (hilbertQuadkey.length === 0) {\n    throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n  }\n  const parts: string[] = hilbertQuadkey.split('/');\n  const face: number = parseInt(parts[0], 10); // face is in the range [0..5]\n  const position: string = parts[1]; // position is in the range [0..4**30-1]\n  const maxLevel: number = position.length;\n  let level = 0;\n\n  const point = [0, 0] as [number, number];\n\n  for (let i = maxLevel - 1; i >= 0; i--) {\n    level = maxLevel - i;\n    const bit = position[i];\n    let rx = 0;\n    let ry = 0;\n    if (bit === '1') {\n      ry = 1;\n    } else if (bit === '2') {\n      rx = 1;\n      ry = 1;\n    } else if (bit === '3') {\n      rx = 1;\n    }\n\n    const val = Math.pow(2, level - 1);\n    rotateAndFlipQuadrant(val, point, rx, ry);\n\n    point[0] += val * rx;\n    point[1] += val * ry;\n  }\n\n  if (face % 2 === 1) {\n    const t = point[0];\n    point[0] = point[1];\n    point[1] = t;\n  }\n\n  return {face, ij: point, level};\n}\n\n/**\n * Convets S2 cell ID to the Hilbert quad key\n * @param cellId {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face\n * @returns {string} the Hilbert quad key (containing /) as a string in the format 'face/pos', where\n *  - face is a 10-base representation of the face number\n *  - pos is a 4-base representation of the position along the Hilbert curve. For example,\n *    pos == '13' means the following:\n *       The face is divided two times. After the first time the child cell with position 1 will be selected.\n *       Then, this cell will be divided the second time, and the child cell with position 3 will be selected.\n */\nexport function getS2QuadkeyFromCellId(cellId: Long): string {\n  if (cellId.isZero()) {\n    // Invalid token\n    return '';\n  }\n\n  let bin = cellId.toString(2);\n\n  while (bin.length < FACE_BITS + POS_BITS) {\n    // eslint-disable-next-line prefer-template\n    bin = '0' + bin;\n  }\n\n  // MUST come AFTER binstr has been left-padded with '0's\n  const lsbIndex = bin.lastIndexOf('1');\n  // substring(start, end) // includes start, does not include end\n  const faceB = bin.substring(0, 3);\n  // posB will always be a multiple of 2 (or it's invalid)\n  const posB = bin.substring(3, lsbIndex);\n  const levelN = posB.length / 2;\n\n  const faceS = Long.fromString(faceB, true, 2).toString(10);\n\n  /*\n    Here is a fix for the case when posB is an empty string that causes an exception in Long.fromString\n  */\n  let posS = '';\n  if (levelN !== 0) {\n    // posB is not an empty string, because levelN !== 0\n    posS = Long.fromString(posB, true, 2).toString(4);\n\n    while (posS.length < levelN) {\n      // eslint-disable-next-line prefer-template\n      posS = '0' + posS;\n    }\n  }\n  // Note, posS will be \"\" for the level==0, which corresponds to the full face.\n  // Example: Full face 0 (No subdivision, so level==0): Returns \"0/\"\n  // TODO: Is it ok?\n\n  return `${faceS}/${posS}`;\n}\n\n/**\n * Convets S2 the Hilbert quad key to cell ID.\n * @param quadkey {string} The Hilbert quad key (containing /) as a string in the format 'face/pos'\n * @returns {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face\n */\n/* eslint complexity: [\"error\", { \"max\": 14 }] */\nexport function getS2CellIdFromQuadkey(hilbertQuadkey: string): Long {\n  if (hilbertQuadkey.length === 0 || hilbertQuadkey.indexOf('/') !== 1) {\n    throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n  }\n\n  let idS = '';\n\n  const faceS = hilbertQuadkey[0];\n  switch (faceS) {\n    case '0':\n      idS += '000';\n      break;\n    case '1':\n      idS += '001';\n      break;\n    case '2':\n      idS += '010';\n      break;\n    case '3':\n      idS += '011';\n      break;\n    case '4':\n      idS += '100';\n      break;\n    case '5':\n      idS += '101';\n      break;\n    default:\n      throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n  }\n\n  const maxLevel: number = hilbertQuadkey.length;\n  // Don't convert position to Long, because it can contain leading zeros, which makes you handle it later.\n\n  for (let i = 2; i < maxLevel; i++) {\n    // The first char is a face, the second char is '/'\n    const p = hilbertQuadkey[i];\n    switch (p) {\n      case '0':\n        idS += '00';\n        break;\n      case '1':\n        idS += '01';\n        break;\n      case '2':\n        idS += '10';\n        break;\n      case '3':\n        idS += '11';\n        break;\n      default:\n        throw new Error(`Invalid Hilbert quad key ${hilbertQuadkey}`);\n    }\n  }\n  // Append the sentinel bit\n  idS += '1';\n\n  const paddedId = idS.padEnd(64, '0');\n  const id = Long.fromString(paddedId, true, 2);\n  return id;\n}\n\nexport function IJToST(\n  ij: [number, number],\n  level: number,\n  offsets: [number, number]\n): [number, number] {\n  const maxSize = 1 << level;\n\n  return [(ij[0] + offsets[0]) / maxSize, (ij[1] + offsets[1]) / maxSize];\n}\n\nfunction singleSTtoUV(st: number): number {\n  if (st >= 0.5) {\n    return (1 / 3.0) * (4 * st * st - 1);\n  }\n  return (1 / 3.0) * (1 - 4 * (1 - st) * (1 - st));\n}\n\nexport function STToUV(st: [number, number]): [number, number] {\n  return [singleSTtoUV(st[0]), singleSTtoUV(st[1])];\n}\n\nexport function FaceUVToXYZ(face: number, [u, v]: [number, number]): [number, number, number] {\n  switch (face) {\n    case 0:\n      return [1, u, v];\n    case 1:\n      return [-u, 1, v];\n    case 2:\n      return [-u, -v, 1];\n    case 3:\n      return [-1, -v, -u];\n    case 4:\n      return [v, -1, -u];\n    case 5:\n      return [v, u, -1];\n    default:\n      throw new Error('Invalid face');\n  }\n}\n\nexport function XYZToLngLat([x, y, z]: [number, number, number]): [number, number] {\n  const lat = Math.atan2(z, Math.sqrt(x * x + y * y));\n  const lng = Math.atan2(y, x);\n\n  return [lng * RADIAN_TO_DEGREE, lat * RADIAN_TO_DEGREE];\n}\n\nfunction rotateAndFlipQuadrant(n: number, point: [number, number], rx: number, ry: number): void {\n  if (ry === 0) {\n    if (rx === 1) {\n      point[0] = n - 1 - point[0];\n      point[1] = n - 1 - point[1];\n    }\n\n    const x = point[0];\n    point[0] = point[1];\n    point[1] = x;\n  }\n}\n\n/**\n * Retrieve S2 geometry center\n * @param s2cell {S2Cell} S2 cell\n * @returns {[number, number]} Longitude and Latitude coordinates of the S2 cell's center\n */\nexport function getS2LngLatFromS2Cell(s2Cell: S2Cell): [number, number] {\n  const st = IJToST(s2Cell.ij, s2Cell.level, [0.5, 0.5]);\n  const uv = STToUV(st);\n  const xyz = FaceUVToXYZ(s2Cell.face, uv);\n\n  return XYZToLngLat(xyz);\n}\n\n/**\n * Return longitude and latitude of four corners of the cell.\n * @param s2Cell {S2Cell} S2 cell\n * @returns {Array<[number, number]>} Array of longitude and latitude pairs (in degrees) for four corners of the cell.\n */\nexport function getCornerLngLats(s2Cell: S2Cell): Array<[number, number]> {\n  const result: Array<[number, number]> = [];\n  const offsets: Array<[number, number]> = [\n    [0.0, 0.0],\n    [0.0, 1.0],\n    [1.0, 1.0],\n    [1.0, 0.0]\n  ];\n\n  for (let i = 0; i < 4; i++) {\n    const st = IJToST(s2Cell.ij, s2Cell.level, offsets[i]);\n    const uv = STToUV(st);\n    const xyz = FaceUVToXYZ(s2Cell.face, uv);\n\n    result.push(XYZToLngLat(xyz));\n  }\n  return result;\n}\n", "import type {S2Cell} from '../s2geometry/s2-geometry';\nimport {IJToST, STToUV, FaceUVToXYZ, XYZToLngLat} from '../s2geometry/s2-geometry';\n\nconst MAX_RESOLUTION = 100;\n\n/**\n * Get a polygon with corner coordinates for an S2 cell\n * @param s2cell {S2Cell} S2 cell\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\n// eslint-disable-next-line max-statements\nexport function getS2BoundaryFlatFromS2Cell(s2cell: S2Cell): Float64Array {\n  const {face, ij, level} = s2cell;\n  const offsets = [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [0, 0]\n  ];\n\n  // The S2 cell edge is curved: http://s2geometry.io/\n  // This is more prominent at lower levels\n  // resolution is the number of segments to generate per edge.\n  // We exponentially reduce resolution as level increases so it doesn't affect perf\n  // when there are a large number of cells\n  const resolution = Math.max(1, Math.ceil(MAX_RESOLUTION * Math.pow(2, -level)));\n  const result = new Float64Array(4 * resolution * 2 + 2);\n  let ptIndex = 0;\n  let prevLng = 0;\n\n  for (let i = 0; i < 4; i++) {\n    const offset = offsets[i].slice(0) as [number, number];\n    const nextOffset = offsets[i + 1];\n    const stepI = (nextOffset[0] - offset[0]) / resolution;\n    const stepJ = (nextOffset[1] - offset[1]) / resolution;\n\n    for (let j = 0; j < resolution; j++) {\n      offset[0] += stepI;\n      offset[1] += stepJ;\n      // Cell can be represented by coordinates IJ, ST, UV, XYZ\n      // http://s2geometry.io/devguide/s2cell_hierarchy#coordinate-systems\n      const st = IJToST(ij, level, offset);\n      const uv = STToUV(st);\n      const xyz = FaceUVToXYZ(face, uv);\n      const lngLat = XYZToLngLat(xyz);\n\n      // Adjust longitude for Web Mercator projection\n\n      if (Math.abs(lngLat[1]) > 89.999) {\n        lngLat[0] = prevLng;\n      }\n\n      const deltaLng = lngLat[0] - prevLng;\n      lngLat[0] += deltaLng > 180 ? -360 : deltaLng < -180 ? 360 : 0;\n\n      result[ptIndex++] = lngLat[0];\n      result[ptIndex++] = lngLat[1];\n      prevLng = lngLat[0];\n    }\n  }\n  // close the loop\n  result[ptIndex++] = result[0];\n  result[ptIndex++] = result[1];\n  return result;\n}\n", "// math.gl, MIT license\n\nimport type {S2Cell} from './s2-geometry';\nimport {getS2CellFromQuadKey, getS2QuadkeyFromCellId} from './s2-geometry';\nimport {getS2CellIdFromToken} from '../s2-token-functions';\n\nimport Long from 'long';\n\n/**\n * Return the S2Cell from the cell's hex token or the Hilbert quad key\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @returns {@link S2Cell}\n */\nexport function getS2Cell(tokenOrKey: string): S2Cell {\n  const key = getS2QuadKey(tokenOrKey);\n  const s2cell = getS2CellFromQuadKey(key);\n  return s2cell;\n}\n\n/**\n * Get the underlying Hilbert quad key\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @returns Hilbert quad key\n */\nexport function getS2QuadKey(tokenOrKey: string): string {\n  if (tokenOrKey.indexOf('/') > 0) {\n    // is Hilbert quad key\n    return tokenOrKey;\n  }\n  // is S2 cell's hex token\n  const id: Long = getS2CellIdFromToken(tokenOrKey);\n  return getS2QuadkeyFromCellId(id);\n}\n", "// math.gl, MIT license\n\nimport {getS2BoundaryFlatFromS2Cell} from './converters/s2-to-boundary';\nimport {getS2LngLatFromS2Cell} from './s2geometry/s2-geometry';\nimport {getS2Cell} from './s2geometry/s2-cell-utils';\n\n// GEOMETRY\n\n/**\n * Retrieve S2 geometry center\n * @param s2Token {string} A string that is the cell's hex token\n * @returns {[number, number]} Longitude and Latitude coordinates of the S2 cell's center\n */\nexport function getS2LngLat(s2Token: string): [number, number] {\n  const s2cell = getS2Cell(s2Token);\n  return getS2LngLatFromS2Cell(s2cell);\n}\n\n/**\n * Get a polygon with corner coordinates for an s2 cell\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\nexport function getS2BoundaryFlat(tokenOrKey: string): Float64Array {\n  const s2cell = getS2Cell(tokenOrKey);\n  return getS2BoundaryFlatFromS2Cell(s2cell);\n}\n", "import type {S2Cell} from '../s2geometry/s2-geometry';\nimport {getS2BoundaryFlatFromS2Cell} from './s2-to-boundary';\nimport {getS2Cell} from '../s2geometry/s2-cell-utils';\n\n/**\n * Converts S2 cell to the 2D region\n * @param s2cell {S2Cell} S2 cell to convert to 2D region\n * @returns 2D region as an object containing: west, north, east, south in degrees\n */\nexport function getS2Region(s2cell: S2Cell): {\n  west: number;\n  east: number;\n  north: number;\n  south: number;\n} {\n  let region;\n  if (s2cell.face === 2 || s2cell.face === 5) {\n    //    let corners: Float64Array;\n    let corners: any = null;\n    let len = 0;\n    for (let i = 0; i < 4; i++) {\n      const key = `${s2cell.face}/${i}`;\n      const cell = getS2Cell(key);\n      const corns: Float64Array = getS2BoundaryFlatFromS2Cell(cell);\n      if (typeof corners === 'undefined' || corners === null)\n        corners = new Float64Array(4 * corns.length);\n      corners.set(corns, len);\n      len += corns.length;\n    }\n    region = get2DRegionFromS2Corners(corners);\n  } else {\n    const corners: Float64Array = getS2BoundaryFlatFromS2Cell(s2cell);\n    region = get2DRegionFromS2Corners(corners);\n  }\n  return region;\n}\n\n/**\n * Converts the S2 cell defined by its corners to the 2D region\n * @param corners {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n * @returns 2D region as an object containing: west, north, east, south in degrees\n */\nfunction get2DRegionFromS2Corners(corners: Float64Array): {\n  west: number;\n  east: number;\n  north: number;\n  south: number;\n} {\n  if (corners.length % 2 !== 0) {\n    throw new Error('Invalid corners');\n  }\n  const longitudes: number[] = [];\n  const latitudes: number[] = [];\n  for (let i = 0; i < corners.length; i += 2) {\n    longitudes.push(corners[i]);\n    latitudes.push(corners[i + 1]);\n  }\n\n  longitudes.sort((a, b) => a - b);\n  latitudes.sort((a, b) => a - b);\n\n  // Return the region in degrees\n  return {\n    west: longitudes[0],\n    east: longitudes[longitudes.length - 1],\n    north: latitudes[latitudes.length - 1],\n    south: latitudes[0]\n  };\n}\n", "import {getS2Cell} from '../s2geometry/s2-cell-utils';\nimport {getS2Region} from './s2-to-region';\nimport {Vector3} from '@math.gl/core';\n\nexport type S2HeightInfo = {\n  minimumHeight: number;\n  maximumHeight: number;\n};\n\n/**\n * Converts S2HeightInfo to corner points of an oriented bounding box\n * Can be used to constuct an OrientedBoundingBox instance\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @param heightInfo {S2HeightInfo} min and max height of the box\n * @returns corner points of the oriented bounding box\n */\nexport function getS2OrientedBoundingBoxCornerPoints(\n  tokenOrKey: string, // This can be an S2 key or token\n  heightInfo?: S2HeightInfo\n): Vector3[] {\n  const min: number = heightInfo?.minimumHeight || 0;\n  const max: number = heightInfo?.maximumHeight || 0;\n\n  const s2cell = getS2Cell(tokenOrKey);\n  const region = getS2Region(s2cell);\n\n  // region lng/lat are in degrees\n  const W = region.west;\n  const S = region.south;\n  const E = region.east;\n  const N = region.north;\n\n  const points: Vector3[] = [];\n\n  points.push(new Vector3(W, N, min));\n  points.push(new Vector3(E, N, min));\n  points.push(new Vector3(E, S, min));\n  points.push(new Vector3(W, S, min));\n\n  points.push(new Vector3(W, N, max));\n  points.push(new Vector3(E, N, max));\n  points.push(new Vector3(E, S, max));\n  points.push(new Vector3(W, S, max));\n\n  return points;\n}\n", "import {Vector3} from '@math.gl/core';\nimport {OrientedBoundingBox, makeOrientedBoundingBoxFromPoints} from '@math.gl/culling';\n\nimport type {S2HeightInfo} from '../../utils/s2/index';\nimport {getS2OrientedBoundingBoxCornerPoints} from '../../utils/s2/index';\n\nimport {getS2LngLat} from '../../utils/s2/index';\nimport {Ellipsoid} from '@math.gl/geospatial';\n\nexport type S2VolumeInfo = {\n  /** S2 key or token */\n  token: string;\n  /** minimum height in meters */\n  minimumHeight: number;\n  /** maximum height in meters */\n  maximumHeight: number;\n};\n\n/**\n * Converts S2VolumeInfo to OrientedBoundingBox\n * @param {S2VolumeInfo} s2VolumeInfo - s2 volume to convert\n * @returns Oriented Bounding Box of type Box\n */\nexport function convertS2BoundingVolumetoOBB(s2VolumeInfo: S2VolumeInfo): number[] {\n  const token: string = s2VolumeInfo.token;\n  const heightInfo: S2HeightInfo = {\n    minimumHeight: s2VolumeInfo.minimumHeight,\n    maximumHeight: s2VolumeInfo.maximumHeight\n  };\n\n  const corners: Vector3[] = getS2OrientedBoundingBoxCornerPoints(token, heightInfo);\n\n  // Add a point that doesn't allow the box dive under the Earth\n\n  const center = getS2LngLat(token);\n  const centerLng: number = center[0];\n  const centerLat: number = center[1];\n  const point = Ellipsoid.WGS84.cartographicToCartesian([\n    centerLng,\n    centerLat,\n    heightInfo.maximumHeight\n  ]);\n  const centerPointAdditional = new Vector3(point[0], point[1], point[2]);\n  corners.push(centerPointAdditional);\n\n  // corners should be an array of Vector3 (XYZ)\n  const obb: OrientedBoundingBox = makeOrientedBoundingBoxFromPoints(corners);\n  const box: number[] = [...obb.center, ...obb.halfAxes];\n\n  return box;\n}\n", "import type {Availability, BoundingVolume, Subtree} from '../../../types';\nimport {Tile3DSubtreeLoader} from '../../../tile-3d-subtree-loader';\nimport {load} from '@loaders.gl/core';\n\nimport {getS2CellIdFromToken, getS2ChildCellId, getS2TokenFromCellId} from '../../utils/s2/index';\nimport type {S2VolumeInfo} from '../../utils/obb/s2-corners-to-obb';\nimport {convertS2BoundingVolumetoOBB} from '../../utils/obb/s2-corners-to-obb';\nimport Long from 'long';\n\nconst QUADTREE_DEVISION_COUNT = 4;\nconst OCTREE_DEVISION_COUNT = 8;\n\nconst SUBDIVISION_COUNT_MAP = {\n  QUADTREE: QUADTREE_DEVISION_COUNT,\n  OCTREE: OCTREE_DEVISION_COUNT\n};\n\n/**\n *  S2VolumeBox is an extention of BoundingVolume of type \"box\"\n */\nexport type S2VolumeBox = {\n  /** BoundingVolume of type \"box\" has the \"box\" field. S2VolumeBox contains it as well. */\n  box: number[];\n  /** s2VolumeInfo provides additional info about the box - specifically the token, min and max height */\n  s2VolumeInfo: S2VolumeInfo;\n};\n\nfunction getChildS2VolumeBox(\n  s2VolumeBox: S2VolumeBox | undefined,\n  index: number,\n  subdivisionScheme: string\n): S2VolumeBox | undefined {\n  if (s2VolumeBox?.box) {\n    // Check if the BoundingVolume is of type \"box\"\n    const cellId: Long = getS2CellIdFromToken(s2VolumeBox.s2VolumeInfo.token);\n    const childCellId = getS2ChildCellId(cellId, index);\n    const childToken = getS2TokenFromCellId(childCellId);\n\n    // Clone object. Note, s2VolumeInfo is a plain object that doesn't contain any nested object.\n    // So, we can use the Spread Operator to make a shallow copy of the object.\n    const s2ChildVolumeInfo: S2VolumeInfo = {...s2VolumeBox.s2VolumeInfo};\n    s2ChildVolumeInfo.token = childToken; // replace the token with the child's one\n\n    // In case of QUADTREE the sizeZ should NOT be changed!\n    // https://portal.ogc.org/files/102132\n    // A quadtree divides space only on the x and y dimensions.\n    // It divides each tile into 4 smaller tiles where the x and y dimensions are halved.\n    // The quadtree z minimum and maximum remain unchanged.\n    switch (subdivisionScheme) {\n      case 'OCTREE':\n        const s2VolumeInfo: S2VolumeInfo = s2VolumeBox.s2VolumeInfo;\n        const delta = s2VolumeInfo.maximumHeight - s2VolumeInfo.minimumHeight;\n        const sizeZ: number = delta / 2.0; // It's a next level (a child)\n        const midZ: number = s2VolumeInfo.minimumHeight + delta / 2.0;\n        s2VolumeInfo.minimumHeight = midZ - sizeZ;\n        s2VolumeInfo.maximumHeight = midZ + sizeZ;\n        break;\n      default:\n        break;\n    }\n    const box = convertS2BoundingVolumetoOBB(s2ChildVolumeInfo);\n    const childS2VolumeBox: S2VolumeBox = {\n      box,\n      s2VolumeInfo: s2ChildVolumeInfo\n    };\n    return childS2VolumeBox;\n  }\n  return undefined;\n}\n\n/**\n * Recursively parse implicit tiles tree\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * TODO Check out do we able to use Tile3D class as return type here.\n * @param subtree\n * @param lodMetricValue\n * @param options\n * @param parentData\n * @param childIndex\n * @param level\n * @param globalData\n */\n// eslint-disable-next-line max-statements\nexport async function parseImplicitTiles(params: {\n  subtree: Subtree;\n  options: any;\n  parentData?: {mortonIndex: number; x: number; y: number; z: number};\n  childIndex?: number;\n  level?: number;\n  globalData?: {level: number; mortonIndex: number; x: number; y: number; z: number};\n  s2VolumeBox?: S2VolumeBox;\n}) {\n  const {\n    options,\n    parentData = {\n      mortonIndex: 0,\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    childIndex = 0,\n    globalData = {\n      level: 0,\n      mortonIndex: 0,\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    s2VolumeBox\n  } = params;\n  let {subtree, level = 0} = params;\n  const {\n    subdivisionScheme,\n    subtreeLevels,\n    maximumLevel,\n    contentUrlTemplate,\n    subtreesUriTemplate,\n    basePath\n  } = options;\n\n  const tile = {children: [], lodMetricValue: 0, contentUrl: ''};\n\n  const childrenPerTile = SUBDIVISION_COUNT_MAP[subdivisionScheme];\n\n  const childX = childIndex & 0b01;\n  const childY = (childIndex >> 1) & 0b01;\n  const childZ = (childIndex >> 2) & 0b01;\n\n  const levelOffset = (childrenPerTile ** level - 1) / (childrenPerTile - 1);\n  let childTileMortonIndex = concatBits(parentData.mortonIndex, childIndex);\n  let tileAvailabilityIndex = levelOffset + childTileMortonIndex;\n\n  // Local tile coordinates\n  let childTileX = concatBits(parentData.x, childX);\n  let childTileY = concatBits(parentData.y, childY);\n  let childTileZ = concatBits(parentData.z, childZ);\n\n  let isChildSubtreeAvailable = false;\n\n  if (level + 1 > subtreeLevels) {\n    isChildSubtreeAvailable = getAvailabilityResult(\n      subtree.childSubtreeAvailability,\n      childTileMortonIndex\n    );\n  }\n\n  const x = concatBits(globalData.x, childTileX);\n  const y = concatBits(globalData.y, childTileY);\n  const z = concatBits(globalData.z, childTileZ);\n  const lev = level + globalData.level;\n\n  if (isChildSubtreeAvailable) {\n    const subtreePath = `${basePath}/${subtreesUriTemplate}`;\n    const childSubtreeUrl = replaceContentUrlTemplate(subtreePath, lev, x, y, z);\n    const childSubtree = await load(childSubtreeUrl, Tile3DSubtreeLoader);\n\n    subtree = childSubtree;\n\n    globalData.mortonIndex = childTileMortonIndex;\n    globalData.x = childTileX;\n    globalData.y = childTileY;\n    globalData.z = childTileZ;\n    globalData.level = level;\n\n    childTileMortonIndex = 0;\n    tileAvailabilityIndex = 0;\n    childTileX = 0;\n    childTileY = 0;\n    childTileZ = 0;\n    level = 0;\n  }\n\n  const isTileAvailable = getAvailabilityResult(subtree.tileAvailability, tileAvailabilityIndex);\n\n  if (!isTileAvailable || level > maximumLevel) {\n    return tile;\n  }\n\n  const isContentAvailable = getAvailabilityResult(\n    subtree.contentAvailability,\n    tileAvailabilityIndex\n  );\n\n  if (isContentAvailable) {\n    tile.contentUrl = replaceContentUrlTemplate(contentUrlTemplate, lev, x, y, z);\n  }\n\n  const childTileLevel = level + 1;\n  const pData = {mortonIndex: childTileMortonIndex, x: childTileX, y: childTileY, z: childTileZ};\n\n  for (let index = 0; index < childrenPerTile; index++) {\n    const childS2VolumeBox: S2VolumeBox | undefined = getChildS2VolumeBox(\n      s2VolumeBox,\n      index,\n      subdivisionScheme\n    );\n\n    // Recursive calling...\n    const childTileParsed = await parseImplicitTiles({\n      subtree,\n      options,\n      parentData: pData,\n      childIndex: index,\n      level: childTileLevel,\n      globalData,\n      s2VolumeBox: childS2VolumeBox\n    });\n\n    if (childTileParsed.contentUrl || childTileParsed.children.length) {\n      const globalLevel = lev + 1;\n      const childCoordinates = {childTileX, childTileY, childTileZ};\n      const formattedTile = formatTileData(\n        childTileParsed,\n        globalLevel,\n        childCoordinates,\n        options,\n        s2VolumeBox\n      );\n      // @ts-ignore\n      tile.children.push(formattedTile);\n    }\n  }\n\n  return tile;\n}\n\nfunction getAvailabilityResult(availabilityData: Availability, index: number): boolean {\n  if ('constant' in availabilityData) {\n    return Boolean(availabilityData.constant);\n  }\n\n  if (availabilityData.explicitBitstream) {\n    return getBooleanValueFromBitstream(index, availabilityData.explicitBitstream);\n  }\n\n  return false;\n}\n\n/**\n * Do formatting of implicit tile data.\n * TODO Check out do we able to use Tile3D class as type here.\n * @param tile\n * @param lodMetricValue\n * @param options\n * @returns\n */\nfunction formatTileData(\n  tile,\n  level: number,\n  childCoordinates: {childTileX: number; childTileY: number; childTileZ: number},\n  options: any,\n  s2VolumeBox?: S2VolumeBox\n) {\n  const {\n    basePath,\n    refine,\n    getRefine,\n    lodMetricType,\n    getTileType,\n    rootLodMetricValue,\n    rootBoundingVolume\n  } = options;\n  const uri = tile.contentUrl && tile.contentUrl.replace(`${basePath}/`, '');\n  const lodMetricValue = rootLodMetricValue / 2 ** level;\n\n  const boundingVolume: BoundingVolume = s2VolumeBox?.box\n    ? {box: s2VolumeBox.box}\n    : rootBoundingVolume;\n\n  const boundingVolumeForChildTile = calculateBoundingVolumeForChildTile(\n    level,\n    boundingVolume,\n    childCoordinates\n  );\n\n  return {\n    children: tile.children,\n    contentUrl: tile.contentUrl,\n    content: {uri},\n    id: tile.contentUrl,\n    refine: getRefine(refine),\n    type: getTileType(tile),\n    lodMetricType,\n    lodMetricValue,\n    geometricError: lodMetricValue,\n    transform: tile.transform,\n    boundingVolume: boundingVolumeForChildTile\n  };\n}\n\n/**\n * Calculate child bounding volume.\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling#subdivision-rules\n * @param level\n * @param rootBoundingVolume\n * @param childCoordinates\n */\nfunction calculateBoundingVolumeForChildTile(\n  level: number,\n  rootBoundingVolume: BoundingVolume,\n  childCoordinates: {childTileX: number; childTileY: number; childTileZ: number}\n): BoundingVolume {\n  if (rootBoundingVolume.region) {\n    const {childTileX, childTileY, childTileZ} = childCoordinates;\n    const [west, south, east, north, minimumHeight, maximumHeight] = rootBoundingVolume.region;\n    const boundingVolumesCount = 2 ** level;\n\n    const sizeX = (east - west) / boundingVolumesCount;\n    const sizeY = (north - south) / boundingVolumesCount;\n\n    // TODO : Why is the subdivisionScheme not being checked here?\n\n    // In case of QUADTREE the sizeZ should NOT be changed!\n    // https://portal.ogc.org/files/102132\n    // A quadtree divides space only on the x and y dimensions. It divides each tile into 4 smaller tiles where the x and y dimensions are halved. The quadtree z minimum and maximum remain unchanged.\n\n    const sizeZ = (maximumHeight - minimumHeight) / boundingVolumesCount;\n\n    const [childWest, childEast] = [west + sizeX * childTileX, west + sizeX * (childTileX + 1)];\n    const [childSouth, childNorth] = [south + sizeY * childTileY, south + sizeY * (childTileY + 1)];\n    const [childMinimumHeight, childMaximumHeight] = [\n      minimumHeight + sizeZ * childTileZ,\n      minimumHeight + sizeZ * (childTileZ + 1)\n    ];\n\n    return {\n      region: [childWest, childSouth, childEast, childNorth, childMinimumHeight, childMaximumHeight]\n    };\n  }\n\n  if (rootBoundingVolume.box) {\n    return rootBoundingVolume;\n  }\n\n  throw new Error(`Unsupported bounding volume type ${rootBoundingVolume}`);\n}\n\n/**\n * Do binary concatenation\n * @param first\n * @param second\n */\nfunction concatBits(first: number, second: number): number {\n  return parseInt(first.toString(2) + second.toString(2), 2);\n}\n\n/**\n * Replace implicit tile content url with real coordinates.\n * @param templateUrl\n * @param level\n * @param x\n * @param y\n * @param z\n */\nexport function replaceContentUrlTemplate(\n  templateUrl: string,\n  level: number,\n  x: number,\n  y: number,\n  z: number\n): string {\n  const mapUrl = generateMapUrl({level, x, y, z});\n  return templateUrl.replace(/{level}|{x}|{y}|{z}/gi, (matched) => mapUrl[matched]);\n}\n\n/**\n * Get Map object for content url generation\n * @param items\n */\nfunction generateMapUrl(items: {[key: string]: number}): {[key: string]: string} {\n  const mapUrl = {};\n\n  for (const key in items) {\n    mapUrl[`{${key}}`] = items[key];\n  }\n  return mapUrl;\n}\n\n/**\n * Get boolean value from bistream by index\n * A boolean value is encoded as a single bit, either 0 (false) or 1 (true).\n * Multiple boolean values are packed tightly in the same buffer.\n * These buffers of tightly-packed bits are sometimes referred to as bitstreams.\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/implicit-revisions/specification/Metadata#booleans\n * @param availabilitiIndex\n */\nfunction getBooleanValueFromBitstream(\n  availabilityIndex: number,\n  availabilityBuffer: Uint8Array\n): boolean {\n  const byteIndex = Math.floor(availabilityIndex / 8);\n  const bitIndex = availabilityIndex % 8;\n  const bitValue = (availabilityBuffer[byteIndex] >> bitIndex) & 1;\n\n  return bitValue === 1;\n}\n", "import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {Tile3DSubtreeLoader} from '../../tile-3d-subtree-loader';\nimport {load} from '@loaders.gl/core';\nimport {Tileset3D, LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE, Tile3D} from '@loaders.gl/tiles';\nimport {ImplicitTilingExtension, Subtree} from '../../types';\nimport type {S2VolumeBox} from './helpers/parse-3d-implicit-tiles';\nimport {parseImplicitTiles, replaceContentUrlTemplate} from './helpers/parse-3d-implicit-tiles';\nimport type {S2VolumeInfo} from '../utils/obb/s2-corners-to-obb';\nimport {convertS2BoundingVolumetoOBB} from '../utils/obb/s2-corners-to-obb';\n\nfunction getTileType(tile) {\n  if (!tile.contentUrl) {\n    return TILE_TYPE.EMPTY;\n  }\n\n  const contentUrl = tile.contentUrl.split('?')[0]; // Discard query string\n  const fileExtension = contentUrl.split('.').pop();\n  switch (fileExtension) {\n    case 'pnts':\n      return TILE_TYPE.POINTCLOUD;\n    case 'i3dm':\n    case 'b3dm':\n    case 'glb':\n    case 'gltf':\n      return TILE_TYPE.SCENEGRAPH;\n    default:\n      return fileExtension;\n  }\n}\n\nfunction getRefine(refine) {\n  switch (refine) {\n    case 'REPLACE':\n    case 'replace':\n      return TILE_REFINEMENT.REPLACE;\n    case 'ADD':\n    case 'add':\n      return TILE_REFINEMENT.ADD;\n    default:\n      return refine;\n  }\n}\n\nfunction resolveUri(uri, basePath) {\n  // url scheme per RFC3986\n  const urlSchemeRegex = /^[a-z][0-9a-z+.-]*:/i;\n\n  if (urlSchemeRegex.test(basePath)) {\n    const url = new URL(uri, `${basePath}/`);\n    return decodeURI(url.toString());\n  } else if (uri.startsWith('/')) {\n    return uri;\n  }\n\n  return `${basePath}/${uri}`;\n}\n\nexport function normalizeTileData(tile, options) {\n  if (!tile) {\n    return null;\n  }\n  if (tile.content) {\n    const contentUri = tile.content.uri || tile.content.url;\n    tile.contentUrl = resolveUri(contentUri, options.basePath);\n  }\n  tile.id = tile.contentUrl;\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n  tile.type = getTileType(tile);\n  tile.refine = getRefine(tile.refine);\n\n  return tile;\n}\n\n// normalize tile headers\nexport async function normalizeTileHeaders(\n  tileset: Tileset3D,\n  options: LoaderOptions\n): Promise<Tileset3D> {\n  const basePath = tileset.basePath;\n  let root: Tileset3D;\n\n  const rootImplicitTilingExtension = getImplicitTilingExtensionData(tileset?.root);\n  if (rootImplicitTilingExtension && tileset.root) {\n    root = await normalizeImplicitTileHeaders(\n      tileset.root,\n      tileset,\n      rootImplicitTilingExtension,\n      options\n    );\n  } else {\n    root = normalizeTileData(tileset.root, tileset);\n  }\n\n  const stack: any[] = [];\n  stack.push(root);\n\n  while (stack.length > 0) {\n    const tile = stack.pop() || {};\n    const children = tile.children || [];\n    for (let childHeader of children) {\n      const childImplicitTilingExtension = getImplicitTilingExtensionData(childHeader);\n      if (childImplicitTilingExtension) {\n        childHeader = await normalizeImplicitTileHeaders(\n          childHeader,\n          tileset,\n          childImplicitTilingExtension,\n          options\n        );\n      } else {\n        normalizeTileData(childHeader, {basePath});\n      }\n\n      stack.push(childHeader);\n    }\n  }\n\n  return root;\n}\n\n/**\n * Do normalisation of implicit tile headers\n * TODO Check if Tile3D class can be a return type here.\n * @param tileset\n */\nexport async function normalizeImplicitTileHeaders(\n  tile: Tile3D,\n  tileset: Tileset3D,\n  implicitTilingExtension: ImplicitTilingExtension,\n  options: LoaderOptions\n) {\n  const basePath = tileset.basePath;\n  const {\n    subdivisionScheme,\n    maximumLevel,\n    subtreeLevels,\n    subtrees: {uri: subtreesUriTemplate}\n  } = implicitTilingExtension;\n  const replacedUrlTemplate = replaceContentUrlTemplate(subtreesUriTemplate, 0, 0, 0, 0);\n  const subtreeUrl = resolveUri(replacedUrlTemplate, basePath);\n  const subtree = await load(subtreeUrl, Tile3DSubtreeLoader, options);\n  const contentUrlTemplate = resolveUri(tile.content.uri, basePath);\n  const refine = tileset?.root?.refine;\n  // @ts-ignore\n  const rootLodMetricValue = tile.geometricError;\n\n  // Replace tile.boundingVolume with the the bounding volume specified by the extensions['3DTILES_bounding_volume_S2']\n  const s2VolumeInfo: S2VolumeInfo = tile.boundingVolume.extensions?.['3DTILES_bounding_volume_S2'];\n  if (s2VolumeInfo) {\n    const box = convertS2BoundingVolumetoOBB(s2VolumeInfo);\n    const s2VolumeBox: S2VolumeBox = {box, s2VolumeInfo};\n    tile.boundingVolume = s2VolumeBox;\n  }\n\n  const rootBoundingVolume = tile.boundingVolume;\n\n  const implicitOptions = {\n    contentUrlTemplate,\n    subtreesUriTemplate,\n    subdivisionScheme,\n    subtreeLevels,\n    maximumLevel,\n    refine,\n    basePath,\n    lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n    rootLodMetricValue,\n    rootBoundingVolume,\n    getTileType,\n    getRefine\n  };\n\n  return await normalizeImplicitTileData(tile, subtree, implicitOptions);\n}\n\n/**\n * Do implicit data normalisation to create hierarchical tile structure\n * @param tile\n * @param rootSubtree\n * @param options\n * @returns\n */\nexport async function normalizeImplicitTileData(tile, rootSubtree: Subtree, options: any) {\n  if (!tile) {\n    return null;\n  }\n\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n\n  const {children, contentUrl} = await parseImplicitTiles({\n    subtree: rootSubtree,\n    options,\n    s2VolumeBox: tile\n  });\n\n  if (contentUrl) {\n    tile.contentUrl = contentUrl;\n    tile.content = {uri: contentUrl.replace(`${options.basePath}/`, '')};\n  }\n\n  tile.refine = getRefine(tile.refine);\n  tile.type = getTileType(tile);\n  tile.children = children;\n  tile.id = tile.contentUrl;\n\n  return tile;\n}\n\n/**\n * Implicit Tiling data can be in 3DTILES_implicit_tiling for 3DTiles v.Next or directly in implicitTiling object for 3DTiles v1.1.\n * Spec 3DTiles v.Next - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * Spec 3DTiles v.1.1 - https://github.com/CesiumGS/3d-tiles/tree/draft-1.1/specification/ImplicitTiling\n * @param tile\n * @returns\n */\nfunction getImplicitTilingExtensionData(tile: Tile3D | null): ImplicitTilingExtension {\n  return tile?.extensions?.['3DTILES_implicit_tiling'] || tile?.implicitTiling;\n}\n", "import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {normalizeTileHeaders} from './lib/parsers/parse-3d-tile-header';\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\n\nasync function parseTile(arrayBuffer, options, context) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = options.loader || Tiles3DLoader;\n  tilesetJson.url = context.url;\n  tilesetJson.queryString = context.queryString;\n\n  // base path that non-absolute paths in tileset are relative to.\n  tilesetJson.basePath = getBaseUri(tilesetJson);\n  tilesetJson.root = await normalizeTileHeaders(tilesetJson, options);\n\n  tilesetJson.type = TILESET_TYPE.TILES3D;\n\n  tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tilesetJson.lodMetricValue = tilesetJson.root?.lodMetricValue || 0;\n\n  return tilesetJson;\n}\n\nasync function parse(data, options, context) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else {\n    data = await parseTile(data, options, context);\n  }\n\n  return data;\n}\n", "// Minimal support to load tilsets from the Cesium ION services\n\nimport {fetchFile} from '@loaders.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst CESIUM_ION_URL = 'https://api.cesium.com/v1/assets';\n\n// Returns `{url, headers, type, attributions}` for an ion tileset\nexport async function getIonTilesetMetadata(accessToken, assetId) {\n  // Step 1, if no asset id, look for first 3DTILES asset associated with this token.\n  if (!assetId) {\n    const assets = await getIonAssets(accessToken);\n    for (const item of assets.items) {\n      if (item.type === '3DTILES') {\n        assetId = item.id;\n      }\n    }\n  }\n\n  // Step 2: Query metdatadata for this asset.\n  const ionAssetMetadata = await getIonAssetMetadata(accessToken, assetId);\n  const {type, url} = ionAssetMetadata;\n  assert(type === '3DTILES' && url);\n\n  // Prepare a headers object for fetch\n  ionAssetMetadata.headers = {\n    Authorization: `Bearer ${ionAssetMetadata.accessToken}`\n  };\n  return ionAssetMetadata;\n}\n\n// Return a list of all assets associated with accessToken\nexport async function getIonAssets(accessToken) {\n  assert(accessToken);\n  const url = CESIUM_ION_URL;\n  const headers = {Authorization: `Bearer ${accessToken}`};\n  const response = await fetchFile(url, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n\n// Return metadata for a specific asset associated with token\nexport async function getIonAssetMetadata(accessToken, assetId) {\n  assert(accessToken, assetId);\n  const headers = {Authorization: `Bearer ${accessToken}`};\n\n  const url = `${CESIUM_ION_URL}/${assetId}`;\n  // https://cesium.com/docs/rest-api/#operation/getAsset\n  // Retrieves metadata information about a specific asset.\n  let response = await fetchFile(`${url}`, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  let metadata = await response.json();\n\n  // https://cesium.com/docs/rest-api/#operation/getAssetEndpoint\n  // Retrieves information and credentials that allow you to access the tiled asset data for visualization and analysis.\n  response = await fetchFile(`${url}/endpoint`, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  const tilesetInfo = await response.json();\n\n  // extract dataset description\n  metadata = {\n    ...metadata,\n    ...tilesetInfo\n  };\n\n  return metadata;\n}\n", "import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {Tiles3DLoader} from './tiles-3d-loader';\nimport {getIonTilesetMetadata} from './lib/ion/ion';\n\nasync function preload(url, options = {}) {\n  options = options['cesium-ion'] || {};\n  // @ts-ignore\n  const {accessToken} = options;\n  // @ts-ignore\n  let assetId = options.assetId;\n  if (!Number.isFinite(assetId)) {\n    const matched = url.match(/\\/([0-9]+)\\/tileset.json/);\n    assetId = matched && matched[1];\n  }\n  return getIonTilesetMetadata(accessToken, assetId);\n}\n\n/**\n * Loader for 3D tiles from Cesium ION\n */\nexport const CesiumIonLoader: LoaderWithParser = {\n  ...Tiles3DLoader,\n  id: 'cesium-ion',\n  name: 'Cesium Ion',\n  // @ts-ignore\n  preload,\n  parse: async (data, options?, context?) => {\n    options = {...options};\n    options['3d-tiles'] = options['cesium-ion'];\n    // @ts-ignore\n    options.loader = CesiumIonLoader;\n    return Tiles3DLoader.parse(data, options, context); // , loader);\n  },\n  options: {\n    'cesium-ion': {\n      // @ts-expect-error\n      ...Tiles3DLoader.options['3d-tiles'],\n      accessToken: null\n    }\n  }\n};\n", "import GL from '@luma.gl/constants';\nimport {Geometry} from '@luma.gl/core';\n\nimport {\n  Accessor,\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  COORDINATE_SYSTEM,\n  FilterContext,\n  GetPickingInfoParams,\n  Layer,\n  LayersList,\n  log,\n  PickingInfo,\n  UpdateParameters,\n  Viewport,\n  DefaultProps\n} from '@deck.gl/core';\nimport {PointCloudLayer} from '@deck.gl/layers';\nimport {ScenegraphLayer} from '@deck.gl/mesh-layers';\nimport {default as MeshLayer} from '../mesh-layer/mesh-layer';\n\nimport {load} from '@loaders.gl/core';\nimport {MeshAttributes} from '@loaders.gl/schema';\nimport {Tileset3D, Tile3D, TILE_TYPE} from '@loaders.gl/tiles';\nimport {Tiles3DLoader} from '@loaders.gl/3d-tiles';\n\nconst SINGLE_DATA = [0];\n\nconst defaultProps: DefaultProps<Tile3DLayerProps> = {\n  getPointColor: {type: 'accessor', value: [0, 0, 0, 255]},\n  pointSize: 1.0,\n\n  // Disable async data loading (handling it in _loadTileSet)\n  data: '',\n  loader: Tiles3DLoader,\n\n  onTilesetLoad: {type: 'function', value: tileset3d => {}},\n  onTileLoad: {type: 'function', value: tileHeader => {}},\n  onTileUnload: {type: 'function', value: tileHeader => {}},\n  onTileError: {type: 'function', value: (tile, message, url) => {}},\n  _getMeshColor: {type: 'function', value: tileHeader => [255, 255, 255]}\n};\n\n/** All properties supported by Tile3DLayer */\nexport type Tile3DLayerProps<DataT = any> = _Tile3DLayerProps<DataT> & CompositeLayerProps;\n\n/** Props added by the Tile3DLayer */\ntype _Tile3DLayerProps<DataT> = {\n  data: string;\n  /** Color Accessor for point clouds. **/\n  getPointColor?: Accessor<DataT, Color>;\n\n  /** Global radius of all points in pixels. **/\n  pointSize?: number;\n\n  /** A loader which is used to decode the fetched tiles.\n   * @deprecated Use `loaders` instead\n   */\n  loader?: typeof Tiles3DLoader;\n\n  /** Called when Tileset JSON file is loaded. **/\n  onTilesetLoad?: (tile: Tileset3D) => void;\n\n  /** Called when a tile in the tileset hierarchy is loaded. **/\n  onTileLoad?: (tile: Tile3D) => void;\n\n  /** Called when a tile is unloaded. **/\n  onTileUnload?: (tile: Tile3D) => void;\n\n  /** Called when a tile fails to load. **/\n  onTileError?: (tile: Tile3D, url: string, message: string) => void;\n\n  /** (Experimental) Accessor to change color of mesh based on properties. **/\n  _getMeshColor?: (tile: Tile3D) => Color;\n};\n\n/** Render 3d tiles data formatted according to the [3D Tiles Specification](https://www.opengeospatial.org/standards/3DTiles) and [`ESRI I3S`](https://github.com/Esri/i3s-spec) */\nexport default class Tile3DLayer<DataT = any, ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_Tile3DLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'Tile3DLayer';\n\n  state!: {\n    activeViewports: {};\n    frameNumber?: number;\n    lastUpdatedViewports: {[viewportId: string]: Viewport} | null;\n    layerMap: {[layerId: string]: any};\n    tileset3d: Tileset3D | null;\n  };\n\n  initializeState() {\n    if ('onTileLoadFail' in this.props) {\n      log.removed('onTileLoadFail', 'onTileError')();\n    }\n    // prop verification\n    this.state = {\n      layerMap: {},\n      tileset3d: null,\n      activeViewports: {},\n      lastUpdatedViewports: null\n    };\n  }\n\n  get isLoaded(): boolean {\n    const {tileset3d} = this.state;\n    return tileset3d !== null && tileset3d.isLoaded();\n  }\n\n  shouldUpdateState({changeFlags}: UpdateParameters<this>): boolean {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, changeFlags}: UpdateParameters<this>): void {\n    if (props.data && props.data !== oldProps.data) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._loadTileset(props.data);\n    }\n\n    if (changeFlags.viewportChanged) {\n      const {activeViewports} = this.state;\n      const viewportsNumber = Object.keys(activeViewports).length;\n      if (viewportsNumber) {\n        this._updateTileset(activeViewports);\n        this.state.lastUpdatedViewports = activeViewports;\n        this.state.activeViewports = {};\n      }\n    }\n    if (changeFlags.propsChanged) {\n      const {layerMap} = this.state;\n      for (const key in layerMap) {\n        layerMap[key].needsUpdate = true;\n      }\n    }\n  }\n\n  activateViewport(viewport: Viewport): void {\n    const {activeViewports, lastUpdatedViewports} = this.state;\n    this.internalState!.viewport = viewport;\n\n    activeViewports[viewport.id] = viewport;\n    const lastViewport = lastUpdatedViewports?.[viewport.id];\n    if (!lastViewport || !viewport.equals(lastViewport)) {\n      this.setChangeFlags({viewportChanged: true});\n      this.setNeedsUpdate();\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}: GetPickingInfoParams) {\n    const sourceTile = sourceLayer && (sourceLayer.props as any).tile;\n    if (info.picked) {\n      info.object = sourceTile;\n    }\n    (info as any).sourceTile = sourceTile;\n\n    return info;\n  }\n\n  filterSubLayer({layer, viewport}: FilterContext): boolean {\n    // All sublayers will have a tile prop\n    const {tile} = layer.props as unknown as {tile: Tile3D};\n    const {id: viewportId} = viewport;\n    return tile.selected && tile.viewportIds.includes(viewportId);\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const sourceTile = (info as any).sourceTile;\n    const layerCache = this.state.layerMap[sourceTile?.id];\n    if (layerCache && layerCache.layer) {\n      layerCache.layer.updateAutoHighlight(info);\n    }\n  }\n\n  private async _loadTileset(tilesetUrl) {\n    const {loadOptions = {}} = this.props;\n\n    // TODO: deprecate `loader` in v9.0\n    // @ts-ignore\n    let loader = this.props.loader || this.props.loaders;\n    if (Array.isArray(loader)) {\n      loader = loader[0];\n    }\n\n    const options = {loadOptions: {...loadOptions}};\n    let actualTilesetUrl = tilesetUrl;\n    if (loader.preload) {\n      const preloadOptions = await loader.preload(tilesetUrl, loadOptions);\n      if (preloadOptions.url) {\n        actualTilesetUrl = preloadOptions.url;\n      }\n\n      if (preloadOptions.headers) {\n        options.loadOptions.fetch = {\n          ...options.loadOptions.fetch,\n          headers: preloadOptions.headers\n        };\n      }\n      Object.assign(options, preloadOptions);\n    }\n    const tilesetJson = await load(actualTilesetUrl, loader, options.loadOptions);\n\n    const tileset3d = new Tileset3D(tilesetJson, {\n      onTileLoad: this._onTileLoad.bind(this),\n      onTileUnload: this._onTileUnload.bind(this),\n      onTileError: this.props.onTileError,\n      ...options\n    });\n\n    this.setState({\n      tileset3d,\n      layerMap: {}\n    });\n\n    this._updateTileset(this.state.activeViewports);\n    this.props.onTilesetLoad(tileset3d);\n  }\n\n  private _onTileLoad(tileHeader: Tile3D): void {\n    const {lastUpdatedViewports} = this.state;\n    this.props.onTileLoad(tileHeader);\n    this._updateTileset(lastUpdatedViewports);\n    this.setNeedsUpdate();\n  }\n\n  private _onTileUnload(tileHeader: Tile3D): void {\n    // Was cleaned up from tileset cache. We no longer need to track it.\n    delete this.state.layerMap[tileHeader.id];\n    this.props.onTileUnload(tileHeader);\n  }\n\n  private _updateTileset(viewports: {[viewportId: string]: Viewport} | null): void {\n    if (!viewports) {\n      return;\n    }\n    const {tileset3d} = this.state;\n    const {timeline} = this.context;\n    const viewportsNumber = Object.keys(viewports).length;\n    if (!timeline || !viewportsNumber || !tileset3d) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    tileset3d.selectTiles(Object.values(viewports)).then(frameNumber => {\n      const tilesetChanged = this.state.frameNumber !== frameNumber;\n      if (tilesetChanged) {\n        this.setState({frameNumber});\n      }\n    });\n  }\n\n  private _getSubLayer(\n    tileHeader: Tile3D,\n    oldLayer?: Layer\n  ): MeshLayer<DataT> | PointCloudLayer<DataT> | ScenegraphLayer<DataT> | null {\n    if (!tileHeader.content) {\n      return null;\n    }\n\n    switch (tileHeader.type) {\n      case TILE_TYPE.POINTCLOUD:\n        return this._makePointCloudLayer(tileHeader, oldLayer as PointCloudLayer<DataT>);\n      case TILE_TYPE.SCENEGRAPH:\n        return this._make3DModelLayer(tileHeader);\n      case TILE_TYPE.MESH:\n        return this._makeSimpleMeshLayer(tileHeader, oldLayer as MeshLayer<DataT>);\n      default:\n        throw new Error(`Tile3DLayer: Failed to render layer of type ${tileHeader.content.type}`);\n    }\n  }\n\n  private _makePointCloudLayer(\n    tileHeader: Tile3D,\n    oldLayer?: PointCloudLayer<DataT>\n  ): PointCloudLayer<DataT> | null {\n    const {attributes, pointCount, constantRGBA, cartographicOrigin, modelMatrix} =\n      tileHeader.content;\n    const {positions, normals, colors} = attributes;\n\n    if (!positions) {\n      return null;\n    }\n    const data = (oldLayer && oldLayer.props.data) || {\n      header: {\n        vertexCount: pointCount\n      },\n      attributes: {\n        POSITION: positions,\n        NORMAL: normals,\n        COLOR_0: colors\n      }\n    };\n\n    const {pointSize, getPointColor} = this.props;\n    const SubLayerClass = this.getSubLayerClass('pointcloud', PointCloudLayer);\n    return new SubLayerClass(\n      {\n        pointSize\n      },\n      this.getSubLayerProps({\n        id: 'pointcloud'\n      }),\n      {\n        id: `${this.id}-pointcloud-${tileHeader.id}`,\n        tile: tileHeader,\n        data,\n        coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n        coordinateOrigin: cartographicOrigin,\n        modelMatrix,\n        getColor: constantRGBA || getPointColor,\n        _offset: 0\n      }\n    );\n  }\n\n  private _make3DModelLayer(tileHeader: Tile3D): ScenegraphLayer<DataT> {\n    const {gltf, instances, cartographicOrigin, modelMatrix} = tileHeader.content;\n\n    const SubLayerClass = this.getSubLayerClass('scenegraph', ScenegraphLayer);\n\n    return new SubLayerClass(\n      {\n        _lighting: 'pbr'\n      },\n      this.getSubLayerProps({\n        id: 'scenegraph'\n      }),\n      {\n        id: `${this.id}-scenegraph-${tileHeader.id}`,\n        tile: tileHeader,\n        data: instances || SINGLE_DATA,\n        scenegraph: gltf,\n\n        coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n        coordinateOrigin: cartographicOrigin,\n        modelMatrix,\n        getTransformMatrix: instance => instance.modelMatrix,\n        getPosition: [0, 0, 0],\n        _offset: 0\n      }\n    );\n  }\n\n  private _makeSimpleMeshLayer(tileHeader: Tile3D, oldLayer?: MeshLayer<DataT>): MeshLayer<DataT> {\n    const content = tileHeader.content;\n    const {\n      attributes,\n      indices,\n      modelMatrix,\n      cartographicOrigin,\n      coordinateSystem = COORDINATE_SYSTEM.METER_OFFSETS,\n      material,\n      featureIds\n    } = content;\n    const {_getMeshColor} = this.props;\n\n    const geometry =\n      (oldLayer && oldLayer.props.mesh) ||\n      new Geometry({\n        drawMode: GL.TRIANGLES,\n        attributes: getMeshGeometry(attributes),\n        indices\n      });\n\n    const SubLayerClass = this.getSubLayerClass('mesh', MeshLayer);\n\n    return new SubLayerClass(\n      this.getSubLayerProps({\n        id: 'mesh'\n      }),\n      {\n        id: `${this.id}-mesh-${tileHeader.id}`,\n        tile: tileHeader,\n        mesh: geometry,\n        data: SINGLE_DATA,\n        getColor: _getMeshColor(tileHeader),\n        pbrMaterial: material,\n        modelMatrix,\n        coordinateOrigin: cartographicOrigin,\n        coordinateSystem,\n        featureIds,\n        _offset: 0\n      }\n    );\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {tileset3d, layerMap} = this.state;\n    if (!tileset3d) {\n      return null;\n    }\n\n    // loaders.gl doesn't provide a type for tileset3d.tiles\n    return (tileset3d.tiles as Tile3D[])\n      .map(tile => {\n        const layerCache = (layerMap[tile.id] = layerMap[tile.id] || {tile});\n        let {layer} = layerCache;\n        if (tile.selected) {\n          // render selected tiles\n          if (!layer) {\n            // create layer\n            layer = this._getSubLayer(tile);\n          } else if (layerCache.needsUpdate) {\n            // props have changed, rerender layer\n            layer = this._getSubLayer(tile, layer);\n            layerCache.needsUpdate = false;\n          }\n        }\n        layerCache.layer = layer;\n        return layer;\n      })\n      .filter(Boolean);\n  }\n}\n\nfunction getMeshGeometry(contentAttributes: MeshAttributes): MeshAttributes {\n  const attributes: MeshAttributes = {};\n  attributes.positions = {\n    ...contentAttributes.positions,\n    value: new Float32Array(contentAttributes.positions.value)\n  };\n  if (contentAttributes.normals) {\n    attributes.normals = contentAttributes.normals;\n  }\n  if (contentAttributes.texCoords) {\n    attributes.texCoords = contentAttributes.texCoords;\n  }\n  if (contentAttributes.colors) {\n    attributes.colors = contentAttributes.colors;\n  }\n  if (contentAttributes.uvRegions) {\n    attributes.uvRegions = contentAttributes.uvRegions;\n  }\n  return attributes;\n}\n", "// Copyright (C) 2018-2019 HERE Europe B.V.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst QUANTIZED_MESH_HEADER = new Map([\n  ['centerX', Float64Array.BYTES_PER_ELEMENT],\n  ['centerY', Float64Array.BYTES_PER_ELEMENT],\n  ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n\n  ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n  ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n\n  ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n\n  ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n]);\n\nfunction decodeZigZag(value) {\n  return (value >> 1) ^ -(value & 1);\n}\n\nfunction decodeHeader(dataView) {\n  let position = 0;\n  const header = {};\n\n  for (const [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n    const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n\n    header[key] = getter.call(dataView, position, true);\n    position += bytesCount;\n  }\n\n  return {header, headerEndPosition: position};\n}\n\nfunction decodeVertexData(dataView, headerEndPosition) {\n  let position = headerEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = dataView.getUint32(position, true);\n  const vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n  const elementArrayLength = vertexCount * bytesPerArrayElement;\n  const uArrayStartPosition = position;\n  const vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n  const heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n    height += decodeZigZag(\n      dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true)\n    );\n\n    vertexData[i] = u;\n    vertexData[i + vertexCount] = v;\n    vertexData[i + vertexCount * 2] = height;\n  }\n\n  position += elementArrayLength * 3;\n\n  return {vertexData, vertexDataEndPosition: position};\n}\n\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n  let indices;\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount);\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount);\n  }\n\n  if (!encoded) {\n    return indices;\n  }\n\n  let highest = 0;\n\n  for (let i = 0; i < indices.length; ++i) {\n    const code = indices[i];\n\n    indices[i] = highest - code;\n\n    if (code === 0) {\n      ++highest;\n    }\n  }\n\n  return indices;\n}\n\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n  let position = vertexDataEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - (position % bytesPerIndex);\n  }\n\n  const triangleCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const triangleIndicesCount = triangleCount * 3;\n  const triangleIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    triangleIndicesCount,\n    bytesPerIndex\n  );\n  position += triangleIndicesCount * bytesPerIndex;\n\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices\n  };\n}\n\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n  let position = triangleIndicesEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  const westVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n  position += westVertexCount * bytesPerIndex;\n\n  const southVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const southIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    southVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += southVertexCount * bytesPerIndex;\n\n  const eastVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n  position += eastVertexCount * bytesPerIndex;\n\n  const northVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const northIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    northVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += northVertexCount * bytesPerIndex;\n\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices\n  };\n}\n\nfunction decodeVertexNormalsExtension(extensionDataView) {\n  return new Uint8Array(\n    extensionDataView.buffer,\n    extensionDataView.byteOffset,\n    extensionDataView.byteLength\n  );\n}\n\nfunction decodeWaterMaskExtension(extensionDataView) {\n  return extensionDataView.buffer.slice(\n    extensionDataView.byteOffset,\n    extensionDataView.byteOffset + extensionDataView.byteLength\n  );\n}\n\ntype Extensions = {\n  vertexNormals?: any;\n  waterMask?: any;\n};\n\nfunction decodeExtensions(dataView, indicesEndPosition) {\n  const extensions: Extensions = {};\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return {extensions, extensionsEndPosition: indicesEndPosition};\n  }\n\n  let position = indicesEndPosition;\n\n  while (position < dataView.byteLength) {\n    const extensionId = dataView.getUint8(position, true);\n    position += Uint8Array.BYTES_PER_ELEMENT;\n\n    const extensionLength = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n\n    const extensionView = new DataView(dataView.buffer, position, extensionLength);\n\n    switch (extensionId) {\n      case 1: {\n        extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n\n        break;\n      }\n      case 2: {\n        extensions.waterMask = decodeWaterMaskExtension(extensionView);\n\n        break;\n      }\n      default: {\n        // console.warn(`Unknown extension with id ${extensionId}`)\n      }\n    }\n\n    position += extensionLength;\n  }\n\n  return {extensions, extensionsEndPosition: position};\n}\n\nexport const DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n};\n\nconst DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n};\n\nexport default function decode(data, userOptions) {\n  const options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  const view = new DataView(data);\n  const {header, headerEndPosition} = decodeHeader(view);\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return {header};\n  }\n\n  const {vertexData, vertexDataEndPosition} = decodeVertexData(view, headerEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return {header, vertexData};\n  }\n\n  const {triangleIndices, triangleIndicesEndPosition} = decodeTriangleIndices(\n    view,\n    vertexData,\n    vertexDataEndPosition\n  );\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return {header, vertexData, triangleIndices};\n  }\n\n  const {westIndices, southIndices, eastIndices, northIndices, edgeIndicesEndPosition} =\n    decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header,\n      vertexData,\n      triangleIndices,\n      westIndices,\n      northIndices,\n      eastIndices,\n      southIndices\n    };\n  }\n\n  const {extensions} = decodeExtensions(view, edgeIndicesEndPosition);\n\n  return {\n    header,\n    vertexData,\n    triangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices,\n    extensions\n  };\n}\n", "import {concatenateTypedArrays} from '@loaders.gl/loader-utils';\n\nexport type EdgeIndices = {\n  westIndices: number[];\n  northIndices: number[];\n  eastIndices: number[];\n  southIndices: number[];\n};\n\n/**\n * Add skirt to existing mesh\n * @param {object} attributes - POSITION and TEXCOOD_0 attributes data\n * @param {any} triangles - indices array of the mesh geometry\n * @param skirtHeight - height of the skirt geometry\n * @param outsideIndices - edge indices from quantized mesh data\n * @returns - geometry data with added skirt\n */\nexport function addSkirt(attributes, triangles, skirtHeight: number, outsideIndices?: EdgeIndices) {\n  const outsideEdges = outsideIndices\n    ? getOutsideEdgesFromIndices(outsideIndices, attributes.POSITION.value)\n    : getOutsideEdgesFromTriangles(triangles);\n\n  // 2 new vertices for each outside edge\n  const newPosition = new attributes.POSITION.value.constructor(outsideEdges.length * 6);\n  const newTexcoord0 = new attributes.TEXCOORD_0.value.constructor(outsideEdges.length * 4);\n\n  // 2 new triangles for each outside edge\n  const newTriangles = new triangles.constructor(outsideEdges.length * 6);\n\n  for (let i = 0; i < outsideEdges.length; i++) {\n    const edge = outsideEdges[i];\n\n    updateAttributesForNewEdge({\n      edge,\n      edgeIndex: i,\n      attributes,\n      skirtHeight,\n      newPosition,\n      newTexcoord0,\n      newTriangles\n    });\n  }\n\n  attributes.POSITION.value = concatenateTypedArrays(attributes.POSITION.value, newPosition);\n  attributes.TEXCOORD_0.value = concatenateTypedArrays(attributes.TEXCOORD_0.value, newTexcoord0);\n  const resultTriangles =\n    triangles instanceof Array\n      ? triangles.concat(newTriangles)\n      : concatenateTypedArrays(triangles, newTriangles);\n\n  return {\n    attributes,\n    triangles: resultTriangles\n  };\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {any} triangles - indices array of the mesh geometry\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromTriangles(triangles) {\n  const edges: number[][] = [];\n  for (let i = 0; i < triangles.length; i += 3) {\n    edges.push([triangles[i], triangles[i + 1]]);\n    edges.push([triangles[i + 1], triangles[i + 2]]);\n    edges.push([triangles[i + 2], triangles[i]]);\n  }\n\n  edges.sort((a, b) => Math.min(...a) - Math.min(...b) || Math.max(...a) - Math.max(...b));\n\n  const outsideEdges: number[][] = [];\n  let index = 0;\n  while (index < edges.length) {\n    if (edges[index][0] === edges[index + 1]?.[1] && edges[index][1] === edges[index + 1]?.[0]) {\n      index += 2;\n    } else {\n      outsideEdges.push(edges[index]);\n      index++;\n    }\n  }\n  return outsideEdges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} indices - edge indices from quantized mesh data\n * @param {TypedArray} position - position attribute geometry data\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromIndices(indices: EdgeIndices, position) {\n  // Sort skirt indices to create adjacent triangles\n  indices.westIndices.sort((a, b) => position[3 * a + 1] - position[3 * b + 1]);\n  // Reverse (b - a) to match triangle winding\n  indices.eastIndices.sort((a, b) => position[3 * b + 1] - position[3 * a + 1]);\n  indices.southIndices.sort((a, b) => position[3 * b] - position[3 * a]);\n  // Reverse (b - a) to match triangle winding\n  indices.northIndices.sort((a, b) => position[3 * a] - position[3 * b]);\n\n  const edges: number[][] = [];\n  for (const index in indices) {\n    const indexGroup = indices[index];\n    for (let i = 0; i < indexGroup.length - 1; i++) {\n      edges.push([indexGroup[i], indexGroup[i + 1]]);\n    }\n  }\n  return edges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} args\n * @param {number[]} args.edge - edge indices in geometry\n * @param {number} args.edgeIndex - edge index in outsideEdges array\n * @param {object} args.attributes - POSITION and TEXCOORD_0 attributes\n * @param {number} args.skirtHeight - height of the skirt geometry\n * @param {TypedArray} args.newPosition - POSITION array for skirt data\n * @param {TypedArray} args.newTexcoord0 - TEXCOORD_0 array for skirt data\n * @param {TypedArray | Array} args.newTriangles - trinagle indices array for skirt data\n * @returns {void}\n */\nfunction updateAttributesForNewEdge({\n  edge,\n  edgeIndex,\n  attributes,\n  skirtHeight,\n  newPosition,\n  newTexcoord0,\n  newTriangles\n}) {\n  const positionsLength = attributes.POSITION.value.length;\n  const vertex1Offset = edgeIndex * 2;\n  const vertex2Offset = edgeIndex * 2 + 1;\n\n  // Define POSITION for new 1st vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[0] * 3, edge[0] * 3 + 3),\n    vertex1Offset * 3\n  );\n  newPosition[vertex1Offset * 3 + 2] = newPosition[vertex1Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Define POSITION for new 2nd vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[1] * 3, edge[1] * 3 + 3),\n    vertex2Offset * 3\n  );\n  newPosition[vertex2Offset * 3 + 2] = newPosition[vertex2Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Use same TEXCOORDS for skirt vertices\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[0] * 2, edge[0] * 2 + 2),\n    vertex1Offset * 2\n  );\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[1] * 2, edge[1] * 2 + 2),\n    vertex2Offset * 2\n  );\n\n  // Define new triangles\n  const triangle1Offset = edgeIndex * 2 * 3;\n  newTriangles[triangle1Offset] = edge[0];\n  newTriangles[triangle1Offset + 1] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 2] = edge[1];\n\n  newTriangles[triangle1Offset + 3] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 4] = edge[0];\n  newTriangles[triangle1Offset + 5] = positionsLength / 3 + vertex1Offset;\n}\n", "import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport decode, {DECODING_STEPS} from './decode-quantized-mesh';\nimport {addSkirt} from './helpers/skirt';\n\nfunction getMeshAttributes(vertexData, header, bounds) {\n  const {minHeight, maxHeight} = header;\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n  const xScale = maxX - minX;\n  const yScale = maxY - minY;\n  const zScale = maxHeight - minHeight;\n\n  const nCoords = vertexData.length / 3;\n  // vec3. x, y defined by bounds, z in meters\n  const positions = new Float32Array(nCoords * 3);\n\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(nCoords * 2);\n\n  // Data is not interleaved; all u, then all v, then all heights\n  for (let i = 0; i < nCoords; i++) {\n    const x = vertexData[i] / 32767;\n    const y = vertexData[i + nCoords] / 32767;\n    const z = vertexData[i + nCoords * 2] / 32767;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = y * yScale + minY;\n    positions[3 * i + 2] = z * zScale + minHeight;\n\n    texCoords[2 * i + 0] = x;\n    texCoords[2 * i + 1] = y;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // TODO: Parse normals if they exist in the file\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\nfunction getTileMesh(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n  const {bounds} = options;\n  // Don't parse edge indices or format extensions\n  const {\n    header,\n    vertexData,\n    triangleIndices: originalTriangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices\n  } = decode(arrayBuffer, DECODING_STEPS.triangleIndices);\n  let triangleIndices = originalTriangleIndices;\n  let attributes = getMeshAttributes(vertexData, header, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  // TODO: Find bounding box from header, instead of doing extra pass over\n  // vertices.\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (options.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangleIndices,\n      options.skirtHeight,\n      {\n        westIndices,\n        northIndices,\n        eastIndices,\n        southIndices\n      }\n    );\n    attributes = newAttributes;\n    triangleIndices = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      // @ts-ignore\n      vertexCount: triangleIndices.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: triangleIndices, size: 1},\n    attributes\n  };\n}\n\nexport default function loadQuantizedMesh(arrayBuffer, options) {\n  return getTileMesh(arrayBuffer, options['quantized-mesh']);\n}\n", "\nexport default class Martini {\n    constructor(gridSize = 257) {\n        this.gridSize = gridSize;\n        const tileSize = gridSize - 1;\n        if (tileSize & (tileSize - 1)) throw new Error(\n            `Expected grid size to be 2^n+1, got ${gridSize}.`);\n\n        this.numTriangles = tileSize * tileSize * 2 - 2;\n        this.numParentTriangles = this.numTriangles - tileSize * tileSize;\n\n        this.indices = new Uint32Array(this.gridSize * this.gridSize);\n\n        // coordinates for all possible triangles in an RTIN tile\n        this.coords = new Uint16Array(this.numTriangles * 4);\n\n        // get triangle coordinates from its index in an implicit binary tree\n        for (let i = 0; i < this.numTriangles; i++) {\n            let id = i + 2;\n            let ax = 0, ay = 0, bx = 0, by = 0, cx = 0, cy = 0;\n            if (id & 1) {\n                bx = by = cx = tileSize; // bottom-left triangle\n            } else {\n                ax = ay = cy = tileSize; // top-right triangle\n            }\n            while ((id >>= 1) > 1) {\n                const mx = (ax + bx) >> 1;\n                const my = (ay + by) >> 1;\n\n                if (id & 1) { // left half\n                    bx = ax; by = ay;\n                    ax = cx; ay = cy;\n                } else { // right half\n                    ax = bx; ay = by;\n                    bx = cx; by = cy;\n                }\n                cx = mx; cy = my;\n            }\n            const k = i * 4;\n            this.coords[k + 0] = ax;\n            this.coords[k + 1] = ay;\n            this.coords[k + 2] = bx;\n            this.coords[k + 3] = by;\n        }\n    }\n\n    createTile(terrain) {\n        return new Tile(terrain, this);\n    }\n}\n\nclass Tile {\n    constructor(terrain, martini) {\n        const size = martini.gridSize;\n        if (terrain.length !== size * size) throw new Error(\n            `Expected terrain data of length ${size * size} (${size} x ${size}), got ${terrain.length}.`);\n\n        this.terrain = terrain;\n        this.martini = martini;\n        this.errors = new Float32Array(terrain.length);\n        this.update();\n    }\n\n    update() {\n        const {numTriangles, numParentTriangles, coords, gridSize: size} = this.martini;\n        const {terrain, errors} = this;\n\n        // iterate over all possible triangles, starting from the smallest level\n        for (let i = numTriangles - 1; i >= 0; i--) {\n            const k = i * 4;\n            const ax = coords[k + 0];\n            const ay = coords[k + 1];\n            const bx = coords[k + 2];\n            const by = coords[k + 3];\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n            const cx = mx + my - ay;\n            const cy = my + ax - mx;\n\n            // calculate error in the middle of the long edge of the triangle\n            const interpolatedHeight = (terrain[ay * size + ax] + terrain[by * size + bx]) / 2;\n            const middleIndex = my * size + mx;\n            const middleError = Math.abs(interpolatedHeight - terrain[middleIndex]);\n\n            errors[middleIndex] = Math.max(errors[middleIndex], middleError);\n\n            if (i < numParentTriangles) { // bigger triangles; accumulate error with children\n                const leftChildIndex = ((ay + cy) >> 1) * size + ((ax + cx) >> 1);\n                const rightChildIndex = ((by + cy) >> 1) * size + ((bx + cx) >> 1);\n                errors[middleIndex] = Math.max(errors[middleIndex], errors[leftChildIndex], errors[rightChildIndex]);\n            }\n        }\n    }\n\n    getMesh(maxError = 0) {\n        const {gridSize: size, indices} = this.martini;\n        const {errors} = this;\n        let numVertices = 0;\n        let numTriangles = 0;\n        const max = size - 1;\n\n        // use an index grid to keep track of vertices that were already used to avoid duplication\n        indices.fill(0);\n\n        // retrieve mesh in two stages that both traverse the error map:\n        // - countElements: find used vertices (and assign each an index), and count triangles (for minimum allocation)\n        // - processTriangle: fill the allocated vertices & triangles typed arrays\n\n        function countElements(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                countElements(cx, cy, ax, ay, mx, my);\n                countElements(bx, by, cx, cy, mx, my);\n            } else {\n                indices[ay * size + ax] = indices[ay * size + ax] || ++numVertices;\n                indices[by * size + bx] = indices[by * size + bx] || ++numVertices;\n                indices[cy * size + cx] = indices[cy * size + cx] || ++numVertices;\n                numTriangles++;\n            }\n        }\n        countElements(0, 0, max, max, max, 0);\n        countElements(max, max, 0, 0, 0, max);\n\n        const vertices = new Uint16Array(numVertices * 2);\n        const triangles = new Uint32Array(numTriangles * 3);\n        let triIndex = 0;\n\n        function processTriangle(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                // triangle doesn't approximate the surface well enough; drill down further\n                processTriangle(cx, cy, ax, ay, mx, my);\n                processTriangle(bx, by, cx, cy, mx, my);\n\n            } else {\n                // add a triangle\n                const a = indices[ay * size + ax] - 1;\n                const b = indices[by * size + bx] - 1;\n                const c = indices[cy * size + cx] - 1;\n\n                vertices[2 * a] = ax;\n                vertices[2 * a + 1] = ay;\n\n                vertices[2 * b] = bx;\n                vertices[2 * b + 1] = by;\n\n                vertices[2 * c] = cx;\n                vertices[2 * c + 1] = cy;\n\n                triangles[triIndex++] = a;\n                triangles[triIndex++] = b;\n                triangles[triIndex++] = c;\n            }\n        }\n        processTriangle(0, 0, max, max, max, 0);\n        processTriangle(max, max, 0, 0, 0, max);\n\n        return {vertices, triangles};\n    }\n}\n", "// ISC License\n\n// Copyright(c) 2019, Michael Fogleman, Vladimir Agafonkin\n\n// Permission to use, copy, modify, and / or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS.IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n//   INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\n\n// @ts-nocheck\n\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-constant-condition */\nexport default class Delatin {\n  constructor(data, width, height = width) {\n    this.data = data; // height data\n    this.width = width;\n    this.height = height;\n\n    this.coords = []; // vertex coordinates (x, y)\n    this.triangles = []; // mesh triangle indices\n\n    // additional triangle data\n    this._halfedges = [];\n    this._candidates = [];\n    this._queueIndices = [];\n\n    this._queue = []; // queue of added triangles\n    this._errors = [];\n    this._rms = [];\n    this._pending = []; // triangles pending addition to queue\n    this._pendingLen = 0;\n\n    this._rmsSum = 0;\n\n    const x1 = width - 1;\n    const y1 = height - 1;\n    const p0 = this._addPoint(0, 0);\n    const p1 = this._addPoint(x1, 0);\n    const p2 = this._addPoint(0, y1);\n    const p3 = this._addPoint(x1, y1);\n\n    // add initial two triangles\n    const t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n    this._addTriangle(p0, p3, p1, t0, -1, -1);\n    this._flush();\n  }\n\n  // refine the mesh until its maximum error gets below the given one\n  run(maxError = 1) {\n    while (this.getMaxError() > maxError) {\n      this.refine();\n    }\n  }\n\n  // refine the mesh with a single point\n  refine() {\n    this._step();\n    this._flush();\n  }\n\n  // max error of the current mesh\n  getMaxError() {\n    return this._errors[0];\n  }\n\n  // root-mean-square deviation of the current mesh\n  getRMSD() {\n    return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n  }\n\n  // height value at a given position\n  heightAt(x, y) {\n    return this.data[this.width * y + x];\n  }\n\n  // rasterize and queue all triangles that got added or updated in _step\n  _flush() {\n    const coords = this.coords;\n    for (let i = 0; i < this._pendingLen; i++) {\n      const t = this._pending[i];\n      // rasterize triangle to find maximum pixel error\n      const a = 2 * this.triangles[t * 3 + 0];\n      const b = 2 * this.triangles[t * 3 + 1];\n      const c = 2 * this.triangles[t * 3 + 2];\n      this._findCandidate(\n        coords[a],\n        coords[a + 1],\n        coords[b],\n        coords[b + 1],\n        coords[c],\n        coords[c + 1],\n        t\n      );\n    }\n    this._pendingLen = 0;\n  }\n\n  // rasterize a triangle, find its max error, and queue it for processing\n  _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n    // triangle bounding box\n    const minX = Math.min(p0x, p1x, p2x);\n    const minY = Math.min(p0y, p1y, p2y);\n    const maxX = Math.max(p0x, p1x, p2x);\n    const maxY = Math.max(p0y, p1y, p2y);\n\n    // forward differencing variables\n    let w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n    let w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n    let w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n    const a01 = p1y - p0y;\n    const b01 = p0x - p1x;\n    const a12 = p2y - p1y;\n    const b12 = p1x - p2x;\n    const a20 = p0y - p2y;\n    const b20 = p2x - p0x;\n\n    // pre-multiplied z values at vertices\n    const a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n    const z0 = this.heightAt(p0x, p0y) / a;\n    const z1 = this.heightAt(p1x, p1y) / a;\n    const z2 = this.heightAt(p2x, p2y) / a;\n\n    // iterate over pixels in bounding box\n    let maxError = 0;\n    let mx = 0;\n    let my = 0;\n    let rms = 0;\n    for (let y = minY; y <= maxY; y++) {\n      // compute starting offset\n      let dx = 0;\n      if (w00 < 0 && a12 !== 0) {\n        dx = Math.max(dx, Math.floor(-w00 / a12));\n      }\n      if (w01 < 0 && a20 !== 0) {\n        dx = Math.max(dx, Math.floor(-w01 / a20));\n      }\n      if (w02 < 0 && a01 !== 0) {\n        dx = Math.max(dx, Math.floor(-w02 / a01));\n      }\n\n      let w0 = w00 + a12 * dx;\n      let w1 = w01 + a20 * dx;\n      let w2 = w02 + a01 * dx;\n\n      let wasInside = false;\n\n      for (let x = minX + dx; x <= maxX; x++) {\n        // check if inside triangle\n        if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n          wasInside = true;\n\n          // compute z using barycentric coordinates\n          const z = z0 * w0 + z1 * w1 + z2 * w2;\n          const dz = Math.abs(z - this.heightAt(x, y));\n          rms += dz * dz;\n          if (dz > maxError) {\n            maxError = dz;\n            mx = x;\n            my = y;\n          }\n        } else if (wasInside) {\n          break;\n        }\n\n        w0 += a12;\n        w1 += a20;\n        w2 += a01;\n      }\n\n      w00 += b12;\n      w01 += b20;\n      w02 += b01;\n    }\n\n    if ((mx === p0x && my === p0y) || (mx === p1x && my === p1y) || (mx === p2x && my === p2y)) {\n      maxError = 0;\n    }\n\n    // update triangle metadata\n    this._candidates[2 * t] = mx;\n    this._candidates[2 * t + 1] = my;\n    this._rms[t] = rms;\n\n    // add triangle to priority queue\n    this._queuePush(t, maxError, rms);\n  }\n\n  // process the next triangle in the queue, splitting it with a new point\n  _step() {\n    // pop triangle with highest error from priority queue\n    const t = this._queuePop();\n\n    const e0 = t * 3 + 0;\n    const e1 = t * 3 + 1;\n    const e2 = t * 3 + 2;\n\n    const p0 = this.triangles[e0];\n    const p1 = this.triangles[e1];\n    const p2 = this.triangles[e2];\n\n    const ax = this.coords[2 * p0];\n    const ay = this.coords[2 * p0 + 1];\n    const bx = this.coords[2 * p1];\n    const by = this.coords[2 * p1 + 1];\n    const cx = this.coords[2 * p2];\n    const cy = this.coords[2 * p2 + 1];\n    const px = this._candidates[2 * t];\n    const py = this._candidates[2 * t + 1];\n\n    const pn = this._addPoint(px, py);\n\n    if (orient(ax, ay, bx, by, px, py) === 0) {\n      this._handleCollinear(pn, e0);\n    } else if (orient(bx, by, cx, cy, px, py) === 0) {\n      this._handleCollinear(pn, e1);\n    } else if (orient(cx, cy, ax, ay, px, py) === 0) {\n      this._handleCollinear(pn, e2);\n    } else {\n      const h0 = this._halfedges[e0];\n      const h1 = this._halfedges[e1];\n      const h2 = this._halfedges[e2];\n\n      const t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n      const t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n      const t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n\n      this._legalize(t0);\n      this._legalize(t1);\n      this._legalize(t2);\n    }\n  }\n\n  // add coordinates for a new vertex\n  _addPoint(x, y) {\n    const i = this.coords.length >> 1;\n    this.coords.push(x, y);\n    return i;\n  }\n\n  // add or update a triangle in the mesh\n  _addTriangle(a, b, c, ab, bc, ca, e = this.triangles.length) {\n    const t = e / 3; // new triangle index\n\n    // add triangle vertices\n    this.triangles[e + 0] = a;\n    this.triangles[e + 1] = b;\n    this.triangles[e + 2] = c;\n\n    // add triangle halfedges\n    this._halfedges[e + 0] = ab;\n    this._halfedges[e + 1] = bc;\n    this._halfedges[e + 2] = ca;\n\n    // link neighboring halfedges\n    if (ab >= 0) {\n      this._halfedges[ab] = e + 0;\n    }\n    if (bc >= 0) {\n      this._halfedges[bc] = e + 1;\n    }\n    if (ca >= 0) {\n      this._halfedges[ca] = e + 2;\n    }\n\n    // init triangle metadata\n    this._candidates[2 * t + 0] = 0;\n    this._candidates[2 * t + 1] = 0;\n    this._queueIndices[t] = -1;\n    this._rms[t] = 0;\n\n    // add triangle to pending queue for later rasterization\n    this._pending[this._pendingLen++] = t;\n\n    // return first halfedge index\n    return e;\n  }\n\n  _legalize(a) {\n    // if the pair of triangles doesn't satisfy the Delaunay condition\n    // (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n    // then do the same check/flip recursively for the new pair of triangles\n    //\n    //           pl                    pl\n    //          /||\\                  /  \\\n    //       al/ || \\bl            al/    \\a\n    //        /  ||  \\              /      \\\n    //       /  a||b  \\    flip    /___ar___\\\n    //     p0\\   ||   /p1   =>   p0\\---bl---/p1\n    //        \\  ||  /              \\      /\n    //       ar\\ || /br             b\\    /br\n    //          \\||/                  \\  /\n    //           pr                    pr\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      return;\n    }\n\n    const a0 = a - (a % 3);\n    const b0 = b - (b % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const p1 = this.triangles[bl];\n    const coords = this.coords;\n\n    if (\n      !inCircle(\n        coords[2 * p0],\n        coords[2 * p0 + 1],\n        coords[2 * pr],\n        coords[2 * pr + 1],\n        coords[2 * pl],\n        coords[2 * pl + 1],\n        coords[2 * p1],\n        coords[2 * p1 + 1]\n      )\n    ) {\n      return;\n    }\n\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(a0 / 3);\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n    const t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n\n    this._legalize(t0 + 1);\n    this._legalize(t1 + 2);\n  }\n\n  // handle a case where new vertex is on the edge of a triangle\n  _handleCollinear(pn, a) {\n    const a0 = a - (a % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      const t0 = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n      const t1 = this._addTriangle(p0, pn, pl, t0, -1, hal);\n      this._legalize(t0 + 1);\n      this._legalize(t1 + 2);\n      return;\n    }\n\n    const b0 = b - (b % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p1 = this.triangles[bl];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n    const t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n    const t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n    const t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n\n    this._legalize(t0);\n    this._legalize(t1);\n    this._legalize(t2);\n    this._legalize(t3);\n  }\n\n  // priority queue methods\n\n  _queuePush(t, error, rms) {\n    const i = this._queue.length;\n    this._queueIndices[t] = i;\n    this._queue.push(t);\n    this._errors.push(error);\n    this._rmsSum += rms;\n    this._queueUp(i);\n  }\n\n  _queuePop() {\n    const n = this._queue.length - 1;\n    this._queueSwap(0, n);\n    this._queueDown(0, n);\n    return this._queuePopBack();\n  }\n\n  _queuePopBack() {\n    const t = this._queue.pop();\n    this._errors.pop();\n    this._rmsSum -= this._rms[t];\n    this._queueIndices[t] = -1;\n    return t;\n  }\n\n  _queueRemove(t) {\n    const i = this._queueIndices[t];\n    if (i < 0) {\n      const it = this._pending.indexOf(t);\n      if (it !== -1) {\n        this._pending[it] = this._pending[--this._pendingLen];\n      } else {\n        throw new Error('Broken triangulation (something went wrong).');\n      }\n      return;\n    }\n    const n = this._queue.length - 1;\n    if (n !== i) {\n      this._queueSwap(i, n);\n      if (!this._queueDown(i, n)) {\n        this._queueUp(i);\n      }\n    }\n    this._queuePopBack();\n  }\n\n  _queueLess(i, j) {\n    return this._errors[i] > this._errors[j];\n  }\n\n  _queueSwap(i, j) {\n    const pi = this._queue[i];\n    const pj = this._queue[j];\n    this._queue[i] = pj;\n    this._queue[j] = pi;\n    this._queueIndices[pi] = j;\n    this._queueIndices[pj] = i;\n    const e = this._errors[i];\n    this._errors[i] = this._errors[j];\n    this._errors[j] = e;\n  }\n\n  _queueUp(j0) {\n    let j = j0;\n    while (true) {\n      const i = (j - 1) >> 1;\n      if (i === j || !this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      j = i;\n    }\n  }\n\n  _queueDown(i0, n) {\n    let i = i0;\n    while (true) {\n      const j1 = 2 * i + 1;\n      if (j1 >= n || j1 < 0) {\n        break;\n      }\n      const j2 = j1 + 1;\n      let j = j1;\n      if (j2 < n && this._queueLess(j2, j1)) {\n        j = j2;\n      }\n      if (!this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      i = j;\n    }\n    return i > i0;\n  }\n}\n\nfunction orient(ax, ay, bx, by, cx, cy) {\n  return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n", "import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport Martini from '@mapbox/martini';\nimport Delatin from './delatin';\nimport {addSkirt} from './helpers/skirt';\n\ntype TerrainOptions = {\n  meshMaxError: number;\n  bounds: number[];\n  elevationDecoder: ElevationDecoder;\n  tesselator: 'martini' | 'delatin';\n  skirtHeight?: number;\n};\n\ntype TerrainImage = {\n  data: Uint8Array;\n  width: number;\n  height: number;\n};\n\ntype ElevationDecoder = {\n  rScaler: any;\n  bScaler: any;\n  gScaler: any;\n  offset: number;\n};\n\nfunction getTerrain(\n  imageData: Uint8Array,\n  width: number,\n  height: number,\n  elevationDecoder: ElevationDecoder,\n  tesselator: 'martini' | 'delatin'\n) {\n  const {rScaler, bScaler, gScaler, offset} = elevationDecoder;\n\n  // From Martini demo\n  // https://observablehq.com/@mourner/martin-real-time-rtin-terrain-mesh\n  const terrain = new Float32Array((width + 1) * (height + 1));\n  // decode terrain values\n  for (let i = 0, y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++, i++) {\n      const k = i * 4;\n      const r = imageData[k + 0];\n      const g = imageData[k + 1];\n      const b = imageData[k + 2];\n      terrain[i + y] = r * rScaler + g * gScaler + b * bScaler + offset;\n    }\n  }\n\n  if (tesselator === 'martini') {\n    // backfill bottom border\n    for (let i = (width + 1) * width, x = 0; x < width; x++, i++) {\n      terrain[i] = terrain[i - width - 1];\n    }\n    // backfill right border\n    for (let i = height, y = 0; y < height + 1; y++, i += height + 1) {\n      terrain[i] = terrain[i - 1];\n    }\n  }\n\n  return terrain;\n}\n\nfunction getMeshAttributes(\n  vertices,\n  terrain: Uint8Array,\n  width: number,\n  height: number,\n  bounds: number[]\n) {\n  const gridSize = width + 1;\n  const numOfVerticies = vertices.length / 2;\n  // vec3. x, y in pixels, z in meters\n  const positions = new Float32Array(numOfVerticies * 3);\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(numOfVerticies * 2);\n\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, width, height];\n  const xScale = (maxX - minX) / width;\n  const yScale = (maxY - minY) / height;\n\n  for (let i = 0; i < numOfVerticies; i++) {\n    const x = vertices[i * 2];\n    const y = vertices[i * 2 + 1];\n    const pixelIdx = y * gridSize + x;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = -y * yScale + maxY;\n    positions[3 * i + 2] = terrain[pixelIdx];\n\n    texCoords[2 * i + 0] = x / width;\n    texCoords[2 * i + 1] = y / height;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\n/**\n * Returns generated mesh object from image data\n *\n * @param {object} terrainImage terrain image data\n * @param {object} terrainOptions terrain options\n * @returns mesh object\n */\nfunction getMesh(terrainImage: TerrainImage, terrainOptions: TerrainOptions) {\n  if (terrainImage === null) {\n    return null;\n  }\n  const {meshMaxError, bounds, elevationDecoder} = terrainOptions;\n\n  const {data, width, height} = terrainImage;\n\n  let terrain;\n  let mesh;\n  switch (terrainOptions.tesselator) {\n    case 'martini':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      break;\n    case 'delatin':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      break;\n    // auto\n    default:\n      if (width === height && !(height & (width - 1))) {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'martini');\n        mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      } else {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'delatin');\n        mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      }\n      break;\n  }\n\n  const {vertices} = mesh;\n  let {triangles} = mesh;\n  let attributes = getMeshAttributes(vertices, terrain, width, height, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (terrainOptions.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangles,\n      terrainOptions.skirtHeight\n    );\n    attributes = newAttributes;\n    triangles = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      vertexCount: triangles.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: Uint32Array.from(triangles), size: 1},\n    attributes\n  };\n}\n\n/**\n * Get Martini generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: Uint16Array, triangles: Uint32Array}} vertices and triangles data\n */\nfunction getMartiniTileMesh(meshMaxError, width, terrain) {\n  const gridSize = width + 1;\n  const martini = new Martini(gridSize);\n  const tile = martini.createTile(terrain);\n  const {vertices, triangles} = tile.getMesh(meshMaxError);\n\n  return {vertices, triangles};\n}\n\n/**\n * Get Delatin generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data array\n * @param {number} height height of the input data array\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: number[], triangles: number[]}} vertices and triangles data\n */\nfunction getDelatinTileMesh(meshMaxError, width, height, terrain) {\n  const tin = new Delatin(terrain, width + 1, height + 1);\n  tin.run(meshMaxError);\n  // @ts-expect-error\n  const {coords, triangles} = tin;\n  const vertices = coords;\n  return {vertices, triangles};\n}\n\nexport default async function loadTerrain(arrayBuffer, options, context) {\n  const loadImageOptions = {\n    ...options,\n    mimeType: 'application/x.image',\n    image: {...options.image, type: 'data'}\n  };\n  const image = await context.parse(arrayBuffer, loadImageOptions);\n  // Extend function to support additional mesh generation options (square grid or delatin)\n  return getMesh(image, options.terrain);\n}\n", "// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n", "import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for color-encoded images\n */\nexport const TerrainLoader = {\n  name: 'Terrain',\n  id: 'terrain',\n  module: 'terrain',\n  version: VERSION,\n  worker: true,\n  extensions: ['png', 'pngraw', 'jpg', 'jpeg', 'gif', 'webp', 'bmp'],\n  mimeTypes: ['image/png', 'image/jpeg', 'image/gif', 'image/webp', 'image/bmp'],\n  options: {\n    terrain: {\n      tesselator: 'auto',\n      bounds: null,\n      meshMaxError: 10,\n      elevationDecoder: {\n        rScaler: 1,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      },\n      skirtHeight: null\n    }\n  }\n};\n\n/**\n * Loader for color-encoded images\n */\nexport const _typecheckTerrainWorkerLoader: Loader = TerrainLoader;\n", "import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  name: 'Quantized Mesh',\n  id: 'quantized-mesh',\n  module: 'terrain',\n  version: VERSION,\n  worker: true,\n  extensions: ['terrain'],\n  mimeTypes: ['application/vnd.quantized-mesh'],\n  options: {\n    'quantized-mesh': {\n      bounds: [0, 0, 1, 1],\n      skirtHeight: null\n    }\n  }\n};\n\nexport const _typecheckQuantizedMeshLoader: Loader = QuantizedMeshLoader;\n", "import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader} from './terrain-loader';\nimport {QuantizedMeshLoader as QuantizedMeshWorkerLoader} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n\nexport const _typecheckTerrainLoader: LoaderWithParser = TerrainLoader; // eslint-disable-line\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n\nexport const _typecheckQuantizedMeshLoader: LoaderWithParser = QuantizedMeshLoader;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  DefaultProps,\n  Layer,\n  LayersList,\n  log,\n  Material,\n  Texture,\n  UpdateParameters\n} from '@deck.gl/core';\nimport {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport type {MeshAttributes} from '@loaders.gl/schema';\nimport {TerrainWorkerLoader} from '@loaders.gl/terrain';\nimport TileLayer, {TileLayerProps} from '../tile-layer/tile-layer';\nimport type {Bounds, GeoBoundingBox, TileBoundingBox, TileLoadProps, ZRange} from '../tileset-2d';\nimport {Tile2DHeader, urlType, getURLFromTemplate, URLTemplate} from '../tileset-2d';\n\nconst DUMMY_DATA = [1];\n\nconst defaultProps: DefaultProps<TerrainLayerProps> = {\n  ...TileLayer.defaultProps,\n  // Image url that encodes height data\n  elevationData: urlType,\n  // Image url to use as texture\n  texture: {...urlType, optional: true},\n  // Martini error tolerance in meters, smaller number -> more detailed mesh\n  meshMaxError: {type: 'number', value: 4.0},\n  // Bounding box of the terrain image, [minX, minY, maxX, maxY] in world coordinates\n  bounds: {type: 'array', value: null, optional: true, compare: true},\n  // Color to use if texture is unavailable\n  color: {type: 'color', value: [255, 255, 255]},\n  // Object to decode height data, from (r, g, b) to height in meters\n  elevationDecoder: {\n    type: 'object',\n    value: {\n      rScaler: 1,\n      gScaler: 0,\n      bScaler: 0,\n      offset: 0\n    }\n  },\n  // Supply url to local terrain worker bundle. Only required if running offline and cannot access CDN.\n  workerUrl: '',\n  // Same as SimpleMeshLayer wireframe\n  wireframe: false,\n  material: true,\n\n  loaders: [TerrainWorkerLoader]\n};\n\n// Turns array of templates into a single string to work around shallow change\nfunction urlTemplateToUpdateTrigger(template: URLTemplate): string {\n  if (Array.isArray(template)) {\n    return template.join(';');\n  }\n  return template || '';\n}\n\ntype ElevationDecoder = {rScaler: number; gScaler: number; bScaler: number; offset: number};\ntype TerrainLoadProps = {\n  bounds: Bounds;\n  elevationData: string | null;\n  elevationDecoder: ElevationDecoder;\n  meshMaxError: number;\n  signal?: AbortSignal;\n};\n\ntype MeshAndTexture = [MeshAttributes | null, Texture | null];\n\n/** All properties supported by TerrainLayer */\nexport type TerrainLayerProps = _TerrainLayerProps &\n  TileLayerProps<MeshAndTexture> &\n  CompositeLayerProps;\n\n/** Props added by the TerrainLayer */\ntype _TerrainLayerProps = {\n  /** Image url that encodes height data. **/\n  elevationData: URLTemplate;\n\n  /** Image url to use as texture. **/\n  texture?: URLTemplate;\n\n  /** Martini error tolerance in meters, smaller number -> more detailed mesh. **/\n  meshMaxError?: number;\n\n  /** Bounding box of the terrain image, [minX, minY, maxX, maxY] in world coordinates. **/\n  bounds?: Bounds | null;\n\n  /** Color to use if texture is unavailable. **/\n  color?: Color;\n\n  /** Object to decode height data, from (r, g, b) to height in meters. **/\n  elevationDecoder?: ElevationDecoder;\n\n  /** Whether to render the mesh in wireframe mode. **/\n  wireframe?: boolean;\n\n  /** Material props for lighting effect. **/\n  material?: Material;\n\n  /**\n   * @deprecated Use `loadOptions.terrain.workerUrl` instead\n   */\n  workerUrl?: string;\n};\n\n/** Render mesh surfaces from height map images. */\nexport default class TerrainLayer<ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_TerrainLayerProps & Required<TileLayerProps<MeshAndTexture>>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'TerrainLayer';\n\n  state!: {\n    isTiled?: boolean;\n    terrain: MeshAttributes;\n    zRange?: ZRange | null;\n  };\n\n  updateState({props, oldProps}: UpdateParameters<this>): void {\n    const elevationDataChanged = props.elevationData !== oldProps.elevationData;\n    if (elevationDataChanged) {\n      const {elevationData} = props;\n      const isTiled =\n        elevationData &&\n        (Array.isArray(elevationData) ||\n          (elevationData.includes('{x}') && elevationData.includes('{y}')));\n      this.setState({isTiled});\n    }\n\n    // Reloading for single terrain mesh\n    const shouldReload =\n      elevationDataChanged ||\n      props.meshMaxError !== oldProps.meshMaxError ||\n      props.elevationDecoder !== oldProps.elevationDecoder ||\n      props.bounds !== oldProps.bounds;\n\n    if (!this.state.isTiled && shouldReload) {\n      // When state.isTiled, elevationData cannot be an array\n      const terrain = this.loadTerrain(props as TerrainLoadProps);\n      this.setState({terrain});\n    }\n\n    // TODO - remove in v9\n    // @ts-ignore\n    if (props.workerUrl) {\n      log.removed('workerUrl', 'loadOptions.terrain.workerUrl')();\n    }\n  }\n\n  loadTerrain({\n    elevationData,\n    bounds,\n    elevationDecoder,\n    meshMaxError,\n    signal\n  }: TerrainLoadProps): Promise<MeshAttributes> | null {\n    if (!elevationData) {\n      return null;\n    }\n    let loadOptions = this.getLoadOptions();\n    loadOptions = {\n      ...loadOptions,\n      terrain: {\n        skirtHeight: this.state.isTiled ? meshMaxError * 2 : 0,\n        ...loadOptions?.terrain,\n        bounds,\n        meshMaxError,\n        elevationDecoder\n      }\n    };\n    const {fetch} = this.props;\n    return fetch(elevationData, {propName: 'elevationData', layer: this, loadOptions, signal});\n  }\n\n  getTiledTerrainData(tile: TileLoadProps): Promise<MeshAndTexture> {\n    const {elevationData, fetch, texture, elevationDecoder, meshMaxError} = this.props;\n    const {viewport} = this.context;\n    const dataUrl = getURLFromTemplate(elevationData, tile);\n    const textureUrl = texture && getURLFromTemplate(texture, tile);\n\n    const {signal} = tile;\n    let bottomLeft = [0, 0] as [number, number];\n    let topRight = [0, 0] as [number, number];\n    if (viewport.isGeospatial) {\n      const bbox = tile.bbox as GeoBoundingBox;\n      bottomLeft = viewport.projectFlat([bbox.west, bbox.south]);\n      topRight = viewport.projectFlat([bbox.east, bbox.north]);\n    } else {\n      const bbox = tile.bbox as Exclude<TileBoundingBox, GeoBoundingBox>;\n      bottomLeft = [bbox.left, bbox.bottom];\n      topRight = [bbox.right, bbox.top];\n    }\n    const bounds: Bounds = [bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]];\n\n    const terrain = this.loadTerrain({\n      elevationData: dataUrl,\n      bounds,\n      elevationDecoder,\n      meshMaxError,\n      signal\n    });\n    const surface = textureUrl\n      ? // If surface image fails to load, the tile should still be displayed\n        fetch(textureUrl, {propName: 'texture', layer: this, loaders: [], signal}).catch(_ => null)\n      : Promise.resolve(null);\n\n    return Promise.all([terrain, surface]);\n  }\n\n  renderSubLayers(\n    props: TileLayerProps<MeshAndTexture> & {\n      id: string;\n      data: MeshAndTexture;\n      tile: Tile2DHeader<MeshAndTexture>;\n    }\n  ) {\n    const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n\n    const {color, wireframe, material} = this.props;\n    const {data} = props;\n\n    if (!data) {\n      return null;\n    }\n\n    const [mesh, texture] = data;\n\n    return new SubLayerClass(props, {\n      data: DUMMY_DATA,\n      mesh,\n      texture,\n      _instanced: false,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      getPosition: d => [0, 0, 0],\n      getColor: color,\n      wireframe,\n      material\n    });\n  }\n\n  // Update zRange of viewport\n  onViewportLoad(tiles?: Tile2DHeader<MeshAndTexture>[]): void {\n    if (!tiles) {\n      return;\n    }\n\n    const {zRange} = this.state;\n    const ranges = tiles\n      .map(tile => tile.content)\n      .filter(Boolean)\n      .map(arr => {\n        // @ts-ignore\n        const bounds = arr[0].header.boundingBox;\n        return bounds.map(bound => bound[2]);\n      });\n    if (ranges.length === 0) {\n      return;\n    }\n    const minZ = Math.min(...ranges.map(x => x[0]));\n    const maxZ = Math.max(...ranges.map(x => x[1]));\n\n    if (!zRange || minZ < zRange[0] || maxZ > zRange[1]) {\n      this.setState({zRange: [minZ, maxZ]});\n    }\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {\n      color,\n      material,\n      elevationData,\n      texture,\n      wireframe,\n      meshMaxError,\n      elevationDecoder,\n      tileSize,\n      maxZoom,\n      minZoom,\n      extent,\n      maxRequests,\n      onTileLoad,\n      onTileUnload,\n      onTileError,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy\n    } = this.props;\n\n    if (this.state.isTiled) {\n      return new TileLayer<MeshAndTexture>(\n        this.getSubLayerProps({\n          id: 'tiles'\n        }),\n        {\n          getTileData: this.getTiledTerrainData.bind(this),\n          renderSubLayers: this.renderSubLayers.bind(this),\n          updateTriggers: {\n            getTileData: {\n              elevationData: urlTemplateToUpdateTrigger(elevationData),\n              texture: urlTemplateToUpdateTrigger(texture),\n              meshMaxError,\n              elevationDecoder\n            }\n          },\n          onViewportLoad: this.onViewportLoad.bind(this),\n          zRange: this.state.zRange || null,\n          tileSize,\n          maxZoom,\n          minZoom,\n          extent,\n          maxRequests,\n          onTileLoad,\n          onTileUnload,\n          onTileError,\n          maxCacheSize,\n          maxCacheByteSize,\n          refinementStrategy\n        }\n      );\n    }\n\n    const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n    return new SubLayerClass(\n      this.getSubLayerProps({\n        id: 'mesh'\n      }),\n      {\n        data: DUMMY_DATA,\n        mesh: this.state.terrain,\n        texture,\n        _instanced: false,\n        getPosition: d => [0, 0, 0],\n        getColor: color,\n        material,\n        wireframe\n      }\n    );\n  }\n}\n", "// Copyright (c) 2015-2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable camelcase */\nimport {project} from '@deck.gl/core';\nimport type {Viewport, _ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {BrushingExtensionProps} from './brushing-extension';\n\ntype BrushingModuleSettings = {\n  // From layer context\n  viewport: Viewport;\n  mousePosition?: {x: number; y: number};\n} & BrushingExtensionProps;\n\nconst vs = `\n  uniform bool brushing_enabled;\n  uniform int brushing_target;\n  uniform vec2 brushing_mousePos;\n  uniform float brushing_radius;\n\n  #ifdef NON_INSTANCED_MODEL\n  attribute vec2 brushingTargets;\n  #else\n  attribute vec2 instanceBrushingTargets;\n  #endif\n\n  varying float brushing_isVisible;\n\n  bool brushing_isPointInRange(vec2 position) {\n    if (!brushing_enabled) {\n      return true;\n    }\n    vec2 source_commonspace = project_position(position);\n    vec2 target_commonspace = project_position(brushing_mousePos);\n    float distance = length((target_commonspace - source_commonspace) / project_uCommonUnitsPerMeter.xy);\n\n    return distance <= brushing_radius;\n  }\n\n  bool brushing_arePointsInRange(vec2 sourcePos, vec2 targetPos) {\n    return brushing_isPointInRange(sourcePos) || brushing_isPointInRange(targetPos);\n  }\n\n  void brushing_setVisible(bool visible) {\n    brushing_isVisible = float(visible);\n  }\n`;\n\nconst fs = `\n  uniform bool brushing_enabled;\n  varying float brushing_isVisible;\n`;\n\nconst TARGET = {\n  source: 0,\n  target: 1,\n  custom: 2,\n  source_target: 3\n};\n\nconst inject = {\n  'vs:DECKGL_FILTER_GL_POSITION': `\n    vec2 brushingTarget;\n    vec2 brushingSource;\n    if (brushing_target == 3) {\n      brushingTarget = geometry.worldPositionAlt.xy;\n      brushingSource = geometry.worldPosition.xy;\n    } else if (brushing_target == 0) {\n      brushingTarget = geometry.worldPosition.xy;\n    } else if (brushing_target == 1) {\n      brushingTarget = geometry.worldPositionAlt.xy;\n    } else {\n      #ifdef NON_INSTANCED_MODEL\n      brushingTarget = brushingTargets;\n      #else\n      brushingTarget = instanceBrushingTargets;\n      #endif\n    }\n    bool visible;\n    if (brushing_target == 3) {\n      visible = brushing_arePointsInRange(brushingSource, brushingTarget);\n    } else {\n      visible = brushing_isPointInRange(brushingTarget);\n    }\n    brushing_setVisible(visible);\n  `,\n\n  'fs:DECKGL_FILTER_COLOR': `\n    if (brushing_enabled && brushing_isVisible < 0.5) {\n      discard;\n    }\n  `\n};\n\nexport default {\n  name: 'brushing',\n  dependencies: [project],\n  vs,\n  fs,\n  inject,\n  getUniforms: (opts?: BrushingModuleSettings | {}): Record<string, any> => {\n    if (!opts || !('viewport' in opts)) {\n      return {};\n    }\n    const {\n      brushingEnabled = true,\n      brushingRadius = 10000,\n      brushingTarget = 'source',\n      mousePosition,\n      viewport\n    } = opts;\n    return {\n      brushing_enabled: Boolean(\n        brushingEnabled && mousePosition && viewport.containsPixel(mousePosition)\n      ),\n      brushing_radius: brushingRadius,\n      brushing_target: TARGET[brushingTarget] || 0,\n      brushing_mousePos: mousePosition\n        ? viewport.unproject([mousePosition.x - viewport.x, mousePosition.y - viewport.y])\n        : [0, 0]\n    };\n  }\n} as ShaderModule<BrushingModuleSettings>;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport shaderModule from './shader-module';\n\nimport type {Layer, LayerContext, Accessor} from '@deck.gl/core';\n\nconst defaultProps = {\n  getBrushingTarget: {type: 'accessor', value: [0, 0]},\n\n  brushingTarget: 'source',\n  brushingEnabled: true,\n  brushingRadius: 10000\n};\n\nexport type BrushingExtensionProps<DataT = any> = {\n  /**\n   * Called to retrieve an arbitrary position for each object that it will be filtered by.\n   * Only effective if `brushingTarget` is set to `custom`.\n   */\n  getBrushingTarget?: Accessor<DataT, [number, number]>;\n  /**\n   * Enable/disable brushing. If brushing is disabled, all objects are rendered.\n   * @default true\n   */\n  brushingEnabled?: boolean;\n  /**\n   * The position used to filter each object by.\n   */\n  brushingTarget?: 'source' | 'target' | 'source_target' | 'custom';\n  /** The brushing radius centered at the pointer, in meters. If a data object is within this circle, it is rendered; otherwise it is hidden.\n   * @default 10000\n   */\n  brushingRadius?: number;\n};\n\n/** Adds GPU-based data brushing functionalities to layers. It allows the layer to show/hide objects based on the current pointer position. */\nexport default class BrushingExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'BrushingExtension';\n\n  getShaders(): any {\n    return {\n      modules: [shaderModule]\n    };\n  }\n\n  initializeState(this: Layer<BrushingExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        brushingTargets: {\n          size: 2,\n          accessor: 'getBrushingTarget',\n          shaderAttributes: {\n            brushingTargets: {\n              divisor: 0\n            },\n            instanceBrushingTargets: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    // Trigger redraw when mouse moves\n    // TODO - expose this in a better way\n    this.state.onMouseMove = () => {\n      this.getCurrentLayer()?.setNeedsRedraw();\n    };\n    if (context.deck) {\n      // @ts-expect-error (2446) accessing protected property\n      context.deck.eventManager.on({\n        pointermove: this.state.onMouseMove,\n        pointerleave: this.state.onMouseMove\n      });\n    }\n  }\n\n  finalizeState(this: Layer<BrushingExtensionProps>, context: LayerContext, extension: this) {\n    // Remove event listeners\n    if (context.deck) {\n      // @ts-expect-error (2446) accessing protected property\n      context.deck.eventManager.off({\n        pointermove: this.state.onMouseMove,\n        pointerleave: this.state.onMouseMove\n      });\n    }\n  }\n}\n", "import {_ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {DataFilterExtensionProps} from './data-filter-extension';\n\n/*\n * data filter shader module\n */\nconst vs = `\nuniform DATAFILTER_TYPE filter_min;\nuniform DATAFILTER_TYPE filter_softMin;\nuniform DATAFILTER_TYPE filter_softMax;\nuniform DATAFILTER_TYPE filter_max;\nuniform bool filter_useSoftMargin;\nuniform bool filter_enabled;\nuniform bool filter_transformSize;\n\n#ifdef NON_INSTANCED_MODEL\n  #define DATAFILTER_ATTRIB filterValues\n  #define DATAFILTER_ATTRIB_64LOW filterValues64Low\n#else\n  #define DATAFILTER_ATTRIB instanceFilterValues\n  #define DATAFILTER_ATTRIB_64LOW instanceFilterValues64Low\n#endif\n\nattribute DATAFILTER_TYPE DATAFILTER_ATTRIB;\n#ifdef DATAFILTER_DOUBLE\n  attribute DATAFILTER_TYPE DATAFILTER_ATTRIB_64LOW;\n\n  uniform DATAFILTER_TYPE filter_min64High;\n  uniform DATAFILTER_TYPE filter_max64High;\n#endif\n\nvarying float dataFilter_value;\n\nfloat dataFilter_reduceValue(float value) {\n  return value;\n}\nfloat dataFilter_reduceValue(vec2 value) {\n  return min(value.x, value.y);\n}\nfloat dataFilter_reduceValue(vec3 value) {\n  return min(min(value.x, value.y), value.z);\n}\nfloat dataFilter_reduceValue(vec4 value) {\n  return min(min(value.x, value.y), min(value.z, value.w));\n}\nvoid dataFilter_setValue(DATAFILTER_TYPE valueFromMin, DATAFILTER_TYPE valueFromMax) {\n  if (filter_enabled) {\n    if (filter_useSoftMargin) {\n      dataFilter_value = dataFilter_reduceValue(\n        smoothstep(filter_min, filter_softMin, valueFromMin) *\n        (1.0 - smoothstep(filter_softMax, filter_max, valueFromMax))\n      );\n    } else {\n      dataFilter_value = dataFilter_reduceValue(\n        step(filter_min, valueFromMin) * step(valueFromMax, filter_max)\n      );\n    }\n  } else {\n    dataFilter_value = 1.0;\n  }\n}\n`;\n\nconst fs = `\nuniform bool filter_transformColor;\nvarying float dataFilter_value;\n`;\n\ntype DataFilterModuleSettings = {\n  extensions: any[]; // used to detect if layer props are present\n} & DataFilterExtensionProps;\n\n/* eslint-disable camelcase */\nfunction getUniforms(opts?: DataFilterModuleSettings | {}): Record<string, any> {\n  if (!opts || !('extensions' in opts)) {\n    return {};\n  }\n  const {\n    filterRange = [-1, 1],\n    filterEnabled = true,\n    filterTransformSize = true,\n    filterTransformColor = true\n  } = opts;\n  const filterSoftRange = opts.filterSoftRange || filterRange;\n\n  return {\n    ...(Number.isFinite(filterRange[0])\n      ? {\n          filter_min: filterRange[0],\n          filter_softMin: filterSoftRange[0],\n          filter_softMax: filterSoftRange[1],\n          filter_max: filterRange[1]\n        }\n      : {\n          filter_min: filterRange.map(r => r[0]),\n          filter_softMin: filterSoftRange.map(r => r[0]),\n          filter_softMax: filterSoftRange.map(r => r[1]),\n          filter_max: filterRange.map(r => r[1])\n        }),\n    filter_enabled: filterEnabled,\n    filter_useSoftMargin: Boolean(opts.filterSoftRange),\n    filter_transformSize: filterEnabled && filterTransformSize,\n    filter_transformColor: filterEnabled && filterTransformColor\n  };\n}\n\nfunction getUniforms64(opts?: DataFilterModuleSettings | {}): Record<string, any> {\n  if (!opts || !('extensions' in opts)) {\n    return {};\n  }\n  const uniforms = getUniforms(opts);\n  if (Number.isFinite(uniforms.filter_min)) {\n    const min64High = Math.fround(uniforms.filter_min);\n    uniforms.filter_min -= min64High;\n    uniforms.filter_softMin -= min64High;\n    uniforms.filter_min64High = min64High;\n\n    const max64High = Math.fround(uniforms.filter_max);\n    uniforms.filter_max -= max64High;\n    uniforms.filter_softMax -= max64High;\n    uniforms.filter_max64High = max64High;\n  } else {\n    const min64High = uniforms.filter_min.map(Math.fround);\n    uniforms.filter_min = uniforms.filter_min.map((x, i) => x - min64High[i]);\n    uniforms.filter_softMin = uniforms.filter_softMin.map((x, i) => x - min64High[i]);\n    uniforms.filter_min64High = min64High;\n\n    const max64High = uniforms.filter_max.map(Math.fround);\n    uniforms.filter_max = uniforms.filter_max.map((x, i) => x - max64High[i]);\n    uniforms.filter_softMax = uniforms.filter_softMax.map((x, i) => x - max64High[i]);\n    uniforms.filter_max64High = max64High;\n  }\n  return uniforms;\n}\n\nconst inject = {\n  'vs:#main-start': `\n    #ifdef DATAFILTER_DOUBLE\n      dataFilter_setValue(\n        DATAFILTER_ATTRIB - filter_min64High + DATAFILTER_ATTRIB_64LOW,\n        DATAFILTER_ATTRIB - filter_max64High + DATAFILTER_ATTRIB_64LOW\n      );\n    #else\n      dataFilter_setValue(DATAFILTER_ATTRIB, DATAFILTER_ATTRIB);\n    #endif\n  `,\n\n  'vs:#main-end': `\n    if (dataFilter_value == 0.0) {\n      gl_Position = vec4(0.);\n    }\n  `,\n\n  'vs:DECKGL_FILTER_SIZE': `\n    if (filter_transformSize) {\n      size = size * dataFilter_value;\n    }\n  `,\n\n  'fs:DECKGL_FILTER_COLOR': `\n    if (dataFilter_value == 0.0) discard;\n    if (filter_transformColor) {\n      color.a *= dataFilter_value;\n    }\n  `\n};\n\nexport const shaderModule: ShaderModule<DataFilterModuleSettings> = {\n  name: 'data-filter',\n  vs,\n  fs,\n  inject,\n  getUniforms\n};\n\nexport const shaderModule64: ShaderModule<DataFilterModuleSettings> = {\n  name: 'data-filter-fp64',\n  vs,\n  fs,\n  inject,\n  getUniforms: getUniforms64\n};\n", "import {Model, Texture2D, Framebuffer, isWebGL2} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst AGGREGATE_VS = `\\\n#define SHADER_NAME data-filter-vertex-shader\n\n#ifdef FLOAT_TARGET\n  attribute float filterIndices;\n  attribute float filterPrevIndices;\n#else\n  attribute vec2 filterIndices;\n  attribute vec2 filterPrevIndices;\n#endif\n\nvarying vec4 vColor;\nconst float component = 1.0 / 255.0;\n\nvoid main() {\n  #ifdef FLOAT_TARGET\n    dataFilter_value *= float(filterIndices != filterPrevIndices);\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    vColor = vec4(0.0, 0.0, 0.0, 1.0);\n  #else\n    // Float texture is not supported: pack result into 4 channels x 256 px x 64px\n    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);\n    float col = filterIndices.x;\n    float row = filterIndices.y * 4.0;\n    float channel = floor(row);\n    row = fract(row);\n    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));\n    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);\n  #endif\n  gl_PointSize = 1.0;\n}\n`;\n\nconst AGGREGATE_FS = `\\\n#define SHADER_NAME data-filter-fragment-shader\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main() {\n  if (dataFilter_value < 0.5) {\n    discard;\n  }\n  gl_FragColor = vColor;\n}\n`;\n\nexport function supportsFloatTarget(gl: WebGLRenderingContext): boolean {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#Support_for_float_textures_doesnt_mean_you_can_render_into_them!\n  return Boolean(\n    gl.getExtension('EXT_float_blend') &&\n      // WebGL 2\n      (gl.getExtension('EXT_color_buffer_float') ||\n        // WebGL 1\n        gl.getExtension('WEBGL_color_buffer_float'))\n  );\n}\n\n// A 1x1 framebuffer object that encodes the total count of filtered items\nexport function getFramebuffer(gl: WebGLRenderingContext, useFloatTarget: boolean): Framebuffer {\n  if (useFloatTarget) {\n    return new Framebuffer(gl, {\n      width: 1,\n      height: 1,\n      attachments: {\n        [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n          format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n          type: GL.FLOAT,\n          mipmaps: false\n        })\n      }\n    });\n  }\n  return new Framebuffer(gl, {\n    width: 256,\n    height: 64,\n    depth: false\n  });\n}\n\n// Increments the counter based on dataFilter_value\nexport function getModel(\n  gl: WebGLRenderingContext,\n  shaderOptions: any,\n  useFloatTarget: boolean\n): Model {\n  shaderOptions.defines.NON_INSTANCED_MODEL = 1;\n  if (useFloatTarget) {\n    shaderOptions.defines.FLOAT_TARGET = 1;\n  }\n\n  return new Model(gl, {\n    id: 'data-filter-aggregation-model',\n    vertexCount: 1,\n    isInstanced: false,\n    drawMode: GL.POINTS,\n    vs: AGGREGATE_VS,\n    fs: AGGREGATE_FS,\n    ...shaderOptions\n  });\n}\n\nexport const parameters = {\n  blend: true,\n  blendFunc: [GL.ONE, GL.ONE, GL.ONE, GL.ONE],\n  blendEquation: [GL.FUNC_ADD, GL.FUNC_ADD],\n  depthTest: false\n};\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport * as aggregator from './aggregator';\nimport {readPixelsToArray, clear} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nimport type {Layer, LayerContext, Accessor, UpdateParameters} from '@deck.gl/core';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n  onFilteredItemsChange: {type: 'function', value: null, optional: true},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nexport type DataFilterExtensionProps<DataT = any> = {\n  /**\n   * Accessor to retrieve the value for each object that it will be filtered by.\n   * Returns either a number (if `filterSize: 1`) or an array of numbers.\n   */\n  getFilterValue?: Accessor<DataT, number | number[]>;\n  /**\n   * Enable/disable the data filter. If the data filter is disabled, all objects are rendered.\n   * @default true\n   */\n  filterEnabled?: boolean;\n  /**\n   * The [min, max] bounds which defines whether an object should be rendered.\n   * If an object's filtered value is within the bounds, the object will be rendered; otherwise it will be hidden.\n   * @default [-1, 1]\n   */\n  filterRange?: [number, number] | [number, number][];\n  /**\n   * If specified, objects will be faded in/out instead of abruptly shown/hidden.\n   * When the filtered value is outside of the bounds defined by `filterSoftRange` but still within the bounds defined by `filterRange`, the object will be rendered as \"faded.\"\n   * @default null\n   */\n  filterSoftRange?: [number, number] | [number, number][] | null;\n  /**\n   * When an object is \"faded\", manipulate its size so that it appears smaller or thinner. Only works if `filterSoftRange` is specified.\n   * @default true\n   */\n  filterTransformSize?: boolean;\n  /**\n   * When an object is \"faded\", manipulate its opacity so that it appears more translucent. Only works if `filterSoftRange` is specified.\n   * @default true\n   */\n  filterTransformColor?: boolean;\n  /**\n   * Only called if the `countItems` option is enabled.\n   */\n  onFilteredItemsChange?: (evt: {\n    /** The id of the source layer. */\n    id: string;\n    /** The number of data objects that pass the filter. */\n    count: number;\n  }) => void;\n};\n\ntype DataFilterExtensionOptions = {\n  /**\n   * The size of the filter (number of columns to filter by). The data filter can show/hide data based on 1-4 numeric properties of each object.\n   * @default 1\n   */\n  filterSize: number;\n  /**\n   * Use 64-bit precision instead of 32-bit.\n   * @default false\n   */\n  fp64: boolean;\n  /**\n   * If `true`, reports the number of filtered objects with the `onFilteredItemsChange` callback.\n   * @default `false`.\n   */\n  countItems: boolean;\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\n/** Adds GPU-based data filtering functionalities to layers. It allows the layer to show/hide objects based on user-defined properties. */\nexport default class DataFilterExtension extends LayerExtension<DataFilterExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'DataFilterExtension';\n\n  constructor({\n    filterSize = 1,\n    fp64 = false,\n    countItems = false\n  }: Partial<DataFilterExtensionOptions> = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64, countItems});\n  }\n\n  getShaders(this: Layer<DataFilterExtensionProps>, extension: this): any {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(this: Layer<DataFilterExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    const {gl} = this.context;\n    if (attributeManager && extension.opts.countItems) {\n      const useFloatTarget = aggregator.supportsFloatTarget(gl);\n      // This attribute is needed for variable-width data, e.g. Path, SolidPolygon, Text\n      // The vertex shader checks if a vertex has the same \"index\" as the previous vertex\n      // so that we only write one count cross multiple vertices of the same object\n      attributeManager.add({\n        filterIndices: {\n          size: useFloatTarget ? 1 : 2,\n          vertexOffset: 1,\n          type: GL.UNSIGNED_BYTE,\n          normalized: true,\n          accessor: (object, {index}) => {\n            const i = object && object.__source ? object.__source.index : index;\n            return useFloatTarget ? (i + 1) % 255 : [(i + 1) % 255, Math.floor(i / 255) % 255];\n          },\n          shaderAttributes: {\n            filterPrevIndices: {\n              vertexOffset: 0\n            },\n            filterIndices: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n\n      const filterFBO = aggregator.getFramebuffer(gl, useFloatTarget);\n      const filterModel = aggregator.getModel(\n        gl,\n        extension.getShaders.call(this, extension),\n        useFloatTarget\n      );\n      this.setState({filterFBO, filterModel});\n    }\n  }\n\n  updateState(\n    this: Layer<DataFilterExtensionProps>,\n    {props, oldProps}: UpdateParameters<Layer<DataFilterExtensionProps>>\n  ) {\n    if (this.state.filterModel) {\n      const attributeManager = this.getAttributeManager();\n      const filterNeedsUpdate =\n        // attributeManager must be defined for filterModel to be set\n        attributeManager!.attributes.filterValues.needsUpdate() ||\n        props.filterEnabled !== oldProps.filterEnabled ||\n        props.filterRange !== oldProps.filterRange ||\n        props.filterSoftRange !== oldProps.filterSoftRange;\n      if (filterNeedsUpdate) {\n        this.setState({filterNeedsUpdate});\n      }\n    }\n  }\n\n  draw(this: Layer<DataFilterExtensionProps>, params: any, extension: this) {\n    const {filterFBO, filterModel, filterNeedsUpdate} = this.state;\n    const {onFilteredItemsChange} = this.props;\n    if (filterNeedsUpdate && onFilteredItemsChange && filterModel) {\n      const {\n        attributes: {filterValues, filterIndices}\n      } = this.getAttributeManager()!;\n      filterModel.setVertexCount(this.getNumInstances());\n\n      const {gl} = this.context;\n      clear(gl, {framebuffer: filterFBO, color: [0, 0, 0, 0]});\n\n      filterModel\n        .updateModuleSettings(params.moduleParameters)\n        .setAttributes({\n          ...filterValues.getShaderAttributes(),\n          ...(filterIndices && filterIndices.getShaderAttributes())\n        })\n        .draw({\n          framebuffer: filterFBO,\n          parameters: {\n            ...aggregator.parameters,\n            viewport: [0, 0, filterFBO.width, filterFBO.height]\n          }\n        });\n      const color = readPixelsToArray(filterFBO);\n      let count = 0;\n      for (let i = 0; i < color.length; i++) {\n        count += color[i];\n      }\n      onFilteredItemsChange({id: this.id, count});\n\n      this.state.filterNeedsUpdate = false;\n    }\n  }\n\n  finalizeState(this: Layer<DataFilterExtensionProps>) {\n    const {filterFBO, filterModel} = this.state;\n    if (filterFBO) {\n      filterFBO.color.delete();\n      filterFBO.delete();\n      filterModel.delete();\n    }\n  }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n\nconst vec2 WORLD_SCALE_FP64 = vec2(81.4873275756836, 0.0000032873668232014097);\n\nuniform vec2 project_uViewProjectionMatrixFP64[16];\n\n// longitude: lnglat_fp64.xy; latitude: lnglat_fp64.zw\nvoid mercatorProject_fp64(vec4 lnglat_fp64, out vec2 out_val[2]) {\n\n#if defined(NVIDIA_FP64_WORKAROUND)\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64 * ONE);\n#else\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64);\n#endif\n  out_val[1] = sum_fp64(PI_FP64,\n    log_fp64(tan_fp64(sum_fp64(PI_4_FP64, radians_fp64(lnglat_fp64.zw) / 2.0))));\n  return;\n}\n\nvoid project_position_fp64(vec4 position_fp64, out vec2 out_val[2]) {\n  vec2 pos_fp64[2];\n  mercatorProject_fp64(position_fp64, pos_fp64);\n  out_val[0] = mul_fp64(pos_fp64[0], WORLD_SCALE_FP64);\n  out_val[1] = mul_fp64(pos_fp64[1], WORLD_SCALE_FP64);\n\n  return;\n}\n\nvoid project_position_fp64(vec2 position, vec2 position64xyLow, out vec2 out_val[2]) {\n  vec4 position64xy = vec4(\n    position.x, position64xyLow.x,\n    position.y, position64xyLow.y);\n\n  project_position_fp64(position64xy, out_val);\n}\n\nvec4 project_common_position_to_clipspace_fp64(vec2 vertex_pos_modelspace[4]) {\n  vec2 vertex_pos_clipspace[4];\n  mat4_vec4_mul_fp64(project_uViewProjectionMatrixFP64, vertex_pos_modelspace,\n    vertex_pos_clipspace);\n  return vec4(\n    vertex_pos_clipspace[0].x,\n    vertex_pos_clipspace[1].x,\n    vertex_pos_clipspace[2].x,\n    vertex_pos_clipspace[3].x\n    );\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64xyLow, vec3 offset, out vec4 commonPosition\n) {\n  // This is the local offset to the instance position\n  vec2 offset64[4];\n  vec4_fp64(vec4(offset, 0.0), offset64);\n\n  float z = project_size(position.z);\n\n  // Apply web mercator projection (depends on coordinate system imn use)\n  vec2 projectedPosition64xy[2];\n  project_position_fp64(position.xy, position64xyLow.xy, projectedPosition64xy);\n\n  vec2 commonPosition64[4];\n  commonPosition64[0] = sum_fp64(offset64[0], projectedPosition64xy[0]);\n  commonPosition64[1] = sum_fp64(offset64[1], projectedPosition64xy[1]);\n  commonPosition64[2] = sum_fp64(offset64[2], vec2(z, 0.0));\n  commonPosition64[3] = vec2(1.0, 0.0);\n\n  commonPosition = vec4(projectedPosition64xy[0].x, projectedPosition64xy[1].x, z, 1.0);\n\n  return project_common_position_to_clipspace_fp64(commonPosition64);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64xyLow, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(\n    position, position64xyLow, offset, commonPosition\n  );\n}\n`;\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable camelcase */\nimport {fp64} from '@luma.gl/shadertools';\nconst {fp64ify, fp64ifyMatrix4} = fp64;\nimport {project, _memoize as memoize} from '@deck.gl/core';\n\nimport type {Viewport, _ShaderModule as ShaderModule} from '@deck.gl/core';\nimport project64Shader from './project64.glsl';\n\ntype Project64ModuleSettings = {\n  viewport: Viewport;\n};\n\nexport default {\n  name: 'project64',\n  dependencies: [project, fp64],\n  vs: project64Shader,\n  getUniforms\n} as ShaderModule<Project64ModuleSettings>;\n\n// TODO - this module should calculate the 64 bit uniforms\n// It is currently done by project to minimize duplicated work\n\nconst getMemoizedUniforms = memoize(calculateUniforms);\n\nfunction getUniforms(opts?: Project64ModuleSettings | {}): Record<string, any> {\n  if (opts && 'viewport' in opts) {\n    const {viewProjectionMatrix, scale} = opts.viewport;\n    // We only need to update fp64 uniforms if fp32 projection is being updated\n    return getMemoizedUniforms({viewProjectionMatrix, scale});\n  }\n  return {};\n}\n\nfunction calculateUniforms({\n  viewProjectionMatrix,\n  scale\n}: {\n  viewProjectionMatrix: number[];\n  scale: number;\n}) {\n  const glViewProjectionMatrixFP64 = fp64ifyMatrix4(viewProjectionMatrix);\n  const scaleFP64 = fp64ify(scale);\n\n  return {\n    project_uViewProjectionMatrixFP64: glViewProjectionMatrixFP64,\n    project64_uViewProjectionMatrix: glViewProjectionMatrixFP64,\n    project64_uScale: scaleFP64\n  };\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, COORDINATE_SYSTEM} from '@deck.gl/core';\nimport project64 from './project64';\n\nimport type {Layer} from '@deck.gl/core';\n\n/** @deprecated Adds the legacy 64-bit precision to geospatial layers. */\nexport default class Fp64Extension extends LayerExtension {\n  static extensionName = 'Fp64Extension';\n\n  getShaders(this: Layer): any {\n    const {coordinateSystem} = this.props;\n    if (\n      coordinateSystem !== COORDINATE_SYSTEM.LNGLAT &&\n      coordinateSystem !== COORDINATE_SYSTEM.DEFAULT\n    ) {\n      throw new Error('fp64: coordinateSystem must be LNGLAT');\n    }\n\n    return {\n      modules: [project64]\n    };\n  }\n}\n", "export const dashShaders = {\n  inject: {\n    'vs:#decl': `\nattribute vec2 instanceDashArrays;\nattribute float instanceDashOffsets;\nvarying vec2 vDashArray;\nvarying float vDashOffset;\n`,\n\n    'vs:#main-end': `\nvDashArray = instanceDashArrays;\nvDashOffset = instanceDashOffsets / width.x;\n`,\n\n    'fs:#decl': `\nuniform float dashAlignMode;\nuniform float capType;\nuniform bool dashGapPickable;\nvarying vec2 vDashArray;\nvarying float vDashOffset;\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n`,\n\n    // if given position is in the gap part of the dashed line\n    // dashArray.x: solid stroke length, relative to width\n    // dashArray.y: gap length, relative to width\n    // alignMode:\n    // 0 - no adjustment\n    // o----     ----     ----     ---- o----     -o----     ----     o\n    // 1 - stretch to fit, draw half dash at each end for nicer joints\n    // o--    ----    ----    ----    --o--      --o--     ----     --o\n    'fs:#main-start': `\n  float solidLength = vDashArray.x;\n  float gapLength = vDashArray.y;\n  float unitLength = solidLength + gapLength;\n\n  float offset;\n\n  if (unitLength > 0.0) {\n    if (dashAlignMode == 0.0) {\n      offset = vDashOffset;\n    } else {\n      unitLength = vPathLength / round(vPathLength / unitLength);\n      offset = solidLength / 2.0;\n    }\n\n    float unitOffset = mod(vPathPosition.y + offset, unitLength);\n\n    if (gapLength > 0.0 && unitOffset > solidLength) {\n      if (capType <= 0.5) {\n        if (!(dashGapPickable && picking_uActive)) {\n          discard;\n        }\n      } else {\n        // caps are rounded, test the distance to solid ends\n        float distToEnd = length(vec2(\n          min(unitOffset - solidLength, unitLength - unitOffset),\n          vPathPosition.x\n        ));\n        if (distToEnd > 1.0) {\n          if (!(dashGapPickable && picking_uActive)) {\n            discard;\n          }\n        }\n      }\n    }\n  }\n`\n  }\n};\n\nexport const offsetShaders = {\n  inject: {\n    'vs:#decl': `\nattribute float instanceOffsets;\n`,\n    'vs:DECKGL_FILTER_SIZE': `\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\n  size *= offsetWidth;\n`,\n    'vs:#main-end': `\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\n  float offsetDir = sign(instanceOffsets);\n  vPathPosition.x = (vPathPosition.x + offsetDir) * offsetWidth - offsetDir;\n  vPathPosition.y *= offsetWidth;\n  vPathLength *= offsetWidth;\n`,\n    'fs:#main-start': `\n  float isInside;\n  isInside = step(-1.0, vPathPosition.x) * step(vPathPosition.x, 1.0);\n  if (isInside == 0.0) {\n    discard;\n  }\n`\n  }\n};\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _mergeShaders as mergeShaders} from '@deck.gl/core';\nimport {dashShaders, offsetShaders} from './shaders.glsl';\nimport {dist} from 'gl-matrix/vec3';\n\nimport type {Layer, LayerContext, Accessor, UpdateParameters} from '@deck.gl/core';\n\nconst defaultProps = {\n  getDashArray: {type: 'accessor', value: [0, 0]},\n  getOffset: {type: 'accessor', value: 0},\n  dashJustified: false,\n  dashGapPickable: false\n};\n\nexport type PathStyleExtensionProps<DataT = any> = {\n  /**\n   * Accessor for the dash array to draw each path with: `[dashSize, gapSize]` relative to the width of the path.\n   * Requires the `dash` option to be on.\n   */\n  getDashArray?: Accessor<DataT, [number, number]>;\n  /**\n   * Accessor for the offset to draw each path with, relative to the width of the path.\n   * Negative offset is to the left hand side, and positive offset is to the right hand side.\n   * @default 0\n   */\n  getOffset?: Accessor<DataT, number>;\n  /**\n   * If `true`, adjust gaps for the dashes to align at both ends.\n   * @default false\n   */\n  dashJustified?: boolean;\n  /**\n   * If `true`, gaps between solid strokes are pickable. If `false`, only the solid strokes are pickable.\n   * @default false\n   */\n  dashGapPickable?: boolean;\n};\n\ntype PathStyleExtensionOptions = {\n  /**\n   * Add capability to render dashed lines.\n   * @default false\n   */\n  dash: boolean;\n  /**\n   * Add capability to offset lines.\n   * @default false\n   */\n  offset: boolean;\n  /**\n   * Improve dash rendering quality in certain circumstances. Note that this option introduces additional performance overhead.\n   * @default false\n   */\n  highPrecisionDash: boolean;\n};\n\n/** Adds selected features to the `PathLayer` and composite layers that render the `PathLayer`. */\nexport default class PathStyleExtension extends LayerExtension<PathStyleExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'PathStyleExtension';\n\n  constructor({\n    dash = false,\n    offset = false,\n    highPrecisionDash = false\n  }: Partial<PathStyleExtensionOptions> = {}) {\n    super({dash: dash || highPrecisionDash, offset, highPrecisionDash});\n  }\n\n  isEnabled(layer: Layer<PathStyleExtensionProps>): boolean {\n    return 'pathTesselator' in layer.state;\n  }\n\n  getShaders(this: Layer<PathStyleExtensionProps>, extension: this): any {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    // Merge shader injection\n    let result = {};\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(this: Layer<PathStyleExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager || !extension.isEnabled(this)) {\n      // This extension only works with the PathLayer\n      return;\n    }\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {size: 2, accessor: 'getDashArray'}\n      });\n    }\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {size: 1, accessor: 'getOffset'}\n      });\n    }\n  }\n\n  updateState(\n    this: Layer<PathStyleExtensionProps>,\n    params: UpdateParameters<Layer<PathStyleExtensionProps>>,\n    extension: this\n  ) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms: any = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(this: Layer<PathStyleExtensionProps>, path: number[] | number[][]): number[] {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n\n    let p;\n    let prevP;\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n    return result;\n  }\n}\n", "import {project, fp64LowPart} from '@deck.gl/core';\nimport type {Viewport, _ShaderModule as ShaderModule, ProjectUniforms} from '@deck.gl/core';\n\nimport type {Texture2D} from '@luma.gl/webgl';\n\n/*\n * fill pattern shader module\n */\nconst patternVs = `\n#ifdef NON_INSTANCED_MODEL\n  #define FILL_PATTERN_FRAME_ATTRIB fillPatternFrames\n  #define FILL_PATTERN_SCALE_ATTRIB fillPatternScales\n  #define FILL_PATTERN_OFFSET_ATTRIB fillPatternOffsets\n#else\n  #define FILL_PATTERN_FRAME_ATTRIB instanceFillPatternFrames\n  #define FILL_PATTERN_SCALE_ATTRIB instanceFillPatternScales\n  #define FILL_PATTERN_OFFSET_ATTRIB instanceFillPatternOffsets\n#endif\n\nattribute vec4 FILL_PATTERN_FRAME_ATTRIB;\nattribute float FILL_PATTERN_SCALE_ATTRIB;\nattribute vec2 FILL_PATTERN_OFFSET_ATTRIB;\n\nuniform bool fill_patternEnabled;\nuniform vec2 fill_patternTextureSize;\n\nvarying vec2 fill_uv;\nvarying vec4 fill_patternBounds;\nvarying vec4 fill_patternPlacement;\n`;\n\nconst patternFs = `\nuniform bool fill_patternEnabled;\nuniform bool fill_patternMask;\nuniform sampler2D fill_patternTexture;\nuniform vec2 fill_uvCoordinateOrigin;\nuniform vec2 fill_uvCoordinateOrigin64Low;\n\nvarying vec4 fill_patternBounds;\nvarying vec4 fill_patternPlacement;\nvarying vec2 fill_uv;\n\nconst float FILL_UV_SCALE = 512.0 / 40000000.0;\n`;\n\nconst inject = {\n  'vs:DECKGL_FILTER_GL_POSITION': `\n    fill_uv = geometry.position.xy;\n  `,\n\n  'vs:DECKGL_FILTER_COLOR': `\n    if (fill_patternEnabled) {\n      fill_patternBounds = FILL_PATTERN_FRAME_ATTRIB / vec4(fill_patternTextureSize, fill_patternTextureSize);\n      fill_patternPlacement.xy = FILL_PATTERN_OFFSET_ATTRIB;\n      fill_patternPlacement.zw = FILL_PATTERN_SCALE_ATTRIB * FILL_PATTERN_FRAME_ATTRIB.zw;\n    }\n  `,\n\n  'fs:DECKGL_FILTER_COLOR': `\n    if (fill_patternEnabled) {\n      vec2 scale = FILL_UV_SCALE * fill_patternPlacement.zw;\n      vec2 patternUV = mod(mod(fill_uvCoordinateOrigin, scale) + fill_uvCoordinateOrigin64Low + fill_uv, scale) / scale;\n      patternUV = mod(fill_patternPlacement.xy + patternUV, 1.0);\n\n      vec2 texCoords = fill_patternBounds.xy + fill_patternBounds.zw * patternUV;\n\n      vec4 patternColor = texture2D(fill_patternTexture, texCoords);\n      color.a *= patternColor.a;\n      if (!fill_patternMask) {\n        color.rgb = patternColor.rgb;\n      }\n    }\n  `\n};\n\ntype FillStyleModuleSettings =\n  | {\n      viewport: Viewport;\n      fillPatternEnabled?: boolean;\n      fillPatternMask?: boolean;\n    }\n  | {\n      fillPatternTexture: Texture2D;\n    };\n\n/* eslint-disable camelcase */\nfunction getPatternUniforms(\n  opts: FillStyleModuleSettings | {},\n  uniforms: Record<string, any>\n): Record<string, any> {\n  if (!opts) {\n    return {};\n  }\n  if ('fillPatternTexture' in opts) {\n    const {fillPatternTexture} = opts;\n    return {\n      fill_patternTexture: fillPatternTexture,\n      fill_patternTextureSize: [fillPatternTexture.width, fillPatternTexture.height]\n    };\n  }\n  if ('viewport' in opts) {\n    const {fillPatternMask = true, fillPatternEnabled = true} = opts;\n    const {project_uCommonOrigin: coordinateOriginCommon} = uniforms as ProjectUniforms;\n\n    const coordinateOriginCommon64Low = [\n      fp64LowPart(coordinateOriginCommon[0]),\n      fp64LowPart(coordinateOriginCommon[1])\n    ];\n\n    return {\n      fill_uvCoordinateOrigin: coordinateOriginCommon.slice(0, 2),\n      fill_uvCoordinateOrigin64Low: coordinateOriginCommon64Low,\n      fill_patternMask: fillPatternMask,\n      fill_patternEnabled: fillPatternEnabled\n    };\n  }\n  return {};\n}\n\nexport const patternShaders: ShaderModule<FillStyleModuleSettings> = {\n  name: 'fill-pattern',\n  vs: patternVs,\n  fs: patternFs,\n  inject,\n  dependencies: [project],\n  getUniforms: getPatternUniforms\n};\n", "import {LayerExtension} from '@deck.gl/core';\nimport {Texture2D} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nimport {patternShaders} from './shaders.glsl';\n\nimport type {\n  Layer,\n  LayerContext,\n  Accessor,\n  AccessorFunction,\n  Texture,\n  UpdateParameters\n} from '@deck.gl/core';\n\nconst defaultProps = {\n  fillPatternEnabled: true,\n  fillPatternAtlas: {\n    type: 'image',\n    value: null,\n    async: true,\n    parameters: {\n      [GL.TEXTURE_MIN_FILTER]: GL.LINEAR\n    }\n  },\n  fillPatternMapping: {type: 'object', value: {}, async: true},\n  fillPatternMask: true,\n  getFillPattern: {type: 'accessor', value: d => d.pattern},\n  getFillPatternScale: {type: 'accessor', value: 1},\n  getFillPatternOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport type FillStyleExtensionProps<DataT = any> = {\n  /** Cheap toggle to enable/disable pattern fill. Requires the `pattern` option to be on.\n   * @default true\n   */\n  fillPatternEnabled?: boolean;\n  /** Sprite image url or texture that packs all your patterns into one layout. */\n  fillPatternAtlas?: string | Texture;\n  /** Pattern names mapped to pattern definitions, or a url that points to a JSON file. */\n  fillPatternMapping?:\n    | string\n    | Record<\n        string,\n        {\n          /** Left position of the pattern on the atlas */\n          x: number;\n          /** Top position of the pattern on the atlas */\n          y: number;\n          /** Width of the pattern */\n          width: number;\n          /** Height of the pattern */\n          height: number;\n        }\n      >;\n  /**\n   * Whether to treat the patterns as transparency masks.\n   * @default true\n   */\n  fillPatternMask?: boolean;\n  /** Accessor for the name of the pattern. */\n  getFillPattern?: AccessorFunction<DataT, string>;\n  /** Accessor for the scale of the pattern, relative to the original size. If the pattern is 24 x 24 pixels, scale `1` roughly yields 24 meters.\n   * @default 1\n   */\n  getFillPatternScale?: Accessor<DataT, number>;\n  /**\n   * Accessor for the offset of the pattern, relative to the original size. Offset `[0.5, 0.5]` shifts the pattern alignment by half.\n   * @default [0, 0]\n   */\n  getFillPatternOffset?: Accessor<DataT, [number, number]>;\n};\n\ntype FillStyleExtensionOptions = {\n  /** If `true`, adds the ability to tile the filled area with a pattern.\n   * @default false\n   */\n  pattern: boolean;\n};\n\n/** Adds selected features to layers that render a \"fill\", such as the `PolygonLayer` and `ScatterplotLayer`. */\nexport default class FillStyleExtension extends LayerExtension<FillStyleExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'FillStyleExtension';\n\n  constructor({pattern = false}: Partial<FillStyleExtensionOptions> = {}) {\n    super({pattern});\n  }\n\n  isEnabled(layer: Layer<FillStyleExtensionProps>): boolean {\n    return layer.getAttributeManager() !== null && !('pathTesselator' in layer.state);\n  }\n\n  getShaders(this: Layer<FillStyleExtensionProps>, extension: this): any {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    return {\n      modules: [extension.opts.pattern && patternShaders].filter(Boolean)\n    };\n  }\n\n  initializeState(this: Layer<FillStyleExtensionProps>, context: LayerContext, extension: this) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const attributeManager = this.getAttributeManager();\n\n    if (extension.opts.pattern) {\n      attributeManager!.add({\n        fillPatternFrames: {\n          size: 4,\n          accessor: 'getFillPattern',\n          transform: extension.getPatternFrame.bind(this),\n          shaderAttributes: {\n            fillPatternFrames: {\n              divisor: 0\n            },\n            instanceFillPatternFrames: {\n              divisor: 1\n            }\n          }\n        },\n        fillPatternScales: {\n          size: 1,\n          accessor: 'getFillPatternScale',\n          defaultValue: 1,\n          shaderAttributes: {\n            fillPatternScales: {\n              divisor: 0\n            },\n            instanceFillPatternScales: {\n              divisor: 1\n            }\n          }\n        },\n        fillPatternOffsets: {\n          size: 2,\n          accessor: 'getFillPatternOffset',\n          shaderAttributes: {\n            fillPatternOffsets: {\n              divisor: 0\n            },\n            instanceFillPatternOffsets: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n    this.setState({\n      emptyTexture: new Texture2D(this.context.gl, {\n        data: new Uint8Array(4),\n        width: 1,\n        height: 1\n      })\n    });\n  }\n\n  updateState(\n    this: Layer<FillStyleExtensionProps>,\n    {props, oldProps}: UpdateParameters<Layer<FillStyleExtensionProps>>,\n    extension: this\n  ) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    if (props.fillPatternMapping && props.fillPatternMapping !== oldProps.fillPatternMapping) {\n      this.getAttributeManager()!.invalidate('getFillPattern');\n    }\n  }\n\n  draw(this: Layer<FillStyleExtensionProps>, params: any, extension: this) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const {fillPatternAtlas} = this.props;\n    this.setModuleParameters({\n      fillPatternTexture: fillPatternAtlas || this.state.emptyTexture\n    });\n  }\n\n  finalizeState(this: Layer<FillStyleExtensionProps>) {\n    const {emptyTexture} = this.state;\n    emptyTexture?.delete();\n  }\n\n  getPatternFrame(this: Layer<FillStyleExtensionProps>, name: string) {\n    const {fillPatternMapping} = this.getCurrentLayer()!.props;\n    const def = fillPatternMapping && fillPatternMapping[name];\n    return def ? [def.x, def.y, def.width, def.height] : [0, 0, 0, 0];\n  }\n}\n", "// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {Layer} from '@deck.gl/core';\n\nconst defaultProps = {\n  clipBounds: [0, 0, 1, 1],\n  clipByInstance: undefined\n};\n\nexport type ClipExtensionProps = {\n  /** Rectangular bounds to be used for clipping the rendered region, in `[left, bottom, right, top]`.\n   * @default [0, 0, 1, 1]\n   */\n  clipBounds?: [number, number, number, number];\n  /**\n   * Controls whether an object is clipped by its anchor (e.g. icon, point) or by its geometry (e.g. path, polygon).\n   * If not specified, it is automatically deduced from the layer.\n   */\n  clipByInstance?: boolean;\n};\n\nconst shaderFunction = `\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\n}\n`;\n\n/*\n * The vertex-shader version clips geometries by their anchor position\n * e.g. ScatterplotLayer - show if the center of a circle is within bounds\n */\nconst shaderModuleVs: ShaderModule = {\n  name: 'clip-vs',\n  vs: shaderFunction\n};\n\nconst injectionVs = {\n  'vs:#decl': `\nvarying float clip_isVisible;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n`,\n  'fs:#decl': `\nvarying float clip_isVisible;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (clip_isVisible < 0.5) discard;\n`\n};\n\n/*\n * The fragment-shader version clips pixels at the bounds\n * e.g. PolygonLayer - show the part of the polygon that intersect with the bounds\n */\nconst shaderModuleFs: ShaderModule = {\n  name: 'clip-fs',\n  fs: shaderFunction\n};\n\nconst injectionFs = {\n  'vs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_commonPosition = geometry.position.xy;\n`,\n  'fs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n`\n};\n\n/** Adds support for clipping rendered layers by rectangular bounds. */\nexport default class ClipExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'ClipExtension';\n\n  getShaders(this: Layer<ClipExtensionProps>) {\n    // If `clipByInstance: true`, the entire object is shown/hidden based on its anchor position (done by vertex shader)\n    // Otherwise, the object is trimmed by the clip bounds (done by fragment shader)\n\n    // Default behavior: consider a layer instanced if it has attribute `instancePositions`\n    // @ts-expect-error attributeManager is always defined for primitive layers\n    let clipByInstance = 'instancePositions' in this.getAttributeManager().attributes;\n    // Users can override by setting the `clipByInstance` prop\n    if (this.props.clipByInstance !== undefined) {\n      clipByInstance = Boolean(this.props.clipByInstance);\n    }\n    this.state.clipByInstance = clipByInstance;\n\n    return clipByInstance\n      ? {\n          modules: [shaderModuleVs],\n          inject: injectionVs\n        }\n      : {\n          modules: [shaderModuleFs],\n          inject: injectionFs\n        };\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<Required<ClipExtensionProps>>, {uniforms}: any): void {\n    const {clipBounds} = this.props;\n    if (this.state.clipByInstance) {\n      uniforms.clip_bounds = clipBounds;\n    } else {\n      const corner0 = this.projectPosition([clipBounds[0], clipBounds[1], 0]);\n      const corner1 = this.projectPosition([clipBounds[2], clipBounds[3], 0]);\n\n      uniforms.clip_bounds = [\n        Math.min(corner0[0], corner1[0]),\n        Math.min(corner0[1], corner1[1]),\n        Math.max(corner0[0], corner1[0]),\n        Math.max(corner0[1], corner1[1])\n      ];\n    }\n  }\n}\n", "import {Framebuffer, Texture2D} from '@luma.gl/core';\nimport {project} from '@deck.gl/core';\nimport type {_ShaderModule as ShaderModule} from '@deck.gl/core';\n\nconst vs = `\n#ifdef NON_INSTANCED_MODEL\nattribute float collisionPriorities;\n#else\nattribute float instanceCollisionPriorities;\n#endif\n\nuniform sampler2D collision_texture;\nuniform bool collision_sort;\nuniform bool collision_enabled;\n\nvec2 collision_getCoords(vec4 position) {\n  vec4 collision_clipspace = project_common_position_to_clipspace(position);\n  return (1.0 + collision_clipspace.xy / collision_clipspace.w) / 2.0;\n}\n\nfloat collision_match(vec2 tex, vec3 pickingColor) {\n  vec4 collision_pickingColor = texture2D(collision_texture, tex);\n  float delta = dot(abs(collision_pickingColor.rgb - pickingColor), vec3(1.0));\n  float e = 0.001;\n  return step(delta, e);\n}\n\nfloat collision_isVisible(vec2 texCoords, vec3 pickingColor) {\n  if (!collision_enabled) {\n    return 1.0;\n  }\n\n  // Visibility test, sample area of 5x5 pixels in order to fade in/out.\n  // Due to the locality, the lookups will be cached\n  // This reduces the flicker present when objects are shown/hidden\n  const int N = 2;\n  float accumulator = 0.0;\n  vec2 step = vec2(1.0 / project_uViewportSize);\n\n  const float floatN = float(N);\n  vec2 delta = -floatN * step;\n  for(int i = -N; i <= N; i++) {\n    delta.x = -step.x * floatN;\n    for(int j = -N; j <= N; j++) {\n      accumulator += collision_match(texCoords + delta, pickingColor);\n      delta.x += step.x;\n    }\n    delta.y += step.y;\n  }\n\n  float W = 2.0 * floatN + 1.0;\n  return pow(accumulator / (W * W), 2.2);\n}\n`;\n\nconst inject = {\n  'vs:#decl': `\n  float collision_fade = 1.0;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  if (collision_sort) {\n    #ifdef NON_INSTANCED_MODEL\n    float collisionPriority = collisionPriorities;\n    #else\n    float collisionPriority = instanceCollisionPriorities;\n    #endif\n    position.z = -0.001 * collisionPriority * position.w; // Support range -1000 -> 1000\n  }\n\n  if (collision_enabled) {\n    vec4 collision_common_position = project_position(vec4(geometry.worldPosition, 1.0));\n    vec2 collision_texCoords = collision_getCoords(collision_common_position);\n    collision_fade = collision_isVisible(collision_texCoords, geometry.pickingColor / 255.0);\n    if (collision_fade < 0.0001) {\n      // Position outside clip space bounds to discard\n      position = vec4(0.0, 0.0, 2.0, 1.0);\n    }\n  }\n  `,\n  'vs:DECKGL_FILTER_COLOR': `\n  color.a *= collision_fade;\n  `\n};\n\ntype CollisionModuleSettings = {\n  collisionFBO?: Framebuffer;\n  drawToCollisionMap?: boolean;\n  dummyCollisionMap?: Texture2D;\n};\n\n/* eslint-disable camelcase */\ntype CollisionUniforms = {collision_sort?: boolean; collision_texture?: Framebuffer | Texture2D};\n\nconst getCollisionUniforms = (\n  opts: CollisionModuleSettings | {},\n  uniforms: Record<string, any>\n): CollisionUniforms => {\n  if (!opts || !('dummyCollisionMap' in opts)) {\n    return {};\n  }\n  const {collisionFBO, drawToCollisionMap, dummyCollisionMap} = opts;\n  return {\n    collision_sort: Boolean(drawToCollisionMap),\n    collision_texture: !drawToCollisionMap && collisionFBO ? collisionFBO : dummyCollisionMap\n  };\n};\n\nexport default {\n  name: 'collision',\n  dependencies: [project],\n  vs,\n  inject,\n  getUniforms: getCollisionUniforms\n} as ShaderModule;\n", "import {Framebuffer, withParameters} from '@luma.gl/core';\nimport {_LayersPass as LayersPass, LayersPassRenderOptions} from '@deck.gl/core';\n\ntype CollisionFilterPassRenderOptions = LayersPassRenderOptions & {};\n\nexport default class CollisionFilterPass extends LayersPass {\n  renderCollisionMap(target: Framebuffer, options: CollisionFilterPassRenderOptions) {\n    const gl = this.gl;\n\n    const padding = 1;\n\n    return withParameters(\n      gl,\n      {\n        scissorTest: true,\n        scissor: [padding, padding, target.width - 2 * padding, target.height - 2 * padding],\n        clearColor: [0, 0, 0, 0],\n        blend: false,\n        depthTest: true,\n        depthRange: [0, 1]\n      },\n      () => this.render({...options, target, pass: 'collision'})\n    );\n  }\n\n  getModuleParameters() {\n    // Draw picking colors into collision FBO\n    return {\n      drawToCollisionMap: true,\n      pickingActive: 1,\n      pickingAttribute: false,\n      lightSources: {}\n    };\n  }\n}\n", "import {Framebuffer, Texture2D, withParameters} from '@luma.gl/core';\nimport {_LayersPass as LayersPass, LayersPassRenderOptions} from '@deck.gl/core';\n\ntype MaskPassRenderOptions = LayersPassRenderOptions & {\n  /** The channel to render into, 0:red, 1:green, 2:blue, 3:alpha */\n  channel: number;\n};\n\nexport default class MaskPass extends LayersPass {\n  maskMap: Texture2D;\n  fbo: Framebuffer;\n\n  constructor(gl, props: {id: string; mapSize?: number}) {\n    super(gl, props);\n\n    const {mapSize = 2048} = props;\n\n    this.maskMap = new Texture2D(gl, {\n      width: mapSize,\n      height: mapSize,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    this.fbo = new Framebuffer(gl, {\n      id: 'maskmap',\n      width: mapSize,\n      height: mapSize,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: this.maskMap\n      }\n    });\n  }\n\n  render(options: MaskPassRenderOptions) {\n    const gl = this.gl;\n\n    const colorMask = [false, false, false, false];\n    colorMask[options.channel] = true;\n\n    return withParameters(\n      gl,\n      {\n        clearColor: [255, 255, 255, 255],\n        blend: true,\n        blendFunc: [gl.ZERO, gl.ONE],\n        blendEquation: gl.FUNC_SUBTRACT,\n        colorMask,\n        depthTest: false\n      },\n      () => super.render({...options, target: this.fbo, pass: 'mask'})\n    );\n  }\n\n  shouldDrawLayer(layer) {\n    return layer.props.operation.includes('mask');\n  }\n\n  delete() {\n    this.fbo.delete();\n    this.maskMap.delete();\n  }\n}\n", "import {WebMercatorViewport, OrthographicViewport} from '@deck.gl/core';\nimport type {Layer, Viewport} from '@deck.gl/core';\n\n/** Bounds in CARTESIAN coordinates */\nexport type Bounds = [minX: number, minY: number, maxX: number, maxY: number];\n\n/*\n * Compute the union of bounds from multiple layers\n * Returns bounds in CARTESIAN coordinates\n */\nexport function joinLayerBounds(\n  /** The layers to combine */\n  layers: Layer[],\n  /** A Viewport instance that is used to determine the type of the view */\n  viewport: Viewport\n): Bounds | null {\n  // Join the bounds of layer data\n  const bounds: Bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  for (const layer of layers) {\n    const layerBounds = layer.getBounds();\n    if (layerBounds) {\n      const bottomLeftCommon = layer.projectPosition(layerBounds[0], {viewport, autoOffset: false});\n      const topRightCommon = layer.projectPosition(layerBounds[1], {viewport, autoOffset: false});\n\n      bounds[0] = Math.min(bounds[0], bottomLeftCommon[0]);\n      bounds[1] = Math.min(bounds[1], bottomLeftCommon[1]);\n      bounds[2] = Math.max(bounds[2], topRightCommon[0]);\n      bounds[3] = Math.max(bounds[3], topRightCommon[1]);\n    }\n  }\n\n  if (Number.isFinite(bounds[0])) {\n    return bounds;\n  }\n  return null;\n}\n\nconst MAX_VIEWPORT_SIZE = 2048;\n\n/** Construct a viewport that just covers the target bounds. Used for rendering to common space indexed texture. */\nexport function makeViewport(opts: {\n  /** The cartesian bounds of layers that will render into this texture */\n  bounds: Bounds;\n  /** Target width. If not specified, will be deduced from zoom */\n  width?: number;\n  /** Target height. If not specified, will be deduced from zoom */\n  height?: number;\n  /** Target zoom. If not specified, will be deduced from width and height */\n  zoom?: number;\n  /** Border around the viewport in pixels */\n  border?: number;\n  /** A viewport used to determine the output type */\n  viewport: Viewport;\n}): Viewport | null {\n  const {bounds, viewport, border = 0} = opts;\n  const {isGeospatial} = viewport;\n\n  if (bounds[2] <= bounds[0] || bounds[3] <= bounds[1]) {\n    return null;\n  }\n\n  const centerWorld = viewport.unprojectPosition([\n    (bounds[0] + bounds[2]) / 2,\n    (bounds[1] + bounds[3]) / 2,\n    0\n  ]);\n\n  let {width, height, zoom} = opts;\n  if (zoom === undefined) {\n    // Use width and height to determine zoom\n    width = width! - border * 2;\n    height = height! - border * 2;\n    const scale = Math.min(width / (bounds[2] - bounds[0]), height / (bounds[3] - bounds[1]));\n    zoom = Math.min(Math.log2(scale), 20);\n  } else if (!width || !height) {\n    // Use zoom to determine width and height\n    const scale = 2 ** zoom;\n    width = Math.round(Math.abs(bounds[2] - bounds[0]) * scale);\n    height = Math.round(Math.abs(bounds[3] - bounds[1]) * scale);\n    const maxSize = MAX_VIEWPORT_SIZE - border * 2;\n    if (width > maxSize || height > maxSize) {\n      const r = maxSize / Math.max(width, height);\n      width = Math.round(width * r);\n      height = Math.round(height * r);\n      zoom += Math.log2(r);\n    }\n  }\n\n  // TODO - find a more generic way to construct this viewport\n  // Geospatial viewports may not be web-mercator\n  return isGeospatial\n    ? new WebMercatorViewport({\n        id: viewport.id,\n        x: border,\n        y: border,\n        width,\n        height,\n        longitude: centerWorld[0],\n        latitude: centerWorld[1],\n        zoom,\n        orthographic: true\n      })\n    : new OrthographicViewport({\n        id: viewport.id,\n        x: border,\n        y: border,\n        width,\n        height,\n        target: centerWorld,\n        zoom,\n        flipY: false\n      });\n}\n\n/** Returns viewport bounds in CARTESIAN coordinates */\nexport function getViewportBounds(viewport: Viewport, zRange?: [number, number]): Bounds {\n  // Viewport bounds in world coordinates\n  let viewportBoundsWorld: Bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    viewportBoundsWorld = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    viewportBoundsWorld = viewport.getBounds();\n  }\n\n  // Viewport bounds in cartesian coordinates\n  const viewportBottomLeftCommon = viewport.projectPosition(viewportBoundsWorld.slice(0, 2));\n  const viewportTopRightCommon = viewport.projectPosition(viewportBoundsWorld.slice(2, 4));\n  return [\n    viewportBottomLeftCommon[0],\n    viewportBottomLeftCommon[1],\n    viewportTopRightCommon[0],\n    viewportTopRightCommon[1]\n  ];\n}\n\n/*\n * Determine the common space bounds that best cover the given data for the given viewport\n * Returns bounds in CARTESIAN coordinates\n */\nexport function getRenderBounds(\n  layerBounds: Bounds,\n  viewport: Viewport,\n  zRange?: [number, number]\n): Bounds {\n  if (!layerBounds) {\n    return [0, 0, 1, 1];\n  }\n\n  const viewportBounds = getViewportBounds(viewport, zRange);\n  // Expand viewport bounds by 2X. Heurestically chosen to avoid masking\n  // errors when mask is partially out of view\n  const paddedBounds = doubleBounds(viewportBounds);\n\n  // When bounds of the layers are smaller than the viewport bounds simply use\n  // mask bounds, so as to maximize resolution & avoid rerenders\n  if (\n    layerBounds[2] - layerBounds[0] <= paddedBounds[2] - paddedBounds[0] &&\n    layerBounds[3] - layerBounds[1] <= paddedBounds[3] - paddedBounds[1]\n  ) {\n    return layerBounds;\n  }\n\n  // As viewport shrinks, to avoid pixelation along mask edges\n  // we need to reduce the bounds and only render the visible portion\n  // of the mask.\n  // We pad the viewport bounds to capture the section\n  // of the mask just outside the viewport to correctly maskByInstance.\n  // Intersect mask & padded viewport bounds\n  return [\n    Math.max(layerBounds[0], paddedBounds[0]),\n    Math.max(layerBounds[1], paddedBounds[1]),\n    Math.min(layerBounds[2], paddedBounds[2]),\n    Math.min(layerBounds[3], paddedBounds[3])\n  ];\n}\n\nfunction doubleBounds(bounds: Bounds): Bounds {\n  const dx = bounds[2] - bounds[0];\n  const dy = bounds[3] - bounds[1];\n  const centerX = (bounds[0] + bounds[2]) / 2;\n  const centerY = (bounds[1] + bounds[3]) / 2;\n  return [centerX - dx, centerY - dy, centerX + dx, centerY + dy];\n}\n", "import {Layer, Viewport, Effect, PreRenderOptions, CoordinateSystem, log} from '@deck.gl/core';\nimport {Texture2D} from '@luma.gl/core';\nimport {equals} from '@math.gl/core';\nimport MaskPass from './mask-pass';\nimport {joinLayerBounds, getRenderBounds, makeViewport, Bounds} from '../utils/projection-utils';\n// import {debugFBO} from '../utils/debug';\n\ntype Mask = {\n  /** The channel index */\n  index: number;\n  bounds: Bounds;\n  coordinateOrigin: [number, number, number];\n  coordinateSystem: CoordinateSystem;\n};\n\ntype Channel = {\n  id: string;\n  index: number;\n  layers: Layer[];\n  bounds: Bounds | null;\n  maskBounds: Bounds;\n  layerBounds: Bounds[];\n  coordinateOrigin: [number, number, number];\n  coordinateSystem: CoordinateSystem;\n};\n\nexport type MaskPreRenderStats = {\n  didRender: boolean;\n};\n\n// Class to manage mask effect\nexport default class MaskEffect implements Effect {\n  id = 'mask-effect';\n  props = null;\n  useInPicking = true;\n  order = 0;\n\n  private dummyMaskMap?: Texture2D;\n  private channels: (Channel | null)[] = [];\n  private masks: Record<string, Mask> | null = null;\n  private maskPass?: MaskPass;\n  private maskMap?: Texture2D;\n  private lastViewport?: Viewport;\n\n  preRender(\n    gl: WebGLRenderingContext,\n    {layers, layerFilter, viewports, onViewportActive, views, isPicking}: PreRenderOptions\n  ): MaskPreRenderStats {\n    let didRender = false;\n    if (!this.dummyMaskMap) {\n      this.dummyMaskMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    if (isPicking) {\n      // Do not update on picking pass\n      return {didRender};\n    }\n\n    const maskLayers = layers.filter(l => l.props.visible && l.props.operation.includes('mask'));\n    if (maskLayers.length === 0) {\n      this.masks = null;\n      this.channels.length = 0;\n      return {didRender};\n    }\n    this.masks = {};\n\n    if (!this.maskPass) {\n      this.maskPass = new MaskPass(gl, {id: 'default-mask'});\n      this.maskMap = this.maskPass.maskMap;\n    }\n\n    // Map layers to channels\n    const channelMap = this._sortMaskChannels(maskLayers);\n    // TODO - support multiple views\n    const viewport = viewports[0];\n    const viewportChanged = !this.lastViewport || !this.lastViewport.equals(viewport);\n\n    if (viewport.resolution !== undefined) {\n      log.warn('MaskExtension is not supported in GlobeView')();\n      return {didRender};\n    }\n\n    for (const maskId in channelMap) {\n      const result = this._renderChannel(channelMap[maskId], {\n        layerFilter,\n        onViewportActive,\n        views,\n        viewport,\n        viewportChanged\n      });\n      didRender ||= result;\n    }\n\n    // debugFBO(this.maskMap, {opaque: true});\n    return {didRender};\n  }\n\n  private _renderChannel(\n    channelInfo: Channel,\n    {\n      layerFilter,\n      onViewportActive,\n      views,\n      viewport,\n      viewportChanged\n    }: {\n      layerFilter: PreRenderOptions['layerFilter'];\n      onViewportActive: PreRenderOptions['onViewportActive'];\n      views: PreRenderOptions['views'];\n      viewport: Viewport;\n      viewportChanged: boolean;\n    }\n  ): boolean {\n    let didRender = false;\n    const oldChannelInfo = this.channels[channelInfo.index];\n    if (!oldChannelInfo) {\n      return didRender;\n    }\n\n    const maskChanged =\n      // If a channel is new\n      channelInfo === oldChannelInfo ||\n      // If sublayers have changed\n      channelInfo.layers.length !== oldChannelInfo.layers.length ||\n      channelInfo.layers.some(\n        (layer, i) =>\n          // Layer instance is updated\n          // Layer props might have changed\n          // Undetermined props could have an effect on the output geometry of a mask layer,\n          // for example getRadius+updateTriggers, radiusScale, modelMatrix\n          layer !== oldChannelInfo.layers[i] ||\n          // Some prop is in transition\n          layer.props.transitions\n      ) ||\n      // If a sublayer's positions have been updated, the cached bounds will change shallowly\n      channelInfo.layerBounds.some((b, i) => b !== oldChannelInfo.layerBounds[i]);\n\n    channelInfo.bounds = oldChannelInfo.bounds;\n    channelInfo.maskBounds = oldChannelInfo.maskBounds;\n    this.channels[channelInfo.index] = channelInfo;\n\n    if (maskChanged || viewportChanged) {\n      // Recalculate mask bounds\n      this.lastViewport = viewport;\n\n      const layerBounds = joinLayerBounds(channelInfo.layers, viewport);\n      channelInfo.bounds = layerBounds && getRenderBounds(layerBounds, viewport);\n\n      if (maskChanged || !equals(channelInfo.bounds, oldChannelInfo.bounds)) {\n        // Rerender mask FBO\n        const {maskPass, maskMap} = this;\n\n        const maskViewport =\n          layerBounds &&\n          makeViewport({\n            bounds: channelInfo.bounds!,\n            viewport,\n            width: maskMap.width,\n            height: maskMap.height,\n            border: 1\n          });\n\n        channelInfo.maskBounds = maskViewport ? maskViewport.getBounds() : [0, 0, 1, 1];\n\n        // @ts-ignore (2532) This method is only called from preRender where maskPass is defined\n        maskPass.render({\n          pass: 'mask',\n          channel: channelInfo.index,\n          layers: channelInfo.layers,\n          layerFilter,\n          viewports: maskViewport ? [maskViewport] : [],\n          onViewportActive,\n          views,\n          moduleParameters: {\n            devicePixelRatio: 1\n          }\n        });\n\n        didRender = true;\n      }\n    }\n\n    // @ts-ignore (2532) This method is only called from preRender where masks is defined\n    this.masks[channelInfo.id] = {\n      index: channelInfo.index,\n      bounds: channelInfo.maskBounds,\n      coordinateOrigin: channelInfo.coordinateOrigin,\n      coordinateSystem: channelInfo.coordinateSystem\n    };\n\n    return didRender;\n  }\n\n  /**\n   * Find a channel to render each mask into\n   * If a maskId already exists, diff and update the existing channel\n   * Otherwise replace a removed mask\n   * Otherwise create a new channel\n   * Returns a map from mask layer id to channel info\n   */\n  private _sortMaskChannels(maskLayers: Layer[]): Record<string, Channel> {\n    const channelMap = {};\n    let channelCount = 0;\n    for (const layer of maskLayers) {\n      const {id} = layer.root;\n      let channelInfo = channelMap[id];\n      if (!channelInfo) {\n        if (++channelCount > 4) {\n          log.warn('Too many mask layers. The max supported is 4')();\n          continue; // eslint-disable-line no-continue\n        }\n        channelInfo = {\n          id,\n          index: this.channels.findIndex(c => c?.id === id),\n          layers: [],\n          layerBounds: [],\n          coordinateOrigin: layer.root.props.coordinateOrigin,\n          coordinateSystem: layer.root.props.coordinateSystem\n        };\n        channelMap[id] = channelInfo;\n      }\n      channelInfo.layers.push(layer);\n      channelInfo.layerBounds.push(layer.getBounds());\n    }\n\n    for (let i = 0; i < 4; i++) {\n      const channelInfo = this.channels[i];\n      if (!channelInfo || !(channelInfo.id in channelMap)) {\n        // The mask id at this channel no longer exists\n        this.channels[i] = null;\n      }\n    }\n\n    for (const maskId in channelMap) {\n      const channelInfo = channelMap[maskId];\n\n      if (channelInfo.index < 0) {\n        channelInfo.index = this.channels.findIndex(c => !c);\n        this.channels[channelInfo.index] = channelInfo;\n      }\n    }\n    return channelMap;\n  }\n\n  getModuleParameters(): {\n    maskMap: Texture2D;\n    maskChannels: Record<string, Mask> | null;\n  } {\n    return {\n      maskMap: this.masks ? this.maskMap : this.dummyMaskMap,\n      maskChannels: this.masks\n    };\n  }\n\n  cleanup(): void {\n    if (this.dummyMaskMap) {\n      this.dummyMaskMap.delete();\n      this.dummyMaskMap = undefined;\n    }\n\n    if (this.maskPass) {\n      this.maskPass.delete();\n      this.maskPass = undefined;\n      this.maskMap = undefined;\n    }\n\n    this.lastViewport = undefined;\n    this.masks = null;\n    this.channels.length = 0;\n  }\n}\n", "import {Framebuffer, Renderbuffer, Texture2D, cssToDeviceRatio} from '@luma.gl/core';\nimport {equals} from '@math.gl/core';\nimport {_deepEqual as deepEqual} from '@deck.gl/core';\nimport type {Effect, Layer, PreRenderOptions, Viewport} from '@deck.gl/core';\nimport CollisionFilterPass from './collision-filter-pass';\nimport MaskEffect, {MaskPreRenderStats} from '../mask/mask-effect';\n// import {debugFBO} from '../utils/debug';\n\ntype CollisionFilterExtensionProps = {\n  collisionTestProps?: {};\n  collisionGroup: string;\n};\n\n// Factor by which to downscale Collision FBO relative to canvas\nconst DOWNSCALE = 2;\n\ntype RenderInfo = {\n  collisionGroup: string;\n  layers: Layer<CollisionFilterExtensionProps>[];\n  layerBounds: ([number[], number[]] | null)[];\n  allLayersLoaded: boolean;\n};\n\nexport default class CollisionFilterEffect implements Effect {\n  id = 'collision-filter-effect';\n  props = null;\n  useInPicking = true;\n  order = 1;\n\n  private channels: Record<string, RenderInfo> = {};\n  private collisionFilterPass?: CollisionFilterPass;\n  private collisionFBOs: Record<string, Framebuffer> = {};\n  private dummyCollisionMap?: Texture2D;\n  private lastViewport?: Viewport;\n\n  preRender(\n    gl: WebGLRenderingContext,\n    {\n      effects: allEffects,\n      layers,\n      layerFilter,\n      viewports,\n      onViewportActive,\n      views,\n      isPicking,\n      preRenderStats = {}\n    }: PreRenderOptions\n  ): void {\n    if (!this.dummyCollisionMap) {\n      this.dummyCollisionMap = new Texture2D(gl, {width: 1, height: 1});\n    }\n\n    if (isPicking) {\n      // Do not update on picking pass\n      return;\n    }\n\n    const collisionLayers = layers.filter(\n      // @ts-ignore\n      ({props: {visible, collisionEnabled}}) => visible && collisionEnabled\n    ) as Layer<CollisionFilterExtensionProps>[];\n    if (collisionLayers.length === 0) {\n      this.channels = {};\n      return;\n    }\n\n    if (!this.collisionFilterPass) {\n      this.collisionFilterPass = new CollisionFilterPass(gl, {id: 'default-collision-filter'});\n    }\n\n    // Detect if mask has rendered. TODO: better dependency system for Effects\n    const effects = allEffects?.filter(e => e.constructor === MaskEffect);\n    const maskEffectRendered = (preRenderStats['mask-effect'] as MaskPreRenderStats)?.didRender;\n\n    // Collect layers to render\n    const channels = this._groupByCollisionGroup(gl, collisionLayers);\n\n    const viewport = viewports[0];\n    const viewportChanged =\n      !this.lastViewport || !this.lastViewport.equals(viewport) || maskEffectRendered;\n\n    // Resize framebuffers to match canvas\n    for (const collisionGroup in channels) {\n      const collisionFBO = this.collisionFBOs[collisionGroup];\n      const renderInfo = channels[collisionGroup];\n      collisionFBO.resize({\n        width: gl.canvas.width / DOWNSCALE,\n        height: gl.canvas.height / DOWNSCALE\n      });\n      this._render(renderInfo, {\n        effects,\n        layerFilter,\n        onViewportActive,\n        views,\n        viewport,\n        viewportChanged\n      });\n    }\n\n    // debugFBO(this.collisionFBOs[Object.keys(channels)[0]], {minimap: true});\n  }\n\n  private _render(\n    renderInfo: RenderInfo,\n    {\n      effects,\n      layerFilter,\n      onViewportActive,\n      views,\n      viewport,\n      viewportChanged\n    }: {\n      effects: PreRenderOptions['effects'];\n      layerFilter: PreRenderOptions['layerFilter'];\n      onViewportActive: PreRenderOptions['onViewportActive'];\n      views: PreRenderOptions['views'];\n      viewport: Viewport;\n      viewportChanged: boolean;\n    }\n  ) {\n    const {collisionGroup} = renderInfo;\n    const oldRenderInfo = this.channels[collisionGroup];\n    if (!oldRenderInfo) {\n      return;\n    }\n\n    const needsRender =\n      viewportChanged ||\n      // If render info is new\n      renderInfo === oldRenderInfo ||\n      // If sublayers have changed\n      !deepEqual(oldRenderInfo.layers, renderInfo.layers, 1) ||\n      // If a sublayer's bounds have been updated\n      renderInfo.layerBounds.some((b, i) => !equals(b, oldRenderInfo.layerBounds[i])) ||\n      // If a sublayer's isLoaded state has been updated\n      renderInfo.allLayersLoaded !== oldRenderInfo.allLayersLoaded ||\n      // Some prop is in transition\n      renderInfo.layers.some(layer => layer.props.transitions);\n\n    this.channels[collisionGroup] = renderInfo;\n\n    if (needsRender) {\n      this.lastViewport = viewport;\n      const collisionFBO = this.collisionFBOs[collisionGroup];\n\n      // Rerender collision FBO\n      this.collisionFilterPass!.renderCollisionMap(collisionFBO, {\n        pass: 'collision-filter',\n        isPicking: true,\n        layers: renderInfo.layers,\n        effects,\n        layerFilter,\n        viewports: viewport ? [viewport] : [],\n        onViewportActive,\n        views,\n        moduleParameters: {\n          // To avoid feedback loop forming between Framebuffer and active Texture.\n          dummyCollisionMap: this.dummyCollisionMap,\n          devicePixelRatio: cssToDeviceRatio(collisionFBO.gl) / DOWNSCALE\n        }\n      });\n    }\n  }\n\n  /**\n   * Group layers by collisionGroup\n   * Returns a map from collisionGroup to render info\n   */\n  private _groupByCollisionGroup(\n    gl: WebGLRenderingContext,\n    collisionLayers: Layer<CollisionFilterExtensionProps>[]\n  ): Record<string, RenderInfo> {\n    const channelMap = {};\n    for (const layer of collisionLayers) {\n      const {collisionGroup} = layer.props;\n      let channelInfo = channelMap[collisionGroup];\n      if (!channelInfo) {\n        channelInfo = {collisionGroup, layers: [], layerBounds: [], allLayersLoaded: true};\n        channelMap[collisionGroup] = channelInfo;\n      }\n      channelInfo.layers.push(layer);\n      channelInfo.layerBounds.push(layer.getBounds());\n      if (!layer.isLoaded) {\n        channelInfo.allLayersLoaded = false;\n      }\n    }\n\n    // Create any new passes and remove any old ones\n    for (const collisionGroup of Object.keys(channelMap)) {\n      if (!this.collisionFBOs[collisionGroup]) {\n        this.createFBO(gl, collisionGroup);\n      }\n      if (!this.channels[collisionGroup]) {\n        this.channels[collisionGroup] = channelMap[collisionGroup];\n      }\n    }\n    for (const collisionGroup of Object.keys(this.collisionFBOs)) {\n      if (!channelMap[collisionGroup]) {\n        this.destroyFBO(collisionGroup);\n      }\n    }\n\n    return channelMap;\n  }\n\n  getModuleParameters(layer: Layer): {\n    collisionFBO: Framebuffer;\n    dummyCollisionMap: Texture2D;\n  } {\n    const {collisionGroup} = (layer as Layer<CollisionFilterExtensionProps>).props;\n    const {collisionFBOs, dummyCollisionMap} = this;\n    return {collisionFBO: collisionFBOs[collisionGroup], dummyCollisionMap};\n  }\n\n  cleanup(): void {\n    if (this.dummyCollisionMap) {\n      this.dummyCollisionMap.delete();\n      this.dummyCollisionMap = undefined;\n    }\n    this.channels = {};\n    for (const collisionGroup of Object.keys(this.collisionFBOs)) {\n      this.destroyFBO(collisionGroup);\n    }\n    this.collisionFBOs = {};\n    this.lastViewport = undefined;\n  }\n\n  createFBO(gl: WebGLRenderingContext, collisionGroup: string) {\n    const {width, height} = gl.canvas;\n    const collisionMap = new Texture2D(gl, {\n      width,\n      height,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.NEAREST,\n        [gl.TEXTURE_MAG_FILTER]: gl.NEAREST,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    const depthBuffer = new Renderbuffer(gl, {format: gl.DEPTH_COMPONENT16, width, height});\n    this.collisionFBOs[collisionGroup] = new Framebuffer(gl, {\n      id: `Collision-${collisionGroup}`,\n      width,\n      height,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: collisionMap,\n        [gl.DEPTH_ATTACHMENT]: depthBuffer\n      }\n    });\n  }\n\n  destroyFBO(collisionGroup: string) {\n    const fbo = this.collisionFBOs[collisionGroup];\n    for (const attachment of Object.values(fbo.attachments as Texture2D[])) {\n      attachment.delete();\n    }\n    fbo.delete();\n    delete this.collisionFBOs[collisionGroup];\n  }\n}\n", "import {Accessor, Layer, LayerContext, LayerExtension} from '@deck.gl/core';\nimport collision from './shader-module';\nimport CollisionFilterEffect from './collision-filter-effect';\n\nconst defaultProps = {\n  getCollisionPriority: {type: 'accessor', value: 0},\n  collisionEnabled: true,\n  collisionGroup: {type: 'string', value: 'default'},\n  collisionTestProps: {}\n};\n\nexport type CollisionFilterExtensionProps<DataT = any> = {\n  /**\n   * Accessor for collision priority. Must return a number in the range -1000 -> 1000. Features with higher values are shown preferentially.\n   */\n  getCollisionPriority?: Accessor<DataT, number>;\n\n  /**\n   * Enable/disable collisions. If collisions are disabled, all objects are rendered.\n   * @default true\n   */\n  collisionEnabled: boolean;\n\n  /**\n   * Collision group this layer belongs to. If it is not set, the 'default' collision group is used\n   */\n  collisionGroup?: string;\n\n  /**\n   * Props to override when rendering collision map\n   */\n  collisionTestProps?: {};\n};\n\n/** Allows layers to hide overlapping objects. */\nexport default class CollisionFilterExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'CollisionFilterExtension';\n\n  getShaders(this: Layer<CollisionFilterExtensionProps>): any {\n    return {modules: [collision]};\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<CollisionFilterExtensionProps>, {uniforms, context, moduleParameters}: any) {\n    const {collisionEnabled} = this.props;\n    const {collisionFBO, drawToCollisionMap} = moduleParameters;\n    const enabled = collisionEnabled && Boolean(collisionFBO);\n    uniforms.collision_enabled = enabled;\n\n    if (drawToCollisionMap) {\n      // Override any props with those defined in collisionTestProps\n      // @ts-ignore\n      this.props = this.clone(this.props.collisionTestProps).props;\n    }\n  }\n\n  initializeState(\n    this: Layer<CollisionFilterExtensionProps>,\n    context: LayerContext,\n    extension: this\n  ) {\n    if (this.getAttributeManager() === null) {\n      return;\n    }\n    this.context.deck?._addDefaultEffect(new CollisionFilterEffect());\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.add({\n      collisionPriorities: {\n        size: 1,\n        accessor: 'getCollisionPriority',\n        shaderAttributes: {\n          collisionPriorities: {divisor: 0},\n          instanceCollisionPriorities: {divisor: 1}\n        }\n      }\n    });\n  }\n\n  getNeedsPickingBuffer(this: Layer<CollisionFilterExtensionProps>): boolean {\n    return this.props.collisionEnabled;\n  }\n}\n", "import {project} from '@deck.gl/core';\nimport type {_ShaderModule as ShaderModule} from '@deck.gl/core';\nimport type {Texture2D} from '@luma.gl/webgl';\n\nconst vs = `\nuniform vec4 mask_bounds;\nuniform bool mask_maskByInstance;\nvec2 mask_getCoords(vec4 position) {\n  return (position.xy - mask_bounds.xy) / (mask_bounds.zw - mask_bounds.xy);\n}\n`;\n\nconst fs = `\nuniform sampler2D mask_texture;\nuniform int mask_channel;\nuniform bool mask_enabled;\nuniform bool mask_inverted;\nbool mask_isInBounds(vec2 texCoords) {\n  if (!mask_enabled) {\n    return true;\n  }\n  vec4 maskColor = texture2D(mask_texture, texCoords);\n  float maskValue = 1.0;\n  if (mask_channel == 0) {\n    maskValue = maskColor.r;\n  } else if (mask_channel == 1) {\n    maskValue = maskColor.g;\n  } else if (mask_channel == 2) {\n    maskValue = maskColor.b;\n  } else if (mask_channel == 3) {\n    maskValue = maskColor.a;\n  }\n\n  if (mask_inverted) {\n    return maskValue >= 0.5;\n  } else {\n    return maskValue < 0.5;\n  }\n}\n`;\n\nconst inject = {\n  'vs:#decl': `\nvarying vec2 mask_texCoords;\n`,\n  'vs:#main-end': `\n   vec4 mask_common_position;\n   if (mask_maskByInstance) {\n     mask_common_position = project_position(vec4(geometry.worldPosition, 1.0));\n   } else {\n     mask_common_position = geometry.position;\n   }\n   mask_texCoords = mask_getCoords(mask_common_position);\n`,\n  'fs:#decl': `\nvarying vec2 mask_texCoords;\n`,\n  'fs:#main-start': `\n  if (mask_enabled) {\n    bool mask = mask_isInBounds(mask_texCoords);\n\n    // Debug: show extent of render target\n    // gl_FragColor = vec4(mask_texCoords, 0.0, 1.0);\n    gl_FragColor = texture2D(mask_texture, mask_texCoords);\n\n    if (!mask) discard;\n  }\n`\n};\n\ntype MaskModuleSettings = {\n  maskMap?: Texture2D;\n};\n\n/* eslint-disable camelcase */\nconst getMaskUniforms = (opts?: MaskModuleSettings | {}): Record<string, any> => {\n  if (opts && 'maskMap' in opts) {\n    return {\n      mask_texture: opts.maskMap\n    };\n  }\n  return {};\n};\n\nexport default {\n  name: 'mask',\n  dependencies: [project],\n  vs,\n  fs,\n  inject,\n  getUniforms: getMaskUniforms\n} as ShaderModule<MaskModuleSettings>;\n", "import {COORDINATE_SYSTEM, Layer, LayerExtension, log} from '@deck.gl/core';\nimport mask from './shader-module';\nimport MaskEffect from './mask-effect';\n\nconst defaultProps = {\n  maskId: '',\n  maskByInstance: undefined,\n  maskInverted: false\n};\n\nexport type MaskExtensionProps = {\n  /**\n   * Id of the layer that defines the mask. The mask layer must use the prop `operation: 'mask'`.\n   * Masking is disabled if `maskId` is empty or no valid mask layer with the specified id is found.\n   */\n  maskId?: string;\n  /**\n   * controls whether an object is clipped by its anchor (usually defined by an accessor called `getPosition`, e.g. icon, scatterplot) or by its geometry (e.g. path, polygon).\n   * If not specified, it is automatically deduced from the layer.\n   */\n  maskByInstance?: boolean;\n  /**\n   * Inverts the masking operation\n   */\n  maskInverted?: boolean;\n};\n\n/** Allows layers to show/hide objects by a geofence. */\nexport default class MaskExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'MaskExtension';\n\n  initializeState(this: Layer<MaskExtensionProps>) {\n    this.context.deck?._addDefaultEffect(new MaskEffect());\n  }\n\n  getShaders(this: Layer<MaskExtensionProps>): any {\n    // Infer by geometry if 'maskByInstance' prop isn't explictly set\n    let maskByInstance = 'instancePositions' in this.getAttributeManager()!.attributes;\n    // Users can override by setting the `maskByInstance` prop\n    if (this.props.maskByInstance !== undefined) {\n      maskByInstance = Boolean(this.props.maskByInstance);\n    }\n    this.state.maskByInstance = maskByInstance;\n\n    return {\n      modules: [mask]\n    };\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<Required<MaskExtensionProps>>, {uniforms, context, moduleParameters}: any) {\n    uniforms.mask_maskByInstance = this.state.maskByInstance;\n    const {maskId, maskInverted} = this.props;\n    const {maskChannels} = moduleParameters;\n    const {viewport} = context;\n    if (maskChannels && maskChannels[maskId]) {\n      const {index, bounds, coordinateOrigin: fromCoordinateOrigin} = maskChannels[maskId];\n      let {coordinateSystem: fromCoordinateSystem} = maskChannels[maskId];\n      uniforms.mask_enabled = true;\n      uniforms.mask_channel = index;\n      uniforms.mask_inverted = maskInverted;\n\n      if (fromCoordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n        fromCoordinateSystem = viewport.isGeospatial\n          ? COORDINATE_SYSTEM.LNGLAT\n          : COORDINATE_SYSTEM.CARTESIAN;\n      }\n      const opts = {modelMatrix: null, fromCoordinateOrigin, fromCoordinateSystem};\n      const bl = this.projectPosition([bounds[0], bounds[1], 0], opts);\n      const tr = this.projectPosition([bounds[2], bounds[3], 0], opts);\n      uniforms.mask_bounds = [bl[0], bl[1], tr[0], tr[1]];\n    } else {\n      if (maskId) {\n        log.warn(`Could not find a mask layer with id: ${maskId}`)();\n      }\n      uniforms.mask_enabled = false;\n    }\n  }\n}\n", "/* eslint-disable camelcase */\n\nimport {project} from '@deck.gl/core';\nimport type {_ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {Texture2D} from '@luma.gl/core';\nimport type {Bounds} from '../utils/projection-utils';\nimport type {TerrainCover} from './terrain-cover';\n\n/** Module parameters expected by the terrain shader module */\nexport type TerrainModuleSettings = {\n  pickingActive?: boolean;\n  heightMap: Texture2D | null;\n  heightMapBounds?: Bounds | null;\n  dummyHeightMap: Texture2D;\n  terrainCover?: TerrainCover | null;\n  drawToTerrainHeightMap?: boolean;\n  useTerrainHeightMap?: boolean;\n  terrainSkipRender?: boolean;\n};\n\n/** A model can have one of the following modes */\nexport const TERRAIN_MODE = {\n  NONE: 0,\n  /** A terrain layer rendering encoded ground elevation into the height map */\n  WRITE_HEIGHT_MAP: 1,\n  /** An offset layer reading encoded ground elevation from the height map */\n  USE_HEIGHT_MAP: 2,\n  /** A terrain layer rendering to screen, using the cover fbo overlaid with its own texture */\n  USE_COVER: 3,\n  /** A terrain layer rendering to screen, using the cover fbo as texture */\n  USE_COVER_ONLY: 4,\n  /** Draped layer is rendered into a texture, and never to screen */\n  SKIP: 5\n};\n\nconst TERRAIN_MODE_CONSTANTS = Object.keys(TERRAIN_MODE)\n  .map(key => `const float TERRAIN_MODE_${key} = ${TERRAIN_MODE[key]}.0;`)\n  .join('\\n');\n\nexport const terrainModule = {\n  name: 'terrain',\n  dependencies: [project],\n  inject: {\n    'vs:#decl': `\nuniform float terrain_mode;\nuniform sampler2D terrain_map;\nuniform vec4 terrain_bounds;\nvarying vec3 commonPos;\n${TERRAIN_MODE_CONSTANTS}\n    `,\n    'vs:#main-start': `\nif (terrain_mode == TERRAIN_MODE_SKIP) {\n  gl_Position = vec4(0.0);\n  return;\n}\n`,\n    'vs:DECKGL_FILTER_GL_POSITION': `\ncommonPos = geometry.position.xyz;\nif (terrain_mode == TERRAIN_MODE_WRITE_HEIGHT_MAP) {\n  vec2 texCoords = (commonPos.xy - terrain_bounds.xy) / terrain_bounds.zw;\n  position = vec4(texCoords * 2.0 - 1.0, 0.0, 1.0);\n  commonPos.z += project_uCommonOrigin.z;\n}\nif (terrain_mode == TERRAIN_MODE_USE_HEIGHT_MAP) {\n  vec3 anchor = geometry.worldPosition;\n  anchor.z = 0.0;\n  vec3 anchorCommon = project_position(anchor);\n  vec2 texCoords = (anchorCommon.xy - terrain_bounds.xy) / terrain_bounds.zw;\n  if (texCoords.x >= 0.0 && texCoords.y >= 0.0 && texCoords.x <= 1.0 && texCoords.y <= 1.0) {\n    float terrainZ = texture2D(terrain_map, texCoords).r;\n    geometry.position.z += terrainZ;\n    position = project_common_position_to_clipspace(geometry.position);\n  }\n}\n    `,\n    'fs:#decl': `\nuniform float terrain_mode;\nuniform sampler2D terrain_map;\nuniform vec4 terrain_bounds;\nvarying vec3 commonPos;\n${TERRAIN_MODE_CONSTANTS}\n    `,\n    'fs:#main-start': `\nif (terrain_mode == TERRAIN_MODE_WRITE_HEIGHT_MAP) {\n  gl_FragColor = vec4(commonPos.z, 0.0, 0.0, 1.0);\n  return;\n}\n    `,\n    'fs:DECKGL_FILTER_COLOR': `\nif ((terrain_mode == TERRAIN_MODE_USE_COVER) || (terrain_mode == TERRAIN_MODE_USE_COVER_ONLY)) {\n  vec2 texCoords = (commonPos.xy - terrain_bounds.xy) / terrain_bounds.zw;\n  vec4 pixel = texture2D(terrain_map, texCoords);\n  if (terrain_mode == TERRAIN_MODE_USE_COVER_ONLY) {\n    color = pixel;\n  } else {\n    // pixel is premultiplied\n    color = pixel + color * (1.0 - pixel.a);\n  }\n  return;\n}\n    `\n  },\n  // eslint-disable-next-line complexity\n  getUniforms: (opts = {}, uniforms) => {\n    if ('dummyHeightMap' in opts) {\n      const {\n        drawToTerrainHeightMap,\n        heightMap,\n        heightMapBounds,\n        dummyHeightMap,\n        terrainCover,\n        useTerrainHeightMap,\n        terrainSkipRender\n      } = opts;\n      const {project_uCommonOrigin} = uniforms;\n\n      let mode: number = terrainSkipRender ? TERRAIN_MODE.SKIP : TERRAIN_MODE.NONE;\n      // height map if case USE_HEIGHT_MAP, terrain cover if USE_COVER, otherwise empty\n      let sampler: Texture2D = dummyHeightMap;\n      // height map bounds if case USE_HEIGHT_MAP, terrain cover bounds if USE_COVER, otherwise null\n      let bounds: number[] | null = null;\n      if (drawToTerrainHeightMap) {\n        mode = TERRAIN_MODE.WRITE_HEIGHT_MAP;\n        bounds = heightMapBounds!;\n      } else if (useTerrainHeightMap && heightMap) {\n        mode = TERRAIN_MODE.USE_HEIGHT_MAP;\n        sampler = heightMap;\n        bounds = heightMapBounds!;\n      } else if (terrainCover) {\n        // This is a terrain layer\n        const isPicking = opts.pickingActive;\n        sampler = isPicking\n          ? terrainCover.getPickingFramebuffer()\n          : terrainCover.getRenderFramebuffer();\n        if (isPicking) {\n          // Never render the layer itself in picking pass\n          mode = TERRAIN_MODE.SKIP;\n        }\n        if (sampler) {\n          mode = mode === TERRAIN_MODE.SKIP ? TERRAIN_MODE.USE_COVER_ONLY : TERRAIN_MODE.USE_COVER;\n          bounds = terrainCover.bounds;\n        } else {\n          sampler = dummyHeightMap;\n        }\n      }\n\n      /* eslint-disable camelcase */\n      return {\n        terrain_mode: mode,\n        terrain_map: sampler,\n        // Convert bounds to the common space, as [minX, minY, width, height]\n        terrain_bounds: bounds\n          ? [\n              bounds[0] - project_uCommonOrigin[0],\n              bounds[1] - project_uCommonOrigin[1],\n              bounds[2] - bounds[0],\n              bounds[3] - bounds[1]\n            ]\n          : [0, 0, 0, 0]\n      };\n    }\n    return null;\n  }\n} as ShaderModule<TerrainModuleSettings>;\n", "import {Framebuffer, Texture2D, isWebGL2} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nexport function createRenderTarget(\n  gl: WebGLRenderingContext,\n  opts: {\n    id: string;\n    float?: boolean;\n  }\n) {\n  return new Framebuffer(gl, {\n    id: opts.id,\n    attachments: {\n      [gl.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n        ...(opts.float && {\n          format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n          type: GL.FLOAT\n        }),\n        mipmaps: false,\n        parameters: {\n          [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n          [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n          [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n          [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n        }\n      })\n    }\n  });\n}\n", "import {Framebuffer} from '@luma.gl/core';\n\nimport type {Layer, Viewport} from '@deck.gl/core';\n\nimport {createRenderTarget} from './utils';\nimport {joinLayerBounds, makeViewport, getRenderBounds, Bounds} from '../utils/projection-utils';\n\ntype TileHeader = {\n  boundingBox: [min: number[], max: number[]];\n};\n\n/**\n * Manages the lifecycle of the terrain cover (draped textures over a terrain mesh).\n * One terrain cover is created for each unique terrain layer (primitive layer with operation:terrain).\n * It is updated when the terrain source layer's mesh changes or when any of the terrainDrawMode:drape\n * layers requires redraw.\n * During the draw call of a terrain layer, the drape texture is overlaid on top of the layer's own color.\n */\nexport class TerrainCover {\n  isDirty: boolean = true;\n  /** The terrain layer that this instance belongs to */\n  targetLayer: Layer;\n  /** Viewport used to draw into the texture */\n  renderViewport: Viewport | null = null;\n  /** Bounds of the terrain cover texture, in cartesian space */\n  bounds: Bounds | null = null;\n\n  private fbo?: Framebuffer;\n  private pickingFbo?: Framebuffer;\n  private layers: string[] = [];\n  private tile: TileHeader | null;\n  /** Cached version of targetLayer.getBounds() */\n  private targetBounds: [number[], number[]] | null = null;\n  /** targetBounds in cartesian space */\n  private targetBoundsCommon: Bounds | null = null;\n\n  constructor(targetLayer: Layer) {\n    this.targetLayer = targetLayer;\n    this.tile = getTile(targetLayer);\n  }\n\n  get id() {\n    return this.targetLayer.id;\n  }\n\n  /** returns true if the target layer is still in use (i.e. not finalized) */\n  get isActive(): boolean {\n    return Boolean(this.targetLayer.getCurrentLayer());\n  }\n\n  shouldUpdate({\n    targetLayer,\n    viewport,\n    layers,\n    layerNeedsRedraw\n  }: {\n    targetLayer?: Layer;\n    viewport?: Viewport;\n    layers?: Layer[];\n    layerNeedsRedraw?: Record<string, boolean>;\n  }): boolean {\n    if (targetLayer) {\n      this.targetLayer = targetLayer;\n    }\n    const sizeChanged = viewport ? this._updateViewport(viewport) : false;\n\n    let layersChanged = layers ? this._updateLayers(layers) : false;\n\n    if (layerNeedsRedraw) {\n      for (const id of this.layers) {\n        if (layerNeedsRedraw[id]) {\n          layersChanged = true;\n          // console.log('layer needs redraw', id);\n          break;\n        }\n      }\n    }\n\n    return layersChanged || sizeChanged;\n  }\n\n  /** Compare layers with the last version. Only rerender if necessary. */\n  private _updateLayers(layers: Layer[]): boolean {\n    let needsRedraw = false;\n    layers = this.tile ? getIntersectingLayers(this.tile, layers) : layers;\n\n    if (layers.length !== this.layers.length) {\n      needsRedraw = true;\n      // console.log('layers count changed', this.layers.length, '>>', layers.length);\n    } else {\n      for (let i = 0; i < layers.length; i++) {\n        const id = layers[i].id;\n        if (id !== this.layers[i]) {\n          needsRedraw = true;\n          // console.log('layer added/removed', id);\n          break;\n        }\n      }\n    }\n    if (needsRedraw) {\n      this.layers = layers.map(layer => layer.id);\n    }\n    return needsRedraw;\n  }\n\n  /** Compare viewport and terrain bounds with the last version. Only rerender if necesary. */\n  private _updateViewport(viewport: Viewport): boolean {\n    const targetLayer = this.targetLayer;\n    let shouldRedraw = false;\n\n    if (this.tile && 'boundingBox' in this.tile) {\n      if (!this.targetBounds) {\n        shouldRedraw = true;\n        this.targetBounds = this.tile.boundingBox;\n\n        const bottomLeftCommon = viewport.projectPosition(this.targetBounds[0]);\n        const topRightCommon = viewport.projectPosition(this.targetBounds[1]);\n        this.targetBoundsCommon = [\n          bottomLeftCommon[0],\n          bottomLeftCommon[1],\n          topRightCommon[0],\n          topRightCommon[1]\n        ];\n      }\n    } else if (this.targetBounds !== targetLayer.getBounds()) {\n      // console.log('bounds changed', this.bounds, '>>', newBounds);\n      shouldRedraw = true;\n      this.targetBounds = targetLayer.getBounds();\n      this.targetBoundsCommon = joinLayerBounds([targetLayer], viewport);\n    }\n\n    if (!this.targetBoundsCommon) {\n      return false;\n    }\n\n    const newZoom = Math.ceil(viewport.zoom + 0.5);\n    // If the terrain layer is bound to a tile, always render a texture that cover the whole tile.\n    // Otherwise, use the smaller of layer bounds and the viewport bounds.\n    if (this.tile) {\n      this.bounds = this.targetBoundsCommon;\n    } else {\n      const oldZoom = this.renderViewport?.zoom;\n      shouldRedraw = shouldRedraw || newZoom !== oldZoom;\n      const newBounds = getRenderBounds(this.targetBoundsCommon, viewport);\n      const oldBounds = this.bounds;\n      shouldRedraw = shouldRedraw || !oldBounds || newBounds.some((x, i) => x !== oldBounds[i]);\n      this.bounds = newBounds;\n    }\n\n    if (shouldRedraw) {\n      this.renderViewport = makeViewport({\n        bounds: this.bounds,\n        zoom: newZoom,\n        viewport\n      });\n    }\n\n    return shouldRedraw;\n  }\n\n  getRenderFramebuffer(): Framebuffer | null {\n    if (!this.renderViewport || this.layers.length === 0) {\n      return null;\n    }\n    if (!this.fbo) {\n      this.fbo = createRenderTarget(this.targetLayer.context.gl, {id: this.id});\n    }\n    return this.fbo;\n  }\n\n  getPickingFramebuffer(): Framebuffer | null {\n    if (!this.renderViewport || (this.layers.length === 0 && !this.targetLayer.props.pickable)) {\n      return null;\n    }\n    if (!this.pickingFbo) {\n      this.pickingFbo = createRenderTarget(this.targetLayer.context.gl, {id: `${this.id}-picking`});\n    }\n    return this.pickingFbo;\n  }\n\n  filterLayers(layers: Layer[]) {\n    return layers.filter(({id}) => this.layers.includes(id));\n  }\n\n  delete() {\n    const {fbo, pickingFbo} = this;\n    if (fbo) {\n      fbo.texture.delete();\n      fbo.delete();\n    }\n    if (pickingFbo) {\n      pickingFbo.texture.delete();\n      pickingFbo.delete();\n    }\n  }\n}\n\n/**\n * Remove layers that do not overlap with the current terrain cover.\n * This implementation only has effect when a TileLayer is overlaid on top of a TileLayer\n */\nfunction getIntersectingLayers(sourceTile: TileHeader, layers: Layer[]): Layer[] {\n  return layers.filter(layer => {\n    const tile = getTile(layer);\n    if (tile) {\n      return intersect(sourceTile.boundingBox, tile.boundingBox);\n    }\n    return true;\n  });\n}\n\n/** If layer is the descendent of a TileLayer, return the corresponding tile. */\nfunction getTile(layer: Layer): TileHeader | null {\n  while (layer) {\n    // @ts-expect-error tile may not exist\n    const {tile} = layer.props;\n    if (tile) {\n      return tile;\n    }\n    layer = layer.parent as Layer;\n  }\n  return null;\n}\n\nfunction intersect(b1?: [number[], number[]], b2?: [number[], number[]]): boolean {\n  if (b1 && b2) {\n    return b1[0][0] < b2[1][0] && b2[0][0] < b1[1][0] && b1[0][1] < b2[1][1] && b2[0][1] < b1[1][1];\n  }\n  return false;\n}\n", "import {withParameters} from '@luma.gl/core';\nimport {Layer, Viewport, _LayersPass as LayersPass, LayersPassRenderOptions} from '@deck.gl/core';\nimport type {HeightMapBuilder} from './height-map-builder';\nimport type {TerrainCover} from './terrain-cover';\n\nimport GL from '@luma.gl/constants';\n\nexport type TerrainPassRenderOptions = LayersPassRenderOptions;\n\n/** Renders textures used by the TerrainEffect render pass */\nexport class TerrainPass extends LayersPass {\n  getRenderableLayers(viewport: Viewport, opts: TerrainPassRenderOptions): Layer[] {\n    const {layers} = opts;\n    const result: Layer[] = [];\n    const drawParamsByIndex = this._getDrawLayerParams(viewport, opts, true);\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n        result.push(layer);\n      }\n    }\n\n    return result;\n  }\n\n  renderHeightMap(heightMap: HeightMapBuilder, opts: Partial<TerrainPassRenderOptions>) {\n    // console.log('Updating height map')\n    const target = heightMap.getRenderFramebuffer();\n    const viewport = heightMap.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    target.resize(viewport);\n\n    withParameters(\n      this.gl,\n      {\n        clearColor: [0, 0, 0, 0],\n        blend: true,\n        blendFunc: [GL.ONE, GL.ONE],\n        blendEquation: GL.MAX,\n        depthTest: false\n      },\n      () =>\n        this.render({\n          ...opts,\n          target,\n          pass: 'terrain-height-map',\n          layers: opts.layers!,\n          viewports: [viewport],\n          effects: []\n        })\n    );\n  }\n\n  renderTerrainCover(terrainCover: TerrainCover, opts: Partial<TerrainPassRenderOptions>) {\n    // console.log('Updating terrain cover ' + terrainCover.id)\n    const target = terrainCover.getRenderFramebuffer();\n    const viewport = terrainCover.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    const layers = terrainCover.filterLayers(opts.layers!);\n    target.resize(viewport);\n\n    withParameters(\n      this.gl,\n      {\n        clearColor: [0, 0, 0, 0],\n        depthTest: false\n      },\n      () =>\n        this.render({\n          ...opts,\n          target,\n          pass: `terrain-cover-${terrainCover.id}`,\n          layers,\n          effects: [],\n          viewports: [viewport]\n        })\n    );\n  }\n}\n", "import {\n  Layer,\n  Viewport,\n  LayersPassRenderOptions,\n  _PickLayersPass as PickLayersPass\n} from '@deck.gl/core';\nimport {withParameters} from '@luma.gl/core';\nimport type {TerrainCover} from './terrain-cover';\n\nexport type TerrainPickingPassRenderOptions = LayersPassRenderOptions & {\n  pickZ: boolean;\n};\n\n/** Renders textures used by the TerrainEffect picking pass */\nexport class TerrainPickingPass extends PickLayersPass {\n  /** Save layer index for use when drawing to terrain cover.\n   * When a terrain cover's picking buffer is rendered,\n   * we need to make sure each layer receives a consistent index (encoded in the alpha channel)\n   * so that a picked color can be decoded back to the correct layer.\n   * Updated in getRenderableLayers which is called in TerrainEffect.preRender\n   */\n  drawParameters: Record<string, any> = {};\n\n  getRenderableLayers(viewport: Viewport, opts: TerrainPickingPassRenderOptions): Layer[] {\n    const {layers} = opts;\n    const result: Layer[] = [];\n    this.drawParameters = {};\n    this._resetColorEncoder(opts.pickZ);\n    const drawParamsByIndex = this._getDrawLayerParams(viewport, opts);\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      if (!layer.isComposite && drawParamsByIndex[i].shouldDrawLayer) {\n        result.push(layer);\n        this.drawParameters[layer.id] = drawParamsByIndex[i].layerParameters;\n      }\n    }\n\n    return result;\n  }\n\n  renderTerrainCover(terrainCover: TerrainCover, opts: Partial<TerrainPickingPassRenderOptions>) {\n    // console.log('Updating terrain cover for picking ' + terrainCover.id)\n    const target = terrainCover.getPickingFramebuffer();\n    const viewport = terrainCover.renderViewport;\n\n    if (!target || !viewport) {\n      return;\n    }\n\n    const layers = terrainCover.filterLayers(opts.layers!);\n    const terrainLayer = terrainCover.targetLayer;\n    if (terrainLayer.props.pickable) {\n      layers.unshift(terrainLayer);\n    }\n    target.resize(viewport);\n\n    withParameters(\n      this.gl,\n      {\n        depthTest: false\n      },\n      () =>\n        this.render({\n          ...opts,\n          pickingFBO: target,\n          pass: `terrain-cover-picking-${terrainCover.id}`,\n          layers,\n          effects: [],\n          viewports: [viewport],\n          // Disable the default culling because TileLayer would cull sublayers based on the screen viewport,\n          // not the viewport of the terrain cover. Culling is already done by `terrainCover.filterLayers`\n          cullRect: undefined,\n          deviceRect: viewport,\n          pickZ: false\n        })\n    );\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): any {\n    if (this.drawParameters[layer.id]) {\n      return this.drawParameters[layer.id];\n    }\n    const parameters = super.getLayerParameters(layer, layerIndex, viewport);\n    parameters.blend = true;\n    return parameters;\n  }\n}\n", "import {Framebuffer} from '@luma.gl/core';\nimport {joinLayerBounds, getRenderBounds, makeViewport, Bounds} from '../utils/projection-utils';\nimport {createRenderTarget} from './utils';\n\nimport type {Viewport, Layer} from '@deck.gl/core';\n\nconst MAP_MAX_SIZE = 2048;\n\n/**\n * Manages the lifecycle of the height map (a framebuffer that encodes elevation).\n * One instance of height map is is shared across all layers. It is updated when the viewport changes\n * or when some terrain source layer's data changes.\n * During the draw call of any terrainDrawMode:offset layers,\n * the vertex shader reads from this framebuffer to retrieve its z offset.\n */\nexport class HeightMapBuilder {\n  /** Viewport used to draw into the texture */\n  renderViewport: Viewport | null = null;\n  /** Bounds of the height map texture, in cartesian space */\n  bounds: Bounds | null = null;\n\n  protected fbo?: Framebuffer;\n  protected gl: WebGLRenderingContext;\n  /** Last rendered layers */\n  private layers: Layer[] = [];\n  /** Last layer.getBounds() */\n  private layersBounds: ([number[], number[]] | null)[] = [];\n  /** The union of layersBounds in cartesian space */\n  private layersBoundsCommon: Bounds | null = null;\n  private lastViewport: Viewport | null = null;\n\n  static isSupported(gl: WebGLRenderingContext): boolean {\n    return Framebuffer.isSupported(gl, {colorBufferFloat: true});\n  }\n\n  constructor(gl: WebGLRenderingContext) {\n    this.gl = gl;\n  }\n\n  /** Returns the height map framebuffer for read/write access.\n   * Returns null when the texture is invalid.\n   */\n  getRenderFramebuffer(): Framebuffer | null {\n    if (!this.renderViewport) {\n      return null;\n    }\n    if (!this.fbo) {\n      this.fbo = createRenderTarget(this.gl, {id: 'height-map', float: true});\n    }\n    return this.fbo;\n  }\n\n  /** Called every render cycle to check if the framebuffer needs update */\n  shouldUpdate({layers, viewport}: {layers: Layer[]; viewport: Viewport}): boolean {\n    const layersChanged =\n      layers.length !== this.layers.length ||\n      layers.some(\n        (layer, i) =>\n          // Layer instance is updated\n          // Layer props might have changed\n          // Undetermined props could have an effect on the output geometry of a terrain source,\n          // for example getElevation+updateTriggers, elevationScale, modelMatrix\n          layer !== this.layers[i] ||\n          // Some prop is in transition\n          layer.props.transitions ||\n          // Layer's geometry bounds have changed\n          layer.getBounds() !== this.layersBounds[i]\n      );\n\n    if (layersChanged) {\n      // Recalculate cached bounds\n      this.layers = layers;\n      this.layersBounds = layers.map(layer => layer.getBounds());\n      this.layersBoundsCommon = joinLayerBounds(layers, viewport);\n    }\n\n    const viewportChanged = !this.lastViewport || !viewport.equals(this.lastViewport);\n\n    if (!this.layersBoundsCommon) {\n      this.renderViewport = null;\n    } else if (layersChanged || viewportChanged) {\n      const bounds = getRenderBounds(this.layersBoundsCommon, viewport);\n      if (bounds[2] <= bounds[0] || bounds[3] <= bounds[1]) {\n        this.renderViewport = null;\n        return false;\n      }\n\n      this.bounds = bounds;\n      this.lastViewport = viewport;\n\n      const scale = viewport.scale;\n      const pixelWidth = (bounds[2] - bounds[0]) * scale;\n      const pixelHeight = (bounds[3] - bounds[1]) * scale;\n\n      this.renderViewport =\n        pixelWidth > 0 || pixelHeight > 0\n          ? makeViewport({\n              // It's not important whether the geometry is visible in this viewport, because\n              // vertices will not use the standard project_to_clipspace in the DRAW_TO_HEIGHT_MAP shader\n              // However the viewport must have the same center and zoom as the screen viewport\n              // So that projection uniforms used for calculating z are the same\n              bounds: [\n                viewport.center[0] - 1,\n                viewport.center[1] - 1,\n                viewport.center[0] + 1,\n                viewport.center[1] + 1\n              ],\n              zoom: viewport.zoom,\n              width: Math.min(pixelWidth, MAP_MAX_SIZE),\n              height: Math.min(pixelHeight, MAP_MAX_SIZE),\n              viewport\n            })\n          : null;\n      return true;\n    }\n    return false;\n  }\n\n  delete() {\n    if (this.fbo) {\n      this.fbo.color.delete();\n      this.fbo.delete();\n    }\n  }\n}\n", "import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {log} from '@deck.gl/core';\n\nimport {terrainModule, TerrainModuleSettings} from './shader-module';\nimport {TerrainCover} from './terrain-cover';\nimport {TerrainPass} from './terrain-pass';\nimport {TerrainPickingPass, TerrainPickingPassRenderOptions} from './terrain-picking-pass';\nimport {HeightMapBuilder} from './height-map-builder';\n\nimport type {Effect, PreRenderOptions, Layer, Viewport} from '@deck.gl/core';\n\n/** Class to manage terrain effect */\nexport class TerrainEffect implements Effect {\n  id = 'terrain-effect';\n  props = null;\n  useInPicking = true;\n\n  /** true if picking in the current pass */\n  private isPicking: boolean = false;\n  /** true if should use in the current pass */\n  private isDrapingEnabled: boolean = false;\n  /** An empty texture as placeholder */\n  private dummyHeightMap: Texture2D;\n  /** A texture encoding the ground elevation, updated once per redraw. Used by layers with offset mode */\n  private heightMap?: HeightMapBuilder;\n  private terrainPass!: TerrainPass;\n  private terrainPickingPass!: TerrainPickingPass;\n  /** One texture for each primitive terrain layer, into which the draped layers render */\n  private terrainCovers: Map<string, TerrainCover> = new Map();\n\n  initialize(gl: WebGLRenderingContext) {\n    this.dummyHeightMap = new Texture2D(gl, {\n      width: 1,\n      height: 1,\n      data: new Uint8Array([0, 0, 0, 0])\n    });\n    this.terrainPass = new TerrainPass(gl, {id: 'terrain'});\n    this.terrainPickingPass = new TerrainPickingPass(gl, {id: 'terrain-picking'});\n\n    if (HeightMapBuilder.isSupported(gl)) {\n      this.heightMap = new HeightMapBuilder(gl);\n    } else {\n      log.warn('Terrain offset mode is not supported by this browser')();\n    }\n\n    ProgramManager.getDefaultProgramManager(gl).addDefaultModule(terrainModule);\n  }\n\n  preRender(gl: WebGLRenderingContext, opts: PreRenderOptions): void {\n    if (!this.dummyHeightMap) {\n      // First time this effect is in use, initialize resources and register the shader module\n      this.initialize(gl);\n      for (const layer of opts.layers) {\n        // Force the terrain layer (and its descendents) to rebuild their models with the new shader\n        if (layer.props.operation.includes('terrain')) {\n          layer.setChangeFlags({extensionsChanged: true});\n        }\n      }\n    }\n\n    // @ts-expect-error pickZ only defined in picking pass\n    if (opts.pickZ) {\n      // Do not update if picking attributes\n      this.isDrapingEnabled = false;\n      return;\n    }\n\n    const {viewports, isPicking = false} = opts;\n    this.isPicking = isPicking;\n    this.isDrapingEnabled = true;\n\n    // TODO - support multiple views?\n    const viewport = viewports[0];\n    const layers = (isPicking ? this.terrainPickingPass : this.terrainPass).getRenderableLayers(\n      viewport,\n      opts as TerrainPickingPassRenderOptions\n    );\n\n    const terrainLayers = layers.filter(l => l.props.operation.includes('terrain'));\n    if (terrainLayers.length === 0) {\n      return;\n    }\n\n    if (!isPicking) {\n      const offsetLayers = layers.filter(l => l.state.terrainDrawMode === 'offset');\n      if (offsetLayers.length > 0) {\n        this._updateHeightMap(terrainLayers, viewport, opts);\n      }\n    }\n\n    const drapeLayers = layers.filter(l => l.state.terrainDrawMode === 'drape');\n    this._updateTerrainCovers(terrainLayers, drapeLayers, viewport, opts);\n  }\n\n  getModuleParameters(layer: Layer): TerrainModuleSettings {\n    const {terrainDrawMode} = layer.state;\n\n    return {\n      heightMap: this.heightMap?.getRenderFramebuffer(),\n      heightMapBounds: this.heightMap?.bounds,\n      dummyHeightMap: this.dummyHeightMap,\n      terrainCover: this.isDrapingEnabled ? this.terrainCovers.get(layer.id) : null,\n      useTerrainHeightMap: terrainDrawMode === 'offset',\n      terrainSkipRender: terrainDrawMode === 'drape' || !layer.props.operation.includes('draw')\n    };\n  }\n\n  cleanup(): void {\n    if (this.dummyHeightMap) {\n      this.dummyHeightMap.delete();\n      this.dummyHeightMap = undefined;\n    }\n\n    if (this.heightMap) {\n      this.heightMap.delete();\n      this.heightMap = undefined;\n    }\n\n    for (const terrainCover of this.terrainCovers.values()) {\n      terrainCover.delete();\n    }\n    this.terrainCovers.clear();\n  }\n\n  private _updateHeightMap(terrainLayers: Layer[], viewport: Viewport, opts: PreRenderOptions) {\n    if (!this.heightMap) {\n      // Not supported\n      return;\n    }\n\n    const shouldUpdate = this.heightMap.shouldUpdate({layers: terrainLayers, viewport});\n    if (!shouldUpdate) {\n      return;\n    }\n\n    this.terrainPass.renderHeightMap(this.heightMap, {\n      ...opts,\n      layers: terrainLayers,\n      moduleParameters: {\n        heightMapBounds: this.heightMap.bounds,\n        dummyHeightMap: this.dummyHeightMap,\n        devicePixelRatio: 1,\n        drawToTerrainHeightMap: true\n      }\n    });\n  }\n\n  private _updateTerrainCovers(\n    terrainLayers: Layer[],\n    drapeLayers: Layer[],\n    viewport: Viewport,\n    opts: PreRenderOptions\n  ) {\n    // Mark a terrain cover as dirty if one of the drape layers needs redraw\n    const layerNeedsRedraw: Record<string, boolean> = {};\n    for (const layer of drapeLayers) {\n      if (layer.state.terrainCoverNeedsRedraw) {\n        layerNeedsRedraw[layer.id] = true;\n        layer.state.terrainCoverNeedsRedraw = false;\n      }\n    }\n    for (const terrainCover of this.terrainCovers.values()) {\n      terrainCover.isDirty = terrainCover.isDirty || terrainCover.shouldUpdate({layerNeedsRedraw});\n    }\n\n    for (const layer of terrainLayers) {\n      this._updateTerrainCover(layer, drapeLayers, viewport, opts);\n    }\n\n    if (!this.isPicking) {\n      this._pruneTerrainCovers();\n    }\n  }\n\n  private _updateTerrainCover(\n    terrainLayer: Layer,\n    drapeLayers: Layer[],\n    viewport: Viewport,\n    opts: PreRenderOptions\n  ) {\n    const renderPass = this.isPicking ? this.terrainPickingPass : this.terrainPass;\n    let terrainCover = this.terrainCovers.get(terrainLayer.id);\n    if (!terrainCover) {\n      terrainCover = new TerrainCover(terrainLayer);\n      this.terrainCovers.set(terrainLayer.id, terrainCover);\n    }\n    try {\n      const isDirty = terrainCover.shouldUpdate({\n        targetLayer: terrainLayer,\n        viewport,\n        layers: drapeLayers\n      });\n      if (this.isPicking || terrainCover.isDirty || isDirty) {\n        renderPass.renderTerrainCover(terrainCover, {\n          ...opts,\n          layers: drapeLayers,\n          moduleParameters: {\n            dummyHeightMap: this.dummyHeightMap,\n            terrainSkipRender: false,\n            devicePixelRatio: 1\n          }\n        });\n        terrainCover.isDirty = false;\n      }\n    } catch (err) {\n      terrainLayer.raiseError(err as Error, `Error rendering terrain cover ${terrainCover.id}`);\n    }\n  }\n\n  private _pruneTerrainCovers() {\n    /** Prune the cache, remove textures for layers that have been removed */\n    const idsToRemove: string[] = [];\n    for (const [id, terrainCover] of this.terrainCovers) {\n      if (!terrainCover.isActive) {\n        idsToRemove.push(id);\n      }\n    }\n    for (const id of idsToRemove) {\n      this.terrainCovers.delete(id);\n    }\n  }\n}\n", "import {LayerExtension, UpdateParameters} from '@deck.gl/core';\nimport {TerrainEffect} from './terrain-effect';\nimport {terrainModule} from './shader-module';\n\nimport type {Layer} from '@deck.gl/core';\n\nconst defaultProps = {\n  terrainDrawMode: undefined\n};\n\nexport type TerrainExtensionProps = {\n  /**\n   * controls whether an object is drawn over the terrain surface by its anchor (usually defined by an accessor called `getPosition`, e.g. icon, scatterplot) or by its geometry (e.g. path, polygon).\n   * If not specified, it is automatically deduced from the layer.\n   */\n  terrainDrawMode?: 'offset' | 'drape';\n};\n\ntype TerrainExtensionState = {\n  /** Resolved fitting mode */\n  terrainDrawMode: 'offset' | 'drape';\n  /** Set when a layer is flagged as needs redraw */\n  terrainCoverNeedsRedraw: boolean;\n};\n\n/** Allows layers to show/hide objects by a geofence. */\nexport default class TerrainExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'TerrainExtension';\n\n  getShaders(this: Layer<TerrainExtensionProps>): any {\n    return {\n      modules: [terrainModule]\n    };\n  }\n\n  initializeState(this: Layer<TerrainExtensionProps>) {\n    this.context.deck?._addDefaultEffect(new TerrainEffect());\n  }\n\n  updateState(\n    this: Layer<TerrainExtensionProps>,\n    params: UpdateParameters<Layer<TerrainExtensionProps>>\n  ) {\n    const {props, oldProps} = params;\n\n    if (\n      this.state.terrainDrawMode &&\n      props.terrainDrawMode === oldProps.terrainDrawMode &&\n      // @ts-ignore `extruded` may not exist in props\n      props.extruded === oldProps.extruded\n    ) {\n      return;\n    }\n\n    let {terrainDrawMode} = props;\n    if (!terrainDrawMode) {\n      // props.extruded is used as an indication that the layer is 2.5D\n      // @ts-ignore `extruded` may not exist in props\n      const is3d = this.props.extruded as boolean;\n      const attributes = this.getAttributeManager()?.attributes;\n      const hasAnchor = attributes && 'instancePositions' in attributes;\n      terrainDrawMode = is3d || hasAnchor ? 'offset' : 'drape';\n    }\n    this.setState({terrainDrawMode});\n  }\n\n  onNeedsRedraw(this: Layer<{}>): void {\n    const state = this.state as TerrainExtensionState;\n    if (state.terrainDrawMode === 'drape') {\n      state.terrainCoverNeedsRedraw = true;\n    }\n  }\n}\n", "/* eslint-disable indent */\nimport {earcut} from '@math.gl/polygon';\nimport type {\n  BinaryAttribute,\n  BinaryFeatures,\n  BinaryPolygonFeatures,\n  FlatFeature,\n  FlatPoint,\n  FlatLineString,\n  FlatPolygon,\n  GeojsonGeometryInfo,\n  TypedArray\n} from '@loaders.gl/schema';\nimport {PropArrayConstructor, Lines, Points, Polygons} from './flat-geojson-to-binary-types';\n\n/**\n * Convert binary features to flat binary arrays. Similar to\n * `geojsonToBinary` helper function, except that it expects\n * a binary representation of the feature data, which enables\n * 2X-3X speed increase in parse speed, compared to using\n * geoJSON. See `binary-vector-tile/VectorTileFeature` for\n * data format detais\n *\n * @param features\n * @param geometryInfo\n * @param options\n * @returns filled arrays\n */\nexport function flatGeojsonToBinary(\n  features: FlatFeature[],\n  geometryInfo: GeojsonGeometryInfo,\n  options?: FlatGeojsonToBinaryOptions\n) {\n  const propArrayTypes = extractNumericPropTypes(features);\n  const numericPropKeys = Object.keys(propArrayTypes).filter((k) => propArrayTypes[k] !== Array);\n  return fillArrays(\n    features,\n    {\n      propArrayTypes,\n      ...geometryInfo\n    },\n    {\n      numericPropKeys: (options && options.numericPropKeys) || numericPropKeys,\n      PositionDataType: options ? options.PositionDataType : Float32Array,\n      triangulate: options ? options.triangulate : true\n    }\n  );\n}\n\n/**\n * Options for `flatGeojsonToBinary`\n */\nexport type FlatGeojsonToBinaryOptions = {\n  numericPropKeys?: string[];\n  PositionDataType?: Float32ArrayConstructor | Float64ArrayConstructor;\n  triangulate?: boolean;\n};\n\nexport const TEST_EXPORTS = {\n  extractNumericPropTypes\n};\n\n/**\n * Extracts properties that are always numeric\n *\n * @param features\n * @returns object with numeric types\n */\nfunction extractNumericPropTypes(features: FlatFeature[]): {\n  [key: string]: PropArrayConstructor;\n} {\n  const propArrayTypes = {};\n  for (const feature of features) {\n    if (feature.properties) {\n      for (const key in feature.properties) {\n        // If property has not been seen before, or if property has been numeric\n        // in all previous features, check if numeric in this feature\n        // If not numeric, Array is stored to prevent rechecking in the future\n        // Additionally, detects if 64 bit precision is required\n        const val = feature.properties[key];\n        propArrayTypes[key] = deduceArrayType(val, propArrayTypes[key]);\n      }\n    }\n  }\n\n  return propArrayTypes;\n}\n\n/**\n * Fills coordinates into pre-allocated typed arrays\n *\n * @param features\n * @param geometryInfo\n * @param options\n * @returns an accessor object with value and size keys\n */\n// eslint-disable-next-line complexity\nfunction fillArrays(\n  features: FlatFeature[],\n  geometryInfo: GeojsonGeometryInfo & {\n    propArrayTypes: {[key: string]: PropArrayConstructor};\n  },\n  options: FlatGeojsonToBinaryOptions\n) {\n  const {\n    pointPositionsCount,\n    pointFeaturesCount,\n    linePositionsCount,\n    linePathsCount,\n    lineFeaturesCount,\n    polygonPositionsCount,\n    polygonObjectsCount,\n    polygonRingsCount,\n    polygonFeaturesCount,\n    propArrayTypes,\n    coordLength\n  } = geometryInfo;\n  const {numericPropKeys = [], PositionDataType = Float32Array, triangulate = true} = options;\n  const hasGlobalId = features[0] && 'id' in features[0];\n  const GlobalFeatureIdsDataType = features.length > 65535 ? Uint32Array : Uint16Array;\n  const points: Points = {\n    type: 'Point',\n    positions: new PositionDataType(pointPositionsCount * coordLength),\n    globalFeatureIds: new GlobalFeatureIdsDataType(pointPositionsCount),\n    featureIds:\n      pointFeaturesCount > 65535\n        ? new Uint32Array(pointPositionsCount)\n        : new Uint16Array(pointPositionsCount),\n    numericProps: {},\n    properties: [],\n    fields: []\n  };\n  const lines: Lines = {\n    type: 'LineString',\n    pathIndices:\n      linePositionsCount > 65535\n        ? new Uint32Array(linePathsCount + 1)\n        : new Uint16Array(linePathsCount + 1),\n    positions: new PositionDataType(linePositionsCount * coordLength),\n    globalFeatureIds: new GlobalFeatureIdsDataType(linePositionsCount),\n    featureIds:\n      lineFeaturesCount > 65535\n        ? new Uint32Array(linePositionsCount)\n        : new Uint16Array(linePositionsCount),\n    numericProps: {},\n    properties: [],\n    fields: []\n  };\n  const polygons: Polygons = {\n    type: 'Polygon',\n    polygonIndices:\n      polygonPositionsCount > 65535\n        ? new Uint32Array(polygonObjectsCount + 1)\n        : new Uint16Array(polygonObjectsCount + 1),\n    primitivePolygonIndices:\n      polygonPositionsCount > 65535\n        ? new Uint32Array(polygonRingsCount + 1)\n        : new Uint16Array(polygonRingsCount + 1),\n    positions: new PositionDataType(polygonPositionsCount * coordLength),\n    globalFeatureIds: new GlobalFeatureIdsDataType(polygonPositionsCount),\n    featureIds:\n      polygonFeaturesCount > 65535\n        ? new Uint32Array(polygonPositionsCount)\n        : new Uint16Array(polygonPositionsCount),\n    numericProps: {},\n    properties: [],\n    fields: []\n  };\n\n  if (triangulate) {\n    polygons.triangles = [];\n  }\n\n  // Instantiate numeric properties arrays; one value per vertex\n  for (const object of [points, lines, polygons]) {\n    for (const propName of numericPropKeys) {\n      // If property has been numeric in all previous features in which the property existed, check\n      // if numeric in this feature\n      const T = propArrayTypes[propName];\n      object.numericProps[propName] = new T(object.positions.length / coordLength) as TypedArray;\n    }\n  }\n\n  // Set last element of path/polygon indices as positions length\n  lines.pathIndices[linePathsCount] = linePositionsCount;\n  polygons.polygonIndices[polygonObjectsCount] = polygonPositionsCount;\n  polygons.primitivePolygonIndices[polygonRingsCount] = polygonPositionsCount;\n\n  const indexMap = {\n    pointPosition: 0,\n    pointFeature: 0,\n    linePosition: 0,\n    linePath: 0,\n    lineFeature: 0,\n    polygonPosition: 0,\n    polygonObject: 0,\n    polygonRing: 0,\n    polygonFeature: 0,\n    feature: 0\n  };\n\n  for (const feature of features) {\n    const geometry = feature.geometry;\n    const properties = feature.properties || {};\n\n    switch (geometry.type) {\n      case 'Point':\n        handlePoint(geometry, points, indexMap, coordLength, properties);\n        points.properties.push(keepStringProperties(properties, numericPropKeys));\n        if (hasGlobalId) {\n          points.fields.push({id: feature.id});\n        }\n        indexMap.pointFeature++;\n        break;\n      case 'LineString':\n        handleLineString(geometry, lines, indexMap, coordLength, properties);\n        lines.properties.push(keepStringProperties(properties, numericPropKeys));\n        if (hasGlobalId) {\n          lines.fields.push({id: feature.id});\n        }\n        indexMap.lineFeature++;\n        break;\n      case 'Polygon':\n        handlePolygon(geometry, polygons, indexMap, coordLength, properties);\n        polygons.properties.push(keepStringProperties(properties, numericPropKeys));\n        if (hasGlobalId) {\n          polygons.fields.push({id: feature.id});\n        }\n        indexMap.polygonFeature++;\n        break;\n      default:\n        throw new Error('Invalid geometry type');\n    }\n\n    indexMap.feature++;\n  }\n\n  // Wrap each array in an accessor object with value and size keys\n  return makeAccessorObjects(points, lines, polygons, coordLength);\n}\n\n/**\n * Fills (Multi)Point coordinates into points object of arrays\n *\n * @param geometry\n * @param points\n * @param indexMap\n * @param coordLength\n * @param properties\n */\nfunction handlePoint(\n  geometry: FlatPoint,\n  points: Points,\n  indexMap: {\n    pointPosition: number;\n    pointFeature: number;\n    linePosition?: number;\n    linePath?: number;\n    lineFeature?: number;\n    polygonPosition?: number;\n    polygonObject?: number;\n    polygonRing?: number;\n    polygonFeature?: number;\n    feature: number;\n  },\n  coordLength: number,\n  properties: {[x: string]: string | number | boolean | null}\n): void {\n  points.positions.set(geometry.data, indexMap.pointPosition * coordLength);\n\n  const nPositions = geometry.data.length / coordLength;\n  fillNumericProperties(points, properties, indexMap.pointPosition, nPositions);\n  points.globalFeatureIds.fill(\n    indexMap.feature,\n    indexMap.pointPosition,\n    indexMap.pointPosition + nPositions\n  );\n  points.featureIds.fill(\n    indexMap.pointFeature,\n    indexMap.pointPosition,\n    indexMap.pointPosition + nPositions\n  );\n\n  indexMap.pointPosition += nPositions;\n}\n\n/**\n * Fills (Multi)LineString coordinates into lines object of arrays\n *\n * @param geometry\n * @param lines\n * @param indexMap\n * @param coordLength\n * @param properties\n */\nfunction handleLineString(\n  geometry: FlatLineString,\n  lines: Lines,\n  indexMap: {\n    pointPosition?: number;\n    pointFeature?: number;\n    linePosition: number;\n    linePath: number;\n    lineFeature: number;\n    polygonPosition?: number;\n    polygonObject?: number;\n    polygonRing?: number;\n    polygonFeature?: number;\n    feature: number;\n  },\n  coordLength: number,\n  properties: {[x: string]: string | number | boolean | null}\n): void {\n  lines.positions.set(geometry.data, indexMap.linePosition * coordLength);\n\n  const nPositions = geometry.data.length / coordLength;\n  fillNumericProperties(lines, properties, indexMap.linePosition, nPositions);\n\n  lines.globalFeatureIds.fill(\n    indexMap.feature,\n    indexMap.linePosition,\n    indexMap.linePosition + nPositions\n  );\n  lines.featureIds.fill(\n    indexMap.lineFeature,\n    indexMap.linePosition,\n    indexMap.linePosition + nPositions\n  );\n\n  for (let i = 0, il = geometry.indices.length; i < il; ++i) {\n    // Extract range of data we are working with, defined by start\n    // and end indices (these index into the geometry.data array)\n    const start = geometry.indices[i];\n    const end =\n      i === il - 1\n        ? geometry.data.length // last line, so read to end of data\n        : geometry.indices[i + 1]; // start index for next line\n\n    lines.pathIndices[indexMap.linePath++] = indexMap.linePosition;\n    indexMap.linePosition += (end - start) / coordLength;\n  }\n}\n\n/**\n * Fills (Multi)Polygon coordinates into polygons object of arrays\n *\n * @param geometry\n * @param polygons\n * @param indexMap\n * @param coordLength\n * @param properties\n */\nfunction handlePolygon(\n  geometry: FlatPolygon,\n  polygons: Polygons,\n  indexMap: {\n    pointPosition?: number;\n    pointFeature?: number;\n    linePosition?: number;\n    linePath?: number;\n    lineFeature?: number;\n    polygonPosition: number;\n    polygonObject: number;\n    polygonRing: number;\n    polygonFeature: number;\n    feature: number;\n  },\n  coordLength: number,\n  properties: {[x: string]: string | number | boolean | null}\n): void {\n  polygons.positions.set(geometry.data, indexMap.polygonPosition * coordLength);\n\n  const nPositions = geometry.data.length / coordLength;\n  fillNumericProperties(polygons, properties, indexMap.polygonPosition, nPositions);\n  polygons.globalFeatureIds.fill(\n    indexMap.feature,\n    indexMap.polygonPosition,\n    indexMap.polygonPosition + nPositions\n  );\n  polygons.featureIds.fill(\n    indexMap.polygonFeature,\n    indexMap.polygonPosition,\n    indexMap.polygonPosition + nPositions\n  );\n\n  // Unlike Point & LineString geometry.indices is a 2D array\n  for (let l = 0, ll = geometry.indices.length; l < ll; ++l) {\n    const startPosition = indexMap.polygonPosition;\n    polygons.polygonIndices[indexMap.polygonObject++] = startPosition;\n\n    const areas = geometry.areas[l];\n    const indices = geometry.indices[l];\n    const nextIndices = geometry.indices[l + 1];\n\n    for (let i = 0, il = indices.length; i < il; ++i) {\n      const start = indices[i];\n      const end =\n        i === il - 1\n          ? // last line, so either read to:\n            nextIndices === undefined\n            ? geometry.data.length // end of data (no next indices)\n            : nextIndices[0] // start of first line in nextIndices\n          : indices[i + 1]; // start index for next line\n\n      polygons.primitivePolygonIndices[indexMap.polygonRing++] = indexMap.polygonPosition;\n      indexMap.polygonPosition += (end - start) / coordLength;\n    }\n\n    const endPosition = indexMap.polygonPosition;\n    triangulatePolygon(polygons, areas, indices, {startPosition, endPosition, coordLength});\n  }\n}\n\n/**\n * Triangulate polygon using earcut\n *\n * @param polygons\n * @param areas\n * @param indices\n * @param param3\n */\nfunction triangulatePolygon(\n  polygons: Polygons,\n  areas: number[],\n  indices: number[],\n  {\n    startPosition,\n    endPosition,\n    coordLength\n  }: {startPosition: number; endPosition: number; coordLength: number}\n): void {\n  if (!polygons.triangles) {\n    return;\n  }\n\n  const start = startPosition * coordLength;\n  const end = endPosition * coordLength;\n\n  // Extract positions and holes for just this polygon\n  const polygonPositions = polygons.positions.subarray(start, end);\n\n  // Holes are referenced relative to outer polygon\n  const offset = indices[0];\n  const holes = indices.slice(1).map((n: number) => (n - offset) / coordLength);\n\n  // Compute triangulation\n  // @ts-expect-error TODO can earcut handle binary arrays? Add tests?\n  const triangles = earcut(polygonPositions, holes, coordLength, areas);\n\n  // Indices returned by triangulation are relative to start\n  // of polygon, so we need to offset\n  for (let t = 0, tl = triangles.length; t < tl; ++t) {\n    polygons.triangles.push(startPosition + triangles[t]);\n  }\n}\n\n/**\n * Wraps an object containing array into accessors\n *\n * @param obj\n * @param size\n */\nfunction wrapProps(\n  obj: {[key: string]: TypedArray},\n  size: number\n): {[key: string]: BinaryAttribute} {\n  const returnObj = {};\n  for (const key in obj) {\n    returnObj[key] = {value: obj[key], size};\n  }\n  return returnObj;\n}\n\n/**\n * Wrap each array in an accessor object with value and size keys\n *\n * @param points\n * @param lines\n * @param polygons\n * @param coordLength\n * @returns object\n */\nfunction makeAccessorObjects(\n  points: Points,\n  lines: Lines,\n  polygons: Polygons,\n  coordLength: number\n): BinaryFeatures {\n  const binaryFeatures = {\n    points: {\n      ...points,\n      positions: {value: points.positions, size: coordLength},\n      globalFeatureIds: {value: points.globalFeatureIds, size: 1},\n      featureIds: {value: points.featureIds, size: 1},\n      numericProps: wrapProps(points.numericProps, 1)\n    },\n    lines: {\n      ...lines,\n      positions: {value: lines.positions, size: coordLength},\n      pathIndices: {value: lines.pathIndices, size: 1},\n      globalFeatureIds: {value: lines.globalFeatureIds, size: 1},\n      featureIds: {value: lines.featureIds, size: 1},\n      numericProps: wrapProps(lines.numericProps, 1)\n    },\n    polygons: {\n      ...polygons,\n      positions: {value: polygons.positions, size: coordLength},\n      polygonIndices: {value: polygons.polygonIndices, size: 1},\n      primitivePolygonIndices: {value: polygons.primitivePolygonIndices, size: 1},\n      globalFeatureIds: {value: polygons.globalFeatureIds, size: 1},\n      featureIds: {value: polygons.featureIds, size: 1},\n      numericProps: wrapProps(polygons.numericProps, 1)\n    } as BinaryPolygonFeatures\n  };\n\n  if (polygons.triangles) {\n    binaryFeatures.polygons.triangles = {value: new Uint32Array(polygons.triangles), size: 1};\n  }\n\n  return binaryFeatures;\n}\n\n/**\n * Add numeric properties to object\n *\n * @param object\n * @param properties\n * @param index\n * @param length\n */\nfunction fillNumericProperties(\n  object: Points | Lines | Polygons,\n  properties: {[x: string]: string | number | boolean | null},\n  index: number,\n  length: number\n): void {\n  for (const numericPropName in object.numericProps) {\n    if (numericPropName in properties) {\n      const value = properties[numericPropName] as number;\n      object.numericProps[numericPropName].fill(value, index, index + length);\n    }\n  }\n}\n\n/**\n * Keep string properties in object\n *\n * @param properties\n * @param numericKeys\n * @returns object\n */\nfunction keepStringProperties(\n  properties: {[x: string]: string | number | boolean | null},\n  numericKeys: string[]\n) {\n  const props = {};\n  for (const key in properties) {\n    if (!numericKeys.includes(key)) {\n      props[key] = properties[key];\n    }\n  }\n  return props;\n}\n\n/**\n *\n * Deduce correct array constructor to use for a given value\n *\n * @param x value to test\n * @param constructor previous constructor deduced\n * @returns PropArrayConstructor\n */\nfunction deduceArrayType(x: any, constructor: PropArrayConstructor): PropArrayConstructor {\n  if (constructor === Array || !Number.isFinite(x)) {\n    return Array;\n  }\n\n  // If this or previous value required 64bits use Float64Array\n  return constructor === Float64Array || Math.fround(x) !== x ? Float64Array : Float32Array;\n}\n", "import type {\n  BinaryGeometry,\n  BinaryFeatures,\n  BinaryGeometryType,\n  BinaryPointFeatures,\n  BinaryLineFeatures,\n  BinaryPolygonFeatures,\n  BinaryAttribute\n} from '@loaders.gl/schema';\nimport type {Feature, Geometry, Position, GeoJsonProperties} from '@loaders.gl/schema';\nimport type {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n} from '@loaders.gl/schema';\n\n// Note:L We do not handle GeometryCollection, define a limited Geometry type that always has coordinates.\n// type FeatureGeometry = Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon;\n\ntype BinaryToGeoJsonOptions = {\n  type?: BinaryGeometryType;\n  globalFeatureId?: number;\n};\n\n/**\n * Convert binary geometry representation to GeoJSON\n * @param data   geometry data in binary representation\n * @param options\n * @param options.type  Input data type: Point, LineString, or Polygon\n * @param options.featureId  Global feature id. If specified, only a single feature is extracted\n * @return GeoJSON objects\n */\nexport function binaryToGeojson(\n  data: BinaryFeatures,\n  options?: BinaryToGeoJsonOptions\n): Feature[] | Feature {\n  const globalFeatureId = options?.globalFeatureId;\n  if (globalFeatureId !== undefined) {\n    return getSingleFeature(data, globalFeatureId);\n  }\n  return parseFeatures(data, options?.type);\n}\n\n/** @deprecated use `binaryToGeojson` or `binaryToGeometry` instead */\nexport function binaryToGeoJson(\n  data: BinaryGeometry | BinaryFeatures,\n  type?: BinaryGeometryType,\n  format: 'feature' | 'geometry' = 'feature'\n): Geometry | Feature[] {\n  switch (format) {\n    case 'feature':\n      return parseFeatures(data as BinaryFeatures, type);\n    case 'geometry':\n      return binaryToGeometry(data as BinaryGeometry);\n    default:\n      throw new Error(format);\n  }\n}\n\n/**\n * Return a single feature from a binary geometry representation as GeoJSON\n * @param data   geometry data in binary representation\n * @return GeoJSON feature\n */\nfunction getSingleFeature(data: BinaryFeatures, globalFeatureId: number): Feature {\n  const dataArray = normalizeInput(data);\n  for (const data of dataArray) {\n    let lastIndex = 0;\n    let lastValue = data.featureIds.value[0];\n\n    // Scan through data until we find matching feature\n    for (let i = 0; i < data.featureIds.value.length; i++) {\n      const currValue = data.featureIds.value[i];\n      if (currValue === lastValue) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n        return parseFeature(data, lastIndex, i);\n      }\n      lastIndex = i;\n      lastValue = currValue;\n    }\n\n    if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n      return parseFeature(data, lastIndex, data.featureIds.value.length);\n    }\n  }\n\n  throw new Error(`featureId:${globalFeatureId} not found`);\n}\n\nfunction parseFeatures(data: BinaryFeatures, type?: BinaryGeometryType): Feature[] {\n  const dataArray = normalizeInput(data, type);\n  return parseFeatureCollection(dataArray);\n}\n\n/** Parse input binary data and return a valid GeoJSON geometry object */\nexport function binaryToGeometry(\n  data: BinaryGeometry,\n  startIndex?: number,\n  endIndex?: number\n): Geometry {\n  switch (data.type) {\n    case 'Point':\n      return pointToGeoJson(data, startIndex, endIndex);\n    case 'LineString':\n      return lineStringToGeoJson(data, startIndex, endIndex);\n    case 'Polygon':\n      return polygonToGeoJson(data, startIndex, endIndex);\n    default:\n      const unexpectedInput: never = data;\n      throw new Error(`Unsupported geometry type: ${(unexpectedInput as any)?.type}`);\n  }\n}\n\ntype BinaryFeature = BinaryPointFeatures | BinaryLineFeatures | BinaryPolygonFeatures;\ntype BinaryFeaturesArray = BinaryFeature[];\n\n// Normalize features\n// Return an array of data objects, each of which have a type key\nfunction normalizeInput(data: BinaryFeatures, type?: BinaryGeometryType): BinaryFeaturesArray {\n  const isHeterogeneousType = Boolean(data.points || data.lines || data.polygons);\n\n  if (!isHeterogeneousType) {\n    // @ts-expect-error This is a legacy check which allowed `data` to be an instance of the values\n    // here. Aka the new data.points, data.lines, or data.polygons.\n    data.type = type || parseType(data);\n    return [data] as BinaryFeaturesArray;\n  }\n\n  const features: BinaryFeaturesArray = [];\n  if (data.points) {\n    data.points.type = 'Point';\n    features.push(data.points);\n  }\n  if (data.lines) {\n    data.lines.type = 'LineString';\n    features.push(data.lines);\n  }\n  if (data.polygons) {\n    data.polygons.type = 'Polygon';\n    features.push(data.polygons);\n  }\n\n  return features;\n}\n\n/** Parse input binary data and return an array of GeoJSON Features */\nfunction parseFeatureCollection(dataArray): Feature[] {\n  const features: Feature[] = [];\n  for (const data of dataArray) {\n    if (data.featureIds.value.length === 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    let lastIndex = 0;\n    let lastValue = data.featureIds.value[0];\n\n    // Need to deduce start, end indices of each feature\n    for (let i = 0; i < data.featureIds.value.length; i++) {\n      const currValue = data.featureIds.value[i];\n      if (currValue === lastValue) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      features.push(parseFeature(data, lastIndex, i));\n      lastIndex = i;\n      lastValue = currValue;\n    }\n\n    // Last feature\n    features.push(parseFeature(data, lastIndex, data.featureIds.value.length));\n  }\n  return features;\n}\n\n/** Parse input binary data and return a single GeoJSON Feature */\nfunction parseFeature(data, startIndex?: number, endIndex?: number): Feature {\n  const geometry = binaryToGeometry(data, startIndex, endIndex);\n  const properties = parseProperties(data, startIndex, endIndex);\n  const fields = parseFields(data, startIndex, endIndex);\n  return {type: 'Feature', geometry, properties, ...fields};\n}\n\n/** Parse input binary data and return an object of fields */\nfunction parseFields(data, startIndex: number = 0, endIndex?: number): GeoJsonProperties {\n  return data.fields && data.fields[data.featureIds.value[startIndex]];\n}\n\n/** Parse input binary data and return an object of properties */\nfunction parseProperties(data, startIndex: number = 0, endIndex?: number): GeoJsonProperties {\n  const properties = Object.assign({}, data.properties[data.featureIds.value[startIndex]]);\n  for (const key in data.numericProps) {\n    properties[key] = data.numericProps[key].value[startIndex];\n  }\n  return properties;\n}\n\n/** Parse binary data of type Polygon */\nfunction polygonToGeoJson(\n  data,\n  startIndex: number = -Infinity,\n  endIndex: number = Infinity\n): Polygon | MultiPolygon {\n  const {positions} = data;\n  const polygonIndices = data.polygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n  const primitivePolygonIndices = data.primitivePolygonIndices.value.filter(\n    (x) => x >= startIndex && x <= endIndex\n  );\n  const multi = polygonIndices.length > 2;\n\n  // Polygon\n  if (!multi) {\n    const coordinates: Position[][] = [];\n    for (let i = 0; i < primitivePolygonIndices.length - 1; i++) {\n      const startRingIndex = primitivePolygonIndices[i];\n      const endRingIndex = primitivePolygonIndices[i + 1];\n      const ringCoordinates = ringToGeoJson(positions, startRingIndex, endRingIndex);\n      coordinates.push(ringCoordinates);\n    }\n\n    return {type: 'Polygon', coordinates};\n  }\n\n  // MultiPolygon\n  const coordinates: Position[][][] = [];\n  for (let i = 0; i < polygonIndices.length - 1; i++) {\n    const startPolygonIndex = polygonIndices[i];\n    const endPolygonIndex = polygonIndices[i + 1];\n    const polygonCoordinates = polygonToGeoJson(\n      data,\n      startPolygonIndex,\n      endPolygonIndex\n    ).coordinates;\n    coordinates.push(polygonCoordinates as Position[][]);\n  }\n\n  return {type: 'MultiPolygon', coordinates};\n}\n\n/** Parse binary data of type LineString */\nfunction lineStringToGeoJson(\n  data,\n  startIndex: number = -Infinity,\n  endIndex: number = Infinity\n): LineString | MultiLineString {\n  const {positions} = data;\n  const pathIndices = data.pathIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n  const multi = pathIndices.length > 2;\n\n  if (!multi) {\n    const coordinates = ringToGeoJson(positions, pathIndices[0], pathIndices[1]);\n    return {type: 'LineString', coordinates};\n  }\n\n  const coordinates: Position[][] = [];\n  for (let i = 0; i < pathIndices.length - 1; i++) {\n    const ringCoordinates = ringToGeoJson(positions, pathIndices[i], pathIndices[i + 1]);\n    coordinates.push(ringCoordinates);\n  }\n\n  return {type: 'MultiLineString', coordinates};\n}\n\n/** Parse binary data of type Point */\nfunction pointToGeoJson(data, startIndex, endIndex): Point | MultiPoint {\n  const {positions} = data;\n  const coordinates = ringToGeoJson(positions, startIndex, endIndex);\n  const multi = coordinates.length > 1;\n\n  if (multi) {\n    return {type: 'MultiPoint', coordinates};\n  }\n\n  return {type: 'Point', coordinates: coordinates[0]};\n}\n\n/**\n * Parse a linear ring of positions to a GeoJSON linear ring\n *\n * @param positions Positions TypedArray\n * @param startIndex Start index to include in ring\n * @param endIndex End index to include in ring\n * @returns GeoJSON ring\n */\nfunction ringToGeoJson(\n  positions: BinaryAttribute,\n  startIndex?: number,\n  endIndex?: number\n): Position[] {\n  startIndex = startIndex || 0;\n  endIndex = endIndex || positions.value.length / positions.size;\n\n  const ringCoordinates: Position[] = [];\n  for (let j = startIndex; j < endIndex; j++) {\n    const coord = Array<number>();\n    for (let k = j * positions.size; k < (j + 1) * positions.size; k++) {\n      coord.push(Number(positions.value[k]));\n    }\n    ringCoordinates.push(coord);\n  }\n  return ringCoordinates;\n}\n\n// Deduce geometry type of data object\nfunction parseType(data) {\n  if (data.pathIndices) {\n    return 'LineString';\n  }\n\n  if (data.polygonIndices) {\n    return 'Polygon';\n  }\n\n  return 'Point';\n}\n", "import {flatGeojsonToBinary} from '@loaders.gl/gis';\nimport type {\n  FlatFeature,\n  Feature,\n  GeojsonGeometryInfo,\n  BinaryFeatures,\n  GeoJSONRowTable\n} from '@loaders.gl/schema';\nimport Protobuf from 'pbf';\n\nimport type {MVTMapboxCoordinates, MVTOptions, MVTLoaderOptions} from '../lib/types';\n\nimport VectorTile from './mapbox-vector-tile/vector-tile';\nimport BinaryVectorTile from './binary-vector-tile/vector-tile';\nimport VectorTileFeatureBinary from './binary-vector-tile/vector-tile-feature';\nimport VectorTileFeatureMapBox from './mapbox-vector-tile/vector-tile-feature';\n\n/**\n * Parse MVT arrayBuffer and return GeoJSON.\n *\n * @param arrayBuffer A MVT arrayBuffer\n * @param options\n * @returns A GeoJSON geometry object or a binary representation\n */\nexport default function parseMVT(arrayBuffer: ArrayBuffer, options?: MVTLoaderOptions) {\n  const mvtOptions = normalizeOptions(options);\n\n  const shape = options?.gis?.format || options?.mvt?.shape;\n  switch (shape) {\n    case 'columnar-table': // binary + some JS arrays\n      return {shape: 'columnar-table', data: parseToBinary(arrayBuffer, mvtOptions)};\n    case 'geojson-row-table': {\n      const table: GeoJSONRowTable = {\n        shape: 'geojson-row-table',\n        data: parseToGeojson(arrayBuffer, mvtOptions)\n      };\n      return table;\n    }\n    case 'geojson':\n      return parseToGeojson(arrayBuffer, mvtOptions);\n    case 'binary-geometry':\n      return parseToBinary(arrayBuffer, mvtOptions);\n    case 'binary':\n      return parseToBinary(arrayBuffer, mvtOptions);\n    default:\n      throw new Error(shape);\n  }\n}\n\nfunction parseToBinary(arrayBuffer: ArrayBuffer, options: MVTOptions): BinaryFeatures {\n  const [flatGeoJsonFeatures, geometryInfo] = parseToFlatGeoJson(arrayBuffer, options);\n\n  const binaryData = flatGeojsonToBinary(flatGeoJsonFeatures, geometryInfo);\n  // Add the original byteLength (as a reasonable approximation of the size of the binary data)\n  // TODO decide where to store extra fields like byteLength (header etc) and document\n  // @ts-ignore\n  binaryData.byteLength = arrayBuffer.byteLength;\n  return binaryData;\n}\n\nfunction parseToFlatGeoJson(\n  arrayBuffer: ArrayBuffer,\n  options: MVTOptions\n): [FlatFeature[], GeojsonGeometryInfo] {\n  const features: FlatFeature[] = [];\n  const geometryInfo: GeojsonGeometryInfo = {\n    coordLength: 2,\n    pointPositionsCount: 0,\n    pointFeaturesCount: 0,\n    linePositionsCount: 0,\n    linePathsCount: 0,\n    lineFeaturesCount: 0,\n    polygonPositionsCount: 0,\n    polygonObjectsCount: 0,\n    polygonRingsCount: 0,\n    polygonFeaturesCount: 0\n  };\n\n  if (arrayBuffer.byteLength <= 0) {\n    return [features, geometryInfo];\n  }\n\n  const tile = new BinaryVectorTile(new Protobuf(arrayBuffer));\n\n  const selectedLayers =\n    options && Array.isArray(options.layers) ? options.layers : Object.keys(tile.layers);\n\n  selectedLayers.forEach((layerName: string) => {\n    const vectorTileLayer = tile.layers[layerName];\n    if (!vectorTileLayer) {\n      return;\n    }\n\n    for (let i = 0; i < vectorTileLayer.length; i++) {\n      const vectorTileFeature = vectorTileLayer.feature(i, geometryInfo);\n      const decodedFeature = getDecodedFeatureBinary(vectorTileFeature, options, layerName);\n      features.push(decodedFeature);\n    }\n  });\n\n  return [features, geometryInfo];\n}\n\nfunction parseToGeojson(arrayBuffer: ArrayBuffer, options: MVTOptions): Feature[] {\n  if (arrayBuffer.byteLength <= 0) {\n    return [];\n  }\n\n  const features: MVTMapboxCoordinates[] = [];\n  const tile = new VectorTile(new Protobuf(arrayBuffer));\n\n  const selectedLayers = Array.isArray(options.layers) ? options.layers : Object.keys(tile.layers);\n\n  selectedLayers.forEach((layerName: string) => {\n    const vectorTileLayer = tile.layers[layerName];\n    if (!vectorTileLayer) {\n      return;\n    }\n\n    for (let i = 0; i < vectorTileLayer.length; i++) {\n      const vectorTileFeature = vectorTileLayer.feature(i);\n      const decodedFeature = getDecodedFeature(vectorTileFeature, options, layerName);\n      features.push(decodedFeature);\n    }\n  });\n\n  return features as Feature[];\n}\n\nfunction normalizeOptions(options?: MVTLoaderOptions): MVTOptions {\n  if (!options?.mvt) {\n    throw new Error('mvt options required');\n  }\n\n  // Validate\n  const wgs84Coordinates = options.mvt?.coordinates === 'wgs84';\n  const {tileIndex} = options.mvt;\n  const hasTileIndex =\n    tileIndex &&\n    Number.isFinite(tileIndex.x) &&\n    Number.isFinite(tileIndex.y) &&\n    Number.isFinite(tileIndex.z);\n\n  if (wgs84Coordinates && !hasTileIndex) {\n    throw new Error('MVT Loader: WGS84 coordinates need tileIndex property');\n  }\n\n  return options.mvt;\n}\n\n/**\n * @param feature\n * @param options\n * @returns decoded feature\n */\nfunction getDecodedFeature(\n  feature: VectorTileFeatureMapBox,\n  options: MVTOptions,\n  layerName: string\n): MVTMapboxCoordinates {\n  const decodedFeature = feature.toGeoJSON(\n    options.coordinates === 'wgs84' ? options.tileIndex : transformToLocalCoordinates\n  );\n\n  // Add layer name to GeoJSON properties\n  if (options.layerProperty) {\n    decodedFeature.properties[options.layerProperty] = layerName;\n  }\n\n  return decodedFeature;\n}\n\n/**\n * @param feature\n * @param options\n * @returns decoded binary feature\n */\nfunction getDecodedFeatureBinary(\n  feature: VectorTileFeatureBinary,\n  options: MVTOptions,\n  layerName: string\n): FlatFeature {\n  const decodedFeature = feature.toBinaryCoordinates(\n    options.coordinates === 'wgs84' ? options.tileIndex : transformToLocalCoordinatesBinary\n  );\n\n  // Add layer name to GeoJSON properties\n  if (options.layerProperty && decodedFeature.properties) {\n    decodedFeature.properties[options.layerProperty] = layerName;\n  }\n\n  return decodedFeature;\n}\n\n/**\n * @param line\n * @param feature\n */\nfunction transformToLocalCoordinates(line: number[], feature: {extent: any}): void {\n  // This function transforms local coordinates in a\n  // [0 - bufferSize, this.extent + bufferSize] range to a\n  // [0 - (bufferSize / this.extent), 1 + (bufferSize / this.extent)] range.\n  // The resulting extent would be 1.\n  const {extent} = feature;\n  for (let i = 0; i < line.length; i++) {\n    const p = line[i];\n    p[0] /= extent;\n    p[1] /= extent;\n  }\n}\n\nfunction transformToLocalCoordinatesBinary(data: number[], feature: {extent: any}) {\n  // For the binary code path, the feature data is just\n  // one big flat array, so we just divide each value\n  const {extent} = feature;\n  for (let i = 0, il = data.length; i < il; ++i) {\n    data[i] /= extent;\n  }\n}\n", "import Protobuf from 'pbf';\nimport {MVTMapboxGeometry} from '../lib/types';\nimport VectorTileFeature from '../lib/mapbox-vector-tile/vector-tile-feature';\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings\n * @returns polygons\n */\nexport function classifyRings(rings: MVTMapboxGeometry) {\n  const len = rings.length;\n\n  if (len <= 1) return [rings];\n\n  const polygons: number[][][] = [];\n  let polygon: number[][] | undefined;\n  let ccw: boolean | undefined;\n\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) continue; // eslint-disable-line no-continue\n\n    if (ccw === undefined) ccw = area < 0;\n\n    if (ccw === area < 0) {\n      if (polygon) polygons.push(polygon);\n      polygon = [rings[i]];\n    } else if (polygon) polygon.push(rings[i]);\n  }\n  if (polygon) polygons.push(polygon);\n\n  return polygons;\n}\n\n/**\n *\n * @param ring\n * @returns sum\n */\nexport function signedArea(ring: number[][]) {\n  let sum = 0;\n  for (let i = 0, j = ring.length - 1, p1: number[], p2: number[]; i < ring.length; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2[0] - p1[0]) * (p1[1] + p2[1]);\n  }\n  return sum;\n}\n\n/**\n *\n * @param tag\n * @param feature\n * @param pbf\n */\nexport function readFeature(tag: number, feature?: VectorTileFeature, pbf?: Protobuf): void {\n  if (feature && pbf) {\n    if (tag === 1) feature.id = pbf.readVarint();\n    else if (tag === 2) readTag(pbf, feature);\n    else if (tag === 3) feature.type = pbf.readVarint();\n    else if (tag === 4) feature._geometry = pbf.pos;\n  }\n}\n\n/**\n *\n * @param pbf\n * @param feature\n */\nexport function readTag(pbf: Protobuf, feature: VectorTileFeature): void {\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const key = feature._keys[pbf.readVarint()];\n    const value = feature._values[pbf.readVarint()];\n    feature.properties[key] = value;\n  }\n}\n", "// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\nimport Protobuf from 'pbf';\nimport {MVTMapboxCoordinates, MVTMapboxGeometry} from '../types';\nimport {readFeature, classifyRings} from '../../helpers/mapbox-util-functions';\n\nexport default class VectorTileFeature {\n  properties: {[x: string]: string | number | boolean | null};\n  extent: any;\n  type: number;\n  id: number | null;\n  _pbf: Protobuf;\n  _geometry: number;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  static get types() {\n    return ['Unknown', 'Point', 'LineString', 'Polygon'];\n  }\n\n  constructor(\n    pbf: Protobuf,\n    end: number,\n    extent: any,\n    keys: string[],\n    values: (string | number | boolean | null)[]\n  ) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n    this.id = null;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  loadGeometry(): MVTMapboxGeometry {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    const lines: number[][][] = [];\n    let line: number[][] | undefined;\n\n    while (pbf.pos < end) {\n      if (length <= 0) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (line) lines.push(line);\n          line = [];\n        }\n        if (line) line.push([x, y]);\n      } else if (cmd === 7) {\n        // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n        if (line) {\n          line.push(line[0].slice()); // closePolygon\n        }\n      } else {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n  }\n\n  // eslint-disable-next-line max-statements\n  bbox() {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let x1 = Infinity;\n    let x2 = -Infinity;\n    let y1 = Infinity;\n    let y2 = -Infinity;\n\n    while (pbf.pos < end) {\n      if (length <= 0) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n        if (x < x1) x1 = x;\n        if (x > x2) x2 = x;\n        if (y < y1) y1 = y;\n        if (y > y2) y2 = y;\n      } else if (cmd !== 7) {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    return [x1, y1, x2, y2];\n  }\n\n  _toGeoJSON(transform) {\n    let coords = this.loadGeometry();\n    let type = VectorTileFeature.types[this.type];\n    let i: number;\n    let j: number;\n\n    // eslint-disable-next-line default-case\n    switch (this.type) {\n      case 1:\n        const points: number[] = [];\n        for (i = 0; i < coords.length; i++) {\n          points[i] = coords[i][0];\n        }\n        coords = points;\n        transform(coords, this);\n        break;\n\n      case 2:\n        for (i = 0; i < coords.length; i++) {\n          transform(coords[i], this);\n        }\n        break;\n\n      case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n          for (j = 0; j < coords[i].length; j++) {\n            transform(coords[i][j], this);\n          }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n      coords = coords[0];\n    } else {\n      type = `Multi${type}`;\n    }\n\n    const result: MVTMapboxCoordinates = {\n      type: 'Feature',\n      geometry: {\n        type,\n        coordinates: coords\n      },\n      properties: this.properties\n    };\n\n    if (this.id !== null) {\n      result.id = this.id;\n    }\n\n    return result;\n  }\n\n  toGeoJSON(\n    options: {x: number; y: number; z: number} | ((data: number[], feature: {extent: any}) => void)\n  ): MVTMapboxCoordinates {\n    if (typeof options === 'function') {\n      return this._toGeoJSON(options);\n    }\n    const {x, y, z} = options;\n    const size = this.extent * Math.pow(2, z);\n    const x0 = this.extent * x;\n    const y0 = this.extent * y;\n\n    function project(line: number[]) {\n      for (let j = 0; j < line.length; j++) {\n        const p = line[j];\n        p[0] = ((p[0] + x0) * 360) / size - 180;\n        const y2 = 180 - ((p[1] + y0) * 360) / size;\n        p[1] = (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90;\n      }\n    }\n    return this._toGeoJSON(project);\n  }\n}\n", "/* eslint-disable indent */\n// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport Protobuf from 'pbf';\nimport VectorTileFeature from './vector-tile-feature';\n\nexport default class VectorTileLayer {\n  version: number;\n  name: string;\n  extent: number;\n  length: number;\n  _pbf: Protobuf;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  _features: number[];\n  constructor(pbf: Protobuf, end: number) {\n    // Public\n    this.version = 1;\n    this.name = '';\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  /**\n   * return feature `i` from this layer as a `VectorTileFeature`\n   * @param index\n   * @returns feature\n   */\n\n  feature(i: number): VectorTileFeature {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n  }\n}\n\n/**\n *\n * @param tag\n * @param layer\n * @param pbf\n */\nfunction readLayer(tag: number, layer?: VectorTileLayer, pbf?: Protobuf): void {\n  if (layer && pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n  }\n}\n\n/**\n *\n * @param pbf\n * @returns value\n */\nfunction readValueMessage(pbf: Protobuf) {\n  let value: string | number | boolean | null = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n        ? pbf.readFloat()\n        : tag === 3\n        ? pbf.readDouble()\n        : tag === 4\n        ? pbf.readVarint64()\n        : tag === 5\n        ? pbf.readVarint()\n        : tag === 6\n        ? pbf.readSVarint()\n        : tag === 7\n        ? pbf.readBoolean()\n        : null;\n  }\n\n  return value;\n}\n", "// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileLayer from './vector-tile-layer';\nimport Protobuf from 'pbf';\n\nexport default class VectorTile {\n  layers: {[x: string]: VectorTileLayer};\n  constructor(pbf: Protobuf, end?: number) {\n    this.layers = pbf.readFields(readTile, {}, end);\n  }\n}\n\n/**\n *\n * @param tag\n * @param layers\n * @param pbf\n */\nfunction readTile(tag: number, layers?: {[x: string]: VectorTileLayer}, pbf?: Protobuf): void {\n  if (tag === 3) {\n    if (pbf) {\n      const layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n      if (layer.length && layers) {\n        layers[layer.name] = layer;\n      }\n    }\n  }\n}\n", "import Protobuf from 'pbf';\nimport {getPolygonSignedArea} from '@math.gl/polygon';\nimport {FlatIndexedGeometry, FlatPolygon} from '@loaders.gl/schema';\nimport VectorTileFeature from '../lib/binary-vector-tile/vector-tile-feature';\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * The function also detects holes which have zero area and\n * removes them. In doing so it modifies the input\n * `geom.data` array to remove the unneeded data\n *\n * @param geometry\n * @returns object\n */\n// eslint-disable-next-line max-statements\nexport function classifyRings(geom: FlatIndexedGeometry): FlatPolygon {\n  const len = geom.indices.length;\n  const type = 'Polygon';\n\n  if (len <= 1) {\n    return {\n      type,\n      data: geom.data,\n      areas: [[getPolygonSignedArea(geom.data)]],\n      indices: [geom.indices]\n    };\n  }\n\n  const areas: any[] = [];\n  const polygons: any[] = [];\n  let ringAreas: number[] = [];\n  let polygon: number[] = [];\n  let ccw: boolean | undefined;\n  let offset = 0;\n\n  for (let endIndex: number, i = 0, startIndex: number; i < len; i++) {\n    startIndex = geom.indices[i] - offset;\n\n    endIndex = geom.indices[i + 1] - offset || geom.data.length;\n    const shape = geom.data.slice(startIndex, endIndex);\n    const area = getPolygonSignedArea(shape);\n\n    if (area === 0) {\n      // This polygon has no area, so remove it from the shape\n      // Remove the section from the data array\n      const before = geom.data.slice(0, startIndex);\n      const after = geom.data.slice(endIndex);\n      geom.data = before.concat(after);\n\n      // Need to offset any remaining indices as we have\n      // modified the data buffer\n      offset += endIndex - startIndex;\n\n      // Do not add this index to the output and process next shape\n      continue; // eslint-disable-line no-continue\n    }\n\n    if (ccw === undefined) ccw = area < 0;\n\n    if (ccw === area < 0) {\n      if (polygon.length) {\n        areas.push(ringAreas);\n        polygons.push(polygon);\n      }\n      polygon = [startIndex];\n      ringAreas = [area];\n    } else {\n      ringAreas.push(area);\n      polygon.push(startIndex);\n    }\n  }\n  if (ringAreas) areas.push(ringAreas);\n  if (polygon.length) polygons.push(polygon);\n\n  return {type, areas, indices: polygons, data: geom.data};\n}\n\n/**\n *\n * @param data\n * @param x0\n * @param y0\n * @param size\n */\nexport function project(data: number[], x0: number, y0: number, size: number): void {\n  for (let j = 0, jl = data.length; j < jl; j += 2) {\n    data[j] = ((data[j] + x0) * 360) / size - 180;\n    const y2 = 180 - ((data[j + 1] + y0) * 360) / size;\n    data[j + 1] = (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90;\n  }\n}\n\n/**\n * All code below is unchanged from the original Mapbox implemenation\n *\n * @param tag\n * @param feature\n * @param pbf\n */\nexport function readFeature(tag: number, feature?: VectorTileFeature, pbf?: Protobuf): void {\n  if (feature && pbf) {\n    if (tag === 1) feature.id = pbf.readVarint();\n    else if (tag === 2) readTag(pbf, feature);\n    else if (tag === 3) feature.type = pbf.readVarint();\n    else if (tag === 4) feature._geometry = pbf.pos;\n  }\n}\n\n/**\n * @param pbf\n * @param feature\n */\nexport function readTag(pbf: Protobuf, feature: VectorTileFeature): void {\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const key = feature._keys[pbf.readVarint()];\n    const value = feature._values[pbf.readVarint()];\n    feature.properties[key] = value;\n  }\n}\n", "// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport Protobuf from 'pbf';\nimport {FlatFeature, FlatIndexedGeometry, GeojsonGeometryInfo} from '@loaders.gl/schema';\nimport {classifyRings, project, readFeature} from '../../helpers/binary-util-functions';\n\n// Reduce GC by reusing variables\nlet endPos: number;\nlet cmd: number;\nlet cmdLen: number;\nlet length: number;\nlet x: number;\nlet y: number;\nlet i: number;\n\nexport const TEST_EXPORTS = {\n  classifyRings\n};\n\nexport default class VectorTileFeature {\n  properties: {[x: string]: string | number | boolean | null};\n  extent: any;\n  type: number;\n  id: number | null;\n  _pbf: Protobuf;\n  _geometry: number;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  _geometryInfo: GeojsonGeometryInfo;\n\n  // eslint-disable-next-line max-params\n  constructor(\n    pbf: Protobuf,\n    end: number,\n    extent: any,\n    keys: string[],\n    values: (string | number | boolean | null)[],\n    geometryInfo: GeojsonGeometryInfo\n  ) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n    this.id = null;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n    this._geometryInfo = geometryInfo;\n\n    pbf.readFields(readFeature, this, end);\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  loadGeometry(): FlatIndexedGeometry {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    endPos = pbf.readVarint() + pbf.pos;\n    cmd = 1;\n    length = 0;\n    x = 0;\n    y = 0;\n    i = 0;\n\n    // Note: I attempted to replace the `data` array with a\n    // Float32Array, but performance was worse, both using\n    // `set()` and direct index access. Also, we cannot\n    // know how large the buffer should be, so it would\n    // increase memory usage\n    const indices: number[] = []; // Indices where geometries start\n    const data: number[] = []; // Flat array of coordinate data\n\n    while (pbf.pos < endPos) {\n      if (length <= 0) {\n        cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // New line\n          indices.push(i);\n        }\n        data.push(x, y);\n        i += 2;\n      } else if (cmd === 7) {\n        // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n        if (i > 0) {\n          const start = indices[indices.length - 1]; // start index of polygon\n          data.push(data[start], data[start + 1]); // closePolygon\n          i += 2;\n        }\n      } else {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    return {data, indices};\n  }\n\n  /**\n   *\n   * @param transform\n   * @returns result\n   */\n  _toBinaryCoordinates(transform) {\n    // Expands the protobuf data to an intermediate Flat GeoJSON\n    // data format, which maps closely to the binary data buffers.\n    // It is similar to GeoJSON, but rather than storing the coordinates\n    // in multidimensional arrays, we have a 1D `data` with all the\n    // coordinates, and then index into this using the `indices`\n    // parameter, e.g.\n    //\n    // geometry: {\n    //   type: 'Point', data: [1,2], indices: [0]\n    // }\n    // geometry: {\n    //   type: 'LineString', data: [1,2,3,4,...], indices: [0]\n    // }\n    // geometry: {\n    //   type: 'Polygon', data: [1,2,3,4,...], indices: [[0, 2]]\n    // }\n    // Thus the indices member lets us look up the relevant range\n    // from the data array.\n    // The Multi* versions of the above types share the same data\n    // structure, just with multiple elements in the indices array\n    const geom = this.loadGeometry();\n    let geometry;\n\n    // Apply the supplied transformation to data\n    transform(geom.data, this);\n\n    const coordLength = 2;\n\n    // eslint-disable-next-line default-case\n    switch (this.type) {\n      case 1: // Point\n        this._geometryInfo.pointFeaturesCount++;\n        this._geometryInfo.pointPositionsCount += geom.indices.length;\n        geometry = {type: 'Point', ...geom};\n        break;\n\n      case 2: // LineString\n        this._geometryInfo.lineFeaturesCount++;\n        this._geometryInfo.linePathsCount += geom.indices.length;\n        this._geometryInfo.linePositionsCount += geom.data.length / coordLength;\n        geometry = {type: 'LineString', ...geom};\n        break;\n\n      case 3: // Polygon\n        geometry = classifyRings(geom);\n\n        // Unlike Point & LineString geom.indices is a 2D array, thanks\n        // to the classifyRings method\n        this._geometryInfo.polygonFeaturesCount++;\n        this._geometryInfo.polygonObjectsCount += geometry.indices.length;\n\n        for (const indices of geometry.indices) {\n          this._geometryInfo.polygonRingsCount += indices.length;\n        }\n        this._geometryInfo.polygonPositionsCount += geometry.data.length / coordLength;\n\n        break;\n      default:\n        throw new Error(`Invalid geometry type: ${this.type}`);\n    }\n\n    const result: FlatFeature = {type: 'Feature', geometry, properties: this.properties};\n\n    if (this.id !== null) {\n      result.id = this.id;\n    }\n\n    return result;\n  }\n\n  toBinaryCoordinates(\n    options: {x: number; y: number; z: number} | ((data: number[], feature: {extent: any}) => void)\n  ): FlatFeature {\n    if (typeof options === 'function') {\n      return this._toBinaryCoordinates(options);\n    }\n    const {x, y, z} = options;\n    const size = this.extent * Math.pow(2, z);\n    const x0 = this.extent * x;\n    const y0 = this.extent * y;\n\n    return this._toBinaryCoordinates((data: number[]) => project(data, x0, y0, size));\n  }\n}\n", "/* eslint-disable indent */\n// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileFeature from './vector-tile-feature';\nimport Protobuf from 'pbf';\nimport {GeojsonGeometryInfo} from '@loaders.gl/schema';\n\nexport default class VectorTileLayer {\n  version: number;\n  name: string;\n  extent: number;\n  length: number;\n  _pbf: Protobuf;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  _features: number[];\n  constructor(pbf: Protobuf, end: number) {\n    // Public\n    this.version = 1;\n    this.name = '';\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  /**\n   * return feature `i` from this layer as a `VectorTileFeature`\n   *\n   * @param index\n   * @param geometryInfo\n   * @returns {VectorTileFeature}\n   */\n  feature(i: number, geometryInfo: GeojsonGeometryInfo): VectorTileFeature {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(\n      this._pbf,\n      end,\n      this.extent,\n      this._keys,\n      this._values,\n      geometryInfo\n    );\n  }\n}\n\n/**\n *\n * @param tag\n * @param layer\n * @param pbf\n */\nfunction readLayer(tag: number, layer?: VectorTileLayer, pbf?: Protobuf): void {\n  if (layer && pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n  }\n}\n\n/**\n *\n * @param pbf\n * @returns value\n */\nfunction readValueMessage(pbf: Protobuf) {\n  let value: string | number | boolean | null = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n        ? pbf.readFloat()\n        : tag === 3\n        ? pbf.readDouble()\n        : tag === 4\n        ? pbf.readVarint64()\n        : tag === 5\n        ? pbf.readVarint()\n        : tag === 6\n        ? pbf.readSVarint()\n        : tag === 7\n        ? pbf.readBoolean()\n        : null;\n  }\n\n  return value;\n}\n", "// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileLayer from './vector-tile-layer';\nimport Protobuf from 'pbf';\n\nexport default class VectorTile {\n  layers: {[x: string]: VectorTileLayer};\n  constructor(pbf: Protobuf, end?: number) {\n    this.layers = pbf.readFields(readTile, {}, end);\n  }\n}\n\n/**\n *\n * @param tag\n * @param layers\n * @param pbf\n */\nfunction readTile(tag: number, layers?: {[x: string]: VectorTileLayer}, pbf?: Protobuf): void {\n  if (tag === 3) {\n    if (pbf) {\n      const layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n      if (layer.length && layers) {\n        layers[layer.name] = layer;\n      }\n    }\n  }\n}\n", "import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {MVTLoaderOptions} from './lib/types';\nimport parseMVT from './lib/parse-mvt';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nconst DEFAULT_MVT_LOADER_OPTIONS: MVTLoaderOptions = {\n  mvt: {\n    shape: 'geojson',\n    coordinates: 'local',\n    layerProperty: 'layerName',\n    layers: undefined,\n    tileIndex: null\n  }\n};\n\n/**\n * Worker loader for the Mapbox Vector Tile format\n */\nexport const MVTWorkerLoader: Loader = {\n  name: 'Mapbox Vector Tile',\n  id: 'mvt',\n  module: 'mvt',\n  version: VERSION,\n  // Note: ArcGIS uses '.pbf' extension and 'application/octet-stream'\n  extensions: ['mvt', 'pbf'],\n  mimeTypes: [\n    'application/vnd.mapbox-vector-tile',\n    'application/x-protobuf'\n    // 'application/octet-stream'\n  ],\n  worker: true,\n  category: 'geometry',\n  options: DEFAULT_MVT_LOADER_OPTIONS\n};\n\n/**\n * Loader for the Mapbox Vector Tile format\n */\nexport const MVTLoader: LoaderWithParser = {\n  ...MVTWorkerLoader,\n  parse: async (arrayBuffer, options?: MVTLoaderOptions) => parseMVT(arrayBuffer, options),\n  parseSync: parseMVT,\n  binary: true\n};\n", "import {Viewport} from '@deck.gl/core';\nimport {lerp} from '@math.gl/core';\nimport {GeoBoundingBox} from '../tileset-2d';\n\nconst availableTransformations = {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n};\n\nfunction Point([pointX, pointY]: [number, number], [nw, se]: number[][], viewport: Viewport) {\n  const x = lerp(nw[0], se[0], pointX);\n  const y = lerp(nw[1], se[1], pointY);\n\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox: number[][], viewport: Viewport) {\n  return geometry.map(g => Point(g, bbox, viewport));\n}\n\nfunction MultiPoint(multiPoint, bbox: number[][], viewport: Viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox: number[][], viewport: Viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox: number[][], viewport: Viewport) {\n  return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\n\nfunction Polygon(polygon, bbox: number[][], viewport: Viewport) {\n  return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\n\nfunction MultiPolygon(multiPolygon, bbox: number[][], viewport: Viewport) {\n  return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\n\nexport function transform(geometry, bbox: GeoBoundingBox, viewport: Viewport) {\n  const nw = viewport.projectFlat([bbox.west, bbox.north]);\n  const se = viewport.projectFlat([bbox.east, bbox.south]);\n  const projectedBbox = [nw, se];\n\n  return {\n    ...geometry,\n    coordinates: availableTransformations[geometry.type](\n      geometry.coordinates,\n      projectedBbox,\n      viewport\n    )\n  };\n}\n", "import type {\n  BinaryFeatures,\n  BinaryLineFeatures,\n  BinaryPointFeatures,\n  BinaryPolygonFeatures\n} from '@loaders.gl/schema';\n\ntype FeatureTypes = BinaryPointFeatures | BinaryLineFeatures | BinaryPolygonFeatures;\n\nconst GEOM_TYPES = ['points', 'lines', 'polygons'];\n/**\n * Return the index of feature (numericProps or featureIds) for given feature id\n * Example: findIndexBinary(data, 'id', 33) will return the index in the array of numericProps\n * of the feature 33.\n * @param {Object} data - The data in binary format\n * @param {String} uniqueIdProperty - Name of the unique id property\n * @param {Number|String} featureId - feature id to find\n * @param {String} layerName - the layer to search in\n */\nexport default function findIndexBinary(\n  data: BinaryFeatures,\n  uniqueIdProperty: string,\n  featureId: string | number,\n  layerName: string\n): number {\n  for (const gt of GEOM_TYPES) {\n    const index = data[gt] && findIndexByType(data[gt], uniqueIdProperty, featureId, layerName);\n    if (index >= 0) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction findIndexByType(\n  geomData: FeatureTypes,\n  uniqueIdProperty: string,\n  featureId: string | number,\n  layerName: string\n): number {\n  const featureIds = geomData.featureIds.value;\n\n  if (!featureIds.length) {\n    return -1;\n  }\n\n  let startFeatureIndex = 0;\n  let endFeatureIndex = featureIds[featureIds.length - 1] + 1;\n  if (layerName) {\n    const layerRange = getLayerRange(geomData, layerName);\n    if (layerRange) {\n      startFeatureIndex = layerRange[0];\n      endFeatureIndex = layerRange[1] + 1;\n    } else {\n      return -1;\n    }\n  }\n\n  // Look for the uniqueIdProperty\n  let featureIndex = -1;\n  if (uniqueIdProperty in geomData.numericProps) {\n    const vertexIndex = geomData.numericProps[uniqueIdProperty].value.findIndex(\n      (x, i) =>\n        x === featureId && featureIds[i] >= startFeatureIndex && featureIds[i] < endFeatureIndex\n    );\n    return vertexIndex >= 0 ? geomData.globalFeatureIds.value[vertexIndex] : -1;\n  } else if (uniqueIdProperty) {\n    featureIndex = findIndex(\n      geomData.properties,\n      elem => elem[uniqueIdProperty] === featureId,\n      startFeatureIndex,\n      endFeatureIndex\n    );\n  } else if (geomData.fields) {\n    featureIndex = findIndex(\n      geomData.fields,\n      (elem: any) => elem.id === featureId,\n      startFeatureIndex,\n      endFeatureIndex\n    );\n  }\n  return featureIndex >= 0 ? getGlobalFeatureId(geomData, featureIndex) : -1;\n}\n\ntype LayerRange = [firstFeatureIndex: number, lastFeatureIndex: number];\n\n// Returns [firstFeatureIndex, lastFeatureIndex]\n// MVTLoader parses tiles layer-by-layer, so each layer is a continuous range\nfunction getLayerRange(\n  geomData: FeatureTypes & {\n    __layers?: Record<string, LayerRange>;\n  },\n  layerName: string\n): LayerRange | undefined {\n  if (!geomData.__layers) {\n    // Cache a map from properties.layerName to index ranges\n    const layerNames: Record<string, LayerRange> = {};\n    const {properties} = geomData;\n    for (let i = 0; i < properties.length; i++) {\n      const {layerName: key} = properties[i] as Record<string, any>;\n      if (!key) {\n        // ignore\n      } else if (layerNames[key]) {\n        layerNames[key][1] = i;\n      } else {\n        layerNames[key] = [i, i];\n      }\n    }\n    geomData.__layers = layerNames;\n  }\n  return geomData.__layers[layerName];\n}\n\n// Returns global feature id\nfunction getGlobalFeatureId(geomData, featureIndex: number) {\n  if (!geomData.__ids) {\n    // Cache a map from featureId to globalFeatureId\n    const result: string[] = [];\n    const featureIds = geomData.featureIds.value;\n    const globalFeatureIds = geomData.globalFeatureIds.value;\n    for (let i = 0; i < featureIds.length; i++) {\n      result[featureIds[i]] = globalFeatureIds[i];\n    }\n    geomData.__ids = result;\n  }\n  return geomData.__ids[featureIndex];\n}\n\n// Like array.findIndex, but only search within a range\nfunction findIndex<T>(\n  array: T[],\n  predicate: (v: T, index: number) => boolean,\n  startIndex: number,\n  endIndex: number\n): number {\n  for (let i = startIndex; i < endIndex; i++) {\n    if (predicate(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n", "import {\n  Layer,\n  LayersList,\n  log,\n  PickingInfo,\n  UpdateParameters,\n  GetPickingInfoParams,\n  Viewport,\n  COORDINATE_SYSTEM,\n  DefaultProps\n} from '@deck.gl/core';\nimport {GeoJsonLayer, GeoJsonLayerProps} from '@deck.gl/layers';\nimport {ClipExtension} from '@deck.gl/extensions';\n\nimport {Matrix4} from '@math.gl/core';\nimport {MVTWorkerLoader} from '@loaders.gl/mvt';\nimport {binaryToGeojson} from '@loaders.gl/gis';\n\nimport type {Loader} from '@loaders.gl/loader-utils';\nimport type {BinaryFeatures} from '@loaders.gl/schema';\nimport type {Feature} from 'geojson';\n\nimport {transform} from './coordinate-transform';\nimport findIndexBinary from './find-index-binary';\n\nimport TileLayer, {TiledPickingInfo, TileLayerProps} from '../tile-layer/tile-layer';\n\nimport type {Tileset2DProps, TileLoadProps, GeoBoundingBox} from '../tileset-2d';\nimport {\n  urlType,\n  Tileset2D,\n  Tile2DHeader,\n  getURLFromTemplate,\n  isGeoBoundingBox,\n  isURLTemplate\n} from '../tileset-2d';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps: DefaultProps<MVTLayerProps> = {\n  ...GeoJsonLayer.defaultProps,\n  data: urlType,\n  onDataLoad: {type: 'function', value: null, optional: true, compare: false},\n  uniqueIdProperty: '',\n  highlightedFeatureId: null,\n  loaders: [MVTWorkerLoader],\n  binary: true\n};\n\nexport type TileJson = {\n  tilejson: string;\n  tiles: string[];\n  // eslint-disable-next-line camelcase\n  vector_layers: any[];\n  attribution?: string;\n  scheme?: string;\n  maxzoom?: number;\n  minzoom?: number;\n  version?: string;\n};\n\ntype ParsedMvtTile = Feature[] | BinaryFeatures;\n\n/** All props supported by the MVTLayer */\nexport type MVTLayerProps = _MVTLayerProps &\n  Omit<GeoJsonLayerProps, 'data'> &\n  TileLayerProps<ParsedMvtTile>;\n\n/** Props added by the MVTLayer  */\nexport type _MVTLayerProps = {\n  /** Called if `data` is a TileJSON URL when it is successfully fetched. */\n  onDataLoad?: ((tilejson: TileJson | null) => void) | null;\n\n  /** Needed for highlighting a feature split across two or more tiles. */\n  uniqueIdProperty?: string;\n\n  /** A feature with ID corresponding to the supplied value will be highlighted. */\n  highlightedFeatureId?: string | number | null;\n\n  /**\n   * Use tile data in binary format.\n   *\n   * @default true\n   */\n  binary?: boolean;\n\n  /**\n   * Loaders used to transform tiles into `data` property passed to `renderSubLayers`.\n   *\n   * @default [MVTWorkerLoader] from `@loaders.gl/mvt`\n   */\n  loaders?: Loader[];\n};\n\ntype ContentWGS84Cache = {_contentWGS84?: Feature[]};\n\n/** Render data formatted as [Mapbox Vector Tiles](https://docs.mapbox.com/vector-tiles/specification/). */\nexport default class MVTLayer<ExtraProps extends {} = {}> extends TileLayer<\n  ParsedMvtTile,\n  Required<_MVTLayerProps> & ExtraProps\n> {\n  static layerName = 'MVTLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    super.initializeState();\n    // GlobeView doesn't work well with binary data\n    const binary = this.context.viewport.resolution !== undefined ? false : this.props.binary;\n    this.setState({\n      binary,\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded(): boolean {\n    return this.state && this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}: UpdateParameters<this>) {\n    if (changeFlags.dataChanged) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._updateTileData();\n    }\n\n    if (this.state?.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n    const {highlightColor} = props;\n    if (highlightColor !== oldProps.highlightColor && Array.isArray(highlightColor)) {\n      this.setState({highlightColor});\n    }\n  }\n\n  /* eslint-disable complexity */\n  private async _updateTileData(): Promise<void> {\n    let data: any = this.props.data;\n    let tileJSON: any = null;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      const {onDataLoad, fetch} = this.props;\n      this.setState({data: null, tileJSON: null});\n      try {\n        tileJSON = await fetch(data, {propName: 'data', layer: this, loaders: []});\n      } catch (error: any) {\n        this.raiseError(error, 'loading TileJSON');\n        data = null;\n      }\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON, {propName: 'data', layer: this});\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n    }\n\n    this.setState({data, tileJSON});\n  }\n\n  _getTilesetOptions(): Tileset2DProps {\n    const opts = super._getTilesetOptions();\n    const tileJSON: TileJson | null | undefined = this.state.tileJSON;\n    const {minZoom, maxZoom} = this.props;\n\n    if (tileJSON) {\n      if (Number.isFinite(tileJSON.minzoom) && (tileJSON.minzoom as number) > (minZoom as number)) {\n        opts.minZoom = tileJSON.minzoom as number;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(maxZoom) || (tileJSON.maxzoom as number) < (maxZoom as number))\n      ) {\n        opts.maxZoom = tileJSON.maxzoom as number;\n      }\n    }\n    return opts;\n  }\n\n  /* eslint-disable complexity */\n\n  renderLayers(): Layer | null | LayersList {\n    if (!this.state?.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(loadProps: TileLoadProps): Promise<ParsedMvtTile> {\n    const {data, binary} = this.state;\n    const {index, signal} = loadProps;\n\n    const url = getURLFromTemplate(data, loadProps);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let loadOptions = this.getLoadOptions();\n    const {fetch} = this.props;\n    loadOptions = {\n      ...loadOptions,\n      mimeType: 'application/x-protobuf',\n      mvt: {\n        ...loadOptions?.mvt,\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: index\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: binary ? {format: 'binary'} : {}\n    };\n    return fetch(url, {propName: 'data', layer: this, loadOptions, signal});\n  }\n\n  renderSubLayers(\n    props: TileLayer['props'] & {\n      id: string;\n      data: ParsedMvtTile;\n      _offset: number;\n      tile: Tile2DHeader<ParsedMvtTile>;\n    }\n  ): Layer | null | LayersList {\n    const {x, y, z} = props.tile.index;\n    const worldScale = Math.pow(2, z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    const subLayers = super.renderSubLayers(props);\n\n    if (this.state.binary && !(subLayers instanceof GeoJsonLayer)) {\n      log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n    }\n\n    return subLayers;\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const {uniqueIdProperty} = this.props;\n\n    const {hoveredFeatureId, hoveredFeatureLayerName} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId;\n    let newHoveredFeatureLayerName;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      newHoveredFeatureLayerName = getFeatureLayerName(hoveredFeature);\n    }\n    let {highlightColor} = this.props;\n    if (typeof highlightColor === 'function') {\n      highlightColor = highlightColor(info);\n    }\n\n    if (\n      hoveredFeatureId !== newHoveredFeatureId ||\n      hoveredFeatureLayerName !== newHoveredFeatureLayerName\n    ) {\n      this.setState({\n        highlightColor,\n        hoveredFeatureId: newHoveredFeatureId,\n        hoveredFeatureLayerName: newHoveredFeatureLayerName\n      });\n    }\n  }\n\n  getPickingInfo(params: GetPickingInfoParams): TiledPickingInfo {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = Boolean(this.context.viewport.resolution);\n\n    if (this.state.binary && info.index !== -1) {\n      const {data} = params.sourceLayer!.props;\n      info.object = binaryToGeojson(data as BinaryFeatures, {\n        globalFeatureId: info.index\n      }) as Feature;\n    }\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(\n        info.object,\n        info.tile!.bbox as GeoBoundingBox, // eslint-disable-line\n        this.context.viewport\n      );\n    }\n\n    return info;\n  }\n\n  getSubLayerPropsByTile(tile: Tile2DHeader<ParsedMvtTile>): Record<string, any> {\n    return {\n      highlightedObjectIndex: this.getHighlightedObjectIndex(tile),\n      highlightColor: this.state.highlightColor\n    };\n  }\n\n  private getHighlightedObjectIndex(tile: Tile2DHeader<ParsedMvtTile>): number {\n    const {hoveredFeatureId, hoveredFeatureLayerName, binary} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const data = tile.content;\n\n    const isHighlighted = isFeatureIdDefined(highlightedFeatureId);\n    const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId) || isHighlighted;\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isHighlighted ? highlightedFeatureId : hoveredFeatureId;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(feature => {\n        const isMatchingId = getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight;\n        const isMatchingLayer =\n          isHighlighted || getFeatureLayerName(feature) === hoveredFeatureLayerName;\n        return isMatchingId && isMatchingLayer;\n      });\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      return findIndexBinary(\n        data,\n        uniqueIdProperty,\n        featureIdToHighlight,\n        isHighlighted ? '' : hoveredFeatureLayerName\n      );\n    }\n\n    return -1;\n  }\n\n  private _pickObjects(maxObjects: number | null): PickingInfo[] {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck!.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  /** Get the rendered features in the current viewport. */\n  getRenderedFeatures(maxFeatures: number | null = null): Feature[] {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures: Feature[] = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === undefined) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object as Feature);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object as Feature);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  private _setWGS84PropertyForTiles(): void {\n    const propName = 'dataInWGS84';\n    const tileset: Tileset2D = this.state.tileset;\n\n    // @ts-expect-error selectedTiles are always initialized when tile is being processed\n    tileset.selectedTiles.forEach((tile: Tile2DHeader & ContentWGS84Cache) => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.state.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            const {bbox} = tile;\n            if (tile._contentWGS84 === undefined && isGeoBoundingBox(bbox)) {\n              // Create a cache to transform only once\n\n              const content = this.state.binary ? binaryToGeojson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature: Feature, uniqueIdProperty: string | undefined) {\n  if (feature.properties && uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return undefined;\n}\n\nfunction getFeatureLayerName(feature: Feature): string | null {\n  return feature.properties?.layerName || null;\n}\n\nfunction isFeatureIdDefined(value: unknown): boolean {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(\n  object: Feature,\n  bbox: GeoBoundingBox,\n  viewport: Viewport\n): Feature {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature as Feature;\n}\n", "const BASE32_CODES = '0123456789bcdefghjkmnpqrstuvwxyz';\nconst BASE32_CODES_DICT = {};\nfor (let i = 0; i < BASE32_CODES.length; i++) {\n  BASE32_CODES_DICT[BASE32_CODES.charAt(i)] = i;\n}\n\nconst MIN_LAT = -90;\nconst MAX_LAT = 90;\nconst MIN_LON = -180;\nconst MAX_LON = 180;\n\n// Adapted from ngeohash decode_bbox\nexport function getGeohashBounds(geohash: string): number[] {\n  let isLon = true;\n  let maxLat = MAX_LAT;\n  let minLat = MIN_LAT;\n  let maxLon = MAX_LON;\n  let minLon = MIN_LON;\n  let mid: number;\n\n  let hashValue = 0;\n  for (let i = 0, l = geohash.length; i < l; i++) {\n    const code = geohash[i].toLowerCase();\n    hashValue = BASE32_CODES_DICT[code];\n\n    for (let bits = 4; bits >= 0; bits--) {\n      const bit = (hashValue >> bits) & 1;\n      if (isLon) {\n        mid = (maxLon + minLon) / 2;\n        if (bit === 1) {\n          minLon = mid;\n        } else {\n          maxLon = mid;\n        }\n      } else {\n        mid = (maxLat + minLat) / 2;\n        if (bit === 1) {\n          minLat = mid;\n        } else {\n          maxLat = mid;\n        }\n      }\n      isLon = !isLon;\n    }\n  }\n\n  return [minLat, minLon, maxLat, maxLon];\n}\n\nexport function getGeohashPolygon(geohash: string): number[] {\n  const [s, w, n, e] = getGeohashBounds(geohash);\n\n  return [e, n, e, s, w, s, w, n, e, n];\n}\n", "import {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nimport {getGeohashPolygon} from './geohash-utils';\n\nconst defaultProps: DefaultProps<GeohashLayerProps> = {\n  getGeohash: {type: 'accessor', value: d => d.geohash}\n};\n\n/**\n * Properties of `GeohashLayer`.\n */\ntype GeohashLayerProps<DataT = any> = {\n  /**\n   * Called for each data object to retrieve the geohash string identifier.\n   *\n   * By default, it reads `geohash` property of data object.\n   */\n  getGeohash?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Geohash](https://en.wikipedia.org/wiki/Geohash) geospatial indexing system. */\nexport default class GeohashLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<GeohashLayerProps> & ExtraProps\n> {\n  static layerName = 'GeohashLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getGeohash} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n    };\n  }\n}\n"],
  "mappings": "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",
  "names": ["a", "i", "i", "t", "val", "val", "i", "entityName", "val", "name", "toNumber", "toNumber", "i", "val", "result", "entityName", "i", "val", "i", "attStr", "a", "val", "i", "name", "Long", "isLong", "INT_CACHE", "UINT_CACHE", "fromInt", "fromBits", "fromNumber", "UZERO", "ZERO", "TWO_PWR_64_DBL", "MAX_UNSIGNED_VALUE", "TWO_PWR_63_DBL", "MIN_VALUE", "MAX_VALUE", "TWO_PWR_32_DBL", "pow_dbl", "fromString", "p", "i", "fromValue", "val", "TWO_PWR_16_DBL", "TWO_PWR_24_DBL", "TWO_PWR_24", "ONE", "UONE", "NEG_ONE", "LongPrototype", "toInt", "toNumber", "toString", "getHighBits", "getHighBitsUnsigned", "getLowBits", "getLowBitsUnsigned", "getNumBitsAbs", "isZero", "isNegative", "isPositive", "isOdd", "isEven", "equals", "notEquals", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual", "compare", "negate", "add", "subtract", "multiply", "divide", "modulo", "not", "and", "or", "xor", "shiftLeft", "shiftRight", "shiftRightUnsigned", "toSigned", "toUnsigned", "e", "i", "s", "c", "val", "length", "i", "l", "s", "p", "lsb", "c", "DEFAULT_SAX_EVENTS", "ontext", "onprocessinginstruction", "onsgmldeclaration", "ondoctype", "oncomment", "onopentagstart", "onattribute", "onopentag", "onclosetag", "onopencdata", "oncdata", "onclosecdata", "onerror", "onend", "onready", "onscript", "onopennamespace", "onclosenamespace", "DEFAULT_SAX_PARSER_OPTIONS", "strict", "MAX_BUFFER_LENGTH", "lowercase", "lowercasetags", "noscript", "strictEntities", "xmlns", "undefined", "position", "trim", "normalize", "EVENTS", "BUFFERS", "nameStart", "nameBody", "entityStart", "entityBody", "ENTITIES", "amp", "gt", "lt", "quot", "apos", "AElig", "Aacute", "Acirc", "Agrave", "Aring", "Atilde", "Auml", "Ccedil", "ETH", "Eacute", "Ecirc", "Egrave", "Euml", "Iacute", "Icirc", "Igrave", "Iuml", "Ntilde", "Oacute", "Ocirc", "Ograve", "Oslash", "Otilde", "Ouml", "THORN", "Uacute", "Ucirc", "Ugrave", "Uuml", "Yacute", "aacute", "acirc", "aelig", "agrave", "aring", "atilde", "auml", "ccedil", "eacute", "ecirc", "egrave", "eth", "euml", "iacute", "icirc", "igrave", "iuml", "ntilde", "oacute", "ocirc", "ograve", "oslash", "otilde", "ouml", "szlig", "thorn", "uacute", "ucirc", "ugrave", "uuml", "yacute", "yuml", "copy", "reg", "nbsp", "iexcl", "cent", "pound", "curren", "yen", "brvbar", "sect", "uml", "ordf", "laquo", "not", "shy", "macr", "deg", "plusmn", "sup1", "sup2", "sup3", "acute", "micro", "para", "middot", "cedil", "ordm", "raquo", "frac14", "frac12", "frac34", "iquest", "times", "divide", "OElig", "oelig", "Scaron", "scaron", "Yuml", "fnof", "circ", "tilde", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmaf", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "thetasym", "upsih", "piv", "ensp", "emsp", "thinsp", "zwnj", "zwj", "lrm", "rlm", "ndash", "mdash", "lsquo", "rsquo", "sbquo", "ldquo", "rdquo", "bdquo", "dagger", "Dagger", "bull", "hellip", "permil", "prime", "Prime", "lsaquo", "rsaquo", "oline", "frasl", "euro", "image", "weierp", "real", "trade", "alefsym", "larr", "uarr", "rarr", "darr", "harr", "crarr", "lArr", "uArr", "rArr", "dArr", "hArr", "forall", "part", "exist", "empty", "nabla", "isin", "notin", "ni", "prod", "sum", "minus", "lowast", "radic", "prop", "infin", "ang", "and", "or", "cap", "cup", "int", "there4", "sim", "cong", "asymp", "ne", "equiv", "le", "ge", "sub", "sup", "nsub", "sube", "supe", "oplus", "otimes", "perp", "sdot", "lceil", "rceil", "lfloor", "rfloor", "lang", "rang", "loz", "spades", "clubs", "hearts", "diams", "Object", "keys", "forEach", "key", "e", "String", "fromCharCode", "SAX", "constructor", "_defineProperty", "BEGIN", "S", "BEGIN_WHITESPACE", "TEXT", "TEXT_ENTITY", "OPEN_WAKA", "SGML_DECL", "SGML_DECL_QUOTED", "DOCTYPE", "DOCTYPE_QUOTED", "DOCTYPE_DTD", "DOCTYPE_DTD_QUOTED", "COMMENT_STARTING", "COMMENT", "COMMENT_ENDING", "COMMENT_ENDED", "CDATA", "CDATA_ENDING", "CDATA_ENDING_2", "PROC_INST", "PROC_INST_BODY", "PROC_INST_ENDING", "OPEN_TAG", "OPEN_TAG_SLASH", "ATTRIB", "ATTRIB_NAME", "ATTRIB_NAME_SAW_WHITE", "ATTRIB_VALUE", "ATTRIB_VALUE_QUOTED", "ATTRIB_VALUE_CLOSED", "ATTRIB_VALUE_UNQUOTED", "ATTRIB_VALUE_ENTITY_Q", "ATTRIB_VALUE_ENTITY_U", "CLOSE_TAG", "CLOSE_TAG_SAW_WHITE", "SCRIPT", "SCRIPT_ENDING", "xml", "XML_NAMESPACE", "XMLNS_NAMESPACE", "s", "STATE", "hasOwnProperty", "charAt", "chunk", "i", "result", "length", "isWhitespace", "c", "isQuote", "isAttribEnd", "isMatch", "regex", "test", "notMatch", "qname", "name", "attribute", "indexOf", "qualName", "split", "prefix", "local", "write", "error", "closed", "errorFunction", "end", "toString", "trackPosition", "line", "column", "state", "beginWhiteSpace", "sawRoot", "closedRoot", "starti", "textNode", "substring", "startTagPosition", "strictFail", "script", "concat", "sgmlDecl", "tagName", "procInstName", "procInstBody", "pad", "Array", "join", "toUpperCase", "emitNode", "cdata", "comment", "doctype", "q", "textApplyOptions", "body", "newTag", "openTag", "closeTag", "attribName", "attribValue", "attrib", "tag", "attributes", "value", "returnState", "buffer", "Error", "parseEntity", "entity", "bufferCheckPosition", "checkBufferLength", "emit", "event", "data", "events", "eventName", "replace", "clearBuffers", "l", "flushBuffers", "closeText", "SAXParser", "opt", "er", "looseCase", "attribList", "qn", "parent", "tags", "ns", "create", "push", "entityLC", "toLowerCase", "num", "NaN", "numStr", "slice", "parseInt", "isNaN", "fromCodePoint", "message", "text", "nodeType", "maxAllowed", "Math", "max", "maxActual", "_this$this$BUFFERS$i", "len", "m", "selfClosing", "uri", "JSON", "stringify", "that", "p", "nv", "a", "isSelfClosing", "Boolean", "t", "close", "pop", "x", "n", "XML_ENTITIES", "rootNS", "resume", "flush", "fastParseXML", "text", "options", "parser", "FastXMLParser", "ignoreAttributes", "attributeNamePrefix", "parsedXML", "parse", "uncapitalize", "str", "charAt", "toLowerCase", "slice", "uncapitalizeKeys", "object", "Array", "isArray", "map", "element", "newObject", "key", "value", "Object", "entries", "VERSION", "XMLLoader", "name", "id", "module", "version", "worker", "extensions", "mimeTypes", "testText", "testXMLFile", "options", "xml", "parser", "uncapitalizeKeys", "removeNSPrefix", "textNodeName", "arrayPaths", "parse", "arrayBuffer", "parseTextSync", "TextDecoder", "decode", "text", "startsWith", "_options$xml", "xmlOptions", "fastXMLOptions", "allowBooleanAttributes", "ignoreDeclaration", "isArray", "jpath", "isLeafNode", "isAttribute", "_xmlOptions$arrayPath", "array", "Boolean", "some", "path", "_fastXML", "fastParseXML", "Error", "HTMLLoader", "XMLLoader", "name", "id", "extensions", "mimeTypes", "testText", "testHTMLFile", "parse", "arrayBuffer", "options", "parseTextSync", "TextDecoder", "decode", "text", "startsWith", "mergeLoaderOptions", "xml", "parser", "_fastXML", "htmlEntities", "convertXMLValueToArray", "xmlValue", "Array", "isArray", "convertXMLFieldToArrayInPlace", "xml", "key", "parseExceptionReport", "parsedXML", "_exceptionReport$exce", "_exceptionReport$exce2", "_exceptionReport$exce3", "exceptionReport", "errorMessage", "exception", "exceptionText", "exceptionCode", "locator", "Error", "concat", "parseCSWCapabilities", "text", "options", "parsedXML", "XMLLoader", "parseTextSync", "xml", "removeNSPrefix", "uncapitalizeKeys", "parseExceptionReport", "xmlCapabilities", "capabilities", "VERSION", "CSWCapabilitiesLoader", "id", "name", "module", "version", "worker", "extensions", "mimeTypes", "testText", "testXMLFile", "options", "csw", "parse", "arrayBuffer", "parseCSWCapabilities", "TextDecoder", "decode", "parseTextSync", "text", "startsWith", "parseCSWDomain", "text", "options", "parsedXML", "XMLLoader", "parseTextSync", "xml", "removeNSPrefix", "uncapitalizeKeys", "arrayPaths", "parseExceptionReport", "xmlDomain", "getDomainResponse", "domainValue", "domainValues", "_domainValue$listOfVa", "values", "listOfValues", "value", "VERSION", "CSWDomainLoader", "id", "name", "module", "version", "worker", "extensions", "mimeTypes", "testText", "testXMLFile", "options", "csw", "parse", "arrayBuffer", "parseCSWDomain", "TextDecoder", "decode", "parseTextSync", "text", "startsWith", "parseCSWRecords", "text", "options", "parsedXML", "XMLLoader", "parseTextSync", "xml", "removeNSPrefix", "uncapitalizeKeys", "arrayPaths", "_fastXML", "parseAttributeValue", "parseExceptionReport", "xmlRecords", "getRecordsResponse", "elementSet", "searchResults", "recordsFieldName", "concat", "records", "convertXMLFieldToArrayInPlace", "record", "boundingBoxes", "boundingBox", "value", "upperCorner", "lowerCorner", "VERSION", "CSWRecordsLoader", "id", "name", "module", "version", "worker", "extensions", "mimeTypes", "testText", "testXMLFile", "options", "csw", "parse", "arrayBuffer", "parseCSWRecords", "TextDecoder", "decode", "parseTextSync", "text", "startsWith", "parseWMSError", "text", "options", "_XMLLoader$parseTextS", "_parsedXML$ServiceExc", "_parsedXML$ogcServic", "parsedXML", "XMLLoader", "parseTextSync", "call", "serviceExceptionXML", "ServiceExceptionReport", "ServiceException", "message", "value", "code", "VERSION", "WMSErrorLoader", "id", "name", "module", "version", "worker", "extensions", "mimeTypes", "testText", "testXMLFile", "options", "wms", "throwOnError", "parse", "arrayBuffer", "parseTextSync", "TextDecoder", "decode", "parseSync", "text", "startsWith", "wmsOptions", "error", "parseWMSError", "message", "minimalErrors", "concat", "Error", "getXMLArray", "xmlValue", "Array", "isArray", "getXMLStringArray", "xmlArray", "length", "every", "_", "getXMLFloat", "defaultValue", "arguments", "undefined", "parseFloat", "getXMLInteger", "parseInt", "getXMLBoolean", "parseWMSCapabilities", "xmlText", "options", "parsedXML", "XMLLoader", "parseTextSync", "xmlCapabilities", "WMT_MS_Capabilities", "WMS_Capabilities", "capabilities", "extractCapabilities", "inheritedLayerProps", "layer", "layers", "addInheritedLayerProps", "includeRawData", "raw", "includeXMLText", "xml", "_xml$Service", "_xml$Service2", "_xml$Service3", "_xml$Service4", "_xml$Service5", "_xml$Service6", "_xml$Service6$Keyword", "_xml$Service7", "_xml$Service8", "_xml$Service9", "_xml$Service10", "_xml$Service11", "_xml$Service12", "_xml$Service13", "_xml$Capability", "_xml$Capability2", "version", "String", "name", "Service", "Name", "title", "Title", "undefined", "abstract", "Abstract", "keywords", "getXMLStringArray", "KeywordList", "Keyword", "fees", "Fees", "JSON", "stringify", "accessConstraints", "AccessConstraints", "layerLimit", "getXMLInteger", "LayerLimit", "maxWidth", "maxHeight", "requests", "extractRequests", "Capability", "Request", "exceptions", "extractExceptions", "Exception", "xmlLayers", "getXMLArray", "Layer", "xmlSubLayer", "push", "extractLayer", "key", "value", "Object", "entries", "xmlRequests", "xmlRequest", "mimeTypes", "Format", "xmlException", "xmlExceptionFormats", "length", "xmlLayer", "_xmlLayer$KeywordList", "crs", "CRS", "SRS", "Array", "isArray", "every", "_", "geographicBoundingBox", "EX_GeographicBoundingBox", "extractEXBoundingBox", "LatLonBoundingBox", "extractLatLonBoundingBox", "boundingBoxes", "BoundingBox", "extractWMSBoundingBoxes", "xmlDimensions", "Dimension", "dimensions", "map", "extractDimension", "opaque", "getXMLBoolean", "cascaded", "queryable", "xmlBoundingBox", "westBoundLongitude", "w", "northBoundLatitude", "n", "eastBoundLongitude", "e", "southBoundLatitude", "s", "minx", "miny", "maxx", "maxy", "xmlBoundingBoxes", "xmlBoxes", "xmlBox", "extractWMSBoundingBox", "resx", "resy", "boundingBox", "getXMLFloat", "xResolution", "yResolution", "xmlDimension", "units", "extent", "dimension", "unitSymbol", "default", "defaultValue", "multipleValues", "nearestValue", "current", "parent", "subLayer", "VERSION", "WMSCapabilitiesLoader", "id", "name", "module", "version", "worker", "extensions", "mimeTypes", "testText", "testXMLFile", "options", "wms", "parse", "arrayBuffer", "parseWMSCapabilities", "TextDecoder", "decode", "parseTextSync", "text", "startsWith", "parseWMSFeatureInfo", "text", "options", "_parsedXML$FeatureInf", "parsedXML", "XMLLoader", "parseTextSync", "xmlFeatureInfo", "FeatureInfoResponse", "FIELDS", "xmlFeatures", "Array", "isArray", "features", "map", "xmlFeature", "extractFeature", "xmlFields", "attributes", "type", "bounds", "bottom", "top", "left", "right", "WMSFeatureInfoLoader", "WMSCapabilitiesLoader", "id", "name", "parse", "arrayBuffer", "options", "parseWMSFeatureInfo", "TextDecoder", "decode", "parseTextSync", "text", "parseWMSLayerDescription", "text", "options", "_XMLLoader$parseTextS", "parsedXML", "XMLLoader", "parseTextSync", "call", "WMSLayerDescriptionLoader", "WMSCapabilitiesLoader", "id", "name", "parse", "arrayBuffer", "options", "parseWMSLayerDescription", "TextDecoder", "decode", "parseTextSync", "text", "pSlice", "Array", "prototype", "slice", "DataSource", "constructor", "props", "_defineProperty", "loadOptions", "fetch", "getFetchFunction", "setProps", "Object", "assign", "setNeedsRefresh", "_needsRefresh", "getNeedsRefresh", "clear", "arguments", "length", "undefined", "needsRefresh", "options", "fetchFunction", "url", "fetchOptions", "ImageSource", "DataSource", "ImageService", "ImageSource", "constructor", "props", "getMetadata", "Error", "getImage", "parameters", "granularParameters", "getGranularParameters", "url", "getURLFromTemplate", "response", "fetch", "arrayBuffer", "ImageLoader", "parse", "east", "north", "west", "south", "bbox", "key", "value", "Object", "entries", "replace", "concat", "String", "_defineProperty", "toLowerCase", "includes", "WMSService", "ImageSource", "constructor", "props", "_props$substituteCRS", "_defineProperty", "ImageLoader", "WMSErrorLoader", "WMSCapabilitiesLoader", "WMSFeatureInfoLoader", "WMSLayerDescriptionLoader", "url", "substituteCRS84", "flipCRS", "wmsParameters", "layers", "undefined", "query_layers", "styles", "version", "crs", "format", "info_format", "transparent", "time", "elevation", "vendorParameters", "getMetadata", "capabilities", "getCapabilities", "normalizeMetadata", "getImage", "parameters", "getMap", "getCapabilitiesURL", "response", "fetch", "arrayBuffer", "_checkResponse", "parse", "loadOptions", "getMapURL", "_parseError", "getFeatureInfo", "getFeatureInfoURL", "getFeatureInfoText", "TextDecoder", "decode", "describeLayer", "describeLayerURL", "getLegendGraphic", "getLegendGraphicURL", "options", "_getWMSUrl", "_getWMS130Parameters", "_parseWMSUrl", "baseUrl", "search", "split", "searchParams", "parameter", "key", "value", "request", "first", "allParameters", "service", "IGNORE_EMPTY_KEYS", "Object", "entries", "includes", "_getURLParameter", "encodeURI", "newParameters", "srs", "bbox", "_flipBoundingBox", "toUpperCase", "Array", "isArray", "concat", "join", "String", "bboxValue", "length", "flipCoordinates", "_fetchArrayBuffer", "contentType", "headers", "ok", "mimeTypes", "mergeLoaderOptions", "wms", "throwOnError", "error", "parseSync", "Error", "toLowerCase", "ArcGISImageServer", "ImageSource", "constructor", "props", "getMetadata", "metadata", "getImage", "parameters", "Error", "exportImage", "options", "metadataURL", "concat", "url", "exportImageURL", "bbox", "size", "width", "height", "arcgisOptions", "getUrl", "path", "extra", "first", "key", "value", "Object", "entries", "Array", "isArray", "toUpperCase", "join", "String", "checkResponse", "response", "ok", "_defineProperty", "toLowerCase", "includes", "SERVICES", "WMSService", "ArcGISImageServer", "ImageService", "createImageSource", "props", "type", "serviceType", "guessServiceType", "url", "Error", "Service", "testURL", "CSWService", "DataSource", "constructor", "props", "_defineProperty", "CSWErrorLoader", "CSWCapabilitiesLoader", "getMetadata", "capabilities", "getCapabilities", "normalizeMetadata", "getServiceDirectory", "options", "services", "unknownServices", "records", "getRecords", "record", "reference", "references", "url", "value", "scheme", "push", "name", "title", "type", "_parseOGCUrl", "includeUnknown", "concat", "parts", "split", "params", "wmsParameters", "vendorParameters", "getCapabilitiesURL", "response", "fetch", "arrayBuffer", "_checkResponse", "parse", "loadOptions", "getRecordsURL", "CSWRecordsLoader", "getDomain", "getDomainURL", "CSWDomainLoader", "version", "service", "request", "_getCSWUrl", "typenames", "first", "key", "Object", "entries", "Array", "isArray", "toUpperCase", "join", "String", "encodeURI", "contentType", "headers", "ok", "mimeTypes", "includes", "error", "parseSync", "Error", "_parseError", "toLowerCase", "HALF_EARTH_CIRCUMFERENCE", "Math", "PI", "WGS84ToPseudoMercator", "coord", "mercator", "lngLatToWorld", "defaultProps", "id", "data", "serviceType", "srs", "layers", "type", "compare", "value", "onMetadataLoad", "onMetadataLoadError", "console", "error", "onImageLoadStart", "onImageLoad", "onImageLoadError", "requestId", "WMSLayer", "CompositeLayer", "isLoaded", "Boolean", "state", "loadCounter", "shouldUpdateState", "initializeState", "_nextRequestId", "lastRequestId", "updateState", "changeFlags", "props", "oldProps", "viewport", "context", "dataChanged", "imageSource", "_createImageSource", "_loadMetadata", "debounce", "loadImage", "deepEqual", "viewportChanged", "finalizeState", "renderLayers", "bounds", "image", "lastRequestParameters", "BitmapLayer", "getSubLayerProps", "_imageCoordinateSystem", "COORDINATE_SYSTEM", "LNGLAT", "CARTESIAN", "getFeatureInfoText", "x", "y", "featureInfo", "query_layers", "info_format", "ImageSource", "createImageSource", "url", "loadOptions", "Error", "metadata", "getMetadata", "getCurrentLayer", "reason", "length", "getBounds", "width", "height", "getRequestId", "resolution", "requestParams", "bbox", "minX", "minY", "WGS84ToPseudoMercator", "maxX", "maxY", "getImage", "setState", "raiseError", "fn", "ms", "clearTimeout", "_timeoutId", "setTimeout", "defaultProps", "getHeight", "type", "value", "greatCircle", "GreatCircleLayer", "ArcLayer", "defaultProps", "PolygonLayer", "GeoCellLayer", "CompositeLayer", "indexToBounds", "renderLayers", "elevationScale", "extruded", "wireframe", "filled", "stroked", "lineWidthUnits", "lineWidthScale", "lineWidthMinPixels", "lineWidthMaxPixels", "lineJointRounded", "lineMiterLimit", "lineDashJustified", "getElevation", "getFillColor", "getLineColor", "getLineWidth", "props", "updateTriggers", "material", "transitions", "CellLayer", "getSubLayerClass", "boundsUpdateTriggers", "boundsProps", "getSubLayerProps", "id", "FACE_BITS", "MAX_LEVEL", "POS_BITS", "RADIAN_TO_DEGREE", "Math", "PI", "IJToST", "ij", "order", "offsets", "maxSize", "singleSTtoUV", "st", "STToUV", "FaceUVToXYZ", "face", "u", "v", "Error", "XYZToLngLat", "x", "y", "z", "lat", "atan2", "sqrt", "lng", "toHilbertQuadkey", "idS", "bin", "Long", "fromString", "toString", "length", "lsbIndex", "lastIndexOf", "faceB", "substring", "posB", "levelN", "faceS", "posS", "rotateAndFlipQuadrant", "n", "point", "rx", "ry", "FromHilbertQuadKey", "hilbertQuadkey", "parts", "split", "parseInt", "position", "maxLevel", "level", "i", "bit", "val", "pow", "t", "import_long", "getIdFromToken", "token", "paddedToken", "padEnd", "Long", "fromString", "MAX_RESOLUTION", "getGeoBounds", "face", "ij", "level", "offsets", "resolution", "Math", "max", "ceil", "pow", "result", "Float64Array", "ptIndex", "prevLng", "i", "offset", "slice", "nextOffset", "stepI", "stepJ", "j", "st", "IJToST", "uv", "STToUV", "xyz", "FaceUVToXYZ", "lngLat", "XYZToLngLat", "abs", "deltaLng", "getS2QuadKey", "indexOf", "toHilbertQuadkey", "toString", "getS2Polygon", "key", "s2cell", "FromHilbertQuadKey", "defaultProps", "getS2Token", "type", "value", "d", "token", "S2Layer", "GeoCellLayer", "indexToBounds", "data", "props", "_normalize", "positionFormat", "getPolygon", "x", "objectInfo", "getS2Polygon", "TILE_SIZE", "quadkeyToWorldBounds", "quadkey", "coverage", "x", "y", "mask", "length", "scale", "i", "q", "parseInt", "getQuadkeyPolygon", "topLeft", "bottomRight", "w", "n", "worldToLngLat", "e", "s", "defaultProps", "getQuadkey", "type", "value", "d", "quadkey", "QuadkeyLayer", "GeoCellLayer", "indexToBounds", "data", "extruded", "props", "coverage", "_normalize", "positionFormat", "getPolygon", "x", "objectInfo", "getQuadkeyPolygon", "updateTriggers", "Tile2DHeader", "constructor", "index", "isVisible", "isSelected", "parent", "children", "content", "_loader", "undefined", "_abortController", "_loaderId", "_isLoaded", "_isCancelled", "_needsReload", "bbox", "_bbox", "value", "boundingBox", "west", "south", "east", "north", "left", "top", "right", "bottom", "data", "isLoading", "then", "isLoaded", "Boolean", "needsReload", "byteLength", "result", "Number", "isFinite", "console", "error", "_loadData", "getData", "requestScheduler", "onLoad", "onError", "id", "userData", "zoom", "loaderId", "AbortController", "signal", "requestToken", "scheduleRequest", "tile", "done", "tileData", "err", "loadData", "opts", "setNeedsReload", "abort", "INTERSECTION", "OUTSIDE", "INTERSECTING", "INSIDE", "scratchVector", "Vector3", "scratchNormal", "AxisAlignedBoundingBox", "constructor", "minimum", "maximum", "center", "copy", "add", "scale", "halfDiagonal", "subtract", "clone", "equals", "right", "Boolean", "transform", "transformAsPoint", "intersectPlane", "plane", "normal", "from", "e", "x", "Math", "abs", "y", "z", "s", "dot", "distance", "INTERSECTION", "INSIDE", "OUTSIDE", "INTERSECTING", "distanceTo", "point", "sqrt", "distanceSquaredTo", "offset", "distanceSquared", "d", "scratchVector", "Vector3", "scratchVector2", "BoundingSphere", "constructor", "center", "radius", "fromCenterRadius", "from", "fromCornerPoints", "corner", "oppositeCorner", "add", "scale", "distance", "equals", "right", "Boolean", "clone", "union", "boundingSphere", "leftCenter", "leftRadius", "rightCenter", "rightRadius", "toRightCenter", "copy", "subtract", "centerSeparation", "magnitude", "halfDistanceBetweenTangentPoints", "expand", "point", "scratchPoint", "transform", "getScaling", "Math", "max", "distanceSquaredTo", "d", "distanceTo", "delta", "len", "intersectPlane", "plane", "normal", "distanceToPlane", "dot", "INTERSECTION", "OUTSIDE", "INTERSECTING", "INSIDE", "scratchVector3", "Vector3", "scratchOffset", "scratchVectorU", "scratchVectorV", "scratchVectorW", "scratchCorner", "scratchToCenter", "MATRIX3", "COLUMN0ROW0", "COLUMN0ROW1", "COLUMN0ROW2", "COLUMN1ROW0", "COLUMN1ROW1", "COLUMN1ROW2", "COLUMN2ROW0", "COLUMN2ROW1", "COLUMN2ROW2", "OrientedBoundingBox", "constructor", "center", "halfAxes", "from", "Matrix3", "halfSize", "xAxis", "getColumn", "yAxis", "zAxis", "len", "quaternion", "normXAxis", "normalize", "normYAxis", "normZAxis", "Quaternion", "fromMatrix3", "fromCenterHalfSizeQuaternion", "quaternionObject", "directionsMatrix", "fromQuaternion", "clone", "equals", "right", "Boolean", "getBoundingSphere", "result", "BoundingSphere", "u", "v", "w", "cornerVector", "copy", "add", "radius", "magnitude", "intersectPlane", "plane", "normal", "normalX", "x", "normalY", "y", "normalZ", "z", "radEffective", "Math", "abs", "distanceToPlane", "dot", "distance", "INTERSECTION", "OUTSIDE", "INSIDE", "INTERSECTING", "distanceTo", "point", "sqrt", "distanceSquaredTo", "offset", "subtract", "uHalf", "vHalf", "wHalf", "distanceSquared", "d", "computePlaneDistances", "position", "direction", "minDist", "Number", "POSITIVE_INFINITY", "maxDist", "NEGATIVE_INFINITY", "corner", "toCenter", "mag", "min", "max", "transform", "transformation", "transformAsPoint", "getTransform", "Error", "scratchPosition", "Vector3", "scratchNormal", "Plane", "constructor", "normal", "distance", "fromNormalDistance", "assert", "Number", "isFinite", "from", "normalize", "fromPointNormal", "point", "dot", "fromCoefficients", "a", "b", "c", "d", "set", "equals", "len", "clone", "right", "getPointDistance", "transform", "matrix4", "copy", "transformAsVector", "scale", "projectPointOntoPlane", "result", "pointDistance", "scaledNormal", "subtract", "to", "faces", "Vector3", "scratchPlaneCenter", "scratchPlaneNormal", "scratchPlane", "Plane", "CullingVolume", "constructor", "planes", "fromBoundingSphere", "boundingSphere", "length", "center", "radius", "planeIndex", "faceNormal", "plane0", "plane1", "plane0Center", "copy", "scale", "add", "plane0Distance", "dot", "fromPointNormal", "plane1Center", "negatedFaceNormal", "negate", "plane1Distance", "computeVisibility", "boundingVolume", "intersect", "INTERSECTION", "INSIDE", "plane", "result", "intersectPlane", "OUTSIDE", "INTERSECTING", "computeVisibilityWithPlaneMask", "parentPlaneMask", "assert", "Number", "isFinite", "MASK_OUTSIDE", "MASK_INSIDE", "mask", "k", "flag", "scratchPlaneUpVector", "Vector3", "scratchPlaneRightVector", "scratchPlaneNearCenter", "scratchPlaneFarCenter", "scratchPlaneNormal", "fromPointsXMin", "Vector3", "fromPointsYMin", "fromPointsZMin", "fromPointsXMax", "fromPointsYMax", "fromPointsZMax", "fromPointsCurrentPos", "fromPointsScratch", "fromPointsRitterCenter", "fromPointsMinBoxPt", "fromPointsMaxBoxPt", "fromPointsNaiveCenterScratch", "volumeConstant", "Math", "PI", "scratchMatrix", "Matrix3", "scratchUnitary", "scratchDiagonal", "jMatrix", "jMatrixTranspose", "matrix", "result", "EIGEN_TOLERANCE", "_MathUtils", "EPSILON20", "EIGEN_MAX_SWEEPS", "count", "sweep", "unitaryMatrix", "diagonalMatrix", "identity", "copy", "epsilon", "computeFrobeniusNorm", "offDiagonalFrobeniusNorm", "shurDecomposition", "transpose", "multiplyRight", "multiplyLeft", "unitary", "toTarget", "diagonal", "norm", "i", "temp", "Math", "sqrt", "rowVal", "colVal", "getElementIndex", "tolerance", "EPSILON15", "maxDiagonal", "rotAxis", "abs", "p", "q", "c", "s", "qq", "pp", "qp", "tau", "t", "IDENTITY", "to", "scratchVector2", "Vector3", "scratchVector3", "scratchVector4", "scratchVector5", "scratchVector6", "scratchCovarianceResult", "Matrix3", "scratchEigenResult", "diagonal", "unitary", "makeOrientedBoundingBoxFromPoints", "positions", "result", "OrientedBoundingBox", "length", "halfAxes", "center", "meanPoint", "position", "add", "invLength", "multiplyByScalar", "exx", "exy", "exz", "eyy", "eyz", "ezz", "p", "copy", "subtract", "x", "y", "z", "covarianceMatrix", "computeEigenDecomposition", "rotation", "v1", "getColumn", "v2", "v3", "u1", "Number", "MAX_VALUE", "u2", "u3", "l1", "l2", "l3", "Math", "max", "dot", "min", "scale", "set", "scaleMatrix", "multiplyRight", "TILE_SIZE", "MAX_MAPS", "REF_POINTS_5", "REF_POINTS_9", "concat", "REF_POINTS_11", "OSMNode", "constructor", "x", "y", "z", "children", "_children", "update", "params", "viewport", "cullingVolume", "elevationBounds", "minZ", "maxZ", "bounds", "offset", "project", "boundingVolume", "getBoundingVolume", "insideBounds", "isInside", "computeVisibility", "childVisible", "distance", "distanceTo", "cameraPosition", "scale", "height", "Math", "floor", "log2", "selected", "child", "getSelected", "result", "push", "node", "minX", "minY", "maxX", "maxY", "pow", "extent", "zRange", "worldOffset", "refPoints", "refPointPositions", "p", "lngLat", "osmTile2lngLat", "makeOrientedBoundingBoxFromPoints", "originX", "originY", "AxisAlignedBoundingBox", "getOSMTileIndices", "_GlobeViewport", "resolution", "projectPosition", "planes", "Object", "values", "getFrustumPlanes", "map", "normal", "Plane", "clone", "negate", "CullingVolume", "unitsPerMeter", "distanceScales", "elevationMin", "elevationMax", "WebMercatorViewport", "pitch", "minLng", "minLat", "maxLng", "maxLat", "topLeft", "lngLatToWorld", "bottomRight", "root", "traversalParams", "subViewports", "length", "TILE_SIZE", "DEFAULT_EXTENT", "Infinity", "urlType", "type", "value", "validate", "propType", "optional", "Array", "isArray", "every", "url", "equal", "value1", "value2", "len", "length", "i", "transformBox", "bbox", "modelMatrix", "transformedCoords", "transformAsPoint", "transformedBox", "Math", "min", "map", "max", "stringHash", "s", "abs", "split", "reduce", "a", "b", "charCodeAt", "getURLFromTemplate", "template", "tile", "index", "id", "key", "Object", "keys", "regex", "RegExp", "replace", "String", "Number", "isInteger", "y", "z", "pow", "getBoundingBox", "viewport", "zRange", "extent", "bounds", "minZ", "maxZ", "bounds0", "getBounds", "bounds1", "isGeospatial", "getCullBounds", "cullRect", "subViewports", "v", "getCullBoundsInViewport", "x", "width", "height", "unprojectOption", "targetZ", "topLeft", "unproject", "topRight", "bottomLeft", "bottomRight", "getIndexingCoords", "scale", "modelMatrixInverse", "transformedTileIndex", "getScale", "tileSize", "osmTile2lngLat", "lng", "n", "PI", "lat", "atan", "exp", "tile2XY", "tileToBoundingBox", "west", "north", "east", "south", "left", "top", "right", "bottom", "getIdentityTileIndices", "minX", "minY", "maxX", "maxY", "indices", "floor", "push", "getTileIndices", "maxZoom", "minZoom", "zoomOffset", "round", "zoom", "log2", "ceil", "isFinite", "transformedExtent", "getOSMTileIndices", "isURLTemplate", "test", "isGeoBoundingBox", "memoize", "compute", "cachedArgs", "cachedResult", "args", "key", "isEqual", "a", "b", "Array", "isArray", "len", "length", "i", "TILE_STATE_VISITED", "TILE_STATE_VISIBLE", "STRATEGY_NEVER", "STRATEGY_REPLACE", "STRATEGY_DEFAULT", "DEFAULT_CACHE_SCALE", "STRATEGIES", "updateTileStateDefault", "updateTileStateReplace", "DEFAULT_TILESET2D_PROPS", "extent", "tileSize", "maxZoom", "minZoom", "maxCacheSize", "maxCacheByteSize", "refinementStrategy", "zRange", "maxRequests", "zoomOffset", "onTileLoad", "onTileUnload", "onTileError", "Tileset2D", "constructor", "opts", "memoize", "getCullBounds", "tile", "_cacheByteSize", "byteLength", "_resizeCache", "_requestScheduler", "RequestScheduler", "throttleRequests", "Boolean", "_cache", "Map", "_tiles", "_dirty", "_viewport", "_selectedTiles", "_frameNumber", "_modelMatrix", "Matrix4", "_modelMatrixInverse", "setOptions", "tiles", "selectedTiles", "isLoaded", "every", "needsReload", "some", "Object", "assign", "Number", "isFinite", "_maxZoom", "Math", "floor", "_minZoom", "ceil", "finalize", "values", "isLoading", "abort", "clear", "reloadAll", "id", "keys", "get", "includes", "delete", "setNeedsReload", "update", "viewport", "modelMatrix", "modelMatrixAsMatrix4", "isModelMatrixNew", "equals", "_zRange", "clone", "invert", "tileIndices", "getTileIndices", "modelMatrixInverse", "map", "index", "_getTile", "_rebuildTree", "changed", "updateTileStates", "_pruneRequests", "isTileVisible", "cullRect", "isVisible", "boundsArr", "_getCullBounds", "z", "bbox", "minX", "minY", "maxX", "maxY", "overlaps", "west", "east", "south", "north", "y0", "min", "top", "bottom", "y1", "max", "left", "right", "getTileId", "x", "y", "getTileZoom", "getTileMetadata", "tileToBoundingBox", "getParentIndex", "visibilities", "Array", "size", "i", "isSelected", "from", "abortCandidates", "ongoingRequestCount", "push", "length", "shift", "parent", "children", "_getNearestAncestor", "Infinity", "overflown", "sort", "t1", "t2", "zoom", "create", "Tile2DHeader", "set", "loadData", "getData", "getTileData", "requestScheduler", "onLoad", "onError", "allTiles", "state", "getPlaceholderInAncestors", "getPlaceholderInChildren", "sortedTiles", "child", "startTile", "content", "defaultProps", "TilesetClass", "Tileset2D", "data", "type", "value", "dataComparator", "urlType", "equal", "renderSubLayers", "props", "GeoJsonLayer", "getTileData", "optional", "onViewportLoad", "onTileLoad", "tile", "onTileUnload", "onTileError", "err", "console", "error", "extent", "compare", "tileSize", "maxZoom", "minZoom", "maxCacheSize", "maxCacheByteSize", "refinementStrategy", "STRATEGY_DEFAULT", "zRange", "maxRequests", "zoomOffset", "TileLayer", "CompositeLayer", "initializeState", "state", "tileset", "isLoaded", "finalizeState", "finalize", "selectedTiles", "every", "layers", "layer", "shouldUpdateState", "changeFlags", "somethingChanged", "updateState", "propsChanged", "propsOrDataChanged", "updateTriggersChanged", "dataChanged", "all", "_getTilesetOptions", "setState", "setOptions", "reloadAll", "tiles", "forEach", "_updateTileset", "bind", "_onTileLoad", "_onTileError", "_onTileUnload", "modelMatrix", "frameNumber", "update", "context", "viewport", "loadingStateChanged", "tilesetChanged", "_onViewportLoad", "setNeedsUpdate", "fetch", "signal", "url", "Array", "isArray", "getURLFromTemplate", "propName", "getSubLayerPropsByTile", "getPickingInfo", "info", "sourceLayer", "sourceTile", "picked", "_updateAutoHighlight", "updateAutoHighlight", "renderLayers", "map", "subLayerProps", "content", "getSubLayerProps", "id", "updateTriggers", "_offset", "flatten", "Boolean", "clone", "Object", "keys", "some", "filterSubLayer", "cullRect", "isTileVisible", "defaultProps", "fadeTrail", "trailLength", "type", "value", "min", "currentTime", "getTimestamps", "d", "timestamps", "TripsLayer", "PathLayer", "getShaders", "shaders", "inject", "initializeState", "attributeManager", "getAttributeManager", "addInstanced", "size", "accessor", "shaderAttributes", "instanceTimestamps", "vertexOffset", "instanceNextTimestamps", "draw", "params", "props", "uniforms", "libh3", "Module", "moduleOverrides", "key", "hasOwnProperty", "arguments_", "scriptDirectory", "locateFile", "path", "readAsync", "document", "currentScript", "src", "indexOf", "substr", "lastIndexOf", "url", "onload", "onerror", "xhr", "XMLHttpRequest", "open", "responseType", "xhr_onload", "status", "response", "data", "tryParseAsDataURI", "buffer", "send", "out", "console", "log", "bind", "err", "warn", "tempRet0", "setTempRet0", "value", "getTempRet0", "GLOBAL_BASE", "setValue", "ptr", "type", "noSafe", "charAt", "length", "HEAP8", "HEAP16", "HEAP32", "tempI64", "tempDouble", "Math_abs", "Math_min", "Math_floor", "Math_ceil", "HEAPF32", "HEAPF64", "abort", "getValue", "ABORT", "assert", "condition", "text", "getCFunc", "ident", "func", "ccall", "returnType", "argTypes", "args", "opts", "toC", "str", "ret", "undefined", "len", "stackAlloc", "stringToUTF8", "arr", "writeArrayToMemory", "convertReturnValue", "UTF8ToString", "Boolean", "cArgs", "stack", "i", "converter", "stackSave", "apply", "stackRestore", "cwrap", "numericArgs", "every", "numericRet", "arguments", "UTF8Decoder", "TextDecoder", "UTF8ArrayToString", "u8Array", "idx", "maxBytesToRead", "endIdx", "endPtr", "subarray", "decode", "u0", "String", "fromCharCode", "u1", "u2", "ch", "HEAPU8", "stringToUTF8Array", "outU8Array", "outIdx", "maxBytesToWrite", "startIdx", "u", "charCodeAt", "outPtr", "UTF16Decoder", "array", "set", "alignUp", "x", "multiple", "HEAPU16", "HEAPU32", "updateGlobalBufferAndViews", "buf", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint16Array", "Uint32Array", "Float32Array", "Float64Array", "DYNAMIC_BASE", "DYNAMICTOP_PTR", "INITIAL_TOTAL_MEMORY", "ArrayBuffer", "byteLength", "callRuntimeCallbacks", "callbacks", "callback", "shift", "arg", "__ATPRERUN__", "__ATINIT__", "__ATMAIN__", "__ATPOSTRUN__", "preRun", "addOnPreRun", "initRuntime", "preMain", "postRun", "addOnPostRun", "cb", "unshift", "Math", "abs", "ceil", "floor", "min", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "clearInterval", "memoryInitializer", "dataURIPrefix", "isDataURI", "filename", "prototype", "startsWith", "tempDoublePtr", "demangle", "demangleAll", "regex", "replace", "y", "jsStackTrace", "Error", "e", "toString", "stackTrace", "js", "___assert_fail", "line", "_emscripten_get_heap_size", "_emscripten_memcpy_big", "dest", "num", "___setErrNo", "abortOnCannotGrowMemory", "requestedSize", "emscripten_realloc_buffer", "size", "newBuffer", "_emscripten_replace_memory", "_emscripten_resize_heap", "oldSize", "PAGE_MULTIPLE", "LIMIT", "MIN_TOTAL_MEMORY", "newSize", "max", "replacement", "decodeBase64", "atob", "input", "keyStr", "output", "chr1", "chr2", "chr3", "enc1", "enc2", "enc3", "enc4", "intArrayFromBase64", "s", "decoded", "bytes", "_", "slice", "asmGlobalArg", "asmLibraryArg", "asm", "global", "env", "a", "b", "c", "d", "g", "p", "q", "r", "sqrt", "pow", "t", "cos", "sin", "v", "tan", "w", "acos", "asin", "atan", "z", "atan2", "A", "B", "imul", "C", "D", "clz32", "F", "G", "H", "I", "J", "f", "K", "L", "h", "M", "S", "V", "W", "X", "Y", "Z", "$", "ba", "hd", "Yc", "ca", "Xc", "aa", "j", "k", "l", "m", "n", "o", "Fb", "da", "bd", "Pa", "cd", "Lb", "Rb", "dd", "Nb", "la", "ra", "Pb", "Mb", "ma", "ea", "fa", "vc", "ya", "ga", "ha", "E", "Wc", "wc", "ia", "Vb", "xc", "za", "Sb", "ja", "Mc", "Wb", "Rc", "Qc", "Pc", "ka", "Oc", "kc", "Nc", "hc", "ic", "Sc", "na", "oa", "pa", "qa", "sa", "ta", "ua", "va", "wa", "xa", "_b", "jb", "ed", "Aa", "Ba", "_c", "Ca", "Da", "Ea", "Fa", "Ga", "Ha", "Ia", "Vc", "Ja", "Ka", "La", "Ma", "Na", "Oa", "Qa", "Ra", "Sa", "Ta", "Ua", "Va", "Wa", "Xa", "Ya", "Za", "Jc", "Ic", "gb", "lb", "_a", "Fc", "mb", "$a", "ab", "bb", "Gc", "db", "eb", "fb", "Hc", "hb", "ib", "kb", "nb", "ob", "pb", "qb", "rb", "sb", "tb", "ub", "vb", "wb", "gc", "xb", "yb", "zb", "Ab", "Bb", "Cb", "Db", "tc", "Eb", "Gb", "Hb", "gd", "Ib", "Jb", "Kb", "Ob", "Qb", "Tb", "Ub", "Xb", "Yb", "Zb", "$b", "ac", "bc", "cc", "dc", "ec", "fc", "Lc", "jc", "lc", "mc", "nc", "oc", "pc", "qc", "rc", "sc", "fd", "uc", "yc", "zc", "Ac", "Bc", "Cc", "Dc", "Ec", "Kc", "Tc", "Uc", "jd", "Zc", "$c", "ad", "___uremdi3", "_bitshift64Lshr", "_bitshift64Shl", "_calloc", "_cellAreaKm2", "_cellAreaM2", "_cellAreaRads2", "_compact", "_destroyLinkedPolygon", "_edgeLengthKm", "_edgeLengthM", "_exactEdgeLengthKm", "_exactEdgeLengthM", "_exactEdgeLengthRads", "_experimentalH3ToLocalIj", "_experimentalLocalIjToH3", "_free", "_geoToH3", "_getDestinationH3IndexFromUnidirectionalEdge", "_getH3IndexesFromUnidirectionalEdge", "_getH3UnidirectionalEdge", "_getH3UnidirectionalEdgeBoundary", "_getH3UnidirectionalEdgesFromHexagon", "_getOriginH3IndexFromUnidirectionalEdge", "_getPentagonIndexes", "_getRes0Indexes", "_h3Distance", "_h3GetBaseCell", "_h3GetFaces", "_h3GetResolution", "_h3IndexesAreNeighbors", "_h3IsPentagon", "_h3IsResClassIII", "_h3IsValid", "_h3Line", "_h3LineSize", "_h3SetToLinkedGeo", "_h3ToCenterChild", "_h3ToChildren", "_h3ToGeo", "_h3ToGeoBoundary", "_h3ToParent", "_h3UnidirectionalEdgeIsValid", "_hexAreaKm2", "_hexAreaM2", "_hexRing", "_i64Subtract", "_kRing", "_kRingDistances", "_llvm_minnum_f64", "_llvm_round_f64", "_malloc", "_maxFaceCount", "_maxH3ToChildrenSize", "_maxKringSize", "_maxPolyfillSize", "_maxUncompactSize", "_memcpy", "_memset", "_numHexagons", "_pentagonIndexCount", "_pointDistKm", "_pointDistM", "_pointDistRads", "_polyfill", "_res0IndexCount", "_round", "_sbrk", "_sizeOfCoordIJ", "_sizeOfGeoBoundary", "_sizeOfGeoCoord", "_sizeOfGeoPolygon", "_sizeOfGeofence", "_sizeOfH3Index", "_sizeOfLinkedGeoPolygon", "_uncompact", "establishStackSpace", "applyMemoryInitializer", "doBrowserLoad", "memoryInitializerBytes", "useRequest", "request", "setTimeout", "addEventListener", "calledRun", "runCaller", "run", "doRun", "what", "pop", "const", "NUMBER", "BOOLEAN", "H3_LOWER", "H3_UPPER", "RESOLUTION", "POINTER", "H3", "BINDINGS", "forEach", "def", "BASE_16", "SZ_INT", "SZ_PTR", "SZ_DBL", "SZ_H3INDEX", "sizeOfH3Index", "SZ_GEOCOORD", "sizeOfGeoCoord", "SZ_GEOBOUNDARY", "sizeOfGeoBoundary", "SZ_GEOPOLYGON", "sizeOfGeoPolygon", "SZ_GEOFENCE", "sizeOfGeofence", "SZ_LINKED_GEOPOLYGON", "sizeOfLinkedGeoPolygon", "SZ_COORDIJ", "sizeOfCoordIJ", "UNITS", "m2", "km", "km2", "rads", "rads2", "validateRes", "res", "INVALID_HEXIDECIMAL_CHAR", "h3IndexToSplitLong", "h3Index", "Array", "isArray", "Number", "isInteger", "test", "upper", "parseInt", "substring", "lower", "hexFrom32Bit", "tempStr", "zeroPad", "topNum", "splitLongToh3Index", "fullLen", "numStr", "numZeroes", "outStr", "readLong", "invocation", "upper", "C", "getTempRet0", "readH3Index", "lower", "splitLongToh3Index", "storeH3Index", "h3Index", "cAddress", "offset", "C", "HEAPU32", "set", "h3IndexToSplitLong", "SZ_INT", "storeArrayOfHexagons", "cAddress", "hexagons", "count", "length", "i", "storeH3Index", "readSingleCoord", "cAddress", "radsToDegs", "C", "getValue", "readGeoCoord", "SZ_DBL", "readGeoCoordGeoJson", "readGeoBoundary", "geoBoundary", "geoJsonCoords", "closedLoop", "numVerts", "vertsPos", "out", "readCoord", "i", "push", "readMultiPolygon", "polygon", "formatAsGeoJson", "output", "loops", "loop", "coords", "coord", "SZ_PTR", "h3IsPentagon", "h3Index", "h3IndexToSplitLong", "lower", "upper", "Boolean", "H3", "h3GetResolution", "h3Index", "h3IndexToSplitLong", "lower", "upper", "H3", "h3IsValid", "geoToH3", "lat", "lng", "res", "latlng", "C", "_malloc", "SZ_GEOCOORD", "HEAPF64", "set", "map", "degsToRads", "SZ_DBL", "readH3Index", "_free", "h3ToGeo", "out", "readGeoCoord", "h3ToGeoBoundary", "formatAsGeoJson", "geoBoundary", "SZ_GEOBOUNDARY", "readGeoBoundary", "h3SetToMultiPolygon", "h3Indexes", "formatAsGeoJson", "length", "indexCount", "set", "C", "_calloc", "SZ_H3INDEX", "storeArrayOfHexagons", "polygon", "SZ_LINKED_GEOPOLYGON", "originalPolygon", "H3", "h3SetToLinkedGeo", "multiPolygon", "readMultiPolygon", "destroyLinkedPolygon", "_free", "h3Distance", "origin", "destination", "h3IndexToSplitLong", "oLower", "oUpper", "dLower", "dUpper", "H3", "edgeLength", "res", "unit", "validateRes", "UNITS", "m", "H3", "edgeLengthM", "km", "edgeLengthKm", "Error", "degsToRads", "deg", "Math", "PI", "radsToDegs", "rad", "UPDATE_THRESHOLD_KM", "normalizeLongitudes", "vertices", "refLng", "undefined", "pt", "deltaLng", "scalePolygon", "hexId", "factor", "lat", "lng", "h3ToGeo", "actualCount", "length", "vertexCount", "i", "lerp", "getHexagonCentroid", "getHexagon", "object", "objectInfo", "hexagonId", "h3ToPolygon", "coverage", "h3ToGeoBoundary", "flattenPolygon", "positions", "Float64Array", "mergeTriggers", "trigger", "defaultProps", "PolygonLayer", "highPrecision", "type", "min", "max", "value", "centerHexagon", "x", "hexagon", "extruded", "H3HexagonLayer", "CompositeLayer", "initializeState", "_checkH3Lib", "state", "edgeLengthKM", "resolution", "shouldUpdateState", "changeFlags", "_shouldUseHighPrecision", "propsOrDataChanged", "somethingChanged", "updateState", "props", "dataChanged", "updateTriggersChanged", "dataProps", "_calculateH3DataProps", "setState", "_updateVertices", "context", "viewport", "hasPentagon", "hasMultipleRes", "iterable", "createIterable", "data", "index", "hexResolution", "h3GetResolution", "h3IsPentagon", "edgeLength", "Boolean", "centerHex", "hex", "geoToH3", "latitude", "longitude", "distance", "h3Distance", "unitsPerMeter", "distanceScales", "centerLat", "centerLng", "centerX", "centerY", "projectFlat", "map", "p", "worldPosition", "renderLayers", "_renderPolygonLayer", "_renderColumnLayer", "_getForwardProps", "elevationScale", "material", "wireframe", "stroked", "filled", "lineWidthUnits", "lineWidthScale", "lineWidthMinPixels", "lineWidthMaxPixels", "getFillColor", "getElevation", "getLineColor", "getLineWidth", "transitions", "updateTriggers", "SubLayerClass", "getSubLayerClass", "forwardProps", "getPolygon", "getSubLayerProps", "id", "_normalize", "_windingOrder", "positionFormat", "ColumnLayer", "getPosition", "flatShading", "diskResolution", "radius", "bind", "defaultProps", "getHexagons", "type", "value", "d", "hexagons", "H3ClusterLayer", "GeoCellLayer", "initializeState", "H3HexagonLayer", "_checkH3Lib", "updateState", "props", "changeFlags", "dataChanged", "updateTriggersChanged", "data", "polygons", "iterable", "objectInfo", "createIterable", "object", "index", "multiPolygon", "h3SetToMultiPolygon", "polygon", "push", "getSubLayerRow", "setState", "indexToBounds", "getElevation", "getFillColor", "getLineColor", "getLineWidth", "state", "getPolygon", "getSubLayerAccessor", "RADIAN_PER_DEGREE", "Math", "PI", "modelMatrix", "Float32Array", "valueArray", "calculateTransformMatrix", "targetMatrix", "orientation", "scale", "pitch", "yaw", "roll", "sr", "sin", "sp", "sw", "cr", "cos", "cp", "cw", "scx", "scy", "scz", "getExtendedMat3FromMat4", "mat4", "subarray", "MATRIX_ATTRIBUTES", "size", "accessor", "shaderAttributes", "instanceModelMatrix__LOCATION_0", "elementOffset", "instanceModelMatrix__LOCATION_1", "instanceModelMatrix__LOCATION_2", "instanceTranslation", "update", "attribute", "startRow", "endRow", "data", "getOrientation", "getScale", "getTranslation", "getTransformMatrix", "props", "arrayMatrix", "Array", "isArray", "constantMatrix", "length", "constantScale", "constantOrientation", "constantTranslation", "hasMatrix", "Boolean", "constant", "instanceModelMatrixData", "value", "matrix", "set", "i", "iterable", "objectInfo", "createIterable", "object", "index", "shouldComposeModelMatrix", "viewport", "coordinateSystem", "COORDINATE_SYSTEM", "CARTESIAN", "METER_OFFSETS", "DEFAULT", "isGeospatial", "DEFAULT_ROW_COUNT", "RowTableBatchAggregator", "constructor", "schema", "options", "_defineProperty", "Array", "isArray", "_headers", "key", "index", "name", "rowCount", "length", "addArrayRow", "row", "cursor", "Number", "isFinite", "rows", "addObjectRow", "getBatch", "slice", "batch", "shape", "batchType", "data", "convertToObjectRow", "arrayRow", "headers", "Error", "objectRow", "i", "length", "convertToArrayRow", "Array", "DEFAULT_ROW_COUNT", "RowTableBatchAggregator", "constructor", "schema", "options", "_defineProperty", "Array", "isArray", "_headers", "key", "index", "name", "rowCount", "length", "addArrayRow", "row", "cursor", "Number", "isFinite", "shape", "rowObject", "convertToObjectRow", "addObjectRow", "arrayRows", "rowArray", "convertToArrayRow", "objectRows", "getBatch", "rows", "slice", "batchType", "data", "DEFAULT_ROW_COUNT", "ColumnarTableBatchAggregator", "constructor", "schema", "options", "_defineProperty", "_reallocateColumns", "rowCount", "length", "addArrayRow", "row", "i", "fieldName", "columns", "addObjectRow", "getBatch", "_pruneColumns", "Array", "isArray", "field", "name", "index", "batch", "shape", "batchType", "data", "allocated", "ArrayType", "type", "Float32Array", "oldColumn", "ArrayBuffer", "isView", "typedArray", "set", "columnName", "column", "Object", "entries", "slice", "DEFAULT_OPTIONS", "shape", "batchSize", "batchDebounceMs", "limit", "_limitMB", "ERR_MESSAGE", "TableBatchBuilder", "constructor", "schema", "options", "_defineProperty", "Date", "now", "limitReached", "_this$options", "_this$options2", "Boolean", "totalLength", "totalBytes", "addRow", "row", "rowBytes", "_estimateRowMB", "Array", "isArray", "addArrayRow", "addObjectRow", "aggregator", "TableBatchType", "_getTableBatchType", "chunkComplete", "chunk", "ArrayBuffer", "bytesUsed", "byteLength", "length", "isChunkComplete", "getFullBatch", "_isFull", "_getBatch", "getFinalBatch", "Object", "keys", "rowCount", "lastBatchEmittedMs", "normalizedBatch", "getBatch", "count", "batchCount", "assign", "BaseTableBatchAggregator", "RowTableBatchAggregator", "ColumnarTableBatchAggregator", "ArrowBatch", "Error", "getMeshBoundingBox", "attributes", "minX", "Infinity", "minY", "minZ", "maxX", "maxY", "maxZ", "positions", "POSITION", "value", "len", "length", "i", "x", "y", "z", "assert", "condition", "message", "Error", "Schema", "constructor", "fields", "metadata", "_defineProperty", "assert", "Array", "isArray", "checkNames", "Map", "compareTo", "other", "length", "i", "select", "nameMap", "Object", "create", "_len", "arguments", "columnNames", "_key", "name", "selectedFields", "filter", "field", "selectAt", "_len2", "columnIndices", "_key2", "map", "index", "Boolean", "assign", "schemaOrFields", "otherSchema", "mergeMaps", "fieldMap", "mergedFields", "values", "usedNames", "console", "warn", "m1", "m2", "Field", "constructor", "name", "type", "nullable", "arguments", "length", "undefined", "metadata", "Map", "_defineProperty", "typeId", "clone", "compareTo", "other", "toString", "concat", "Type", "DataType", "isNull", "x", "typeId", "Type", "Null", "isInt", "Int", "isFloat", "Float", "isBinary", "Binary", "isUtf8", "Utf8", "isBool", "Bool", "isDecimal", "Decimal", "isDate", "Date", "isTime", "Time", "isTimestamp", "Timestamp", "isInterval", "Interval", "isList", "List", "isStruct", "Struct", "isUnion", "Union", "isFixedSizeBinary", "FixedSizeBinary", "isFixedSizeList", "FixedSizeList", "isMap", "Map", "isDictionary", "Dictionary", "NONE", "compareTo", "other", "Symbol", "toStringTag", "toString", "_Symbol$toStringTag", "constructor", "isSigned", "bitWidth", "_defineProperty", "concat", "Int8", "Int16", "Int32", "Uint8", "Int", "constructor", "Uint16", "Uint32", "Precision", "HALF", "SINGLE", "DOUBLE", "_Symbol$toStringTag2", "Symbol", "toStringTag", "Float", "DataType", "constructor", "precision", "_defineProperty", "typeId", "Type", "toString", "concat", "Float32", "Float", "constructor", "Precision", "SINGLE", "Float64", "DOUBLE", "Binary", "DataType", "typeId", "Type", "toString", "Symbol", "toStringTag", "Utf8", "DateUnit", "DAY", "MILLISECOND", "_Symbol$toStringTag3", "Date", "unit", "_defineProperty", "concat", "TimeUnit", "SECOND", "MILLISECOND", "MICROSECOND", "NANOSECOND", "_Symbol$toStringTag4", "Symbol", "toStringTag", "Time", "DataType", "constructor", "unit", "bitWidth", "_defineProperty", "typeId", "Type", "toString", "concat", "_Symbol$toStringTag5", "Symbol", "toStringTag", "Timestamp", "DataType", "constructor", "unit", "timezone", "arguments", "length", "undefined", "_defineProperty", "typeId", "Type", "toString", "concat", "TimeUnit", "IntervalUnit", "DAY_TIME", "YEAR_MONTH", "_Symbol$toStringTag6", "Symbol", "toStringTag", "Interval", "DataType", "constructor", "unit", "_defineProperty", "typeId", "Type", "toString", "concat", "_Symbol$toStringTag7", "Symbol", "toStringTag", "FixedSizeList", "DataType", "constructor", "listSize", "child", "_defineProperty", "children", "typeId", "Type", "valueType", "type", "valueField", "toString", "concat", "_Symbol$toStringTag8", "Struct", "map", "f", "name", "join", "getArrowTypeFromTypedArray", "array", "constructor", "Int8Array", "Int8", "Uint8Array", "Uint8", "Int16Array", "Int16", "Uint16Array", "Uint16", "Int32Array", "Int32", "Uint32Array", "Uint32", "Float32Array", "Float32", "Float64Array", "Float64", "Error", "deduceMeshField", "attributeName", "attribute", "optionalMetadata", "type", "getArrowTypeFromTypedArray", "value", "metadata", "makeMeshAttributeMetadata", "field", "Field", "FixedSizeList", "size", "makeMeshAttributeMetadata", "attribute", "result", "Map", "set", "byteOffset", "toString", "byteStride", "normalized", "ArrayQueue", "Array", "enqueue", "value", "push", "dequeue", "shift", "_Symbol$asyncIterator", "Symbol", "asyncIterator", "AsyncQueue", "constructor", "_defineProperty", "_values", "_settlers", "_closed", "close", "length", "resolve", "done", "Error", "settler", "reject", "next", "Promise", "validateGeometryAttributes", "attributes", "useMeshColors", "hasColorAttribute", "COLOR_0", "colors", "useColorAttribute", "constant", "value", "Float32Array", "log", "assert", "positions", "POSITION", "getGeometry", "data", "Geometry", "Error", "DEFAULT_COLOR", "defaultProps", "mesh", "type", "async", "texture", "sizeScale", "min", "_useMeshColors", "_instanced", "wireframe", "material", "getPosition", "x", "position", "getColor", "getOrientation", "getScale", "getTranslation", "getTransformMatrix", "textureParameters", "ignore", "SimpleMeshLayer", "Layer", "getShaders", "transpileToGLSL100", "isWebGL2", "context", "gl", "defines", "hasFeature", "FEATURES", "GLSL_DERIVATIVES", "DERIVATIVES_AVAILABLE", "vs", "fs", "modules", "project32", "phongLighting", "picking", "getBounds", "props", "result", "state", "positionBounds", "header", "boundingBox", "getMeshBoundingBox", "initializeState", "attributeManager", "getAttributeManager", "addInstanced", "instancePositions", "transition", "fp64", "use64bitPositions", "size", "accessor", "instanceColors", "colorFormat", "length", "normalized", "defaultValue", "instanceModelMatrix", "MATRIX_ATTRIBUTES", "setState", "emptyTexture", "Texture2D", "Uint8Array", "width", "height", "updateState", "params", "oldProps", "changeFlags", "extensionsChanged", "model", "delete", "getModel", "hasNormals", "Boolean", "NORMAL", "normals", "invalidateAll", "setTexture", "setDrawMode", "finalizeState", "draw", "uniforms", "viewport", "coordinateSystem", "setUniforms", "composeModelMatrix", "shouldComposeModelMatrix", "flatShading", "Model", "id", "geometry", "isInstanced", "sampler", "hasTexture", "ScenegraphNode", "constructor", "props", "id", "uid", "name", "display", "position", "Vector3", "rotation", "scale", "matrix", "Matrix4", "userData", "_setScenegraphNodeProps", "delete", "setProps", "toString", "getBounds", "setPosition", "assert", "length", "setRotation", "setScale", "setMatrix", "copyMatrix", "copy", "setMatrixComponents", "update", "updateMatrix", "pos", "rot", "identity", "translate", "rotateXYZ", "options", "getCoordinateUniforms", "viewMatrix", "modelMatrix", "worldMatrix", "multiplyRight", "worldInverse", "invert", "worldInverseTranspose", "transpose", "objectMatrix", "worldInverseMatrix", "worldInverseTransposeMatrix", "Object", "assign", "GroupNode", "ScenegraphNode", "constructor", "props", "Array", "isArray", "children", "log", "assert", "every", "child", "add", "push", "remove", "indexOf", "splice", "removeAll", "delete", "forEach", "getBounds", "result", "Infinity", "traverse", "node", "worldMatrix", "bounds", "min", "max", "center", "Vector3", "divide", "transformAsPoint", "halfSize", "subtract", "transformAsVector", "v", "position", "multiply", "i", "Math", "Number", "isFinite", "visitor", "Matrix4", "modelMatrix", "multiplyRight", "matrix", "ATTRIBUTE_TYPE_TO_COMPONENTS", "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY", "Int8Array", "Uint8Array", "Int16Array", "Uint16Array", "Uint32Array", "Float32Array", "accessorToJsArray", "accessor", "_animation", "ArrayType", "componentType", "components", "type", "length", "count", "buffer", "byteOffset", "bufferView", "data", "array", "Array", "from", "slicedArray", "i", "push", "slice", "helperMatrix", "Matrix4", "applyTranslationRotationScale", "gltfNode", "node", "matrix", "identity", "translation", "translate", "rotation", "rotationMatrix", "fromQuaternion", "multiplyRight", "scale", "quaternion", "Quaternion", "linearInterpolate", "target", "path", "start", "stop", "ratio", "slerp", "cubicsplineInterpolate", "p0", "outTangent0", "inTangent1", "p1", "tDiff", "t", "m0", "m1", "Math", "pow", "stepInterpolate", "value", "interpolate", "time", "input", "interpolation", "output", "maxTime", "animationTime", "nextIndex", "findIndex", "previousIndex", "max", "isArray", "log", "warn", "assert", "previousTime", "nextTime", "GLTFAnimation", "constructor", "props", "startTime", "playing", "speed", "channels", "Object", "assign", "animate", "timeMs", "absTime", "forEach", "sampler", "_node", "GLTFAnimator", "gltf", "animations", "map", "animation", "index", "name", "samplers", "accessors", "nodes", "setTime", "getAnimations", "ModelNode", "ScenegraphNode", "constructor", "gl", "props", "onBeforeRender", "AfterRender", "Model", "model", "_setModelNodeProps", "bounds", "managedResources", "setProps", "getBounds", "delete", "forEach", "resource", "draw", "setUniforms", "setAttributes", "updateModuleSettings", "GLTFMaterialParser", "constructor", "gl", "attributes", "material", "pbrDebug", "imageBasedLightingEnvironment", "lights", "useTangents", "defines", "MANUAL_SRGB", "SRGB_FAST_APPROXIMATION", "hasFeature", "FEATURES", "GLSL_TEXTURE_LOD", "USE_TEX_LOD", "uniforms", "u_Camera", "u_MetallicRoughnessValues", "parameters", "generatedTextures", "u_DiffuseEnvSampler", "getDiffuseEnvSampler", "u_SpecularEnvSampler", "getSpecularEnvSampler", "u_brdfLUT", "getBrdfTexture", "u_ScaleIBLAmbient", "u_ScaleDiffBaseMR", "u_ScaleFGDSpec", "defineIfPresent", "NORMAL", "TANGENT", "TEXCOORD_0", "parseMaterial", "value", "name", "parseTexture", "gltfTexture", "define", "texture", "sampler", "image", "source", "textureOptions", "specialTextureParameters", "compressed", "TEXTURE_MIN_FILTER", "data", "length", "LINEAR_MIPMAP_NEAREST", "LINEAR", "Texture2D", "id", "pixelStore", "UNPACK_FLIP_Y_WEBGL", "push", "parsePbrMetallicRoughness", "pbrMetallicRoughness", "baseColorTexture", "u_BaseColorFactor", "baseColorFactor", "metallicRoughnessTexture", "metallicFactor", "roughnessFactor", "pbr_uUnlit", "Boolean", "unlit", "normalTexture", "scale", "u_NormalScale", "occlusionTexture", "strength", "u_OcclusionStrength", "emissiveTexture", "u_EmissiveFactor", "emissiveFactor", "alphaMode", "alphaCutoff", "ALPHA_CUTOFF", "u_AlphaCutoff", "log", "warn", "Object", "assign", "blend", "blendEquation", "FUNC_ADD", "blendFunc", "SRC_ALPHA", "ONE_MINUS_SRC_ALPHA", "ONE", "delete", "forEach", "vs", "fs", "addVersionToShader", "gl", "source", "isWebGL2", "options", "id", "drawMode", "vertexCount", "attributes", "modelOptions", "materialParser", "GLTFMaterialParser", "log", "info", "defines", "managedResources", "push", "generatedTextures", "Object", "values", "map", "attribute", "buffer", "model", "ModelNode", "assign", "modules", "pbr", "parameters", "setProps", "setUniforms", "uniforms", "ATTRIBUTE_TYPE_TO_COMPONENTS", "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "DEFAULT_OPTIONS", "modelOptions", "pbrDebug", "imageBasedLightingEnvironment", "lights", "useTangents", "GLTFInstantiator", "constructor", "gl", "options", "Object", "assign", "instantiate", "gltf", "scenes", "map", "scene", "createScene", "createAnimator", "Array", "isArray", "animations", "GLTFAnimator", "gltfScene", "gltfNodes", "nodes", "node", "createNode", "GroupNode", "id", "name", "children", "gltfNode", "_node", "gltfChildren", "child", "mesh", "push", "createMesh", "matrix", "setMatrix", "identity", "translation", "translate", "rotation", "rotationMatrix", "Matrix4", "fromQuaternion", "multiplyRight", "scale", "gltfMesh", "_mesh", "gltfPrimitives", "primitives", "gltfPrimitive", "i", "createPrimitive", "getVertexCount", "attributes", "log", "warn", "model", "createGLTFModel", "drawMode", "mode", "vertexCount", "indices", "count", "createAttributes", "material", "bounds", "POSITION", "min", "max", "loadedAttributes", "keys", "forEach", "attrName", "createAccessor", "createBuffer", "ARRAY_BUFFER", "ELEMENT_ARRAY_BUFFER", "info", "generated", "attribute", "target", "bufferView", "lumaBuffers", "Buffer", "data", "value", "accessor", "buffer", "Accessor", "offset", "byteOffset", "stride", "byteStride", "type", "componentType", "size", "createSampler", "gltfSampler", "needsPOT", "gl", "gltf", "options", "instantiator", "GLTFInstantiator", "scenes", "instantiate", "animator", "createAnimator", "PI_4", "Math", "PI", "DEGREES_TO_RADIANS_HALF", "VERSION", "VERSION", "VERSION", "BASIS_CDN_ENCODER_WASM", "concat", "BASIS_CDN_ENCODER_JS", "loadBasisTranscoderPromise", "loadBasisTrascoderModule", "options", "modules", "basis", "loadBasisTrascoder", "BASIS", "wasmBinary", "Promise", "all", "loadLibrary", "globalThis", "initializeBasisTrascoderModule", "BasisModule", "resolve", "then", "module", "BasisFile", "initializeBasis", "loadBasisEncoderPromise", "loadBasisEncoderModule", "basisEncoder", "loadBasisEncoder", "BASIS_ENCODER", "initializeBasisEncoderModule", "BasisEncoderModule", "KTX2File", "BasisEncoder", "GL_EXTENSIONS_CONSTANTS", "COMPRESSED_RGB_S3TC_DXT1_EXT", "COMPRESSED_RGBA_S3TC_DXT1_EXT", "COMPRESSED_RGBA_S3TC_DXT3_EXT", "COMPRESSED_RGBA_S3TC_DXT5_EXT", "COMPRESSED_R11_EAC", "COMPRESSED_SIGNED_R11_EAC", "COMPRESSED_RG11_EAC", "COMPRESSED_SIGNED_RG11_EAC", "COMPRESSED_RGB8_ETC2", "COMPRESSED_RGBA8_ETC2_EAC", "COMPRESSED_SRGB8_ETC2", "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", "COMPRESSED_RGB_PVRTC_4BPPV1_IMG", "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", "COMPRESSED_RGB_PVRTC_2BPPV1_IMG", "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG", "COMPRESSED_RGB_ETC1_WEBGL", "COMPRESSED_RGB_ATC_WEBGL", "COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL", "COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL", "COMPRESSED_RGBA_ASTC_4X4_KHR", "COMPRESSED_RGBA_ASTC_5X4_KHR", "COMPRESSED_RGBA_ASTC_5X5_KHR", "COMPRESSED_RGBA_ASTC_6X5_KHR", "COMPRESSED_RGBA_ASTC_6X6_KHR", "COMPRESSED_RGBA_ASTC_8X5_KHR", "COMPRESSED_RGBA_ASTC_8X6_KHR", "COMPRESSED_RGBA_ASTC_8X8_KHR", "COMPRESSED_RGBA_ASTC_10X5_KHR", "COMPRESSED_RGBA_ASTC_10X6_KHR", "COMPRESSED_RGBA_ASTC_10X8_KHR", "COMPRESSED_RGBA_ASTC_10X10_KHR", "COMPRESSED_RGBA_ASTC_12X10_KHR", "COMPRESSED_RGBA_ASTC_12X12_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR", "COMPRESSED_RED_RGTC1_EXT", "COMPRESSED_SIGNED_RED_RGTC1_EXT", "COMPRESSED_RED_GREEN_RGTC2_EXT", "COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT", "COMPRESSED_SRGB_S3TC_DXT1_EXT", "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT", "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT", "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT", "BROWSER_PREFIXES", "WEBGL_EXTENSIONS", "WEBGL_compressed_texture_s3tc", "WEBGL_compressed_texture_s3tc_srgb", "WEBGL_compressed_texture_etc1", "WEBGL_compressed_texture_etc", "WEBGL_compressed_texture_pvrtc", "WEBGL_compressed_texture_atc", "WEBGL_compressed_texture_astc", "EXT_texture_compression_rgtc", "formats", "getSupportedGPUTextureFormats", "gl", "getWebGLContext", "undefined", "Set", "prefix", "extension", "getExtension", "concat", "gpuTextureFormat", "add", "canvas", "document", "createElement", "getContext", "error", "NUL", "Uint8Array", "KTX2_ID", "KTX2SupercompressionScheme", "KTX2DataFormatType", "KTX2DataFormatModel", "KTX2DataFormatPrimaries", "KTX2DataFormatTransfer", "KTX2DataFormatFlags", "KTX2DataFormatChannelETC1S", "KTX2DataFormatChannelUASTC", "KTX2Container", "constructor", "this", "NONE", "vendorId", "descriptorType", "BASICFORMAT", "versionNumber", "descriptorBlockSize", "colorModel", "UNSPECIFIED", "colorPrimaries", "SRGB", "transferFunction", "flags", "ALPHA_STRAIGHT", "texelBlockDimension", "x", "y", "z", "w", "bytesPlane", "samples", "BufferReader", "data", "byteOffset", "byteLength", "littleEndian", "_dataView", "DataView", "buffer", "_littleEndian", "_offset", "_nextUint8", "value", "getUint8", "_nextUint16", "getUint16", "_nextUint32", "getUint32", "_nextUint64", "_skip", "bytes", "_scan", "maxByteLength", "term", "text", "decodeText", "buffer", "TextDecoder", "decode", "Buffer", "from", "toString", "result", "read", "data", "id", "Uint8Array", "buffer", "byteOffset", "KTX2_ID", "length", "Error", "container", "KTX2Container", "headerByteLength", "Uint32Array", "BYTES_PER_ELEMENT", "headerReader", "BufferReader", "vkFormat", "_nextUint32", "typeSize", "pixelWidth", "pixelHeight", "pixelDepth", "layerCount", "faceCount", "levelCount", "supercompressionScheme", "dfdByteOffset", "dfdByteLength", "kvdByteOffset", "kvdByteLength", "sgdByteOffset", "_nextUint64", "sgdByteLength", "levelReader", "i", "levels", "push", "levelData", "uncompressedByteLength", "dfdReader", "dfd", "vendorId", "_skip", "_nextUint16", "descriptorType", "versionNumber", "descriptorBlockSize", "colorModel", "_nextUint8", "colorPrimaries", "transferFunction", "flags", "texelBlockDimension", "x", "y", "z", "w", "bytesPlane", "samples", "numSamples", "bitOffset", "bitLength", "channelID", "samplePosition", "sampleLower", "sampleUpper", "dataFormatDescriptor", "kvdReader", "_offset", "keyValueByteLength", "keyData", "_scan", "key", "decodeText", "valueData", "byteLength", "keyValue", "match", "sgdReader", "endpointCount", "selectorCount", "endpointsByteLength", "selectorsByteLength", "tablesByteLength", "extendedByteLength", "imageDescs", "imageFlags", "rgbSliceByteOffset", "rgbSliceByteLength", "alphaSliceByteOffset", "alphaSliceByteLength", "endpointsByteOffset", "selectorsByteOffset", "tablesByteOffset", "extendedByteOffset", "endpointsData", "selectorsData", "tablesData", "extendedData", "globalData", "extractMipmapImages", "data", "options", "images", "Array", "mipMapLevels", "levelWidth", "width", "levelHeight", "height", "offset", "i", "levelSize", "getLevelSize", "levelData", "getLevelData", "compressed", "format", "internalFormat", "Math", "max", "index", "isArray", "Uint8Array", "buffer", "byteOffset", "sizeFunction", "VULKAN_TO_WEBGL_FORMAT_MAP", "GL_EXTENSIONS_CONSTANTS", "COMPRESSED_RGB_S3TC_DXT1_EXT", "COMPRESSED_SRGB_S3TC_DXT1_EXT", "COMPRESSED_RGBA_S3TC_DXT1_EXT", "COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT", "COMPRESSED_RGBA_S3TC_DXT3_EXT", "COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT", "COMPRESSED_RGBA_S3TC_DXT5_EXT", "COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT", "COMPRESSED_RED_RGTC1_EXT", "COMPRESSED_SIGNED_RED_RGTC1_EXT", "COMPRESSED_RED_GREEN_RGTC2_EXT", "COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT", "COMPRESSED_RGB8_ETC2", "COMPRESSED_SRGB8_ETC2", "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", "COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", "COMPRESSED_RGBA8_ETC2_EAC", "COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", "COMPRESSED_R11_EAC", "COMPRESSED_SIGNED_R11_EAC", "COMPRESSED_RG11_EAC", "COMPRESSED_SIGNED_RG11_EAC", "COMPRESSED_RGBA_ASTC_4x4_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR", "COMPRESSED_RGBA_ASTC_5x4_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR", "COMPRESSED_RGBA_ASTC_5x5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR", "COMPRESSED_RGBA_ASTC_6x5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR", "COMPRESSED_RGBA_ASTC_6x6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR", "COMPRESSED_RGBA_ASTC_8x5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR", "COMPRESSED_RGBA_ASTC_8x6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR", "COMPRESSED_RGBA_ASTC_8x8_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR", "COMPRESSED_RGBA_ASTC_10x5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR", "COMPRESSED_RGBA_ASTC_10x6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR", "COMPRESSED_RGBA_ASTC_10x8_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR", "COMPRESSED_RGBA_ASTC_10x10_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR", "COMPRESSED_RGBA_ASTC_12x10_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR", "COMPRESSED_RGBA_ASTC_12x12_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR", "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG", "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", "mapVkFormatToWebGL", "vkFormat", "KTX2_ID", "isKTX", "data", "id", "Uint8Array", "notKTX", "byteLength", "length", "parseKTX", "arrayBuffer", "uint8Array", "ktx", "read", "mipMapLevels", "Math", "max", "levels", "width", "pixelWidth", "height", "pixelHeight", "internalFormat", "mapVkFormatToWebGL", "vkFormat", "extractMipmapImages", "sizeFunction", "level", "uncompressedByteLength", "OutputFormat", "etc1", "basisFormat", "compressed", "format", "GL_EXTENSIONS_CONSTANTS", "COMPRESSED_RGB_ETC1_WEBGL", "etc2", "bc1", "COMPRESSED_RGB_S3TC_DXT1_EXT", "bc3", "COMPRESSED_RGBA_S3TC_DXT5_EXT", "bc4", "bc5", "COMPRESSED_RGB_PVRTC_4BPPV1_IMG", "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", "COMPRESSED_RGBA_ASTC_4X4_KHR", "rgba32", "rgb565", "bgr565", "rgba4444", "data", "options", "basis", "containerFormat", "isKTX", "fileConstructors", "loadBasisEncoderModule", "parseKTX2File", "KTX2File", "BasisFile", "loadBasisTrascoderModule", "parseBasisFile", "module", "basisFile", "Uint8Array", "startTranscoding", "Error", "imageCount", "getNumImages", "images", "imageIndex", "levelsCount", "getNumLevels", "levels", "levelIndex", "push", "transcodeImage", "close", "delete", "width", "getImageWidth", "height", "getImageHeight", "hasAlpha", "getHasAlpha", "getBasisOptions", "decodedSize", "getImageTranscodedSizeInBytes", "decodedData", "ktx2File", "getLevels", "transcodeKTX2Image", "alphaFlag", "getImageLevelInfo", "levelSize", "selectSupportedBasisFormat", "alpha", "noAlpha", "toLowerCase", "supportedFormats", "getSupportedGPUTextureFormats", "has", "BasisWorkerLoader", "name", "id", "isBrowser", "module", "version", "VERSION", "worker", "extensions", "mimeTypes", "tests", "binary", "options", "basis", "format", "libraryPath", "containerFormat", "BasisLoader", "parse", "parseBasis", "DDS_CONSTANTS", "MAGIC_NUMBER", "HEADER_LENGTH", "MAGIC_NUMBER_INDEX", "HEADER_SIZE_INDEX", "HEADER_FLAGS_INDEX", "HEADER_HEIGHT_INDEX", "HEADER_WIDTH_INDEX", "MIPMAPCOUNT_INDEX", "HEADER_PF_FLAGS_INDEX", "HEADER_PF_FOURCC_INDEX", "DDSD_MIPMAPCOUNT", "DDPF_FOURCC", "DDS_PIXEL_FORMATS", "DXT1", "GL_EXTENSIONS_CONSTANTS", "COMPRESSED_RGB_S3TC_DXT1_EXT", "DXT3", "COMPRESSED_RGBA_S3TC_DXT3_EXT", "DXT5", "COMPRESSED_RGBA_S3TC_DXT5_EXT", "COMPRESSED_RGB_ATC_WEBGL", "ATCA", "COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL", "ATCI", "COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL", "getATCLevelSize", "getDxt1LevelSize", "getATCALevelSize", "getDxtXLevelSize", "getATCILevelSize", "DDS_SIZE_FUNCTIONS", "isDDS", "data", "header", "Uint32Array", "magic", "parseDDS", "Int32Array", "pixelFormatNumber", "assert", "Boolean", "fourCC", "int32ToFourCC", "internalFormat", "sizeFunction", "concat", "mipMapLevels", "Math", "max", "width", "height", "dataOffset", "image", "Uint8Array", "extractMipmapImages", "value", "String", "fromCharCode", "PVR_CONSTANTS", "MAGIC_NUMBER", "MAGIC_NUMBER_EXTRA", "HEADER_LENGTH", "HEADER_SIZE", "MAGIC_NUMBER_INDEX", "PIXEL_FORMAT_INDEX", "COLOUR_SPACE_INDEX", "HEIGHT_INDEX", "WIDTH_INDEX", "MIPMAPCOUNT_INDEX", "METADATA_SIZE_INDEX", "PVR_PIXEL_FORMATS", "GL_EXTENSIONS_CONSTANTS", "COMPRESSED_RGB_PVRTC_2BPPV1_IMG", "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG", "COMPRESSED_RGB_PVRTC_4BPPV1_IMG", "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", "COMPRESSED_RGB_ETC1_WEBGL", "COMPRESSED_RGB_S3TC_DXT1_EXT", "COMPRESSED_RGBA_S3TC_DXT3_EXT", "COMPRESSED_RGBA_S3TC_DXT5_EXT", "COMPRESSED_RGB8_ETC2", "COMPRESSED_RGBA8_ETC2_EAC", "COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", "COMPRESSED_R11_EAC", "COMPRESSED_RG11_EAC", "COMPRESSED_RGBA_ASTC_4X4_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR", "COMPRESSED_RGBA_ASTC_5X4_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR", "COMPRESSED_RGBA_ASTC_5X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR", "COMPRESSED_RGBA_ASTC_6X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR", "COMPRESSED_RGBA_ASTC_6X6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR", "COMPRESSED_RGBA_ASTC_8X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR", "COMPRESSED_RGBA_ASTC_8X6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR", "COMPRESSED_RGBA_ASTC_8X8_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR", "COMPRESSED_RGBA_ASTC_10X5_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR", "COMPRESSED_RGBA_ASTC_10X6_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR", "COMPRESSED_RGBA_ASTC_10X8_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR", "COMPRESSED_RGBA_ASTC_10X10_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR", "COMPRESSED_RGBA_ASTC_12X10_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR", "COMPRESSED_RGBA_ASTC_12X12_KHR", "COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR", "PVR_SIZE_FUNCTIONS", "pvrtc2bppSize", "pvrtc4bppSize", "dxtEtcSmallSize", "dxtEtcAstcBigSize", "atc5x4Size", "atc5x5Size", "atc6x5Size", "atc6x6Size", "atc8x5Size", "atc8x6Size", "atc8x8Size", "atc10x5Size", "atc10x6Size", "atc10x8Size", "atc10x10Size", "atc12x10Size", "atc12x12Size", "isPVR", "data", "header", "Uint32Array", "version", "parsePVR", "pvrFormat", "colourSpace", "pixelFormats", "internalFormat", "length", "sizeFunction", "mipMapLevels", "width", "height", "dataOffset", "image", "Uint8Array", "extractMipmapImages", "Math", "max", "floor", "parseCompressedTexture", "data", "isKTX", "parseKTX", "isDDS", "parseDDS", "isPVR", "parsePVR", "Error", "DEFAULT_TEXTURE_LOADER_OPTIONS", "libraryPath", "useBasis", "CompressedTextureWorkerLoader", "name", "id", "module", "version", "VERSION", "worker", "extensions", "mimeTypes", "binary", "options", "CompressedTextureLoader", "parse", "arrayBuffer", "basis", "format", "alpha", "noAlpha", "containerFormat", "parseBasis", "parseCompressedTexture", "systemIsLittleEndian", "a", "Uint32Array", "b", "Uint8Array", "buffer", "byteOffset", "byteLength", "LITTLE_ENDIAN_OS", "DTYPES", "u1", "i1", "Int8Array", "u2", "Uint16Array", "i2", "Int16Array", "u4", "i4", "Int32Array", "f4", "Float32Array", "f8", "Float64Array", "parseNPY", "arrayBuffer", "options", "_header$shape", "view", "DataView", "header", "headerEndOffset", "parseHeader", "numpyType", "descr", "ArrayType", "slice", "Error", "concat", "nArrayElements", "shape", "reduce", "arrayByteLength", "BYTES_PER_ELEMENT", "data", "majorVersion", "getUint8", "offset", "headerLength", "getUint32", "getUint16", "encoding", "decoder", "TextDecoder", "headerArray", "headerText", "decode", "JSON", "parse", "replace", "NPY_MAGIC_NUMBER", "Uint8Array", "NPYWorkerLoader", "name", "id", "module", "version", "VERSION", "worker", "extensions", "mimeTypes", "tests", "buffer", "options", "npy", "NPYLoader", "parseSync", "parseNPY", "parse", "arrayBuffer", "assert", "condition", "message", "Error", "resolveUrl", "url", "options", "absolute", "startsWith", "baseUrl", "baseUri", "uri", "Error", "concat", "substr", "lastIndexOf", "getTypedArrayForBufferView", "json", "buffers", "bufferViewIndex", "bufferView", "bufferViews", "assert", "bufferIndex", "buffer", "binChunk", "byteOffset", "Uint8Array", "arrayBuffer", "byteLength", "decode", "TYPES", "ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT", "Int8Array", "Uint8Array", "Int16Array", "Uint16Array", "Uint32Array", "Float32Array", "Float64Array", "ARRAY_TO_COMPONENT_TYPE", "Map", "ATTRIBUTE_TYPE_TO_COMPONENTS", "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE", "ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY", "getAccessorTypeFromSize", "size", "type", "getComponentTypeFromArray", "typedArray", "componentType", "get", "constructor", "Error", "getAccessorArrayTypeAndLength", "accessor", "bufferView", "ArrayType", "components", "bytesPerComponent", "length", "count", "byteLength", "assert", "getMemoryUsageGLTF", "gltf", "images", "bufferViews", "imageBufferViews", "map", "i", "filter", "view", "includes", "bufferMemory", "reduce", "acc", "pixelCount", "image", "width", "height", "Math", "ceil", "DEFAULT_GLTF_JSON", "asset", "version", "generator", "buffers", "GLTFScenegraph", "constructor", "gltf", "_defineProperty", "json", "sourceBuffers", "byteLength", "getApplicationData", "key", "data", "getExtraData", "extras", "getExtension", "extensionName", "isExtension", "getUsedExtensions", "find", "name", "extensions", "getRequiredExtension", "isRequired", "getRequiredExtensions", "extensionsRequired", "extensionsUsed", "getRemovedExtensions", "extensionsRemoved", "getObjectExtension", "object", "getScene", "index", "getObject", "getNode", "getSkin", "getMesh", "getMaterial", "getAccessor", "getTexture", "getSampler", "getImage", "getBufferView", "getBuffer", "array", "Error", "concat", "getTypedArrayForBufferView", "bufferView", "bufferIndex", "buffer", "binChunk", "assert", "byteOffset", "Uint8Array", "arrayBuffer", "getTypedArrayForAccessor", "accessor", "ArrayType", "length", "getAccessorArrayTypeAndLength", "getTypedArrayForImageData", "image", "addApplicationData", "addExtraData", "addObjectExtension", "registerUsedExtension", "setObjectExtension", "removeObjectExtension", "extension", "addExtension", "extensionData", "arguments", "undefined", "addRequiredExtension", "registerRequiredExtension", "ext", "push", "removeExtension", "_removeStringFromArray", "Array", "isArray", "includes", "setDefaultScene", "sceneIndex", "scene", "addScene", "nodeIndices", "scenes", "nodes", "addNode", "node", "meshIndex", "matrix", "nodeData", "mesh", "addMesh", "attributes", "indices", "material", "mode", "accessors", "_addAttributes", "glTFMesh", "primitives", "indicesAccessor", "_addIndices", "Number", "isFinite", "meshes", "addPointCloud", "accessorIndices", "addImage", "imageData", "mimeTypeOpt", "metadata", "getBinaryImageMetadata", "mimeType", "bufferViewIndex", "addBufferView", "glTFImage", "images", "glTFBufferView", "padToNBytes", "bufferViews", "addAccessor", "glTFAccessor", "type", "getAccessorTypeFromSize", "size", "componentType", "count", "max", "min", "addBinaryBuffer", "sourceBuffer", "minMax", "_getAccessorMinMax", "accessorDefaults", "getComponentTypeFromArray", "Math", "round", "Object", "assign", "addTexture", "texture", "imageIndex", "glTFTexture", "source", "textures", "addMaterial", "pbrMaterialInfo", "materials", "createBinaryChunk", "_this$json", "_this$json$buffers", "totalByteLength", "ArrayBuffer", "targetArray", "dstByteOffset", "copyToArray", "binary", "string", "found", "indexOf", "splice", "result", "attributeKey", "attributeData", "attrName", "_getGltfAttributeName", "value", "attributeName", "toLowerCase", "initValues", "subarray", "componentIndex", "wasm_base", "wasm_simd", "detector", "Uint8Array", "wasmpack", "FILTERS", "NONE", "OCTAHEDRAL", "QUATERNION", "EXPONENTIAL", "DECODERS", "ATTRIBUTES", "TRIANGLES", "INDICES", "meshoptDecodeGltfBuffer", "target", "count", "size", "source", "mode", "filter", "arguments", "length", "undefined", "instance", "loadWasmInstance", "decode", "exports", "DECODERS", "FILTERS", "wasmPromise", "loadWasmModule", "wasm", "wasm_base", "WebAssembly", "validate", "detector", "wasm_simd", "console", "log", "result", "instantiate", "unpack", "__wasm_call_ctors", "data", "Uint8Array", "i", "ch", "charCodeAt", "write", "wasmpack", "buffer", "slice", "fun", "sbrk", "count4", "tp", "sp", "heap", "memory", "set", "res", "subarray", "Error", "concat", "EXT_MESHOPT_COMPRESSION", "name", "decode", "gltfData", "options", "_options$gltf", "scenegraph", "GLTFScenegraph", "gltf", "decompressMeshes", "promises", "bufferViewIndex", "json", "bufferViews", "push", "decodeMeshoptBufferView", "Promise", "all", "removeExtension", "bufferView", "meshoptExtension", "getObjectExtension", "byteOffset", "byteLength", "byteStride", "count", "mode", "filter", "buffer", "bufferIndex", "buffers", "source", "Uint8Array", "arrayBuffer", "result", "meshoptDecodeGltfBuffer", "name", "EXT_TEXTURE_WEBP", "name", "preprocess", "gltfData", "options", "scenegraph", "GLTFScenegraph", "isImageFormatSupported", "getRequiredExtensions", "includes", "Error", "concat", "json", "texture", "textures", "extension", "getObjectExtension", "source", "removeObjectExtension", "removeExtension", "name", "preprocess", "KHR_TEXTURE_BASISU", "name", "preprocess", "gltfData", "options", "scene", "GLTFScenegraph", "json", "texture", "textures", "extension", "getObjectExtension", "source", "removeObjectExtension", "removeExtension", "decode", "name", "preprocess", "VERSION", "DEFAULT_DRACO_OPTIONS", "draco", "decoderType", "WebAssembly", "libraryPath", "extraAttributes", "attributeNameEntry", "undefined", "DracoLoader", "name", "id", "isBrowser", "module", "shapes", "version", "VERSION", "worker", "extensions", "mimeTypes", "binary", "tests", "options", "getDracoSchema", "attributes", "loaderData", "indices", "metadataMap", "makeMetadata", "metadata", "fields", "namedLoaderDataAttributes", "transformAttributesLoaderData", "attributeName", "attribute", "field", "getArrowFieldFromAttribute", "push", "indicesField", "Schema", "result", "key", "dracoAttribute", "name", "undefined", "deduceMeshField", "Map", "set", "concat", "JSON", "stringify", "DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP", "POSITION", "NORMAL", "COLOR", "TEX_COORD", "DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP", "Int8Array", "Uint8Array", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float32Array", "INDEX_ITEM_SIZE", "DracoParser", "constructor", "draco", "_defineProperty", "decoder", "Decoder", "metadataQuerier", "MetadataQuerier", "destroy", "parseSync", "arrayBuffer", "options", "arguments", "length", "undefined", "buffer", "DecoderBuffer", "Init", "byteLength", "_disableAttributeTransforms", "geometry_type", "GetEncodedGeometryType", "dracoGeometry", "TRIANGULAR_MESH", "Mesh", "PointCloud", "dracoStatus", "DecodeBufferToMesh", "POINT_CLOUD", "DecodeBufferToPointCloud", "Error", "ok", "ptr", "message", "concat", "error_msg", "loaderData", "_getDracoLoaderData", "geometry", "_getMeshData", "boundingBox", "getMeshBoundingBox", "attributes", "schema", "getDracoSchema", "indices", "data", "loader", "header", "vertexCount", "num_points", "metadata", "_getTopLevelMetadata", "_getDracoAttributes", "num_attributes", "num_faces", "dracoAttributes", "attributeId", "dracoAttribute", "GetAttribute", "_getAttributeMetadata", "unique_id", "attribute_type", "data_type", "num_components", "byte_offset", "byte_stride", "normalized", "attribute_index", "quantization", "_getQuantizationTransform", "quantization_transform", "octahedron", "_getOctahedronTransform", "octahedron_transform", "_getMeshAttributes", "positionAttribute", "topology", "mode", "value", "_getTriangleStripIndices", "size", "_getTriangleListIndices", "loaderAttribute", "Object", "values", "attributeName", "_deduceAttributeName", "name", "_getAttributeValues", "byteOffset", "byteStride", "numFaces", "numIndices", "_malloc", "GetTrianglesUInt32Array", "HEAPF32", "slice", "_free", "dracoArray", "DracoInt32Array", "GetTriangleStripsFromMesh", "getUint32Array", "attribute", "TypedArrayCtor", "numComponents", "numPoints", "numValues", "BYTES_PER_ELEMENT", "dataType", "getDracoDataType", "GetAttributeDataArrayForAllPoints", "uniqueId", "attributeUniqueId", "entries", "extraAttributes", "thisAttributeType", "dracoAttributeConstant", "attributeType", "entryName", "attributeNameEntry", "string", "dracoMetadata", "GetMetadata", "_getDracoMetadata", "GetAttributeMetadata", "result", "numEntries", "NumEntries", "entryIndex", "GetEntryName", "_getDracoMetadataField", "GetIntEntryArray", "intArray", "getInt32Array", "int", "GetIntEntry", "GetStringEntry", "double", "GetDoubleEntry", "quantizedAttributes", "octahedronAttributes", "skipAttributes", "dracoAttributeName", "SkipAttributeTransform", "skip", "map", "type", "includes", "transform", "AttributeQuantizationTransform", "InitFromAttribute", "quantization_bits", "range", "min_values", "i", "min_value", "DT_FLOAT32", "DT_INT8", "DT_INT16", "DT_INT32", "DT_UINT8", "DT_UINT16", "DT_UINT32", "DT_INVALID", "GetValue", "DRACO_DECODER_VERSION", "DRACO_ENCODER_VERSION", "STATIC_DECODER_URL", "concat", "DRACO_JS_DECODER_URL", "DRACO_WASM_WRAPPER_URL", "DRACO_WASM_DECODER_URL", "DRACO_ENCODER_URL", "loadDecoderPromise", "loadDracoDecoderModule", "options", "modules", "draco3d", "loadDecoderPromise", "createDecoderModule", "then", "draco", "loadDracoDecoder", "loadDracoDecoder", "options", "DracoDecoderModule", "wasmBinary", "draco", "decoderType", "loadLibrary", "DRACO_JS_DECODER_URL", "Promise", "all", "DRACO_WASM_WRAPPER_URL", "DRACO_WASM_DECODER_URL", "globalThis", "initializeDracoDecoder", "resolve", "onModuleLoaded", "DracoLoader", "DracoWorkerLoader", "parse", "arrayBuffer", "options", "draco", "loadDracoDecoderModule", "dracoParser", "DracoParser", "parseSync", "destroy", "getGLTFAccessors", "attributes", "accessors", "name", "attribute", "glTFAccessor", "getGLTFAccessor", "buffer", "size", "count", "getAccessorData", "value", "byteOffset", "type", "getAccessorTypeFromSize", "componentType", "getComponentTypeFromArray", "ArrayBuffer", "isView", "toTypedArray", "Float32Array", "length", "array", "ArrayType", "convertTypedArrays", "arguments", "undefined", "Array", "isArray", "KHR_DRACO_MESH_COMPRESSION", "name", "preprocess", "gltfData", "options", "context", "scenegraph", "Scenegraph", "primitive", "makeMeshPrimitiveIterator", "getObjectExtension", "decode", "_options$gltf", "gltf", "decompressMeshes", "promises", "push", "decompressPrimitive", "Promise", "all", "removeExtension", "encode", "arguments", "length", "undefined", "mesh", "json", "meshes", "compressMesh", "addRequiredExtension", "dracoExtension", "buffer", "getTypedArrayForBufferView", "bufferView", "bufferCopy", "sliceArrayBuffer", "byteOffset", "parse", "dracoOptions", "decodedData", "DracoLoader", "decodedAttributes", "getGLTFAccessors", "attributes", "attributeName", "decodedAttribute", "Object", "entries", "accessorIndex", "accessor", "getAccessor", "min", "max", "indices", "getGLTFAccessor", "checkPrimitive", "_context$parseSync", "mode", "DracoWriter", "Error", "compressedData", "encodeSync", "parseSync", "call", "fauxAccessors", "_addFauxAttributes", "bufferViewIndex", "addBufferView", "glTFMesh", "primitives", "extensions", "keys", "decode", "name", "COMPONENTS", "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "BYTES", "EXT_MESHOPT_TRANSFORM", "name", "scratchVector", "Vector3", "scratchRotationMatrix", "Matrix3", "scratchScaleMatrix", "decode", "gltfData", "options", "gltfScenegraph", "GLTFScenegraph", "extension", "getExtension", "materials", "json", "i", "length", "transformTexCoords", "materialIndex", "_gltfData$json$materi", "_material$pbrMetallic", "_material$pbrMetallic2", "processedTexCoords", "material", "baseColorTexture", "pbrMetallicRoughness", "transformPrimitives", "emisiveTexture", "emissiveTexture", "normalTexture", "occlusionTexture", "metallicRoughnessTexture", "texture", "transformParameters", "getTransformParameters", "meshes", "mesh", "primitive", "primitives", "Number", "isFinite", "transformPrimitive", "_texture$extensions", "textureInfo", "extensions", "texCoord", "originalTexCoord", "isProcessed", "findIndex", "_ref", "original", "newTexCoord", "matrix", "makeTransformationMatrix", "push", "texCoordAccessor", "attributes", "concat", "_gltfData$json$access", "accessor", "accessors", "bufferView", "_gltfData$json$buffer", "bufferViews", "arrayBuffer", "byteOffset", "bufferByteOffset", "buffers", "buffer", "ArrayType", "getAccessorArrayTypeAndLength", "bytes", "BYTES", "componentType", "components", "COMPONENTS", "type", "elementAddressScale", "byteStride", "result", "Float32Array", "count", "uv", "set", "transformByMatrix3", "updateGltf", "createAttribute", "newTexCoordArray", "byteLength", "originalAccessor", "extensionData", "offset", "rotation", "scale", "translationMatirx", "rotationMatirx", "Math", "cos", "sin", "scaleMatrix", "multiplyRight", "decode", "encode", "name", "KHR_LIGHTS_PUNCTUAL", "name", "decode", "gltfData", "gltfScenegraph", "GLTFScenegraph", "json", "extension", "getExtension", "lights", "removeExtension", "node", "nodes", "nodeExtension", "getObjectExtension", "light", "removeObjectExtension", "encode", "addExtension", "assert", "addObjectExtension", "decode", "encode", "name", "KHR_MATERIALS_UNLIT", "name", "decode", "gltfData", "gltfScenegraph", "GLTFScenegraph", "json", "material", "materials", "extension", "extensions", "KHR_materials_unlit", "unlit", "removeObjectExtension", "removeExtension", "encode", "addObjectExtension", "addExtension", "decode", "encode", "name", "KHR_TECHNIQUES_WEBGL", "name", "decode", "gltfData", "gltfScenegraph", "GLTFScenegraph", "json", "extension", "getExtension", "techniques", "resolveTechniques", "material", "materials", "materialExtension", "getObjectExtension", "technique", "Object", "assign", "values", "resolveValues", "removeObjectExtension", "removeExtension", "encode", "options", "techniquesExtension", "programs", "shaders", "textDecoder", "TextDecoder", "forEach", "shader", "Number", "isFinite", "bufferView", "code", "getTypedArrayForBufferView", "Error", "program", "fragmentShader", "vertexShader", "keys", "uniforms", "uniform", "value", "index", "undefined", "texture", "getTexture", "decode", "name", "EXT_FEATURE_METADATA", "name", "decode", "gltfData", "scenegraph", "GLTFScenegraph", "decodeExtFeatureMetadata", "_extension$schema", "extension", "getExtension", "schemaClasses", "schema", "classes", "featureTables", "featureTextures", "console", "warn", "schemaName", "schemaClass", "featureTable", "findFeatureTableByName", "handleFeatureTableProperties", "propertyName", "properties", "_featureTable$propert", "schemaProperty", "featureTableProperty", "numberOfFeatures", "count", "data", "getPropertyDataFromBinarySource", "bufferView", "getTypedArrayForBufferView", "type", "stringOffsetBufferView", "offsetsData", "getStringAttributes", "schemaClassName", "featureTableName", "class", "stringsCount", "stringsArray", "textDecoder", "TextDecoder", "stringOffset", "bytesPerStringSize", "index", "stringByteSize", "stringData", "subarray", "stringAttribute", "push", "EXTENSIONS", "EXT_meshopt_compression", "EXT_texture_webp", "KHR_texture_basisu", "KHR_draco_mesh_compression", "KHR_lights_punctual", "KHR_materials_unlit", "KHR_techniques_webgl", "KHR_texture_transform", "EXT_feature_metadata", "preprocessExtensions", "gltf", "options", "arguments", "length", "undefined", "context", "extensions", "filter", "extension", "useExtension", "name", "_extension$preprocess", "preprocess", "call", "decodeExtensions", "_extension$decode", "decode", "extensionName", "_options$gltf", "excludes", "excludeExtensions", "exclude", "KHR_BINARY_GLTF", "preprocess", "gltfData", "gltfScenegraph", "GLTFScenegraph", "json", "image", "images", "extension", "getObjectExtension", "KHR_BINARY_GLTF", "Object", "assign", "removeObjectExtension", "buffers", "uri", "removeExtension", "GLTF_ARRAYS", "accessors", "animations", "buffers", "bufferViews", "images", "materials", "meshes", "nodes", "samplers", "scenes", "skins", "textures", "GLTF_KEYS", "accessor", "buffer", "bufferView", "image", "material", "mesh", "node", "sampler", "scene", "skin", "texture", "GLTFV1Normalizer", "constructor", "_defineProperty", "normalize", "gltf", "options", "json", "asset", "version", "undefined", "console", "warn", "concat", "Error", "_addAsset", "_convertTopLevelObjectsToArrays", "KHR_binary_glTF", "preprocess", "_convertObjectIdsToArrayIndices", "_updateObjects", "_updateMaterial", "generator", "arrayName", "_convertTopLevelObjectToArray", "mapName", "objectMap", "Array", "isArray", "id", "object", "index", "length", "push", "idToIndexMap", "_convertIdsToIndices", "_convertIdToIndex", "_convertTextureIds", "_convertMeshIds", "_convertNodeIds", "_convertSceneIds", "source", "primitive", "primitives", "attributes", "indices", "attributeName", "children", "map", "child", "topLevelArrayName", "key", "Number", "isFinite", "type", "_material$values", "_material$values2", "_material$values3", "pbrMetallicRoughness", "baseColorFactor", "metallicFactor", "roughnessFactor", "textureId", "values", "tex", "texture2d_0", "diffuseTex", "textureIndex", "findIndex", "baseColorTexture", "normalizeGLTFV1", "arguments", "COMPONENTS", "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "BYTES", "GL_SAMPLER", "TEXTURE_MAG_FILTER", "TEXTURE_MIN_FILTER", "TEXTURE_WRAP_S", "TEXTURE_WRAP_T", "REPEAT", "LINEAR", "NEAREST_MIPMAP_LINEAR", "SAMPLER_PARAMETER_GLTF_TO_GL", "magFilter", "minFilter", "wrapS", "wrapT", "DEFAULT_SAMPLER", "getBytesFromComponentType", "componentType", "getSizeFromAccessorType", "type", "GLTFPostProcessor", "constructor", "_defineProperty", "postProcess", "gltf", "options", "arguments", "length", "undefined", "json", "buffers", "images", "baseUri", "assert", "_resolveTree", "bufferViews", "map", "bufView", "i", "_resolveBufferView", "image", "_resolveImage", "samplers", "sampler", "_resolveSampler", "textures", "texture", "_resolveTexture", "accessors", "accessor", "_resolveAccessor", "materials", "material", "_resolveMaterial", "meshes", "mesh", "_resolveMesh", "nodes", "node", "_resolveNode", "skins", "skin", "_resolveSkin", "scenes", "scene", "_resolveScene", "getScene", "index", "_get", "getNode", "getSkin", "getMesh", "getMaterial", "getAccessor", "getCamera", "getTexture", "getSampler", "getImage", "getBufferView", "getBuffer", "array", "object", "console", "warn", "concat", "id", "children", "child", "reduce", "accum", "meshIndex", "primitives", "camera", "inverseBindMatrices", "primitive", "attributes", "attribute", "indices", "normalTexture", "occlusionTexture", "occlustionTexture", "emissiveTexture", "emmisiveTexture", "emissiveFactor", "pbrMetallicRoughness", "mr", "baseColorTexture", "metallicRoughnessTexture", "bufferView", "bytesPerComponent", "components", "bytesPerElement", "buffer", "ArrayType", "byteLength", "getAccessorArrayTypeAndLength", "byteOffset", "cutBuffer", "arrayBuffer", "slice", "byteStride", "_getValueFromInterleavedBuffer", "count", "value", "result", "Uint8Array", "elementOffset", "set", "source", "parameters", "key", "glEnum", "_enumSamplerParameter", "preloadedImage", "bufferIndex", "data", "_resolveCamera", "perspective", "orthographic", "postProcessGLTF", "MAGIC_glTF", "GLB_FILE_HEADER_SIZE", "GLB_CHUNK_HEADER_SIZE", "GLB_CHUNK_TYPE_JSON", "GLB_CHUNK_TYPE_BIN", "GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED", "GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED", "GLB_V1_CONTENT_FORMAT_JSON", "LE", "getMagicString", "dataView", "byteOffset", "arguments", "length", "undefined", "concat", "String", "fromCharCode", "getUint8", "isGLB", "arrayBuffer", "options", "DataView", "magic", "magic1", "getUint32", "glb", "type", "version", "byteLength", "Object", "assign", "header", "hasBinChunk", "json", "binChunks", "parseGLBV1", "parseGLBV2", "Error", "assert", "contentLength", "contentFormat", "parseJSONChunk", "parseBINChunk", "parseGLBChunksSync", "chunkLength", "chunkFormat", "strict", "padToNBytes", "jsonChunk", "Uint8Array", "buffer", "textDecoder", "TextDecoder", "jsonText", "decode", "JSON", "parse", "push", "parseGLTF", "gltf", "arrayBufferOrString", "_options$gltf", "_options$gltf2", "_options$gltf3", "_options$gltf4", "byteOffset", "arguments", "length", "undefined", "options", "context", "parseGLTFContainerSync", "normalizeGLTFV1", "normalize", "preprocessExtensions", "promises", "loadBuffers", "json", "buffers", "loadImages", "promise", "push", "decodeExtensions", "Promise", "all", "postProcess", "postProcessGLTF", "data", "uri", "baseUri", "ArrayBuffer", "isGLB", "textDecoder", "TextDecoder", "decode", "parseJSON", "glb", "parseGLBSync", "assert", "type", "concat", "_glb", "Array", "fill", "header", "hasBinChunk", "binChunks", "arrayBuffer", "byteLength", "images", "i", "buffer", "_context$fetch", "_response$arrayBuffer", "fetch", "resolveUrl", "response", "call", "imageIndices", "getReferencesImageIndices", "imageIndex", "loadImage", "Set", "textures", "texture", "source", "add", "from", "sort", "image", "index", "parse", "hasOwnProperty", "bufferView", "Number", "isFinite", "array", "getTypedArrayForBufferView", "sliceArrayBuffer", "parsedImage", "ImageLoader", "BasisLoader", "mimeType", "basis", "format", "selectSupportedBasisFormat", "compressed", "mipmaps", "width", "height", "GLTFLoader", "name", "id", "module", "version", "VERSION", "extensions", "mimeTypes", "text", "binary", "tests", "parse", "options", "gltf", "normalize", "loadBuffers", "loadImages", "decompressMeshes", "postProcess", "log", "console", "deprecatedOptions", "fetchImages", "createImages", "decompress", "arrayBuffer", "arguments", "length", "undefined", "context", "byteOffset", "parseGLTF", "waitForGLTFAssets", "gltfObjects", "remaining", "scenes", "forEach", "scene", "traverse", "model", "Object", "values", "getUniforms", "uniform", "loaded", "push", "waitWhileCondition", "some", "condition", "Promise", "resolve", "requestAnimationFrame", "DEFAULT_COLOR", "defaultProps", "scenegraph", "type", "value", "async", "getScene", "gltf", "scenes", "scene", "getAnimator", "animator", "_animations", "sizeScale", "min", "sizeMinPixels", "sizeMaxPixels", "Number", "MAX_SAFE_INTEGER", "getPosition", "x", "position", "getColor", "_lighting", "_imageBasedLightingEnvironment", "getOrientation", "getScale", "getTranslation", "getTransformMatrix", "loaders", "GLTFLoader", "ScenegraphLayer", "Layer", "getShaders", "modules", "project32", "picking", "props", "push", "pbr", "vs", "fs", "initializeState", "attributeManager", "getAttributeManager", "addInstanced", "instancePositions", "size", "fp64", "use64bitPositions", "accessor", "transition", "instanceColors", "colorFormat", "length", "normalized", "defaultValue", "instanceModelMatrix", "MATRIX_ATTRIBUTES", "updateState", "params", "oldProps", "_updateScenegraph", "_applyAnimationsProp", "state", "finalizeState", "context", "_deleteScenegraph", "gl", "scenegraphData", "ScenegraphNode", "gltfObjects", "createGLTFObjects", "_getModelOptions", "waitForGLTFAssets", "then", "setNeedsRedraw", "log", "deprecated", "options", "layer", "_applyAllAttributes", "setState", "warn", "attributesAvailable", "allAttributes", "getAttributes", "traverse", "model", "_setModelAttributes", "animationsProp", "animations", "getAnimations", "Object", "keys", "sort", "forEach", "key", "animation", "assign", "isFinite", "number", "findResult", "find", "name", "delete", "env", "waitForFullLoad", "imageBasedLightingEnvironment", "modelOptions", "isInstanced", "transpileToGLSL100", "isWebGL2", "useTangents", "updateAttributes", "changedAttributes", "draw", "moduleParameters", "parameters", "animate", "timeline", "getTime", "viewport", "opacity", "coordinateSystem", "numInstances", "getNumInstances", "worldMatrix", "setInstanceCount", "updateModuleSettings", "uniforms", "composeModelMatrix", "shouldComposeModelMatrix", "sceneModelMatrix", "u_Camera", "getUniforms", "project_uCameraPosition", "validateGeometryAttributes", "attributes", "hasColorAttribute", "COLOR_0", "colors", "constant", "value", "Float32Array", "defaultProps", "pbrMaterial", "type", "featureIds", "optional", "MeshLayer", "SimpleMeshLayer", "getShaders", "shaders", "modules", "push", "pbr", "vs", "fs", "initializeState", "props", "attributeManager", "getAttributeManager", "add", "featureIdsPickingColors", "size", "noAlloc", "update", "calculateFeatureIdsPickingColors", "updateState", "params", "oldProps", "updatePbrMaterialUniforms", "draw", "opts", "state", "model", "setUniforms", "u_Camera", "getUniforms", "project_uCameraPosition", "pickFeatureIds", "Boolean", "getModel", "mesh", "id", "materialParser", "parseMaterial", "setState", "Model", "context", "gl", "geometry", "defines", "HAS_UV_REGIONS", "uvRegions", "parameters", "isInstanced", "uniforms", "unlit", "pbrMetallicRoughness", "baseColorTexture", "delete", "GLTFMaterialParser", "NORMAL", "normals", "TEXCOORD_0", "texCoords", "material", "pbrDebug", "imageBasedLightingEnvironment", "lights", "useTangents", "attribute", "Uint8ClampedArray", "length", "pickingColor", "index", "encodePickingColor", "finalizeState", "WGS84_RADIUS_X", "WGS84_RADIUS_Y", "WGS84_RADIUS_Z", "WGS84_CONSTANTS", "radii", "radiiSquared", "oneOverRadii", "oneOverRadiiSquared", "maximumRadius", "Math", "max", "centerToleranceSquared", "identity", "x", "scratchVector", "Vector3", "fromCartographic", "cartographic", "result", "map", "longitude", "latitude", "height", "y", "z", "fromCartographicToRadians", "vector", "config", "_cartographicRadians", "toRadians", "toCartographic", "vector", "cartographic", "map", "identity", "longitude", "latitude", "height", "x", "y", "z", "toCartographicFromRadians", "config", "_cartographicRadians", "toDegrees", "scratchVector", "Vector3", "scaleToGeodeticSurfaceIntersection", "scaleToGeodeticSurfaceGradient", "cartesian", "ellipsoid", "result", "oneOverRadii", "oneOverRadiiSquared", "centerToleranceSquared", "from", "positionX", "x", "positionY", "y", "positionZ", "z", "oneOverRadiiX", "oneOverRadiiY", "oneOverRadiiZ", "x2", "y2", "z2", "squaredNorm", "ratio", "Math", "sqrt", "Number", "isFinite", "undefined", "intersection", "copy", "scale", "to", "oneOverRadiiSquaredX", "oneOverRadiiSquaredY", "oneOverRadiiSquaredZ", "gradient", "set", "lambda", "len", "correction", "xMultiplier", "yMultiplier", "zMultiplier", "func", "xMultiplier2", "yMultiplier2", "zMultiplier2", "xMultiplier3", "yMultiplier3", "zMultiplier3", "denominator", "derivative", "abs", "_MathUtils", "EPSILON12", "EPSILON14", "scratchOrigin", "Vector3", "VECTOR_PRODUCT_LOCAL_FRAME", "up", "south", "north", "west", "east", "down", "degeneratePositionLocalFrame", "scratchAxisVectors", "scratchVector1", "scratchVector2", "scratchVector3", "ellipsoid", "firstAxis", "secondAxis", "thirdAxis", "cartesianOrigin", "result", "thirdAxisInferred", "assert", "firstAxisVector", "secondAxisVector", "thirdAxisVector", "origin", "copy", "atPole", "equalsEpsilon", "x", "y", "sign", "Math", "z", "fromArray", "scale", "set", "normalize", "geodeticSurfaceNormal", "cross", "scratchVector", "Vector3", "scratchNormal", "scratchK", "scratchPosition", "scratchHeight", "scratchCartesian", "Ellipsoid", "constructor", "x", "y", "z", "_MathUtils", "EPSILON1", "assert", "radii", "Vector3", "radiiSquared", "radiiToTheFourth", "oneOverRadii", "oneOverRadiiSquared", "minimumRadius", "Math", "min", "maximumRadius", "max", "squaredXOverSquaredZ", "Object", "freeze", "equals", "right", "Boolean", "toString", "cartographicToCartesian", "cartographic", "result", "normal", "scratchNormal", "k", "scratchK", "height", "geodeticSurfaceNormalCartographic", "copy", "scale", "gamma", "sqrt", "dot", "add", "to", "cartesianToCartographic", "cartesian", "scratchCartesian", "from", "point", "scaleToGeodeticSurface", "scratchPosition", "undefined", "geodeticSurfaceNormal", "h", "scratchHeight", "subtract", "longitude", "atan2", "latitude", "asin", "sign", "length", "toCartographicFromRadians", "eastNorthUpToFixedFrame", "origin", "Matrix4", "localFrameToFixedFrame", "firstAxis", "secondAxis", "thirdAxis", "geocentricSurfaceNormal", "scratchVector", "normalize", "cartographicVectorRadians", "fromCartographicToRadians", "cosLatitude", "cos", "set", "sin", "scaleToGeocentricSurface", "positionX", "positionY", "positionZ", "beta", "multiplyScalar", "transformPositionToScaledSpace", "position", "transformPositionFromScaledSpace", "getSurfaceNormalIntersectionWithZAxis", "buffer", "EPSILON15", "abs", "WGS84_RADIUS_X", "WGS84_RADIUS_Y", "WGS84_RADIUS_Z", "timestamp", "window", "performance", "now", "process", "hrtime", "timeParts", "Date", "Stat", "constructor", "name", "type", "sampleSize", "time", "count", "samples", "lastTiming", "lastSampleTime", "lastSampleCount", "_count", "_time", "_samples", "_startTime", "_timerPending", "reset", "setSampleSize", "incrementCount", "addCount", "decrementCount", "subtractCount", "value", "_checkSampling", "addTime", "timeStart", "getHiResTimestamp", "timeEnd", "getSampleAverageCount", "getSampleAverageTime", "getSampleHz", "getAverageCount", "getAverageTime", "getHz", "Stats", "constructor", "options", "id", "stats", "_initializeStats", "Object", "seal", "get", "name", "type", "_getOrCreate", "size", "keys", "length", "reset", "stat", "values", "forEach", "fn", "getTable", "table", "time", "count", "average", "getAverageTime", "hz", "getHz", "result", "Stat", "DoublyLinkedListNode", "constructor", "item", "previous", "next", "_defineProperty", "DoublyLinkedList", "constructor", "_defineProperty", "length", "_length", "add", "item", "node", "DoublyLinkedListNode", "tail", "next", "head", "remove", "previous", "splice", "nextNode", "_insert", "oldNodeNext", "TilesetCache", "constructor", "_defineProperty", "_list", "DoublyLinkedList", "_sentinel", "add", "_trimTiles", "reset", "splice", "tail", "touch", "tile", "node", "_cacheNode", "tileset", "addCallback", "unloadTile", "unloadCallback", "remove", "unloadTiles", "trimTiles", "list", "maximumMemoryUsageInBytes", "maximumMemoryUsage", "sentinel", "head", "gpuMemoryUsageInBytes", "item", "next", "trim", "calculateTransformProps", "tileHeader", "tile", "assert", "rtcCenter", "gltfUpAxis", "computedTransform", "boundingVolume", "center", "modelMatrix", "Matrix4", "translate", "rotationY", "rotateX", "Math", "PI", "multiplyRight", "rotationX", "rotateY", "isQuantized", "quantizedVolumeOffset", "scale", "quantizedVolumeScale", "cartesianOrigin", "Vector3", "cartesianModelMatrix", "cartographicOrigin", "Ellipsoid", "WGS84", "cartesianToCartographic", "fromFixedFrameMatrix", "eastNorthUpToFixedFrame", "toFixedFrameMatrix", "invert", "cartographicModelMatrix", "coordinateSystem", "scratchVector", "Vector3", "scratchPosition", "cullingVolume", "CullingVolume", "Plane", "getFrameState", "viewport", "frameNumber", "cameraDirection", "cameraUp", "height", "metersPerUnit", "distanceScales", "viewportCenterCartesian", "worldToCartesian", "center", "enuToFixedTransform", "Ellipsoid", "WGS84", "eastNorthUpToFixedFrame", "cameraPositionCartographic", "unprojectPosition", "cameraPosition", "cameraPositionCartesian", "cartographicToCartesian", "cameraDirectionCartesian", "transformAsVector", "scale", "normalize", "cameraUpCartesian", "commonSpacePlanesToWGS84", "ViewportClass", "constructor", "longitude", "latitude", "width", "bearing", "zoom", "topDownViewport", "pitch", "camera", "position", "direction", "up", "sseDenominator", "limitSelectedTiles", "tiles", "frameState", "maximumTilesSelected", "length", "tuples", "viewportLongitude", "viewportLatitude", "index", "tile", "entries", "header", "mbs", "deltaLon", "Math", "abs", "deltaLat", "distance", "sqrt", "push", "tuplesSorted", "sort", "a", "b", "selectedTiles", "i", "unselectedTiles", "frustumPlanes", "getFrustumPlanes", "nearCenterCommon", "closestPointOnPlane", "near", "nearCenterCartesian", "cameraCartesian", "planes", "fromPointNormal", "copy", "subtract", "dir", "plane", "posCommon", "cartesianPos", "refPoint", "out", "arguments", "undefined", "distanceToRef", "normal", "dot", "add", "point", "cartographicPos", "WGS84_RADIUS_X", "WGS84_RADIUS_Y", "WGS84_RADIUS_Z", "scratchVector", "Vector3", "getZoomFromBoundingVolume", "boundingVolume", "cartorgraphicCenter", "OrientedBoundingBox", "halfAxes", "obbSize", "getObbSize", "Math", "log2", "BoundingSphere", "radius", "width", "height", "zoomX", "zoomY", "getZoomFromFullExtent", "fullExtent", "cartesianCenter", "extentVertex", "Ellipsoid", "WGS84", "cartographicToCartesian", "xmax", "ymax", "zmax", "extentSize", "sqrt", "pow", "getZoomFromExtent", "extent", "xmin", "ymin", "zmin", "getColumn", "axeY", "axeZ", "farthestVertex", "add", "size", "len", "TILE_CONTENT_STATE", "UNLOADED", "LOADING", "PROCESSING", "READY", "EXPIRED", "FAILED", "TILE_REFINEMENT", "ADD", "REPLACE", "TILE_TYPE", "EMPTY", "SCENEGRAPH", "POINTCLOUD", "MESH", "TILESET_TYPE", "I3S", "TILES3D", "LOD_METRIC_TYPE", "GEOMETRIC_ERROR", "MAX_SCREEN_THRESHOLD", "TILE3D_OPTIMIZATION_HINT", "NOT_COMPUTED", "USE_OPTIMIZATION", "SKIP_OPTIMIZATION", "defined", "x", "undefined", "scratchPoint", "Vector3", "scratchScale", "scratchNorthWest", "scratchSouthEast", "createBoundingVolume", "boundingVolumeHeader", "transform", "result", "assert", "box", "createBox", "region", "west", "south", "east", "north", "minHeight", "maxHeight", "northWest", "Ellipsoid", "WGS84", "cartographicToCartesian", "degrees", "southEast", "centerInCartesian", "addVectors", "multiplyScalar", "radius", "subVectors", "len", "createSphere", "Matrix4", "sphere", "Error", "getCartographicBounds", "boundingVolume", "orientedBoundingBoxToCartographicBounds", "boundingSphereToCartographicBounds", "center", "origin", "length", "halfSize", "slice", "quaternion", "Quaternion", "fromArray", "y", "z", "transformByQuaternion", "scale", "toArray", "xAxis", "transformAsVector", "yAxis", "zAxis", "halfAxes", "Matrix3", "OrientedBoundingBox", "getScale", "uniformScale", "Math", "max", "BoundingSphere", "emptyCartographicBounds", "getColumn", "copy", "add", "addToCartographicBounds", "negate", "point", "scaleToGeodeticSurface", "geodeticSurfaceNormal", "normalize", "clone", "cross", "axis", "dir", "Infinity", "target", "cartesian", "cartesianToCartographic", "min", "scratchPositionNormal", "Vector3", "scratchCartographic", "scratchMatrix", "Matrix4", "scratchCenter", "scratchPosition", "scratchDirection", "fog", "distanceToCamera", "density", "scalar", "Math", "exp", "getDynamicScreenSpaceError", "tileset", "dynamicScreenSpaceError", "dynamicScreenSpaceErrorComputedDensity", "factor", "dynamicScreenSpaceErrorFactor", "dynamicError", "getTiles3DScreenSpaceError", "tile", "frameState", "useParentLodMetric", "parentLodMetricValue", "parent", "lodMetricValue", "distance", "max", "_distanceToCamera", "height", "sseDenominator", "viewDistanceScale", "options", "error", "cameraPositionCartesian", "Vector3", "toEye", "cameraPositionEnu", "extraVertexEnu", "projectedOriginVector", "enuToCartesianMatrix", "Matrix4", "cartesianToEnuMatrix", "getLodStatus", "tile", "frameState", "lodMetricValue", "isNaN", "screenSize", "getProjectedRadius", "header", "children", "topDownViewport", "viewport", "mbsLat", "mbs", "mbsLon", "mbsZ", "mbsR", "mbsCenterCartesian", "boundingVolume", "center", "cameraPositionCartographic", "unprojectPosition", "cameraPosition", "Ellipsoid", "WGS84", "cartographicToCartesian", "copy", "subtract", "normalize", "eastNorthUpToFixedFrame", "invert", "transform", "projection", "Math", "sqrt", "extraZ", "extraVertexCartesian", "extraVectorCartesian", "radiusVector", "cross", "scale", "sphereMbsBorderVertexCartesian", "add", "sphereMbsBorderVertexCartographic", "cartesianToCartographic", "projectedOrigin", "project", "projectedMbsBorderVertex", "projectedRadius", "magnitude", "get3dTilesOptions", "tileset", "assetGltfUpAxis", "asset", "gltfUpAxis", "ManagedArray", "constructor", "length", "arguments", "undefined", "_defineProperty", "Map", "_array", "Array", "_length", "values", "get", "index", "assert", "set", "element", "_map", "has", "delete", "splice", "peek", "push", "pop", "reserve", "resize", "trim", "reset", "find", "target", "DEFAULT_PROPS", "loadSiblings", "skipLevelOfDetail", "maximumScreenSpaceError", "updateTransforms", "onTraversalEnd", "viewportTraversersMap", "basePath", "TilesetTraverser", "traversalFinished", "frameState", "constructor", "options", "_defineProperty", "Date", "getTime", "ManagedArray", "traverse", "root", "reset", "updateTile", "_frameNumber", "frameNumber", "executeTraversal", "requestedTiles", "selectedTiles", "emptyTiles", "_traversalStack", "_emptyTraversalStack", "stack", "_selectionDepth", "push", "length", "tile", "pop", "shouldRefine", "canTraverse", "updateChildTiles", "updateAndPushChildren", "hasRenderContent", "parent", "parentRefines", "Boolean", "_shouldRefine", "stoppedRefining", "id", "loadTile", "selectTile", "refine", "TILE_REFINEMENT", "ADD", "REPLACE", "touchTile", "newTime", "lastUpdate", "updateDebounceTime", "children", "child", "depth", "sort", "compareDistanceToCamera", "bind", "checkRefines", "hasVisibleChild", "refines", "isVisibleAndInRequestVolume", "find", "delete", "childRefines", "_inRequestVolume", "executeEmptyTraversal", "contentAvailable", "updateTileVisibility", "shouldSelectTile", "_selectedFrame", "shouldLoadTile", "_requestedFrame", "_priority", "_getPriority", "tileset", "_cache", "touch", "_touchedFrame", "useParentMetric", "arguments", "undefined", "ignoreVisibility", "hasChildren", "hasTilesetContent", "contentExpired", "hasUnloadedContent", "screenSpaceError", "_screenSpaceError", "getScreenSpaceError", "viewportIds", "key", "value", "viewport", "updateVisibility", "b", "a", "_distanceToCamera", "anyChildrenVisible", "anyVisible", "allDescendantsLoaded", "scratchVector", "Vector3", "defined", "x", "undefined", "Tile3D", "constructor", "tileset", "header", "parentHeader", "extendedId", "arguments", "length", "_defineProperty", "TILE_CONTENT_STATE", "UNLOADED", "Matrix4", "TilesetTraverser", "id", "url", "parent", "refine", "_getRefine", "type", "contentUrl", "_initializeLodMetric", "_initializeTransforms", "_initializeBoundingVolumes", "_initializeContent", "_initializeRenderingState", "Object", "seal", "destroy", "isDestroyed", "selected", "_selectedFrame", "_frameNumber", "isVisible", "_visible", "isVisibleAndInRequestVolume", "_inRequestVolume", "hasRenderContent", "hasEmptyContent", "hasTilesetContent", "hasChildren", "children", "contentReady", "contentState", "READY", "contentAvailable", "Boolean", "_expiredContent", "contentFailed", "hasUnloadedContent", "contentUnloaded", "contentExpired", "EXPIRED", "FAILED", "distanceToCamera", "_distanceToCamera", "screenSpaceError", "_screenSpaceError", "boundingBox", "_boundingBox", "getCartographicBounds", "boundingVolume", "getScreenSpaceError", "frameState", "useParentLodMetric", "TILESET_TYPE", "I3S", "getProjectedRadius", "TILES3D", "getTiles3DScreenSpaceError", "Error", "unselect", "_getGpuMemoryUsageInBytes", "content", "gpuMemoryUsageInBytes", "byteLength", "_getPriority", "traverser", "_traverser", "skipLevelOfDetail", "options", "maySkipTile", "TILE_REFINEMENT", "ADD", "_touchedFrame", "useParentScreenSpaceError", "rootScreenSpaceError", "root", "Math", "max", "loadContent", "expired", "_expireDate", "LOADING", "requestToken", "_requestScheduler", "scheduleRequest", "bind", "getTileUrl", "loader", "loadOptions", "isTileset", "_getLoaderSpecificOptions", "load", "contentLoader", "_isTileset", "_initializeTileHeaders", "_onContentLoaded", "error", "done", "unloadContent", "updateVisibility", "viewportIds", "frameNumber", "parentVisibilityPlaneMask", "_visibilityPlaneMask", "CullingVolume", "MASK_INDETERMINATE", "updateTransforms", "parentTransform", "computedTransform", "modelMatrix", "_updateTransform", "distanceToTile", "visibility", "MASK_OUTSIDE", "insideViewerRequestVolume", "cullingVolume", "computeVisibilityWithPlaneMask", "contentVisibility", "sqrt", "distanceSquaredTo", "camera", "position", "cameraSpaceZDepth", "_ref", "subVectors", "center", "direction", "dot", "viewerRequestVolume", "_viewerRequestVolume", "updateExpiration", "now", "Date", "lessThan", "extras", "lodMetricType", "console", "warn", "lodMetricValue", "tileHeader", "transform", "clone", "multiplyRight", "parentInitialTransform", "_initialTransform", "_contentBoundingVolume", "_updateBoundingVolume", "_tileset", "_tile", "depth", "level", "_shouldRefine", "_centerZDepth", "_stackLength", "_selectionDepth", "_visitedFrame", "_requestedFrame", "_priority", "REPLACE", "indexOf", "disableSkipLevelOfDetail", "createBoundingVolume", "didTransformChange", "equals", "loaderId", "i3s", "_tileOptions", "attributeUrls", "textureUrl", "textureFormat", "textureLoaderOptions", "materialDefinition", "isDracoGeometry", "mbs", "_tilesetOptions", "store", "attributeStorageInfo", "fields", "isTileHeader", "get3dTilesOptions", "Tileset3DTraverser", "TilesetTraverser", "compareDistanceToCamera", "a", "b", "_distanceToCamera", "_centerZDepth", "updateTileVisibility", "tile", "frameState", "isVisibleAndInRequestVolume", "hasChildren", "children", "length", "hasTilesetContent", "firstChild", "_visible", "meetsScreenSpaceErrorEarly", "replace", "refine", "TILE_REFINEMENT", "REPLACE", "useOptimization", "_optimChildrenWithinParent", "TILE3D_OPTIMIZATION_HINT", "USE_OPTIMIZATION", "anyChildrenVisible", "parent", "ADD", "shouldRefine", "I3SPendingTilesRegister", "constructor", "_defineProperty", "Map", "register", "viewportId", "frameNumber", "viewportMap", "frameNumberMap", "get", "oldCount", "set", "deregister", "isZero", "_this$frameNumberMap$", "count", "STATUS", "REQUESTED", "COMPLETED", "ERROR", "I3STileManager", "constructor", "_defineProperty", "I3SPendingTilesRegister", "_statusMap", "add", "request", "key", "callback", "frameState", "frameNumber", "viewport", "id", "status", "pendingTilesRegister", "register", "then", "data", "actualFrameNumber", "deregister", "catch", "error", "update", "newFrameNumber", "newViewportId", "find", "hasPendingTiles", "viewportId", "isZero", "I3STilesetTraverser", "TilesetTraverser", "constructor", "options", "_defineProperty", "_tileManager", "I3STileManager", "traversalFinished", "frameState", "hasPendingTiles", "viewport", "id", "_frameNumber", "shouldRefine", "tile", "_lodJudge", "getLodStatus", "updateChildTiles", "children", "header", "childTiles", "tileset", "child", "extendedId", "concat", "childTile", "find", "t", "request", "_loadTile", "cachedRequest", "nodePages", "nodePagesTile", "formTileFromNodePages", "add", "_onTileLoad", "update", "updateTile", "nodeId", "loader", "nodeUrl", "getTileUrl", "url", "loadOptions", "i3s", "isTileHeader", "load", "Tile3D", "push", "frameNumber", "Date", "getTime", "lastUpdate", "updateDebounceTime", "executeTraversal", "DEFAULT_PROPS", "description", "ellipsoid", "Ellipsoid", "WGS84", "modelMatrix", "Matrix4", "throttleRequests", "maxRequests", "maximumMemoryUsage", "maximumTilesSelected", "debounceTime", "onTileLoad", "onTileUnload", "onTileError", "onTraversalComplete", "selectedTiles", "contentLoader", "undefined", "viewDistanceScale", "maximumScreenSpaceError", "loadTiles", "updateTransforms", "viewportTraversersMap", "loadOptions", "fetch", "attributions", "basePath", "i3s", "TILES_TOTAL", "TILES_IN_MEMORY", "TILES_IN_VIEW", "TILES_RENDERABLE", "TILES_LOADED", "TILES_LOADING", "TILES_UNLOADED", "TILES_LOAD_FAILED", "POINTS_COUNT", "TILES_GPU_MEMORY", "Tileset3D", "constructor", "tileset", "options", "_defineProperty", "draco", "meshopt", "dds", "ktx2", "TilesetCache", "loader", "type", "url", "path", "dirname", "lodMetricType", "lodMetricValue", "refine", "root", "_traverser", "_initializeTraverser", "_requestScheduler", "RequestScheduler", "stats", "Stats", "id", "_initializeStats", "tilesetInitializationPromise", "_initializeTileSet", "destroy", "_destroy", "isLoaded", "_pendingCount", "_frameNumber", "_requestedTiles", "length", "tiles", "Object", "values", "_tiles", "frameNumber", "queryParams", "URLSearchParams", "_queryParams", "toString", "setProps", "props", "setOptions", "getTileUrl", "tilePath", "isDataUrl", "startsWith", "concat", "includes", "hasExtension", "extensionName", "Boolean", "_extensionsUsed", "indexOf", "update", "viewports", "arguments", "then", "lastUpdatedVieports", "doUpdate", "selectTiles", "updatePromise", "Promise", "resolve", "setTimeout", "traverseCounter", "preparedViewports", "Array", "_cache", "reset", "viewportsToTraverse", "viewport", "_needTraverse", "push", "roots", "_initializeTileHeaders", "frameState", "getFrameState", "traverse", "viewportId", "traverserId", "_onTraversalEnd", "frameStateData", "_emptyTiles", "currentFrameStateData", "filteredSelectedTiles", "unselectedTiles", "limitSelectedTiles", "tile", "unselect", "requestedTiles", "emptyTiles", "_updateTiles", "frameStateKey", "frameStateDataValue", "_loadTiles", "_unloadTiles", "_updateStats", "_tilesChanged", "oldSelectedTiles", "set1", "Set", "map", "t", "set2", "changed", "filter", "x", "has", "contentUnloaded", "_loadTile", "unloadTiles", "_unloadTile", "tilesRenderable", "pointsRenderable", "contentAvailable", "content", "pointCount", "vertexCount", "get", "count", "tilesetJson", "TILESET_TYPE", "I3S", "calculateViewPropsI3S", "TILES3D", "_initializeTiles3DTileset", "calculateViewPropsTiles3D", "_initializeI3STileset", "_this$tileset$store", "fullExtent", "xmin", "xmax", "ymin", "ymax", "zmin", "zmax", "cartographicCenter", "Vector3", "cartesianCenter", "cartographicToCartesian", "zoom", "getZoomFromFullExtent", "extent", "store", "getZoomFromExtent", "console", "warn", "center", "boundingVolume", "cartesianToCartographic", "radii", "getZoomFromBoundingVolume", "parentTileHeader", "rootTile", "Tile3D", "children", "depth", "stack", "pop", "incrementCount", "header", "childHeader", "_childTile$contentUrl", "childTile", "contentUrl", "URL", "session", "searchParams", "TraverserClass", "Tileset3DTraverser", "I3STilesetTraverser", "TilesetTraverser", "onTraversalEnd", "bind", "_destroyTileHeaders", "parentTile", "_destroySubtree", "loaded", "_onStartTileLoading", "loadContent", "error", "_onTileLoadError", "Error", "_onEndTileLoading", "_onTileLoad", "message", "_this$tileset", "_this$tileset$nodePag", "nodesInNodePages", "nodePagesTile", "addCount", "calculateTransformProps", "updateContentTypes", "_addTileToCache", "isDracoGeometry", "contentFormats", "textureFormat", "_tile$content", "extensionsRemoved", "gltf", "decrementCount", "add", "_updateCacheStats", "gpuMemoryUsageInBytes", "unloadContent", "child", "_destroyTile", "unloadTile", "queryString", "fromEntries", "entries", "asset", "version", "v", "tilesetVersion", "credits", "properties", "geometricError", "extensionsUsed", "extras", "token", "VERSION", "TILE3D_TYPE", "COMPOSITE", "POINT_CLOUD", "BATCHED_3D_MODEL", "INSTANCED_3D_MODEL", "GEOMETRY", "VECTOR", "GLTF", "TILE3D_TYPES", "Object", "keys", "getStringFromArrayBuffer", "arrayBuffer", "byteOffset", "byteLength", "assert", "ArrayBuffer", "textDecoder", "TextDecoder", "typedArray", "Uint8Array", "string", "decode", "getMagicString", "arrayBuffer", "byteOffset", "arguments", "length", "undefined", "dataView", "DataView", "concat", "String", "fromCharCode", "getUint8", "GL_PRIMITIVE_MODE", "POINTS", "LINES", "LINE_LOOP", "LINE_STRIP", "TRIANGLES", "TRIANGLE_STRIP", "TRIANGLE_FAN", "GL_TYPE", "BYTE", "UNSIGNED_BYTE", "SHORT", "UNSIGNED_SHORT", "INT", "UNSIGNED_INT", "FLOAT", "DOUBLE", "GL", "GL_TYPE_TO_ARRAY_TYPE", "GL", "DOUBLE", "Float64Array", "FLOAT", "Float32Array", "UNSIGNED_SHORT", "Uint16Array", "UNSIGNED_INT", "Uint32Array", "UNSIGNED_BYTE", "Uint8Array", "BYTE", "Int8Array", "SHORT", "Int16Array", "INT", "Int32Array", "NAME_TO_GL_TYPE", "ERR_TYPE_CONVERSION", "GLType", "fromTypedArray", "arrayOrType", "ArrayBuffer", "isView", "constructor", "glType", "ArrayType", "Error", "fromName", "name", "getArrayType", "UNSIGNED_SHORT_5_6_5", "UNSIGNED_SHORT_4_4_4_4", "UNSIGNED_SHORT_5_5_5_1", "getByteSize", "BYTES_PER_ELEMENT", "validate", "Boolean", "createTypedArray", "buffer", "byteOffset", "arguments", "length", "undefined", "byteLength", "assert", "condition", "message", "Error", "concat", "decodeRGB565", "rgb565", "target", "arguments", "length", "undefined", "r5", "g6", "b5", "RIGHT_SHIFT", "scratchVector2", "Vector2", "scratchVector3", "Vector3", "scratchEncodeVector2", "octEncodeScratch", "uint8ForceArray", "Uint8Array", "fromSNorm", "value", "rangeMaximum", "arguments", "length", "undefined", "clamp", "signNotZero", "value", "octDecodeInRange", "x", "y", "rangeMax", "result", "assert", "Error", "concat", "fromSNorm", "z", "Math", "abs", "oldVX", "signNotZero", "normalize", "octDecode", "Tile3DFeatureTable", "constructor", "featureTableJson", "featureTableBinary", "_defineProperty", "json", "buffer", "getExtension", "extensionName", "extensions", "hasProperty", "propertyName", "Boolean", "getGlobalProperty", "componentType", "arguments", "length", "undefined", "GL", "UNSIGNED_INT", "componentLength", "jsonValue", "Number", "isFinite", "byteOffset", "_getTypedArrayFromBinary", "getPropertyArray", "GLType", "fromName", "featuresLength", "_getTypedArrayFromArray", "getProperty", "featureId", "result", "typedArray", "i", "count", "cachedTypedArrays", "_cachedTypedArrays", "createTypedArray", "array", "COMPONENTS_PER_ATTRIBUTE", "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "UNPACKER", "values", "i", "PACKER", "x", "createTypedArrayFromAccessor", "tile3DAccessor", "buffer", "byteOffset", "length", "componentType", "assert", "type", "GLType", "fromName", "size", "unpacker", "packer", "createTypedArray", "defined", "x", "undefined", "initializeHierarchy", "batchTable", "jsonHeader", "binaryBody", "hierarchy", "getExtension", "legacyHierarchy", "HIERARCHY", "console", "warn", "extensions", "initializeHierarchyValues", "hierarchyJson", "i", "classId", "binaryAccessor", "instancesLength", "classes", "classIds", "parentCounts", "parentIds", "parentIdsLength", "byteOffset", "componentType", "defaultValue", "GL", "UNSIGNED_SHORT", "type", "AttributeType", "SCALAR", "getBinaryAccessor", "createArrayBufferView", "buffer", "parentIndexes", "Uint16Array", "classesLength", "length", "classInstancesLength", "properties", "instances", "binaryProperties", "getBinaryProperties", "combine", "classCounts", "Array", "fill", "classIndexes", "validateHierarchy", "traverseHierarchy", "instanceIndex", "endConditionCallback", "traverseHierarchyMultipleParents", "traverseHierarchySingleParent", "visited", "scratchVisited", "Math", "max", "visitedMarker", "marker", "stack", "scratchStack", "push", "pop", "result", "parentCount", "parentIndex", "parentId", "hasParent", "Error", "scratchValidateStack", "validateInstance", "assert", "concat", "indexOf", "defined", "x", "undefined", "clone", "y", "IGNORED_PROPERTY_FIELDS", "HIERARCHY", "extensions", "extras", "Tile3DBatchTableParser", "constructor", "json", "binary", "featureCount", "_this$json", "options", "arguments", "length", "_defineProperty", "assert", "_extensions", "_properties", "propertyName", "_binaryProperties", "_initializeBinaryProperties", "_hierarchy", "initializeHierarchy", "getExtension", "extensionName", "memorySizeInBytes", "isClass", "batchId", "className", "_checkBatchId", "result", "traverseHierarchy", "hierarchy", "instanceIndex", "classId", "classIds", "instanceClass", "classes", "name", "isExactClass", "getExactClassName", "hasProperty", "_hasPropertyInHierarchy", "getPropertyNames", "results", "propertyNames", "Object", "keys", "push", "_getPropertyNamesInHierarchy", "getProperty", "binaryProperty", "_getBinaryProperty", "propertyValues", "hierarchyProperty", "_getHierarchyProperty", "setProperty", "value", "_setBinaryProperty", "_setHierarchyProperty", "Array", "valid", "Error", "index", "unpack", "typedArray", "pack", "binaryProperties", "property", "_initializeBinaryProperty", "tile3DAccessor", "concat", "type", "accessor", "createTypedArrayFromAccessor", "buffer", "byteOffset", "values", "componentCount", "size", "unpacker", "packer", "instances", "hasOwnProperty", "indexOf", "indexInClass", "classIndexes", "batchTable", "SIZEOF_UINT32", "parse3DTileHeaderSync", "tile", "arrayBuffer", "byteOffset", "arguments", "length", "undefined", "view", "DataView", "magic", "getUint32", "version", "byteLength", "Error", "concat", "SIZEOF_UINT32", "DEPRECATION_WARNING", "parse3DTileTablesHeaderSync", "tile", "arrayBuffer", "byteOffset", "view", "DataView", "batchLength", "header", "featureTableJsonByteLength", "getUint32", "featureTableBinaryByteLength", "batchTableJsonByteLength", "batchTableBinaryByteLength", "console", "warn", "parse3DTileTablesSync", "options", "parse3DTileFeatureTable", "parse3DTileBatchTable", "featureTableJson", "BATCH_LENGTH", "featureTableString", "getStringFromArrayBuffer", "JSON", "parse", "featureTableBinary", "Uint8Array", "batchTableString", "batchTableJson", "batchTableBinary", "normalize3DTileColorAttribute", "tile", "colors", "batchTable", "batchIds", "isRGB565", "pointCount", "colorArray", "Uint8ClampedArray", "i", "batchId", "dimensions", "getProperty", "color", "map", "d", "type", "GL", "UNSIGNED_BYTE", "value", "size", "normalized", "decodeRGB565", "length", "scratchNormal", "Vector3", "normalize3DTileNormalAttribute", "tile", "normals", "isOctEncoded16P", "decodedArray", "Float32Array", "pointsLength", "i", "octDecode", "toArray", "type", "GL", "FLOAT", "size", "value", "normalize3DTilePositionAttribute", "tile", "positions", "options", "isQuantized", "decodeQuantizedPositions", "type", "GL", "UNSIGNED_SHORT", "value", "size", "normalized", "scratchPosition", "Vector3", "decodedArray", "Float32Array", "pointCount", "i", "set", "scale", "quantizedRange", "multiply", "quantizedVolumeScale", "add", "quantizedVolumeOffset", "toArray", "parsePointCloud3DTile", "tile", "arrayBuffer", "byteOffset", "options", "context", "parse3DTileHeaderSync", "parse3DTileTablesHeaderSync", "parse3DTileTablesSync", "initializeTile", "featureTable", "batchTable", "parsePointCloudTables", "parseDraco", "parsePositions", "parseColors", "parseNormals", "attributes", "positions", "colors", "normals", "batchIds", "isQuantized", "isTranslucent", "isRGB565", "isOctEncoded16P", "Tile3DFeatureTable", "featureTableJson", "featureTableBinary", "pointsLength", "getGlobalProperty", "Number", "isFinite", "Error", "featuresLength", "pointCount", "rtcCenter", "GL", "FLOAT", "parseBatchIds", "hasProperty", "getPropertyArray", "UNSIGNED_SHORT", "quantizedRange", "quantizedVolumeScale", "quantizedVolumeOffset", "normalize3DTilePositionAttribute", "UNSIGNED_BYTE", "normalize3DTileColorAttribute", "constantRGBA", "normalize3DTileNormalAttribute", "batchFeatureLength", "batchTableJson", "batchTableBinary", "Tile3DBatchTable", "dracoBuffer", "dracoFeatureTableProperties", "dracoBatchTableProperties", "batchTableDraco", "extensions", "properties", "featureTableDraco", "getExtension", "dracoByteOffset", "dracoByteLength", "byteLength", "slice", "hasPositions", "POSITION", "hasColors", "RGB", "RGBA", "hasNormals", "NORMAL", "hasBatchIds", "BATCH_ID", "dracoData", "buffer", "featureTableProperties", "batchTableProperties", "dequantizeInShader", "loadDraco", "parse", "dracoOptions", "draco", "extraAttributes", "data", "DracoLoader", "decodedPositions", "value", "decodedColors", "COLOR_0", "decodedNormals", "decodedBatchIds", "isQuantizedDraco", "quantization", "isOctEncodedDraco", "range", "Vector3", "minValues", "quantizationBits", "octEncodedRange", "batchTableAttributes", "attributeName", "Object", "keys", "toLowerCase", "undefined", "GLTF_FORMAT", "URI", "EMBEDDED", "parse3DTileGLTFViewSync", "tile", "arrayBuffer", "byteOffset", "options", "rotateYtoZ", "gltfByteLength", "byteLength", "Error", "gltfUpAxis", "assetGltfUpAxis", "gltfArrayBuffer", "sliceArrayBuffer", "gltfByteOffset", "console", "warn", "concat", "type", "extractGLTF", "gltfFormat", "context", "tile3DOptions", "extractGLTFBufferOrURL", "loadGLTF", "parse", "fetch", "gltfUrl", "gltf", "GLTFLoader", "gpuMemoryUsageInBytes", "_getMemoryUsageGLTF", "gltfUrlBytes", "Uint8Array", "textDecoder", "TextDecoder", "decode", "replace", "parseBatchedModel3DTile", "tile", "arrayBuffer", "byteOffset", "options", "context", "_tile$gltf", "parseBatchedModel", "extractGLTF", "GLTF_FORMAT", "EMBEDDED", "extensions", "gltf", "CESIUM_RTC", "rtcCenter", "center", "parse3DTileHeaderSync", "parse3DTileTablesHeaderSync", "parse3DTileTablesSync", "parse3DTileGLTFViewSync", "featureTable", "Tile3DFeatureTable", "featureTableJson", "featureTableBinary", "getGlobalProperty", "GL", "FLOAT", "parseInstancedModel3DTile", "tile", "arrayBuffer", "byteOffset", "options", "context", "parseInstancedModel", "extractGLTF", "gltfFormat", "parse3DTileHeaderSync", "version", "Error", "concat", "parse3DTileTablesHeaderSync", "view", "DataView", "getUint32", "parse3DTileTablesSync", "parse3DTileGLTFViewSync", "featureTableJsonByteLength", "featureTable", "Tile3DFeatureTable", "featureTableJson", "featureTableBinary", "instancesLength", "getGlobalProperty", "featuresLength", "Number", "isFinite", "eastNorthUp", "rtcCenter", "GL", "FLOAT", "batchTable", "Tile3DBatchTable", "batchTableJson", "batchTableBinary", "extractInstancedAttributes", "collectionOptions", "instances", "Array", "_batchTable", "cull", "url", "undefined", "gltf", "basePath", "incrementallyLoadTextures", "forwardAxis", "instancePosition", "Vector3", "instanceNormalRight", "instanceNormalUp", "instanceNormalForward", "instanceRotation", "Matrix3", "instanceQuaternion", "Quaternion", "instanceScale", "instanceTranslationRotationScale", "instanceTransform", "Matrix4", "scratch1", "scratch2", "scratchVector1", "scratchVector2", "i", "position", "hasProperty", "getProperty", "UNSIGNED_SHORT", "quantizedVolumeOffset", "quantizedVolumeScale", "MAX_UNSIGNED_SHORT", "j", "copy", "translation", "normalUp", "normalRight", "hasCustomOrientation", "octNormalUp", "octNormalRight", "Ellipsoid", "WGS84", "eastNorthUpToFixedFrame", "getRotationMatrix3", "identity", "cross", "normalize", "setColumn", "fromMatrix3", "rotation", "set", "scale", "multiplyByScalar", "nonUniformScale", "batchId", "rotationMatrix", "fromQuaternion", "translate", "multiplyRight", "modelMatrix", "clone", "parseComposite3DTile", "tile", "arrayBuffer", "byteOffset", "options", "context", "parse3DTile", "parse3DTileHeaderSync", "view", "DataView", "tilesLength", "getUint32", "tiles", "length", "byteLength", "subtile", "push", "parseGltf3DTile", "tile", "arrayBuffer", "options", "context", "rotateYtoZ", "gltfUpAxis", "assetGltfUpAxis", "parse", "gltf", "GLTFLoader", "gpuMemoryUsageInBytes", "_getMemoryUsageGLTF", "parse3DTile", "arrayBuffer", "byteOffset", "arguments", "length", "undefined", "options", "context", "tile", "type", "getMagicString", "TILE3D_TYPE", "COMPOSITE", "parseComposite3DTile", "BATCHED_3D_MODEL", "parseBatchedModel3DTile", "GLTF", "parseGltf3DTile", "INSTANCED_3D_MODEL", "parseInstancedModel3DTile", "POINT_CLOUD", "parsePointCloud3DTile", "Error", "concat", "SUBTREE_FILE_MAGIC", "SUBTREE_FILE_VERSION", "data", "options", "context", "magic", "Uint32Array", "slice", "Error", "version", "jsonByteLength", "parseUint64Value", "stringAttribute", "Uint8Array", "textDecoder", "TextDecoder", "string", "decode", "subtree", "JSON", "parse", "binaryByteLength", "internalBinaryBuffer", "ArrayBuffer", "tileAvailability", "explicitBitstream", "getExplicitBitstream", "contentAvailability", "childSubtreeAvailability", "resolveBufferUri", "bitstreamRelativeUri", "basePath", "hasProtocol", "startsWith", "resolvedUri", "URL", "decodeURI", "toString", "basePathWithProtocol", "concat", "host", "pathname", "name", "bufferViewIndex", "bufferView", "bufferViews", "buffer", "buffers", "url", "fetch", "uri", "bufferUri", "response", "arrayBuffer", "byteOffset", "byteLength", "dataView", "DataView", "left", "getUint32", "right", "Tile3DSubtreeLoader", "id", "name", "module", "version", "VERSION", "extensions", "mimeTypes", "tests", "parse", "parse3DTilesSubtree", "options", "e", "Long", "c", "p", "i", "val", "equals", "MAXIMUM_TOKEN_LENGTH", "getS2CellIdFromToken", "token", "paddedToken", "padEnd", "Long", "fromString", "getS2TokenFromCellId", "cellId", "isZero", "numZeroDigits", "countTrailingZeros", "remainder", "trailingZeroHexChars", "x", "shiftRightUnsigned", "hexString", "toString", "replace", "zeroString", "Array", "length", "join", "getS2ChildCellId", "index", "newLsb", "lsb", "childCellId", "add", "fromNumber", "multiply", "and", "not", "FACE_BITS", "MAX_LEVEL", "POS_BITS", "RADIAN_TO_DEGREE", "Math", "PI", "getS2CellFromQuadKey", "hilbertQuadkey", "length", "Error", "concat", "parts", "split", "face", "parseInt", "position", "maxLevel", "level", "point", "i", "bit", "rx", "ry", "val", "pow", "rotateAndFlipQuadrant", "t", "ij", "getS2QuadkeyFromCellId", "cellId", "isZero", "bin", "toString", "lsbIndex", "lastIndexOf", "faceB", "substring", "posB", "levelN", "faceS", "Long", "fromString", "posS", "IJToST", "ij", "level", "offsets", "maxSize", "singleSTtoUV", "st", "STToUV", "FaceUVToXYZ", "face", "_ref", "u", "v", "Error", "XYZToLngLat", "_ref2", "x", "y", "z", "lat", "Math", "atan2", "sqrt", "lng", "RADIAN_TO_DEGREE", "rotateAndFlipQuadrant", "n", "point", "rx", "ry", "getS2LngLatFromS2Cell", "s2Cell", "uv", "xyz", "MAX_RESOLUTION", "getS2BoundaryFlatFromS2Cell", "s2cell", "face", "ij", "level", "offsets", "resolution", "Math", "max", "ceil", "pow", "result", "Float64Array", "ptIndex", "prevLng", "i", "offset", "slice", "nextOffset", "stepI", "stepJ", "j", "st", "IJToST", "uv", "STToUV", "xyz", "FaceUVToXYZ", "lngLat", "XYZToLngLat", "abs", "deltaLng", "getS2Cell", "tokenOrKey", "key", "getS2QuadKey", "s2cell", "getS2CellFromQuadKey", "indexOf", "id", "getS2CellIdFromToken", "getS2QuadkeyFromCellId", "getS2LngLat", "s2Token", "s2cell", "getS2Cell", "getS2LngLatFromS2Cell", "getS2Region", "s2cell", "region", "face", "corners", "len", "i", "key", "concat", "cell", "getS2Cell", "corns", "getS2BoundaryFlatFromS2Cell", "Float64Array", "length", "set", "get2DRegionFromS2Corners", "Error", "longitudes", "latitudes", "push", "sort", "a", "b", "west", "east", "north", "south", "getS2OrientedBoundingBoxCornerPoints", "tokenOrKey", "heightInfo", "min", "minimumHeight", "max", "maximumHeight", "s2cell", "getS2Cell", "region", "getS2Region", "W", "west", "S", "south", "E", "east", "N", "north", "points", "push", "Vector3", "convertS2BoundingVolumetoOBB", "s2VolumeInfo", "token", "heightInfo", "minimumHeight", "maximumHeight", "corners", "getS2OrientedBoundingBoxCornerPoints", "center", "getS2LngLat", "centerLng", "centerLat", "point", "Ellipsoid", "WGS84", "cartographicToCartesian", "centerPointAdditional", "Vector3", "push", "obb", "makeOrientedBoundingBoxFromPoints", "box", "halfAxes", "QUADTREE_DEVISION_COUNT", "OCTREE_DEVISION_COUNT", "SUBDIVISION_COUNT_MAP", "QUADTREE", "OCTREE", "getChildS2VolumeBox", "s2VolumeBox", "index", "subdivisionScheme", "box", "cellId", "getS2CellIdFromToken", "s2VolumeInfo", "token", "childCellId", "getS2ChildCellId", "childToken", "getS2TokenFromCellId", "s2ChildVolumeInfo", "delta", "maximumHeight", "minimumHeight", "sizeZ", "midZ", "convertS2BoundingVolumetoOBB", "childS2VolumeBox", "undefined", "parseImplicitTiles", "params", "options", "parentData", "mortonIndex", "x", "y", "z", "childIndex", "globalData", "level", "subtree", "subtreeLevels", "maximumLevel", "contentUrlTemplate", "subtreesUriTemplate", "basePath", "tile", "children", "lodMetricValue", "contentUrl", "childrenPerTile", "childX", "childY", "childZ", "levelOffset", "childTileMortonIndex", "concatBits", "tileAvailabilityIndex", "childTileX", "childTileY", "childTileZ", "isChildSubtreeAvailable", "getAvailabilityResult", "childSubtreeAvailability", "lev", "subtreePath", "concat", "childSubtreeUrl", "replaceContentUrlTemplate", "childSubtree", "load", "Tile3DSubtreeLoader", "isTileAvailable", "tileAvailability", "isContentAvailable", "contentAvailability", "childTileLevel", "pData", "childTileParsed", "length", "globalLevel", "childCoordinates", "formattedTile", "formatTileData", "push", "availabilityData", "Boolean", "constant", "explicitBitstream", "getBooleanValueFromBitstream", "refine", "getRefine", "lodMetricType", "getTileType", "rootLodMetricValue", "rootBoundingVolume", "uri", "replace", "boundingVolume", "boundingVolumeForChildTile", "calculateBoundingVolumeForChildTile", "content", "id", "type", "geometricError", "transform", "region", "west", "south", "east", "north", "boundingVolumesCount", "sizeX", "sizeY", "childWest", "childEast", "childSouth", "childNorth", "childMinimumHeight", "childMaximumHeight", "Error", "first", "second", "parseInt", "toString", "templateUrl", "mapUrl", "generateMapUrl", "matched", "items", "key", "availabilityIndex", "availabilityBuffer", "byteIndex", "Math", "floor", "bitIndex", "bitValue", "getTileType", "tile", "contentUrl", "TILE_TYPE", "EMPTY", "split", "fileExtension", "pop", "POINTCLOUD", "SCENEGRAPH", "getRefine", "refine", "TILE_REFINEMENT", "REPLACE", "ADD", "resolveUri", "uri", "basePath", "urlSchemeRegex", "test", "url", "URL", "concat", "decodeURI", "toString", "startsWith", "normalizeTileData", "options", "content", "contentUri", "id", "lodMetricType", "LOD_METRIC_TYPE", "GEOMETRIC_ERROR", "lodMetricValue", "geometricError", "transformMatrix", "transform", "type", "normalizeTileHeaders", "tileset", "root", "rootImplicitTilingExtension", "getImplicitTilingExtensionData", "normalizeImplicitTileHeaders", "stack", "push", "length", "children", "childHeader", "childImplicitTilingExtension", "implicitTilingExtension", "_tileset$root", "_tile$boundingVolume$", "subdivisionScheme", "maximumLevel", "subtreeLevels", "subtrees", "subtreesUriTemplate", "replacedUrlTemplate", "replaceContentUrlTemplate", "subtreeUrl", "subtree", "load", "Tile3DSubtreeLoader", "contentUrlTemplate", "rootLodMetricValue", "s2VolumeInfo", "boundingVolume", "extensions", "box", "convertS2BoundingVolumetoOBB", "s2VolumeBox", "rootBoundingVolume", "implicitOptions", "normalizeImplicitTileData", "rootSubtree", "parseImplicitTiles", "replace", "_tile$extensions", "implicitTiling", "Tiles3DLoader", "id", "name", "module", "version", "VERSION", "extensions", "mimeTypes", "tests", "parse", "options", "loadGLTF", "decodeQuantizedPositions", "isTileset", "assetGltfUpAxis", "getBaseUri", "tileset", "path", "dirname", "url", "parseTile", "arrayBuffer", "context", "tile", "content", "featureIds", "byteOffset", "parse3DTile", "parseTileset", "data", "_tilesetJson$root", "tilesetJson", "JSON", "TextDecoder", "decode", "loader", "queryString", "basePath", "root", "normalizeTileHeaders", "type", "TILESET_TYPE", "TILES3D", "lodMetricType", "LOD_METRIC_TYPE", "GEOMETRIC_ERROR", "lodMetricValue", "loaderOptions", "indexOf", "CESIUM_ION_URL", "getIonTilesetMetadata", "accessToken", "assetId", "assets", "getIonAssets", "item", "items", "type", "id", "ionAssetMetadata", "getIonAssetMetadata", "url", "assert", "headers", "Authorization", "concat", "response", "fetchFile", "fetch", "ok", "Error", "statusText", "json", "metadata", "tilesetInfo", "preload", "url", "options", "arguments", "length", "undefined", "accessToken", "assetId", "Number", "isFinite", "matched", "match", "getIonTilesetMetadata", "CesiumIonLoader", "Tiles3DLoader", "id", "name", "parse", "data", "context", "loader", "SINGLE_DATA", "defaultProps", "getPointColor", "type", "value", "pointSize", "data", "loader", "Tiles3DLoader", "onTilesetLoad", "tileset3d", "onTileLoad", "tileHeader", "onTileUnload", "onTileError", "tile", "message", "url", "_getMeshColor", "Tile3DLayer", "CompositeLayer", "initializeState", "props", "log", "removed", "state", "layerMap", "activeViewports", "lastUpdatedViewports", "isLoaded", "shouldUpdateState", "changeFlags", "somethingChanged", "updateState", "oldProps", "_loadTileset", "viewportChanged", "viewportsNumber", "Object", "keys", "length", "_updateTileset", "propsChanged", "key", "needsUpdate", "activateViewport", "viewport", "internalState", "id", "lastViewport", "equals", "setChangeFlags", "setNeedsUpdate", "getPickingInfo", "info", "sourceLayer", "sourceTile", "picked", "object", "filterSubLayer", "layer", "viewportId", "selected", "viewportIds", "includes", "_updateAutoHighlight", "layerCache", "updateAutoHighlight", "tilesetUrl", "loadOptions", "loaders", "Array", "isArray", "options", "actualTilesetUrl", "preload", "preloadOptions", "headers", "fetch", "assign", "tilesetJson", "load", "Tileset3D", "_onTileLoad", "bind", "_onTileUnload", "setState", "viewports", "timeline", "context", "selectTiles", "values", "then", "frameNumber", "tilesetChanged", "_getSubLayer", "oldLayer", "content", "TILE_TYPE", "POINTCLOUD", "_makePointCloudLayer", "SCENEGRAPH", "_make3DModelLayer", "MESH", "_makeSimpleMeshLayer", "Error", "attributes", "pointCount", "constantRGBA", "cartographicOrigin", "modelMatrix", "positions", "normals", "colors", "header", "vertexCount", "POSITION", "NORMAL", "COLOR_0", "SubLayerClass", "getSubLayerClass", "PointCloudLayer", "getSubLayerProps", "coordinateSystem", "COORDINATE_SYSTEM", "METER_OFFSETS", "coordinateOrigin", "getColor", "_offset", "gltf", "instances", "ScenegraphLayer", "_lighting", "scenegraph", "getTransformMatrix", "instance", "getPosition", "indices", "material", "featureIds", "geometry", "mesh", "Geometry", "drawMode", "getMeshGeometry", "MeshLayer", "pbrMaterial", "renderLayers", "tiles", "map", "filter", "Boolean", "contentAttributes", "Float32Array", "texCoords", "uvRegions", "QUANTIZED_MESH_HEADER", "Map", "Float64Array", "BYTES_PER_ELEMENT", "Float32Array", "decodeZigZag", "value", "decodeHeader", "dataView", "position", "header", "key", "bytesCount", "getter", "getFloat64", "getFloat32", "call", "headerEndPosition", "decodeVertexData", "elementsPerVertex", "vertexCount", "getUint32", "vertexData", "Uint16Array", "Uint32Array", "bytesPerArrayElement", "elementArrayLength", "uArrayStartPosition", "vArrayStartPosition", "heightArrayStartPosition", "u", "v", "height", "i", "getUint16", "vertexDataEndPosition", "decodeIndex", "buffer", "indicesCount", "bytesPerIndex", "encoded", "arguments", "length", "undefined", "indices", "highest", "code", "decodeTriangleIndices", "triangleCount", "triangleIndicesCount", "triangleIndices", "triangleIndicesEndPosition", "decodeEdgeIndices", "westVertexCount", "westIndices", "southVertexCount", "southIndices", "eastVertexCount", "eastIndices", "northVertexCount", "northIndices", "edgeIndicesEndPosition", "decodeVertexNormalsExtension", "extensionDataView", "Uint8Array", "byteOffset", "byteLength", "decodeWaterMaskExtension", "slice", "decodeExtensions", "indicesEndPosition", "extensions", "extensionsEndPosition", "extensionId", "getUint8", "extensionLength", "extensionView", "DataView", "vertexNormals", "waterMask", "DECODING_STEPS", "vertices", "edgeIndices", "DEFAULT_OPTIONS", "maxDecodingStep", "decode", "data", "userOptions", "options", "Object", "assign", "view", "addSkirt", "attributes", "triangles", "skirtHeight", "outsideIndices", "outsideEdges", "getOutsideEdgesFromIndices", "POSITION", "value", "getOutsideEdgesFromTriangles", "newPosition", "constructor", "length", "newTexcoord0", "TEXCOORD_0", "newTriangles", "i", "edge", "updateAttributesForNewEdge", "edgeIndex", "concatenateTypedArrays", "resultTriangles", "Array", "concat", "edges", "push", "sort", "a", "b", "Math", "min", "max", "index", "_edges", "_edges2", "indices", "position", "westIndices", "eastIndices", "southIndices", "northIndices", "indexGroup", "_ref", "positionsLength", "vertex1Offset", "vertex2Offset", "set", "subarray", "triangle1Offset", "getMeshAttributes", "vertexData", "header", "bounds", "minHeight", "maxHeight", "minX", "minY", "maxX", "maxY", "xScale", "yScale", "zScale", "nCoords", "length", "positions", "Float32Array", "texCoords", "i", "x", "y", "z", "POSITION", "value", "size", "TEXCOORD_0", "getTileMesh", "arrayBuffer", "options", "triangleIndices", "originalTriangleIndices", "westIndices", "northIndices", "eastIndices", "southIndices", "decode", "DECODING_STEPS", "attributes", "boundingBox", "getMeshBoundingBox", "skirtHeight", "newAttributes", "triangles", "newTriangles", "addSkirt", "loaderData", "vertexCount", "mode", "indices", "i", "a", "c", "Delatin", "constructor", "data", "width", "height", "arguments", "length", "undefined", "coords", "triangles", "_halfedges", "_candidates", "_queueIndices", "_queue", "_errors", "_rms", "_pending", "_pendingLen", "_rmsSum", "x1", "y1", "p0", "_addPoint", "p1", "p2", "p3", "t0", "_addTriangle", "_flush", "run", "maxError", "getMaxError", "refine", "_step", "getRMSD", "Math", "sqrt", "heightAt", "x", "y", "i", "t", "a", "b", "c", "_findCandidate", "p0x", "p0y", "p1x", "p1y", "p2x", "p2y", "minX", "min", "minY", "maxX", "max", "maxY", "w00", "orient", "w01", "w02", "a01", "b01", "a12", "b12", "a20", "b20", "z0", "z1", "z2", "mx", "my", "rms", "dx", "floor", "w0", "w1", "w2", "wasInside", "z", "dz", "abs", "_queuePush", "_queuePop", "e0", "e1", "e2", "ax", "ay", "bx", "by", "cx", "cy", "px", "py", "pn", "_handleCollinear", "h0", "h1", "h2", "t1", "t2", "_legalize", "push", "ab", "bc", "ca", "e", "a0", "b0", "al", "ar", "bl", "br", "pr", "pl", "inCircle", "hal", "har", "hbl", "hbr", "_queueRemove", "t3", "error", "_queueUp", "n", "_queueSwap", "_queueDown", "_queuePopBack", "pop", "it", "indexOf", "Error", "_queueLess", "j", "pi", "pj", "j0", "i0", "j1", "j2", "dy", "ex", "ey", "fx", "fy", "ap", "bp", "cp", "getTerrain", "imageData", "width", "height", "elevationDecoder", "tesselator", "rScaler", "bScaler", "gScaler", "offset", "terrain", "Float32Array", "i", "y", "x", "k", "r", "g", "b", "getMeshAttributes", "vertices", "bounds", "gridSize", "numOfVerticies", "length", "positions", "texCoords", "minX", "minY", "maxX", "maxY", "xScale", "yScale", "pixelIdx", "POSITION", "value", "size", "TEXCOORD_0", "getMesh", "terrainImage", "terrainOptions", "meshMaxError", "data", "mesh", "getMartiniTileMesh", "getDelatinTileMesh", "triangles", "attributes", "boundingBox", "getMeshBoundingBox", "skirtHeight", "newAttributes", "newTriangles", "addSkirt", "loaderData", "header", "vertexCount", "mode", "indices", "Uint32Array", "from", "martini", "Martini", "tile", "createTile", "tin", "Delatin", "run", "coords", "arrayBuffer", "options", "context", "loadImageOptions", "mimeType", "image", "type", "parse", "VERSION", "TerrainLoader", "name", "id", "module", "version", "VERSION", "worker", "extensions", "mimeTypes", "options", "terrain", "tesselator", "bounds", "meshMaxError", "elevationDecoder", "rScaler", "gScaler", "bScaler", "offset", "skirtHeight", "QuantizedMeshLoader", "name", "id", "module", "version", "VERSION", "worker", "extensions", "mimeTypes", "options", "bounds", "skirtHeight", "TerrainLoader", "TerrainWorkerLoader", "parse", "loadTerrain", "QuantizedMeshLoader", "QuantizedMeshWorkerLoader", "parseSync", "parseQuantizedMesh", "parse", "arrayBuffer", "options", "DUMMY_DATA", "defaultProps", "TileLayer", "elevationData", "urlType", "texture", "optional", "meshMaxError", "type", "value", "bounds", "compare", "color", "elevationDecoder", "rScaler", "gScaler", "bScaler", "offset", "workerUrl", "wireframe", "material", "loaders", "TerrainWorkerLoader", "urlTemplateToUpdateTrigger", "template", "Array", "isArray", "join", "TerrainLayer", "CompositeLayer", "updateState", "props", "oldProps", "elevationDataChanged", "isTiled", "includes", "setState", "shouldReload", "state", "terrain", "loadTerrain", "log", "removed", "signal", "loadOptions", "getLoadOptions", "skirtHeight", "fetch", "propName", "layer", "getTiledTerrainData", "tile", "viewport", "context", "dataUrl", "getURLFromTemplate", "textureUrl", "bottomLeft", "topRight", "isGeospatial", "bbox", "projectFlat", "west", "south", "east", "north", "left", "bottom", "right", "top", "surface", "catch", "_", "Promise", "resolve", "all", "renderSubLayers", "SubLayerClass", "getSubLayerClass", "SimpleMeshLayer", "data", "mesh", "_instanced", "coordinateSystem", "COORDINATE_SYSTEM", "CARTESIAN", "getPosition", "d", "getColor", "onViewportLoad", "tiles", "zRange", "ranges", "map", "content", "filter", "Boolean", "arr", "header", "boundingBox", "bound", "length", "minZ", "Math", "min", "x", "maxZ", "max", "renderLayers", "tileSize", "maxZoom", "minZoom", "extent", "maxRequests", "onTileLoad", "onTileUnload", "onTileError", "maxCacheSize", "maxCacheByteSize", "refinementStrategy", "getSubLayerProps", "id", "getTileData", "bind", "updateTriggers", "vs", "fs", "TARGET", "source", "target", "custom", "source_target", "inject", "name", "dependencies", "project", "getUniforms", "opts", "brushingEnabled", "brushingRadius", "brushingTarget", "mousePosition", "viewport", "brushing_enabled", "Boolean", "containsPixel", "brushing_radius", "brushing_target", "brushing_mousePos", "unproject", "x", "y", "defaultProps", "getBrushingTarget", "type", "value", "brushingTarget", "brushingEnabled", "brushingRadius", "BrushingExtension", "LayerExtension", "getShaders", "modules", "shaderModule", "initializeState", "context", "extension", "attributeManager", "getAttributeManager", "add", "brushingTargets", "size", "accessor", "shaderAttributes", "divisor", "instanceBrushingTargets", "state", "onMouseMove", "getCurrentLayer", "setNeedsRedraw", "deck", "eventManager", "on", "pointermove", "pointerleave", "finalizeState", "off", "vs", "fs", "getUniforms", "opts", "filterRange", "filterEnabled", "filterTransformSize", "filterTransformColor", "filterSoftRange", "Number", "isFinite", "filter_min", "filter_softMin", "filter_softMax", "filter_max", "map", "r", "filter_enabled", "filter_useSoftMargin", "Boolean", "filter_transformSize", "filter_transformColor", "getUniforms64", "uniforms", "min64High", "Math", "fround", "filter_min64High", "max64High", "filter_max64High", "x", "i", "inject", "shaderModule", "name", "shaderModule64", "AGGREGATE_VS", "AGGREGATE_FS", "supportsFloatTarget", "gl", "Boolean", "getExtension", "getFramebuffer", "useFloatTarget", "Framebuffer", "width", "height", "attachments", "Texture2D", "format", "isWebGL2", "type", "mipmaps", "depth", "getModel", "shaderOptions", "defines", "NON_INSTANCED_MODEL", "FLOAT_TARGET", "Model", "id", "vertexCount", "isInstanced", "drawMode", "vs", "fs", "parameters", "blend", "blendFunc", "blendEquation", "depthTest", "defaultProps", "getFilterValue", "type", "value", "onFilteredItemsChange", "optional", "filterEnabled", "filterRange", "filterSoftRange", "filterTransformSize", "filterTransformColor", "DATA_TYPE_FROM_SIZE", "DataFilterExtension", "LayerExtension", "constructor", "filterSize", "fp64", "countItems", "Error", "getShaders", "extension", "opts", "modules", "shaderModule64", "shaderModule", "defines", "DATAFILTER_TYPE", "DATAFILTER_DOUBLE", "Boolean", "initializeState", "context", "attributeManager", "getAttributeManager", "add", "filterValues", "size", "accessor", "shaderAttributes", "divisor", "instanceFilterValues", "gl", "useFloatTarget", "supportsFloatTarget", "filterIndices", "vertexOffset", "normalized", "object", "index", "i", "__source", "Math", "floor", "filterPrevIndices", "filterFBO", "getFramebuffer", "filterModel", "getModel", "call", "setState", "updateState", "props", "oldProps", "state", "filterNeedsUpdate", "attributes", "needsUpdate", "draw", "params", "setVertexCount", "getNumInstances", "clear", "framebuffer", "color", "updateModuleSettings", "moduleParameters", "setAttributes", "getShaderAttributes", "parameters", "viewport", "width", "height", "readPixelsToArray", "count", "length", "id", "finalizeState", "delete", "fp64ify", "fp64ifyMatrix4", "fp64", "name", "dependencies", "project", "vs", "project64Shader", "getUniforms", "getMemoizedUniforms", "memoize", "calculateUniforms", "opts", "viewProjectionMatrix", "scale", "viewport", "glViewProjectionMatrixFP64", "scaleFP64", "project_uViewProjectionMatrixFP64", "project64_uViewProjectionMatrix", "project64_uScale", "Fp64Extension", "LayerExtension", "getShaders", "coordinateSystem", "props", "COORDINATE_SYSTEM", "LNGLAT", "DEFAULT", "Error", "modules", "project64", "dashShaders", "inject", "offsetShaders", "defaultProps", "getDashArray", "type", "value", "getOffset", "dashJustified", "dashGapPickable", "PathStyleExtension", "LayerExtension", "constructor", "dash", "offset", "highPrecisionDash", "isEnabled", "layer", "state", "getShaders", "extension", "result", "opts", "mergeShaders", "dashShaders", "offsetShaders", "initializeState", "context", "attributeManager", "getAttributeManager", "addInstanced", "instanceDashArrays", "size", "accessor", "instanceDashOffsets", "transform", "getDashOffsets", "bind", "instanceOffsets", "updateState", "params", "uniforms", "dashAlignMode", "props", "Boolean", "model", "setUniforms", "path", "positionSize", "positionFormat", "isNested", "Array", "isArray", "geometrySize", "length", "p", "prevP", "i", "slice", "projectPosition", "dist", "patternVs", "patternFs", "inject", "getPatternUniforms", "opts", "uniforms", "fillPatternTexture", "fill_patternTexture", "fill_patternTextureSize", "width", "height", "fillPatternMask", "fillPatternEnabled", "project_uCommonOrigin", "coordinateOriginCommon", "coordinateOriginCommon64Low", "fp64LowPart", "fill_uvCoordinateOrigin", "slice", "fill_uvCoordinateOrigin64Low", "fill_patternMask", "fill_patternEnabled", "patternShaders", "name", "vs", "fs", "dependencies", "project", "getUniforms", "defaultProps", "fillPatternEnabled", "fillPatternAtlas", "type", "value", "async", "parameters", "fillPatternMapping", "fillPatternMask", "getFillPattern", "d", "pattern", "getFillPatternScale", "getFillPatternOffset", "FillStyleExtension", "LayerExtension", "constructor", "isEnabled", "layer", "getAttributeManager", "state", "getShaders", "extension", "modules", "opts", "patternShaders", "filter", "Boolean", "initializeState", "context", "attributeManager", "add", "fillPatternFrames", "size", "accessor", "transform", "getPatternFrame", "bind", "shaderAttributes", "divisor", "instanceFillPatternFrames", "fillPatternScales", "defaultValue", "instanceFillPatternScales", "fillPatternOffsets", "instanceFillPatternOffsets", "setState", "emptyTexture", "Texture2D", "gl", "data", "Uint8Array", "width", "height", "updateState", "props", "oldProps", "invalidate", "draw", "params", "setModuleParameters", "fillPatternTexture", "finalizeState", "delete", "name", "getCurrentLayer", "def", "x", "y", "defaultProps", "clipBounds", "clipByInstance", "undefined", "shaderFunction", "shaderModuleVs", "name", "vs", "injectionVs", "shaderModuleFs", "fs", "injectionFs", "ClipExtension", "LayerExtension", "getShaders", "getAttributeManager", "attributes", "props", "Boolean", "state", "modules", "inject", "draw", "uniforms", "clip_bounds", "corner0", "projectPosition", "corner1", "Math", "min", "max", "vs", "inject", "getCollisionUniforms", "opts", "uniforms", "collisionFBO", "drawToCollisionMap", "dummyCollisionMap", "collision_sort", "Boolean", "collision_texture", "shader_module_default", "name", "dependencies", "project", "getUniforms", "CollisionFilterPass", "LayersPass", "renderCollisionMap", "target", "options", "gl", "padding", "withParameters", "scissorTest", "scissor", "width", "height", "clearColor", "blend", "depthTest", "depthRange", "render", "pass", "getModuleParameters", "drawToCollisionMap", "pickingActive", "pickingAttribute", "lightSources", "MaskPass", "LayersPass", "constructor", "gl", "props", "mapSize", "maskMap", "Texture2D", "width", "height", "parameters", "fbo", "Framebuffer", "id", "attachments", "render", "options", "colorMask", "channel", "withParameters", "clearColor", "blend", "blendFunc", "blendEquation", "depthTest", "target", "pass", "shouldDrawLayer", "layer", "operation", "includes", "delete", "joinLayerBounds", "layers", "viewport", "bounds", "Infinity", "layer", "layerBounds", "getBounds", "bottomLeftCommon", "projectPosition", "autoOffset", "topRightCommon", "Math", "min", "max", "Number", "isFinite", "MAX_VIEWPORT_SIZE", "makeViewport", "opts", "border", "isGeospatial", "centerWorld", "unprojectPosition", "width", "height", "zoom", "undefined", "scale", "log2", "round", "abs", "maxSize", "r", "WebMercatorViewport", "id", "x", "y", "longitude", "latitude", "orthographic", "OrthographicViewport", "target", "flipY", "getViewportBounds", "zRange", "viewportBoundsWorld", "length", "minZ", "maxZ", "bounds0", "z", "bounds1", "viewportBottomLeftCommon", "slice", "viewportTopRightCommon", "getRenderBounds", "viewportBounds", "paddedBounds", "doubleBounds", "dx", "dy", "centerX", "centerY", "MaskEffect", "preRender", "gl", "layers", "layerFilter", "viewports", "onViewportActive", "views", "isPicking", "didRender", "dummyMaskMap", "Texture2D", "width", "height", "maskLayers", "filter", "l", "props", "visible", "operation", "includes", "length", "masks", "channels", "maskPass", "MaskPass", "id", "maskMap", "channelMap", "_sortMaskChannels", "viewport", "viewportChanged", "lastViewport", "equals", "resolution", "undefined", "log", "warn", "maskId", "result", "_renderChannel", "channelInfo", "oldChannelInfo", "index", "maskChanged", "some", "layer", "i", "transitions", "layerBounds", "b", "bounds", "maskBounds", "joinLayerBounds", "getRenderBounds", "maskViewport", "makeViewport", "border", "getBounds", "render", "pass", "channel", "moduleParameters", "devicePixelRatio", "coordinateOrigin", "coordinateSystem", "channelCount", "root", "findIndex", "c", "push", "getModuleParameters", "maskChannels", "cleanup", "delete", "DOWNSCALE", "CollisionFilterEffect", "preRender", "gl", "effects", "allEffects", "layers", "layerFilter", "viewports", "onViewportActive", "views", "isPicking", "preRenderStats", "dummyCollisionMap", "Texture2D", "width", "height", "collisionLayers", "filter", "props", "visible", "collisionEnabled", "length", "channels", "collisionFilterPass", "CollisionFilterPass", "id", "e", "constructor", "MaskEffect", "maskEffectRendered", "didRender", "_groupByCollisionGroup", "viewport", "viewportChanged", "lastViewport", "equals", "collisionGroup", "collisionFBO", "collisionFBOs", "renderInfo", "resize", "canvas", "_render", "oldRenderInfo", "needsRender", "deepEqual", "layerBounds", "some", "b", "i", "allLayersLoaded", "layer", "transitions", "renderCollisionMap", "pass", "moduleParameters", "devicePixelRatio", "cssToDeviceRatio", "channelMap", "channelInfo", "push", "getBounds", "isLoaded", "Object", "keys", "createFBO", "destroyFBO", "getModuleParameters", "cleanup", "delete", "undefined", "collisionMap", "parameters", "depthBuffer", "Renderbuffer", "format", "Framebuffer", "attachments", "fbo", "attachment", "values", "defaultProps", "getCollisionPriority", "type", "value", "collisionEnabled", "collisionGroup", "collisionTestProps", "CollisionFilterExtension", "LayerExtension", "getShaders", "modules", "collision", "draw", "uniforms", "context", "moduleParameters", "props", "collisionFBO", "drawToCollisionMap", "enabled", "Boolean", "collision_enabled", "clone", "initializeState", "extension", "getAttributeManager", "deck", "_addDefaultEffect", "CollisionFilterEffect", "attributeManager", "add", "collisionPriorities", "size", "accessor", "shaderAttributes", "divisor", "instanceCollisionPriorities", "getNeedsPickingBuffer", "vs", "fs", "inject", "getMaskUniforms", "opts", "mask_texture", "maskMap", "shader_module_default", "name", "dependencies", "project", "getUniforms", "defaultProps", "maskId", "maskByInstance", "undefined", "maskInverted", "MaskExtension", "LayerExtension", "initializeState", "context", "deck", "_addDefaultEffect", "MaskEffect", "getShaders", "getAttributeManager", "attributes", "props", "Boolean", "state", "modules", "mask", "draw", "uniforms", "moduleParameters", "mask_maskByInstance", "maskChannels", "viewport", "index", "bounds", "coordinateOrigin", "fromCoordinateOrigin", "coordinateSystem", "fromCoordinateSystem", "mask_enabled", "mask_channel", "mask_inverted", "COORDINATE_SYSTEM", "DEFAULT", "isGeospatial", "LNGLAT", "CARTESIAN", "opts", "modelMatrix", "bl", "projectPosition", "tr", "mask_bounds", "log", "warn", "TERRAIN_MODE", "NONE", "WRITE_HEIGHT_MAP", "USE_HEIGHT_MAP", "USE_COVER", "USE_COVER_ONLY", "SKIP", "TERRAIN_MODE_CONSTANTS", "Object", "keys", "map", "key", "join", "terrainModule", "name", "dependencies", "project", "inject", "getUniforms", "opts", "uniforms", "drawToTerrainHeightMap", "heightMap", "heightMapBounds", "dummyHeightMap", "terrainCover", "useTerrainHeightMap", "terrainSkipRender", "project_uCommonOrigin", "mode", "sampler", "bounds", "isPicking", "pickingActive", "getPickingFramebuffer", "getRenderFramebuffer", "terrain_mode", "terrain_map", "terrain_bounds", "createRenderTarget", "gl", "opts", "Framebuffer", "id", "attachments", "Texture2D", "float", "format", "isWebGL2", "type", "mipmaps", "parameters", "TerrainCover", "constructor", "targetLayer", "tile", "getTile", "id", "isActive", "Boolean", "getCurrentLayer", "shouldUpdate", "viewport", "layers", "layerNeedsRedraw", "sizeChanged", "_updateViewport", "layersChanged", "_updateLayers", "needsRedraw", "getIntersectingLayers", "length", "i", "map", "layer", "shouldRedraw", "targetBounds", "boundingBox", "bottomLeftCommon", "projectPosition", "topRightCommon", "targetBoundsCommon", "getBounds", "joinLayerBounds", "newZoom", "Math", "ceil", "zoom", "bounds", "oldZoom", "renderViewport", "newBounds", "getRenderBounds", "oldBounds", "some", "x", "makeViewport", "getRenderFramebuffer", "fbo", "createRenderTarget", "context", "gl", "getPickingFramebuffer", "props", "pickable", "pickingFbo", "filterLayers", "filter", "includes", "delete", "texture", "sourceTile", "intersect", "parent", "b1", "b2", "TerrainPass", "LayersPass", "getRenderableLayers", "viewport", "opts", "layers", "result", "drawParamsByIndex", "_getDrawLayerParams", "i", "length", "layer", "isComposite", "shouldDrawLayer", "push", "renderHeightMap", "heightMap", "target", "getRenderFramebuffer", "renderViewport", "resize", "withParameters", "gl", "clearColor", "blend", "blendFunc", "blendEquation", "depthTest", "render", "pass", "viewports", "effects", "renderTerrainCover", "terrainCover", "filterLayers", "id", "TerrainPickingPass", "PickLayersPass", "getRenderableLayers", "viewport", "opts", "layers", "result", "drawParameters", "_resetColorEncoder", "pickZ", "drawParamsByIndex", "_getDrawLayerParams", "i", "length", "layer", "isComposite", "shouldDrawLayer", "push", "id", "layerParameters", "renderTerrainCover", "terrainCover", "target", "getPickingFramebuffer", "renderViewport", "filterLayers", "terrainLayer", "targetLayer", "props", "pickable", "unshift", "resize", "withParameters", "gl", "depthTest", "render", "pickingFBO", "pass", "effects", "viewports", "cullRect", "undefined", "deviceRect", "getLayerParameters", "layerIndex", "parameters", "blend", "MAP_MAX_SIZE", "HeightMapBuilder", "isSupported", "gl", "Framebuffer", "colorBufferFloat", "constructor", "getRenderFramebuffer", "renderViewport", "fbo", "createRenderTarget", "id", "float", "shouldUpdate", "layers", "viewport", "layersChanged", "length", "some", "layer", "i", "props", "transitions", "getBounds", "layersBounds", "map", "layersBoundsCommon", "joinLayerBounds", "viewportChanged", "lastViewport", "equals", "bounds", "getRenderBounds", "scale", "pixelWidth", "pixelHeight", "makeViewport", "center", "zoom", "width", "Math", "min", "height", "delete", "color", "TerrainEffect", "Map", "initialize", "gl", "dummyHeightMap", "Texture2D", "width", "height", "data", "Uint8Array", "terrainPass", "TerrainPass", "id", "terrainPickingPass", "TerrainPickingPass", "HeightMapBuilder", "isSupported", "heightMap", "log", "warn", "ProgramManager", "getDefaultProgramManager", "addDefaultModule", "terrainModule", "preRender", "opts", "layer", "layers", "props", "operation", "includes", "setChangeFlags", "extensionsChanged", "pickZ", "isDrapingEnabled", "viewports", "isPicking", "viewport", "getRenderableLayers", "terrainLayers", "filter", "l", "length", "offsetLayers", "state", "terrainDrawMode", "_updateHeightMap", "drapeLayers", "_updateTerrainCovers", "getModuleParameters", "getRenderFramebuffer", "heightMapBounds", "bounds", "terrainCover", "terrainCovers", "get", "useTerrainHeightMap", "terrainSkipRender", "cleanup", "delete", "undefined", "values", "clear", "shouldUpdate", "renderHeightMap", "moduleParameters", "devicePixelRatio", "drawToTerrainHeightMap", "layerNeedsRedraw", "terrainCoverNeedsRedraw", "isDirty", "_updateTerrainCover", "_pruneTerrainCovers", "terrainLayer", "renderPass", "TerrainCover", "set", "targetLayer", "renderTerrainCover", "err", "raiseError", "idsToRemove", "isActive", "push", "defaultProps", "terrainDrawMode", "undefined", "TerrainExtension", "LayerExtension", "getShaders", "modules", "terrainModule", "initializeState", "context", "deck", "_addDefaultEffect", "TerrainEffect", "updateState", "params", "props", "oldProps", "state", "extruded", "is3d", "attributes", "getAttributeManager", "hasAnchor", "setState", "onNeedsRedraw", "terrainCoverNeedsRedraw", "flatGeojsonToBinary", "features", "geometryInfo", "options", "propArrayTypes", "extractNumericPropTypes", "numericPropKeys", "Object", "keys", "filter", "k", "Array", "fillArrays", "PositionDataType", "Float32Array", "triangulate", "extractNumericPropTypes", "features", "propArrayTypes", "feature", "properties", "key", "val", "deduceArrayType", "fillArrays", "geometryInfo", "options", "pointPositionsCount", "pointFeaturesCount", "linePositionsCount", "linePathsCount", "lineFeaturesCount", "polygonPositionsCount", "polygonObjectsCount", "polygonRingsCount", "polygonFeaturesCount", "coordLength", "numericPropKeys", "PositionDataType", "Float32Array", "triangulate", "hasGlobalId", "GlobalFeatureIdsDataType", "length", "Uint32Array", "Uint16Array", "points", "type", "positions", "globalFeatureIds", "featureIds", "numericProps", "fields", "lines", "pathIndices", "polygons", "polygonIndices", "primitivePolygonIndices", "triangles", "object", "propName", "T", "indexMap", "pointPosition", "pointFeature", "linePosition", "linePath", "lineFeature", "polygonPosition", "polygonObject", "polygonRing", "polygonFeature", "geometry", "handlePoint", "push", "keepStringProperties", "id", "handleLineString", "handlePolygon", "Error", "makeAccessorObjects", "set", "data", "nPositions", "fillNumericProperties", "fill", "i", "il", "indices", "start", "end", "l", "ll", "startPosition", "areas", "nextIndices", "undefined", "endPosition", "triangulatePolygon", "_ref", "polygonPositions", "subarray", "offset", "holes", "slice", "map", "n", "earcut", "t", "tl", "wrapProps", "obj", "size", "returnObj", "value", "binaryFeatures", "index", "numericPropName", "numericKeys", "props", "includes", "x", "constructor", "Array", "Number", "isFinite", "Float64Array", "Math", "fround", "binaryToGeojson", "data", "options", "globalFeatureId", "undefined", "getSingleFeature", "parseFeatures", "type", "getSingleFeature", "data", "globalFeatureId", "dataArray", "normalizeInput", "lastIndex", "lastValue", "featureIds", "value", "i", "length", "currValue", "globalFeatureIds", "parseFeature", "Error", "concat", "parseFeatures", "type", "parseFeatureCollection", "binaryToGeometry", "startIndex", "endIndex", "pointToGeoJson", "lineStringToGeoJson", "polygonToGeoJson", "unexpectedInput", "isHeterogeneousType", "Boolean", "points", "lines", "polygons", "parseType", "features", "push", "geometry", "properties", "parseProperties", "fields", "parseFields", "arguments", "undefined", "Object", "assign", "key", "numericProps", "Infinity", "positions", "polygonIndices", "filter", "x", "primitivePolygonIndices", "multi", "coordinates", "startRingIndex", "endRingIndex", "ringCoordinates", "ringToGeoJson", "startPolygonIndex", "endPolygonIndex", "polygonCoordinates", "pathIndices", "size", "j", "coord", "Array", "k", "Number", "classifyRings", "rings", "len", "length", "polygons", "polygon", "ccw", "i", "area", "signedArea", "undefined", "push", "ring", "sum", "j", "p1", "p2", "readFeature", "tag", "feature", "pbf", "id", "readVarint", "readTag", "type", "_geometry", "pos", "end", "key", "_keys", "value", "_values", "properties", "VectorTileFeature", "types", "constructor", "pbf", "end", "extent", "keys", "values", "_defineProperty", "properties", "type", "id", "_pbf", "_geometry", "_keys", "_values", "readFields", "readFeature", "loadGeometry", "pos", "readVarint", "cmd", "length", "x", "y", "lines", "line", "cmdLen", "readSVarint", "push", "slice", "Error", "concat", "bbox", "x1", "Infinity", "x2", "y1", "y2", "_toGeoJSON", "transform", "coords", "i", "j", "points", "classifyRings", "result", "geometry", "coordinates", "toGeoJSON", "options", "z", "size", "Math", "pow", "x0", "y0", "project", "p", "PI", "atan", "exp", "VectorTileLayer", "constructor", "pbf", "end", "_defineProperty", "version", "name", "extent", "length", "_pbf", "_keys", "_values", "_features", "readFields", "readLayer", "feature", "i", "Error", "pos", "readVarint", "VectorTileFeature", "tag", "layer", "readString", "push", "readValueMessage", "value", "readFloat", "readDouble", "readVarint64", "readSVarint", "readBoolean", "VectorTile", "constructor", "pbf", "end", "_defineProperty", "layers", "readFields", "readTile", "tag", "layer", "VectorTileLayer", "readVarint", "pos", "length", "name", "classifyRings", "geom", "len", "indices", "length", "type", "data", "areas", "getPolygonSignedArea", "polygons", "ringAreas", "polygon", "ccw", "offset", "endIndex", "i", "startIndex", "shape", "slice", "area", "before", "after", "concat", "undefined", "push", "project", "x0", "y0", "size", "j", "jl", "y2", "Math", "PI", "atan", "exp", "readFeature", "tag", "feature", "pbf", "id", "readVarint", "readTag", "_geometry", "pos", "end", "key", "_keys", "value", "_values", "properties", "endPos", "cmd", "cmdLen", "length", "x", "y", "i", "VectorTileFeature", "constructor", "pbf", "end", "extent", "keys", "values", "geometryInfo", "_defineProperty", "properties", "type", "id", "_pbf", "_geometry", "_keys", "_values", "_geometryInfo", "readFields", "readFeature", "loadGeometry", "pos", "endPos", "readVarint", "cmd", "length", "x", "y", "i", "indices", "data", "cmdLen", "readSVarint", "push", "start", "Error", "concat", "_toBinaryCoordinates", "transform", "geom", "geometry", "coordLength", "pointFeaturesCount", "pointPositionsCount", "lineFeaturesCount", "linePathsCount", "linePositionsCount", "classifyRings", "polygonFeaturesCount", "polygonObjectsCount", "polygonRingsCount", "polygonPositionsCount", "result", "toBinaryCoordinates", "options", "z", "size", "Math", "pow", "x0", "y0", "project", "VectorTileLayer", "constructor", "pbf", "end", "_defineProperty", "version", "name", "extent", "length", "_pbf", "_keys", "_values", "_features", "readFields", "readLayer", "feature", "i", "geometryInfo", "Error", "pos", "readVarint", "VectorTileFeature", "tag", "layer", "readString", "push", "readValueMessage", "value", "readFloat", "readDouble", "readVarint64", "readSVarint", "readBoolean", "VectorTile", "constructor", "pbf", "end", "_defineProperty", "layers", "readFields", "readTile", "tag", "layer", "VectorTileLayer", "readVarint", "pos", "length", "name", "arrayBuffer", "options", "_options$gis", "_options$mvt", "mvtOptions", "normalizeOptions", "shape", "gis", "format", "mvt", "data", "parseToBinary", "table", "parseToGeojson", "Error", "flatGeoJsonFeatures", "geometryInfo", "parseToFlatGeoJson", "binaryData", "flatGeojsonToBinary", "byteLength", "features", "coordLength", "pointPositionsCount", "pointFeaturesCount", "linePositionsCount", "linePathsCount", "lineFeaturesCount", "polygonPositionsCount", "polygonObjectsCount", "polygonRingsCount", "polygonFeaturesCount", "tile", "BinaryVectorTile", "Protobuf", "selectedLayers", "Array", "isArray", "layers", "Object", "keys", "forEach", "layerName", "vectorTileLayer", "i", "length", "vectorTileFeature", "feature", "decodedFeature", "getDecodedFeatureBinary", "push", "VectorTile", "getDecodedFeature", "_options$mvt2", "wgs84Coordinates", "coordinates", "tileIndex", "hasTileIndex", "Number", "isFinite", "x", "y", "z", "toGeoJSON", "transformToLocalCoordinates", "layerProperty", "properties", "toBinaryCoordinates", "transformToLocalCoordinatesBinary", "line", "extent", "p", "il", "VERSION", "DEFAULT_MVT_LOADER_OPTIONS", "mvt", "shape", "coordinates", "layerProperty", "layers", "undefined", "tileIndex", "MVTWorkerLoader", "name", "id", "module", "version", "extensions", "mimeTypes", "worker", "category", "options", "MVTLoader", "parse", "arrayBuffer", "parseMVT", "parseSync", "binary", "availableTransformations", "Point", "MultiPoint", "LineString", "MultiLineString", "Polygon", "MultiPolygon", "pointX", "pointY", "nw", "se", "viewport", "x", "lerp", "y", "unprojectFlat", "getPoints", "geometry", "bbox", "map", "g", "multiPoint", "line", "multiLineString", "lineString", "polygon", "polygonRing", "multiPolygon", "transform", "projectFlat", "west", "north", "east", "south", "projectedBbox", "coordinates", "type", "GEOM_TYPES", "data", "uniqueIdProperty", "featureId", "layerName", "gt", "index", "findIndexByType", "geomData", "featureIds", "value", "length", "startFeatureIndex", "endFeatureIndex", "layerRange", "getLayerRange", "featureIndex", "numericProps", "vertexIndex", "findIndex", "x", "i", "globalFeatureIds", "properties", "elem", "fields", "id", "getGlobalFeatureId", "__layers", "layerNames", "key", "__ids", "result", "array", "predicate", "startIndex", "endIndex", "WORLD_SIZE", "defaultProps", "GeoJsonLayer", "data", "urlType", "onDataLoad", "type", "value", "optional", "compare", "uniqueIdProperty", "highlightedFeatureId", "loaders", "MVTWorkerLoader", "binary", "MVTLayer", "TileLayer", "initializeState", "context", "viewport", "resolution", "undefined", "props", "setState", "tileJSON", "isLoaded", "state", "tileset", "updateState", "oldProps", "changeFlags", "dataChanged", "_updateTileData", "_setWGS84PropertyForTiles", "highlightColor", "Array", "isArray", "isURLTemplate", "fetch", "propName", "layer", "error", "raiseError", "tilejson", "tiles", "_getTilesetOptions", "opts", "minZoom", "maxZoom", "Number", "isFinite", "minzoom", "maxzoom", "renderLayers", "getTileData", "loadProps", "index", "signal", "url", "getURLFromTemplate", "Promise", "reject", "loadOptions", "getLoadOptions", "mimeType", "mvt", "coordinates", "tileIndex", "gis", "format", "renderSubLayers", "x", "y", "z", "tile", "worldScale", "Math", "pow", "xScale", "yScale", "xOffset", "yOffset", "modelMatrix", "Matrix4", "scale", "autoHighlight", "coordinateOrigin", "coordinateSystem", "COORDINATE_SYSTEM", "CARTESIAN", "extensions", "ClipExtension", "subLayers", "log", "warn", "_updateAutoHighlight", "info", "hoveredFeatureId", "hoveredFeatureLayerName", "hoveredFeature", "object", "newHoveredFeatureId", "newHoveredFeatureLayerName", "getFeatureUniqueId", "getFeatureLayerName", "getPickingInfo", "params", "isWGS84", "Boolean", "sourceLayer", "binaryToGeojson", "globalFeatureId", "transformTileCoordsToWGS84", "bbox", "getSubLayerPropsByTile", "highlightedObjectIndex", "getHighlightedObjectIndex", "content", "isHighlighted", "isFeatureIdDefined", "isFeatureIdPresent", "featureIdToHighlight", "findIndex", "feature", "isMatchingId", "isMatchingLayer", "findIndexBinary", "_pickObjects", "maxObjects", "deck", "width", "height", "layerIds", "id", "pickObjects", "getRenderedFeatures", "maxFeatures", "features", "featureCache", "Set", "renderedFeatures", "f", "featureId", "push", "has", "add", "selectedTiles", "forEach", "hasOwnProperty", "Object", "defineProperty", "get", "length", "_contentWGS84", "isGeoBoundingBox", "map", "properties", "layerName", "geometry", "wgs84Geom", "transform", "BASE32_CODES", "BASE32_CODES_DICT", "i", "length", "charAt", "MIN_LAT", "MAX_LAT", "MIN_LON", "MAX_LON", "getGeohashBounds", "geohash", "isLon", "maxLat", "minLat", "maxLon", "minLon", "mid", "hashValue", "l", "code", "toLowerCase", "bits", "bit", "getGeohashPolygon", "s", "w", "n", "e", "defaultProps", "getGeohash", "type", "value", "d", "geohash", "GeohashLayer", "GeoCellLayer", "indexToBounds", "data", "props", "_normalize", "positionFormat", "getPolygon", "x", "objectInfo", "getGeohashPolygon"]
}
